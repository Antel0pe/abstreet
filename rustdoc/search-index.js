var searchIndex = JSON.parse('{\
"abstio":{"doc":"A/B Street organizes data files in a particular way. This …","t":[0,5,5,5,5,5,5,5,5,5,5,3,12,12,12,12,12,12,11,0,5,5,5,0,3,12,3,12,12,12,11,11,11,11,3,12,12,11,11,11,0,3,12,3,12,5,3,12,12,11,11,11,11,11,11,11,11,11,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,12,12,12,12,12,12,5,5,5,3,12,3,12,12,12,3,12,12,5,3,12,12,3,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["io_native","file_exists","list_dir","slurp_file","inner_slurp_file","maybe_read_binary","maybe_write_json","write_json","maybe_write_binary","write_binary","delete_file","FileWithProgress","inner","path","processed_bytes","total_bytes","started_at","last_printed_at","new","download","download_bytes","download_to_file","print_download_progress","abst_data","Manifest","entries","Entry","checksum","uncompressed_size_bytes","compressed_size_bytes","load","filter","is_file_part_of_huge_seattle","path_to_city","DataPacks","runtime","input","load_or_create","save","all_data_packs","abst_paths","ROOT_DIR","__private_field","ROOT_PLAYER_DIR","__private_field","path","CityName","country","city","new","seattle","list_all_cities_locally","list_all_cities_from_manifest","list_all_cities_from_importer_config","parse","to_path","describe","input_path","MapName","city","map","new","from_city","seattle","describe","as_filename","from_path","path","list_all_maps_in_city_locally","list_all_maps_locally","list_all_maps_from_manifest","list_all_maps_in_city_from_manifest","to_data_pack_name","path_prebaked_results","path_scenario","path_all_scenarios","parse_scenario_path","path_player","path_camera_state","path_edits","path_all_edits","path_save","path_all_saves","path_popdat","path_raw_map","path_shared_input","io","maybe_read_json","read_json","read_binary","read_object","must_read_object","find_prev_file","find_next_file","load_all_objects","list_all_objects","maybe_read_json","read_json","read_binary","read_object","must_read_object","find_prev_file","find_next_file","load_all_objects","list_all_objects","file_exists","list_dir","slurp_file","maybe_read_binary","write_json","write_binary","delete_file","FileWithProgress","inner","path","processed_bytes","total_bytes","started_at","last_printed_at","download_bytes","download_to_file","print_download_progress","Manifest","entries","Entry","checksum","uncompressed_size_bytes","compressed_size_bytes","DataPacks","runtime","input","path","CityName","country","city","MapName","city","map","path_prebaked_results","path_scenario","path_all_scenarios","parse_scenario_path","path_player","path_camera_state","path_edits","path_all_edits","path_save","path_all_saves","path_popdat","path_raw_map","path_shared_input","slurp_bytes","from","into","borrow","borrow_mut","try_from","try_into","type_id","events","keys","read_line","events_and_raw","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","clone","clone","cmp","cmp","eq","ne","eq","ne","partial_cmp","partial_cmp","deref","deref","fmt","fmt","read","serialize","serialize","serialize","serialize","serialize","deserialize","deserialize","deserialize","deserialize","deserialize","initialize","initialize"],"q":["abstio","abstio::io_native","","","","","","","","","","","","","","","","","","abstio","abstio::download","","","abstio","abstio::abst_data","","","","","","","","","","","","","","","","abstio","abstio::abst_paths","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abstio","abstio::io","","","","","","","","","abstio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abstio::io_native","","","","","","","","","","","abstio::abst_data","","","","","","","","","","","","","","","","","","","","","abstio::abst_paths","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abstio::io_native","abstio::abst_data","","","abstio::abst_paths","","abstio::abst_data","","","abstio::abst_paths","","",""],"d":["Normal file IO using the filesystem","","Returns full paths","","","","","","","","Idempotent","","","","","","","","Also hands back a callback that’ll add the final result …","","Downloads bytes from a URL. This must be called with a …","Download a file from a URL. This must be called with a …","Print download progress to STDOUT. Pass this the …","","A list of all canonical data files for A/B Street that’…","Keyed by path, starting with “data/”","A single file","md5sum of the file","Uncompressed size in bytes. Because we have some massive …","Compressed size in bytes","","Removes entries from the Manifest to match the DataPacks …","Because there are so many Seattle maps and they’re …","If an entry’s path is system data, return the city.","Player-chosen groups of files to opt into downloading","A list of cities to download for using in A/B Street. …","A list of cities to download for running the map importer.","Load the player’s config for what files to download, or …","Saves the player’s config for what files to download.","Fill out all data packs based on the local manifest.","Generate paths for different A/B Street files","","","","","","A single city is identified using this.","A two letter lowercase country code, from …","The name of the city, in filename-friendly form – for …","Create a CityName from a country code and city.","Convenient constructor for the main city of the game.","Returns all city names available locally.","Returns all city names based on the manifest of available …","Returns all city names based on importer config.","Parses a CityName from something like “gb/london”; …","Expresses the city as a path, like “gb/london”; the …","Stringify the city name for debug messages. Don’t …","Constructs the path to some city-scoped data/input.","A single map is identified using this.","","The name of the map within the city, in filename-friendly …","Create a MapName from a country code, city, and map name.","Create a MapName from a city and map within that city.","Convenient constructor for the main city of the game.","Stringify the map name for debug messages. Don’t …","Stringify the map name for filenames.","Transforms a path to a map back to a MapName. Returns <code>None</code>…","Returns the filesystem path to this map.","Returns all maps from one city that’re available …","Returns all maps from all cities available locally.","Returns all maps from all cities based on the manifest of …","Returns all maps from one city based on the manifest of …","Returns the string to opt into runtime or input files for …","","","","Extract the map and scenario name from a path. Crashes if …","","","","","","","","","","","","","","May be a JSON or binary file","May be a JSON or binary file. Panics on failure.","Keeps file extensions","","Load all serialized things from a directory, return …","Just list all things from a directory, return sorted by …","","","","May be a JSON or binary file","May be a JSON or binary file. Panics on failure.","Keeps file extensions","","Load all serialized things from a directory, return …","Just list all things from a directory, return sorted by …","","Returns full paths","","","","","Idempotent","","","","","","","","Downloads bytes from a URL. This must be called with a …","Download a file from a URL. This must be called with a …","Print download progress to STDOUT. Pass this the …","A list of all canonical data files for A/B Street that’…","Keyed by path, starting with “data/”","A single file","md5sum of the file","Uncompressed size in bytes. Because we have some massive …","Compressed size in bytes","Player-chosen groups of files to opt into downloading","A list of cities to download for using in A/B Street. …","A list of cities to download for running the map importer.","","A single city is identified using this.","A two letter lowercase country code, from …","The name of the city, in filename-friendly form – for …","A single map is identified using this.","","The name of the map within the city, in filename-friendly …","","","","Extract the map and scenario name from a path. Crashes if …","","","","","","","","","","An adapter for widgetry::Settings::read_svg to read SVGs …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,2,0,3,3,3,2,2,2,2,0,4,4,4,4,4,0,0,5,0,6,0,0,7,7,7,7,7,7,7,7,7,7,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,2,0,3,3,3,0,4,4,0,0,7,7,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,7,8,7,8,7,7,8,8,7,8,5,6,7,8,1,2,3,4,7,8,2,3,4,7,8,5,6],"f":[null,[[["asref",8],["str",15]],["bool",15]],[[["string",3]],[["vec",3],["string",3]]],[[["asref",8],["str",15]],[["vec",3],["result",6]]],[[["str",15]],[["vec",3],["result",6]]],[[["string",3],["timer",3]],[["deserializeowned",8],["result",6]]],[[["str",15]],["result",6]],[[["string",3]]],[[["str",15]],["result",6]],[[["string",3]]],[[["asref",8],["str",15]]],null,null,null,null,null,null,null,[[["str",15]],["result",6]],null,[[["sender",3],["asref",8],["str",15]]],[[["asref",8],["str",15]]],[[["receiver",3],["string",3]]],null,null,null,null,null,null,null,[[],["manifest",3]],[[["datapacks",3]],["manifest",3]],[[["str",15]],["bool",15]],[[["str",15]],[["option",4],["cityname",3]]],null,null,null,[[],["datapacks",3]],[[]],[[],["datapacks",3]],null,null,null,null,null,[[["asref",8],["str",15]],["string",3]],null,null,null,[[["str",15]],["cityname",3]],[[],["cityname",3]],[[],[["cityname",3],["vec",3]]],[[["manifest",3]],[["cityname",3],["vec",3]]],[[],[["cityname",3],["vec",3]]],[[["str",15]],[["cityname",3],["result",6]]],[[],["string",3]],[[],["string",3]],[[["asref",8],["str",15]],["string",3]],null,null,null,[[["str",15]],["mapname",3]],[[["cityname",3],["str",15]],["mapname",3]],[[["str",15]],["mapname",3]],[[],["string",3]],[[],["string",3]],[[["str",15]],[["option",4],["mapname",3]]],[[],["string",3]],[[["cityname",3]],[["vec",3],["mapname",3]]],[[],[["vec",3],["mapname",3]]],[[["manifest",3]],[["vec",3],["mapname",3]]],[[["manifest",3],["cityname",3]],[["vec",3],["mapname",3]]],[[],["string",3]],[[["mapname",3],["str",15]],["string",3]],[[["mapname",3],["str",15]],["string",3]],[[["mapname",3]],["string",3]],[[["str",15]]],[[["asref",8],["str",15]],["string",3]],[[["mapname",3]],["string",3]],[[["mapname",3],["str",15]],["string",3]],[[["mapname",3]],["string",3]],[[["mapname",3],["string",3],["str",15]],["string",3]],[[["mapname",3],["str",15]],["string",3]],[[],["string",3]],[[["mapname",3]],["string",3]],[[["asref",8],["str",15]],["string",3]],null,[[["string",3],["timer",3]],[["deserializeowned",8],["result",6]]],[[["string",3],["timer",3]],["deserializeowned",8]],[[["string",3],["timer",3]],["deserializeowned",8]],[[["string",3],["timer",3]],[["deserializeowned",8],["result",6]]],[[["string",3],["timer",3]],["deserializeowned",8]],[[["string",3]],[["option",4],["string",3]]],[[["string",3]],[["option",4],["string",3]]],[[["string",3]],["vec",3]],[[["string",3]],[["vec",3],["string",3]]],[[["string",3],["timer",3]],[["deserializeowned",8],["result",6]]],[[["string",3],["timer",3]],["deserializeowned",8]],[[["string",3],["timer",3]],["deserializeowned",8]],[[["string",3],["timer",3]],[["deserializeowned",8],["result",6]]],[[["string",3],["timer",3]],["deserializeowned",8]],[[["string",3]],[["option",4],["string",3]]],[[["string",3]],[["option",4],["string",3]]],[[["string",3]],["vec",3]],[[["string",3]],[["vec",3],["string",3]]],[[["asref",8],["str",15]],["bool",15]],[[["string",3]],[["vec",3],["string",3]]],[[["asref",8],["str",15]],[["vec",3],["result",6]]],[[["string",3],["timer",3]],[["deserializeowned",8],["result",6]]],[[["string",3]]],[[["string",3]]],[[["asref",8],["str",15]]],null,null,null,null,null,null,null,[[["sender",3],["asref",8],["str",15]]],[[["asref",8],["str",15]]],[[["receiver",3],["string",3]]],null,null,null,null,null,null,null,null,null,[[["asref",8],["str",15]],["string",3]],null,null,null,null,null,null,[[["mapname",3],["str",15]],["string",3]],[[["mapname",3],["str",15]],["string",3]],[[["mapname",3]],["string",3]],[[["str",15]]],[[["asref",8],["str",15]],["string",3]],[[["mapname",3]],["string",3]],[[["mapname",3],["str",15]],["string",3]],[[["mapname",3]],["string",3]],[[["mapname",3],["string",3],["str",15]],["string",3]],[[["mapname",3],["str",15]],["string",3]],[[],["string",3]],[[["mapname",3]],["string",3]],[[["asref",8],["str",15]],["string",3]],[[["str",15]],[["vec",3],["u8",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["events",3]],[[],["keys",3]],[[],[["error",3],["option",4],["result",4]]],[[],["eventsandraw",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["cityname",3]],[[],["mapname",3]],[[["cityname",3]],["ordering",4]],[[["mapname",3]],["ordering",4]],[[["cityname",3]],["bool",15]],[[["cityname",3]],["bool",15]],[[["mapname",3]],["bool",15]],[[["mapname",3]],["bool",15]],[[["cityname",3]],[["ordering",4],["option",4]]],[[["mapname",3]],[["ordering",4],["option",4]]],[[],["string",3]],[[],["string",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],[["usize",15],["error",3],["result",6]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]]],"p":[[3,"FileWithProgress"],[3,"Manifest"],[3,"Entry"],[3,"DataPacks"],[3,"ROOT_DIR"],[3,"ROOT_PLAYER_DIR"],[3,"CityName"],[3,"MapName"]]},\
"abstutil":{"doc":"The contents of this crate need to be organized better:","t":[0,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,5,0,3,12,12,11,11,11,11,11,11,11,11,11,3,12,12,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,3,12,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,8,10,3,12,12,11,11,11,11,11,11,11,0,5,0,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,3,12,12,12,12,12,12,11,11,11,4,13,13,13,8,10,10,3,12,12,12,12,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,3,12,12,12,12,12,12,11,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,12,12,12,12,3,12,12,3,12,12,5,5,5,5,3,12,3,12,8,10,3,12,12,5,5,5,5,5,5,5,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["cli","CmdArgs","kv","bits","free","used","new","from_args","required","optional","optional_parse","true_false","enabled","required_free","optional_free","done","parse_args","collections","MultiMap","map","empty","new","insert","remove","get","set","len","is_empty","borrow","consume","Counter","map","sum","new","add","inc","get","sorted_asc","highest_n","max","sum","compare","borrow","consume","wraparound_get","retain_btreemap","retain_btreeset","contains_duplicates","VecMap","inner","new","consume","mut_or_insert","Tags","0","new","empty","get","get_result","contains_key","is","is_any","insert","remove","is_empty","inner","IndexableKey","index","FixedMap","inner","key_type","new","insert","get","get_mut","contains_key","remove","values","logger","setup","process","must_run_cmd","serde","to_json","to_json_terse","from_json","from_json_reader","from_binary","from_binary_reader","serialized_size_bytes","serialize_btreemap","deserialize_btreemap","serialize_hashmap","deserialize_hashmap","serialize_multimap","deserialize_multimap","serialize_usize","deserialize_usize","time","elapsed_seconds","Progress","label","processed_items","total_items","started_at","last_printed_at","first_update","new","next","cancel_iter_early","StackEntry","TimerSpan","Progress","File","TimerSink","println","reprintln","Timer","results","stack","outermost_name","sink","TimerSpan","name","started_at","nested_results","nested_time","new","new_with_sink","throwaway","println","selfless_println","done","start","stop","start_iter","next","cancel_iter_early","add_result","parallelize","parallelize_polite","inner_parallelize","read_file","prettyprint_time","clear_current_line","TimedFileReader","inner","path","processed_bytes","total_bytes","started_at","last_printed_at","new","utils","plain_list_names","prettyprint_usize","abbreviated_format","basename","parent_path","to_json","to_json_terse","from_json","from_json_reader","from_binary","from_binary_reader","serialized_size_bytes","serialize_btreemap","deserialize_btreemap","serialize_hashmap","deserialize_hashmap","serialize_multimap","deserialize_multimap","serialize_usize","deserialize_usize","CmdArgs","kv","bits","free","used","MultiMap","map","empty","Counter","map","sum","wraparound_get","retain_btreemap","retain_btreeset","contains_duplicates","VecMap","inner","Tags","0","IndexableKey","index","FixedMap","inner","key_type","setup","must_run_cmd","plain_list_names","prettyprint_usize","abbreviated_format","basename","parent_path","PROGRESS_FREQUENCY_SECONDS","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","events","keys","read_line","events_and_raw","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","drop","clone","clone","clone","clone","default","default","default","default","eq","ne","eq","ne","fmt","fmt","index","read","serialize","serialize","deserialize","deserialize"],"q":["abstutil","abstutil::cli","","","","","","","","","","","","","","","","abstutil","abstutil::collections","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abstutil","abstutil::logger","abstutil","abstutil::process","abstutil","abstutil::serde","","","","","","","","","","","","","","","abstutil","abstutil::time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abstutil","abstutil::utils","","","","","abstutil","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abstutil::cli","","","","","","","abstutil::collections","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abstutil::time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abstutil::collections","","","","","","","","","","","","","abstutil::time","abstutil::collections","abstutil::time","abstutil::collections","","",""],"d":["","Yet another barebones command-line flag parsing library.","","","","","On native, initialize with real flags. On web, transform …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Values with the same count are grouped together","","","","","","","","","","","Use when your key is just PartialEq, not Ord or Hash.","","","","","Convenience functions around a string->string map","","","","","","","","","","","","","Use with <code>FixedMap</code>. From a particular key, extract a <code>usize</code>…","","A drop-in replacement for <code>BTreeMap</code>, where the keys have …","","","","","","","","","","","On native: uses env_log","","Runs a command, asserts success. STDOUT and STDERR aren’…","","Stringifies an object to nicely formatted JSON.","Stringifies an object to terse JSON.","Deserializes an object from a JSON string.","Deserializes an object from JSON, from a reader.","Deserializes an object from the bincode format.","Deserializes an object from the bincode format, from a …","The number of bytes for an object serialized to bincode.","Serializes a BTreeMap as a list of tuples. Necessary when …","Deserializes a BTreeMap from a list of tuples. Necessary …","Serializes a HashMap as a list of tuples, first sorting …","Deserializes a HashMap from a list of tuples.","Serializes a MultiMap.","Deserializes a MultiMap.","Serializes a <code>usize</code> as a <code>u32</code> to save space. Useful when …","Deserializes a <code>usize</code> from a <code>u32</code>.","","","","","","","","","","","","","","","","","","","","Hierarchial magic","","","","","","","","","","","","","","","Used to end the scope of a timer early.","","","","","","","Execute the callback over all requests, using all CPUs …","Like <code>parallelize</code>, but leave one CPU free, to avoid …","","Then the caller passes this in as a reader","","","","","","","","","","","","","","","","","Stringifies an object to nicely formatted JSON.","Stringifies an object to terse JSON.","Deserializes an object from a JSON string.","Deserializes an object from JSON, from a reader.","Deserializes an object from the bincode format.","Deserializes an object from the bincode format, from a …","The number of bytes for an object serialized to bincode.","Serializes a BTreeMap as a list of tuples. Necessary when …","Deserializes a BTreeMap from a list of tuples. Necessary …","Serializes a HashMap as a list of tuples, first sorting …","Deserializes a HashMap from a list of tuples.","Serializes a MultiMap.","Deserializes a MultiMap.","Serializes a <code>usize</code> as a <code>u32</code> to save space. Useful when …","Deserializes a <code>usize</code> from a <code>u32</code>.","Yet another barebones command-line flag parsing library.","","","","","","","","","","","","","","","Use when your key is just PartialEq, not Ord or Hash.","","Convenience functions around a string->string map","","Use with <code>FixedMap</code>. From a particular key, extract a <code>usize</code>…","","A drop-in replacement for <code>BTreeMap</code>, where the keys have …","","","On native: uses env_log","Runs a command, asserts success. STDOUT and STDERR aren’…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,4,4,4,4,0,5,5,5,5,5,5,5,5,5,5,5,5,0,6,0,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,0,9,9,9,0,10,10,0,11,11,11,11,0,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,13,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,2,2,0,3,3,0,0,0,0,0,4,0,5,0,6,0,7,7,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,13,13,11,2,3,5,7,2,3,4,7,2,2,5,5,5,8,7,11,5,7,5,7],"f":[null,null,null,null,null,null,[[],["cmdargs",3]],[[["string",3],["vec",3]],["cmdargs",3]],[[["str",15]],["string",3]],[[["str",15]],[["string",3],["option",4]]],[[["fn",8],["str",15]],["option",4]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[],["string",3]],[[],[["string",3],["option",4]]],[[]],[[],[["result",6],["vec",3]]],null,null,null,null,[[],["multimap",3]],[[]],[[]],[[],["btreeset",3]],[[["btreeset",3]]],[[],["usize",15]],[[],["bool",15]],[[],["btreemap",3]],[[],[["btreemap",3],["btreeset",3]]],null,null,null,[[],["counter",3]],[[["usize",15]],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],[["vec",3],["vec",3]]],[[["usize",15]],["vec",3]],[[],["usize",15]],[[],["usize",15]],[[["counter",3]],["vec",3]],[[],["btreemap",3]],[[],[["usize",15],["btreemap",3]]],[[["isize",15]]],[[["fnmut",8],["btreemap",3]]],[[["btreeset",3],["fnmut",8]]],[[],["bool",15]],null,null,[[],["vecmap",3]],[[],["vec",3]],[[["fn",8]]],null,null,[[["string",3],["btreemap",3]],["tags",3]],[[],["tags",3]],[[["str",15]],[["option",4],["string",3]]],[[["str",15]],[["result",6],["string",3]]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["vec",3],["str",15]],["bool",15]],[[["into",8],["string",3]]],[[["str",15]],[["string",3],["option",4]]],[[],["bool",15]],[[],["btreemap",3]],null,[[],["usize",15]],null,null,null,[[],["fixedmap",3]],[[]],[[],["option",4]],[[],["option",4]],[[],["bool",15]],[[],["option",4]],[[],[["flatten",3],["iter",3]]],null,[[]],null,[[["command",3]]],null,[[],["string",3]],[[],["string",3]],[[],[["result",6],["deserializeowned",8]]],[[["read",8]],[["result",6],["deserializeowned",8]]],[[],[["result",6],["deserializeowned",8]]],[[["read",8]],[["result",6],["deserializeowned",8]]],[[],["usize",15]],[[["serializer",8],["btreemap",3]],["result",6]],[[["deserializer",8]],[["result",6],["btreemap",3]]],[[["serializer",8],["hashmap",3]],["result",6]],[[["deserializer",8]],[["hashmap",3],["result",6]]],[[["multimap",3],["serializer",8]],["result",6]],[[["deserializer",8]],[["result",6],["multimap",3]]],[[["usize",15],["serializer",8]],["result",6]],[[["deserializer",8]],[["usize",15],["result",6]]],null,[[["instant",6]],["f64",15]],null,null,null,null,null,null,null,[[["usize",15],["string",3]],["progress",3]],[[["option",4]],["option",4]],[[],["f64",15]],null,null,null,null,null,[[["string",3]]],[[["string",3]]],null,null,null,null,null,null,null,null,null,null,[[["into",8],["string",3]],["timer",3]],[[["box",3],["timersink",8],["str",15]],["timer",3]],[[],["timer",3]],[[["string",3]]],[[["string",3],["option",4]]],[[]],[[["into",8],["string",3]]],[[["into",8],["string",3]]],[[["usize",15],["into",8],["string",3]]],[[]],[[]],[[["f64",15],["string",3]]],[[["vec",3],["fn",8],["str",15]],["vec",3]],[[["vec",3],["fn",8],["str",15]],["vec",3]],[[["fn",8],["str",15],["u32",15],["vec",3]],["vec",3]],[[["str",15]],["result",6]],[[["f64",15]],["string",3]],[[]],null,null,null,null,null,null,null,[[["str",15]],[["result",6],["timedfilereader",3]]],null,[[["btreeset",3],["string",3]],["string",3]],[[["usize",15]],["string",3]],[[["usize",15]],["string",3]],[[["asref",8],["str",15]],["string",3]],[[["str",15]],["string",3]],[[],["string",3]],[[],["string",3]],[[],[["result",6],["deserializeowned",8]]],[[["read",8]],[["result",6],["deserializeowned",8]]],[[],[["result",6],["deserializeowned",8]]],[[["read",8]],[["result",6],["deserializeowned",8]]],[[],["usize",15]],[[["serializer",8],["btreemap",3]],["result",6]],[[["deserializer",8]],[["result",6],["btreemap",3]]],[[["serializer",8],["hashmap",3]],["result",6]],[[["deserializer",8]],[["hashmap",3],["result",6]]],[[["multimap",3],["serializer",8]],["result",6]],[[["deserializer",8]],[["result",6],["multimap",3]]],[[["usize",15],["serializer",8]],["result",6]],[[["deserializer",8]],[["usize",15],["result",6]]],null,null,null,null,null,null,null,null,null,null,null,[[["isize",15]]],[[["fnmut",8],["btreemap",3]]],[[["btreeset",3],["fnmut",8]]],[[],["bool",15]],null,null,null,null,null,[[],["usize",15]],null,null,null,[[]],[[["command",3]]],[[["btreeset",3],["string",3]],["string",3]],[[["usize",15]],["string",3]],[[["usize",15]],["string",3]],[[["asref",8],["str",15]],["string",3]],[[["str",15]],["string",3]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["events",3]],[[],["keys",3]],[[],[["error",3],["option",4],["result",4]]],[[],["eventsandraw",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["multimap",3]],[[],["counter",3]],[[],["tags",3]],[[],["fixedmap",3]],[[],["multimap",3]],[[],["counter",3]],[[]],[[]],[[["multimap",3]],["bool",15]],[[["multimap",3]],["bool",15]],[[["tags",3]],["bool",15]],[[["tags",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],[["usize",15],["error",3],["result",6]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]]],"p":[[3,"CmdArgs"],[3,"MultiMap"],[3,"Counter"],[3,"VecMap"],[3,"Tags"],[8,"IndexableKey"],[3,"FixedMap"],[3,"Progress"],[4,"StackEntry"],[8,"TimerSink"],[3,"Timer"],[3,"TimerSpan"],[3,"TimedFileReader"]]},\
"augment_scenario":{"doc":"A tool to modify each person’s schedule from an …","t":[5,5,5,5,5],"n":["main","add_return_trips","rand_duration","add_lunch_trips","pick_lunch_spot"],"q":["augment_scenario","","","",""],"d":["","","","",""],"i":[0,0,0,0,0],"f":[[[]],[[["xorshiftrng",3],["scenario",3]]],[[["xorshiftrng",3],["duration",3]],["duration",3]],[[["map",3],["xorshiftrng",3],["scenario",3],["timer",3]]],[[["map",3],["bool",15],["xorshiftrng",3],["buildingid",3],["findclosest",3]],["option",4]]],"p":[]},\
"clip_osm":{"doc":"","t":[5,5,5],"n":["main","clip","to_pt"],"q":["clip_osm","",""],"d":["Clips an .osm.pbf specified by <code>--pbf</code> using the Osmosis …","",""],"i":[0,0,0],"f":[[[],["result",6]],[[["polygon",3],["str",15]],["result",6]],[[],[["f64",15],["point",3]]]],"p":[]},\
"collisions":{"doc":"A simple data format to list collisions that’ve …","t":[3,12,12,3,12,12,12,4,13,13,13,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CollisionDataset","source_url","collisions","Collision","location","time","severity","Severity","Slight","Serious","Fatal","import_stats19","import_seattle","parse_incdttm","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","clone","eq","fmt","deserialize","deserialize","deserialize","serialize","serialize","serialize"],"q":["collisions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A single dataset describing some collisions that happened.","A URL pointing to the original data source.","The collisions imported from the data source.","A single collision that occurred in the real world.","A single point describing where the collision occurred.","The local time the collision occurred.","The severity reported in the original data source.","A simple ranking for how severe the collision was. …","","","","Import data from the UK STATS19 dataset. See …","Import data from Seattle GeoData …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,0,2,2,2,0,3,3,3,0,0,0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,1,2,3,1,2,3],"f":[null,null,null,null,null,null,null,null,null,null,null,[[["extrashapes",3],["str",15]],["collisiondataset",3]],[[["extrashapes",3],["str",15]],["collisiondataset",3]],[[["str",15]],[["option",4],["duration",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["severity",4]],[[["severity",4]],["bool",15]],[[["formatter",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]]],"p":[[3,"CollisionDataset"],[3,"Collision"],[4,"Severity"]]},\
"convert_osm":{"doc":"","t":[0,5,0,5,5,5,0,3,12,12,12,12,12,12,5,5,5,5,5,5,5,0,5,5,5,5,0,17,5,5,5,5,0,3,12,12,12,12,3,12,12,3,12,12,12,3,12,12,5,5,5,0,5,5,5,0,5,5,5,0,5,5,5,3,12,12,12,12,12,12,12,12,12,4,13,13,13,12,4,13,13,4,13,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["clip","clip_map","elevation","add_data","generate_input","scrape_output","extract","OsmExtract","roads","traffic_signals","osm_node_ids","simple_turn_restrictions","complicated_turn_restrictions","amenities","extract_osm","is_road","is_bldg","get_bldg_amenities","get_area_type","find_parking_aisles","service_road_crosses_parking_lot","osm_geom","get_multipolygon_members","glue_multipolygon","glue_to_boundary","multipoly_geometry","parking","DIRECTED_ROAD_THICKNESS","apply_parking","use_parking_hints","use_offstreet_parking","apply_private_offstreet_parking","reader","Document","gps_bounds","nodes","ways","relations","Node","pt","tags","Way","nodes","pts","tags","Relation","tags","members","read","read_tags","scrape_bounds","snappy","snap_cycleways","dump_output","v1","split_ways","split_up_roads","dedupe_angles","should_collapse_roundabout","transit","extract_route","glue_route","snap_bus_stops","Options","osm_input","name","clip","map_config","onstreet_parking","public_offstreet_parking","private_offstreet_parking","include_railroads","extra_buildings","OnstreetParking","JustOSM","Blockface","SomeAdditionalWhereNoData","pct","PublicOffstreetParking","None","Gis","PrivateOffstreetParking","FixedPerBldg","convert","use_amenities","add_extra_buildings","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","clone","clone","clone","serialize","serialize","serialize","deserialize","deserialize","deserialize"],"q":["convert_osm","convert_osm::clip","convert_osm","convert_osm::elevation","","","convert_osm","convert_osm::extract","","","","","","","","","","","","","","convert_osm","convert_osm::osm_geom","","","","convert_osm","convert_osm::parking","","","","","convert_osm","convert_osm::reader","","","","","","","","","","","","","","","","","","convert_osm","convert_osm::snappy","","","convert_osm","convert_osm::split_ways","","","convert_osm","convert_osm::transit","","","convert_osm","","","","","","","","","","","","","","convert_osm::OnstreetParking","convert_osm","","","","","","","","convert_osm::extract","","","","","","","","convert_osm::reader","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","convert_osm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","Unsplit roads","Traffic signals to the direction they apply","","(ID, restriction type, from way ID, via node ID, to way …","(relation ID, from way ID, via way ID, to way ID)","(location, amenity)","","","","","","","","Utilities for extracting concrete geometry from OSM …","","Take a bunch of partial PolyLines and attempt to glue …","","","","","","","","","","","","","","","","","","","","","","","","Role, member","","","","","Attempt to snap separately mapped cycleways to main …","","","","Returns amenities and a mapping of all points to split …","","Many “roundabouts” like …","","","","","","","","The path to an osmosis boundary polygon. Highly …","","","","","OSM railway=rail will be included as light rail if so. …","If provided, read polygons from this GeoJSON file and add …","What roads will have on-street parking lanes? Data from …","If not tagged, there won’t be parking.","If OSM data is missing, then try to match data from …","If OSM data is missing, then infer parking lanes on some …","[0, 100]","How many spots are available in public parking garages?","","Pull data from …","If a building doesn’t have anything from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,0,3,3,0,4,4,4,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,0,7,7,7,8,0,9,9,0,10,0,0,0,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,7,9,10,7,9,10,7,9,10],"f":[null,[[["rawmap",3],["timer",3]]],null,[[["rawmap",3]],["result",6]],[[["rawmap",3]],[["vec",3],["result",6]]],[[["vec",3],["rawmap",3],["originalroad",3]],["result",6]],null,null,null,null,null,null,null,null,[[["rawmap",3],["options",3],["timer",3]],["osmextract",3]],[[["tags",3],["options",3]],["bool",15]],[[["tags",3]],["bool",15]],[[["tags",3]],[["amenity",3],["vec",3]]],[[["tags",3]],[["areatype",4],["option",4]]],[[["vec",3],["rawmap",3]]],[[["usize",15],["rawmap",3],["rawroad",3],["vec",3]],["bool",15]],null,[[["relationid",3],["document",3],["relation",3]],["vec",3]],[[["option",4],["ring",3],["relationid",3],["vec",3]],[["polygon",3],["vec",3]]],[[["polyline",3],["ring",3]],[["polygon",3],["option",4]]],[[["relationid",3],["document",3],["relation",3]],[["polygon",3],["result",6]]],null,null,[[["rawmap",3],["options",3],["timer",3]]],[[["timer",3],["rawmap",3],["string",3]]],[[["timer",3],["rawmap",3],["string",3]]],[[["privateoffstreetparking",4],["rawmap",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["timer",3],["gpsbounds",3],["str",15]],[["result",6],["document",3]]],[[["node",3]],["tags",3]],[[["document",3]],["gpsbounds",3]],null,[[["rawmap",3],["timer",3]]],[[["multimap",3],["rawmap",3],["btreemap",3],["hashmap",3],["wayid",3]]],[[["hashmap",3],["rawmap",3],["btreemap",3]],[["multimap",3],["wayid",3]]],null,[[["rawmap",3],["osmextract",3],["timer",3]]],[[["vec",3],["pt2d",3]],[["vec",3],["pt2d",3]]],[[["rawroad",3]],["bool",15]],null,[[["relationid",3],["document",3],["relation",3],["polygon",3]],[["rawbusroute",3],["option",4]]],[[["vec",3],["document",3],["wayid",3]],[["vec",3],["result",6]]],[[["rawbusroute",3],["rawmap",3],["hashmap",3]],[["result",6],["rawbusroute",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["options",3],["timer",3]],["rawmap",3]],[[["rawmap",3],["vec",3],["timer",3]]],[[["rawmap",3],["str",15]],["result",6]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["onstreetparking",4]],[[],["publicoffstreetparking",4]],[[],["privateoffstreetparking",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]]],"p":[[3,"OsmExtract"],[3,"Document"],[3,"Node"],[3,"Way"],[3,"Relation"],[3,"Options"],[4,"OnstreetParking"],[13,"SomeAdditionalWhereNoData"],[4,"PublicOffstreetParking"],[4,"PrivateOffstreetParking"]]},\
"dump_map":{"doc":"","t":[5],"n":["main"],"q":["dump_map"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"dump_scenario":{"doc":"","t":[5],"n":["main"],"q":["dump_scenario"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"extract_cities":{"doc":"Extracts all cities from a large .osm file.","t":[5],"n":["main"],"q":["extract_cities"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"fifteen_min":{"doc":"","t":[0,3,11,5,3,12,12,12,11,0,3,12,11,5,3,12,11,0,3,12,12,12,12,12,12,12,4,13,13,11,11,11,11,0,3,12,12,12,12,12,12,11,11,5,5,5,5,3,12,12,6,11,11,3,12,12,12,3,12,12,12,12,12,12,11,5,6,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["find_amenities","FindAmenity","new_state","create_multi_isochrone","Results","draw","isochrone","hovering_on_bldg","new_state","find_home","FindHome","options","new_state","score_houses","Results","draw_houses","new_state","isochrone","Isochrone","start","options","draw","time_to_reach_building","amenities_reachable","population","onstreet_parking_spots","Options","Walking","Biking","times_from_buildings","new","path_to","draw_isochrone","viewer","Viewer","panel","highlight_start","isochrone","hovering_on_bldg","hovering_on_category","draw_unwalkable_roads","random_start","new_state","options_to_controls","options_from_controls","draw_star","build_panel","HoverOnBuilding","tooltip","drawn_route","HoverKey","key","value","ExploreAmenities","table","panel","draw","Entry","bldg","amenity_idx","name","amenity_type","address","duration_away","new_state","draw_unwalkable_roads","App","main","run","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","clone","event","draw","event","draw","on_click","other_event","draw","on_click","on_click","other_event","draw"],"q":["fifteen_min","fifteen_min::find_amenities","","","","","","","","fifteen_min","fifteen_min::find_home","","","","","","","fifteen_min","fifteen_min::isochrone","","","","","","","","","","","","","","","fifteen_min","fifteen_min::viewer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fifteen_min","","","fifteen_min::find_amenities","","","","","","","","","","","","","","","","","","","","","","","","","","fifteen_min::find_home","","","","","","","","","","","","","","","","","","","","","","","","","","fifteen_min::isochrone","","","","","","","","","","","","","","","","","","","","","","","","","","","","fifteen_min::viewer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fifteen_min::isochrone","fifteen_min::viewer","","","","fifteen_min::find_amenities","","","fifteen_min::find_home","","",""],"d":["","Calculate isochrones around each amenity on a map and …","","For every one of the requested amenity on the map, draw …","","","","","","","Ask what types of amenities are necessary to be within a …","","","For every house in the map, return the percent of …","","","","","Represents the area reachable from a single building.","The center of the isochrone (can be multiple points)","The options used to generate this isochrone","Colored polygon contours, uploaded to the GPU and ready …","How far away is each building from the start?","Per category of amenity, what buildings have that?","How many people live in the returned area, according to …","How many sreet parking spots are on the same road as any …","The constraints on how we’re moving.","","","Calculate the quickest time to reach buildings across the …","","","","This is a tool to experiment with the concept of …","This is the UI state for exploring the isochrone/walkshed …","","","","","","","Start with a random building","","","","","","","","","(building, scale factor)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,0,0,2,2,2,2,0,0,3,3,0,0,4,4,0,0,5,5,5,5,5,5,5,0,6,6,6,5,5,5,0,0,7,7,7,7,7,7,7,7,0,0,0,0,0,8,8,0,8,8,0,9,9,9,0,10,10,10,10,10,10,9,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,6,7,7,9,9,2,2,2,3,4,4,4],"f":[null,null,[[["options",4],["eventctx",3]],[["state",8],["box",3]]],[[["simpleapp",3],["options",4],["eventctx",3],["amenitytype",4]],["isochrone",3]],null,null,null,null,[[["simpleapp",3],["isochrone",3],["eventctx",3],["amenitytype",4]],[["state",8],["box",3]]],null,null,null,[[["options",4],["eventctx",3]],[["state",8],["box",3]]],[[["simpleapp",3],["vec",3],["timer",3],["options",4],["amenitytype",4]],[["percent",3],["hashmap",3],["buildingid",3]]],null,null,[[["buildingid",3],["simpleapp",3],["hashmap",3],["vec",3],["amenitytype",4],["eventctx",3],["percent",3]],[["state",8],["box",3]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3],["map",3],["buildingid",3]],[["duration",3],["buildingid",3],["hashmap",3]]],[[["simpleapp",3],["vec",3],["options",4],["eventctx",3],["buildingid",3]],["isochrone",3]],[[["map",3],["buildingid",3]],[["path",3],["option",4]]],[[["simpleapp",3]],["geombatch",3]],null,null,null,null,null,null,null,null,[[["simpleapp",3],["eventctx",3]],[["state",8],["box",3]]],[[["simpleapp",3],["eventctx",3],["buildingid",3]],[["state",8],["box",3]]],[[["eventctx",3],["options",4]],["widget",3]],[[["panel",3]],["options",4]],[[["building",3],["eventctx",3]],["geombatch",3]],[[["simpleapp",3],["isochrone",3],["building",3],["eventctx",3]],["panel",3]],null,null,null,null,[[["simpleapp",3],["eventctx",3]],["option",4]],[[["simpleapp",3],["eventctx",3],["isochrone",3]],["hoveronbuilding",3]],null,null,null,null,null,null,null,null,null,null,null,[[["simpleapp",3],["isochrone",3],["eventctx",3],["amenitytype",4]],[["state",8],["box",3]]],[[["simpleapp",3],["eventctx",3],["options",4]],["drawable",3]],null,[[]],[[["settings",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[],["options",4]],[[["simpleapp",3],["eventctx",3]],[["simpleapp",3],["transition",4]]],[[["gfxctx",3],["simpleapp",3]]],[[["simpleapp",3],["eventctx",3]],[["simpleapp",3],["transition",4]]],[[["gfxctx",3],["simpleapp",3]]],[[["simpleapp",3],["panel",3],["eventctx",3],["str",15]],[["simpleapp",3],["transition",4]]],[[["simpleapp",3],["eventctx",3]],[["simpleapp",3],["transition",4]]],[[["gfxctx",3],["simpleapp",3]]],[[["simpleapp",3],["panel",3],["eventctx",3],["str",15]],[["simpleapp",3],["transition",4]]],[[["simpleapp",3],["panel",3],["eventctx",3],["str",15]],[["simpleapp",3],["transition",4]]],[[["simpleapp",3],["eventctx",3]],[["simpleapp",3],["transition",4]]],[[["gfxctx",3],["simpleapp",3]]]],"p":[[3,"FindAmenity"],[3,"Results"],[3,"FindHome"],[3,"Results"],[3,"Isochrone"],[4,"Options"],[3,"Viewer"],[3,"HoverOnBuilding"],[3,"ExploreAmenities"],[3,"Entry"]]},\
"game":{"doc":"","t":[0,6,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,12,12,11,8,10,10,3,12,11,3,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,3,12,12,12,12,11,3,12,11,11,11,3,12,12,12,5,0,0,3,12,12,4,13,13,13,3,12,12,11,11,11,11,11,11,3,12,12,12,12,12,5,3,12,11,0,5,5,3,12,12,12,12,12,3,12,12,12,11,11,11,3,12,12,12,11,11,0,0,3,12,12,12,12,12,4,13,13,12,12,13,13,11,11,11,11,11,0,17,3,12,12,11,3,12,11,5,5,3,12,12,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,0,0,3,12,12,12,12,12,11,11,11,11,11,0,3,12,12,12,12,11,11,11,4,13,13,11,0,3,11,11,0,3,12,12,12,12,12,11,0,3,12,12,12,12,12,4,13,13,13,11,0,3,12,12,12,11,11,5,5,3,12,12,12,12,12,12,12,11,5,5,3,12,12,12,12,11,0,3,12,12,11,5,0,5,5,5,5,0,5,5,5,0,3,12,11,3,12,12,12,12,11,3,12,12,12,12,12,12,12,12,12,11,11,5,3,12,12,12,5,3,5,5,5,5,3,12,12,11,5,5,5,0,0,3,12,12,12,12,11,3,12,12,12,11,11,11,11,4,13,12,13,12,12,11,11,3,12,12,12,11,11,11,0,3,12,12,12,11,11,0,3,12,12,12,12,12,12,3,12,12,12,12,17,17,11,5,5,5,5,0,17,17,17,17,17,3,12,12,12,12,12,11,0,3,12,12,12,12,11,0,3,12,12,12,12,12,4,13,13,13,13,13,11,11,5,3,12,12,3,12,12,3,12,12,12,12,11,11,11,11,11,11,3,12,11,11,11,5,3,12,11,0,0,3,12,12,12,12,12,12,12,12,11,11,0,3,12,12,12,12,12,12,12,12,12,11,11,11,11,5,5,5,5,5,5,5,5,5,0,3,12,12,11,0,3,12,12,12,12,11,0,0,3,12,11,5,0,5,5,3,12,12,12,12,12,12,12,5,5,3,12,12,12,11,11,5,5,0,3,12,12,11,3,12,12,12,11,3,12,12,12,12,11,0,3,12,12,12,11,5,0,3,12,12,11,5,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,11,11,11,11,11,5,5,11,11,11,11,5,5,5,5,0,5,5,0,3,12,12,12,12,12,12,11,5,5,3,12,12,12,12,12,12,12,12,12,11,11,3,12,12,12,12,12,11,11,3,12,12,11,5,5,5,5,5,5,5,3,12,12,11,0,0,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,0,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,0,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,0,3,12,12,11,11,5,5,5,5,5,5,5,5,5,5,3,12,12,12,12,12,12,12,12,12,12,12,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,3,12,12,12,12,12,12,12,12,11,11,11,11,11,5,5,5,5,8,10,10,10,10,3,12,12,12,11,11,11,11,0,0,3,12,12,12,12,11,17,17,3,12,12,12,12,11,5,0,3,12,11,11,11,11,11,3,12,12,11,0,3,12,12,12,12,12,11,3,12,12,12,12,11,11,11,11,11,3,12,12,12,12,12,11,0,3,12,12,12,12,11,11,4,13,13,13,13,13,3,12,12,5,0,3,12,12,12,12,12,12,12,12,12,11,4,13,13,13,11,3,12,12,12,12,11,0,3,12,12,12,12,11,11,3,12,5,0,3,12,12,12,12,11,11,3,12,12,12,12,12,12,12,12,11,11,5,0,3,12,12,12,12,11,3,12,12,12,12,12,12,11,3,12,12,12,12,12,11,3,12,12,12,12,11,3,12,12,5,11,11,3,12,12,12,11,0,3,12,12,12,11,8,10,10,10,10,11,4,13,13,3,12,11,11,5,17,0,0,3,12,12,12,11,5,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,3,12,12,12,11,3,12,11,3,12,11,3,12,12,11,11,5,0,0,0,3,12,12,12,12,12,12,12,12,12,4,13,13,13,12,12,3,12,12,12,3,12,12,12,12,3,12,12,12,12,12,6,11,11,11,11,5,4,13,13,13,5,3,12,12,12,5,5,0,5,5,5,0,3,12,11,5,3,12,11,0,3,12,12,12,11,3,12,12,12,12,12,12,12,12,3,12,12,5,5,0,3,12,11,3,12,12,5,0,3,12,12,12,11,0,3,12,12,12,12,12,11,3,12,11,11,11,11,0,3,12,11,11,5,5,5,3,12,12,12,11,11,5,5,0,4,13,13,13,13,11,11,8,10,10,11,11,3,12,5,3,12,12,12,11,11,11,11,3,12,12,12,12,5,0,3,12,12,12,12,12,12,12,11,3,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,3,12,12,12,12,3,12,12,12,12,12,12,12,12,12,5,5,5,5,4,13,13,13,13,13,13,13,13,11,11,0,0,3,12,12,12,12,11,3,5,0,3,12,12,12,12,12,12,12,12,11,11,11,5,5,5,0,17,3,12,12,12,12,12,11,11,5,5,0,0,5,5,5,3,12,12,0,3,12,12,12,12,11,3,12,11,3,11,5,5,5,0,3,12,12,12,11,3,12,12,12,11,3,12,12,12,11,0,17,17,3,12,12,12,12,3,12,12,11,11,11,11,11,11,4,13,13,13,13,13,13,13,13,13,13,11,11,3,12,12,12,12,12,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5,11,11,11,11,11,11,11,11,11,11,5,5,5,5,4,13,13,13,13,13,13,8,10,10,11,10,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,13,11,11,11,11,11,11,11,5,3,12,12,12,12,12,11,0,3,5,5,0,3,12,11,11,11,3,12,12,11,5,0,3,12,12,12,12,12,12,4,13,13,13,13,11,11,11,11,11,11,11,11,11,0,3,12,12,12,12,11,3,12,12,12,12,12,11,5,5,5,5,3,12,12,12,12,12,3,12,12,12,12,12,11,11,11,11,5,3,3,12,12,12,4,13,13,13,13,13,13,3,12,12,12,5,5,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["app","Transition","App","primary","cs","opts","per_obj","session","has_prebaked","prebaked","set_prebaked","draw","recalculate_current_selection","mouseover_unzoomed_roads_and_intersections","mouseover_unzoomed_intersections","mouseover_unzoomed_buildings","mouseover_unzoomed_everything","mouseover_debug_mode","calculate_current_selection","get_renderables_back_to_front","clear_everything","click_on_intersection","ShowLayers","show_buildings","show_parking_lots","show_intersections","show_lanes","show_areas","show_labels","new","ShowObject","show","layers","ShowEverything","layers","new","Flags","sim_flags","live_map_edits","study_area","PerMap","map","draw_map","sim","agents","current_selection","current_flags","last_warped_from","sim_cb","dirty_from_edits","has_modified_trips","unedited_map","layer","suspended_sim","prebaked","scenario","map_loaded","init_camera_for_loaded_map","clear_sim","calculate_unedited_map","canonical_point","SessionState","tutorial","high_scores","info_panel_tab","last_gmns_timing_csv","empty","PerObjectActions","click_action","new","reset","left_click","FindDelayedIntersections","halt_limit","report_limit","currently_delayed","add_study_area","challenges","cutscene","CutsceneBuilder","name","scenes","Layout","PlayerSpeaking","BossSpeaking","Extra","Scene","layout","msg","new","fg_color","player","boss","extra","build","CutscenePlayer","name","scenes","idx","panel","make_task","make_panel","ShowMessage","panel","new_state","prebake","prebake_all","prebake","Challenge","title","description","alias","gameplay","cutscene","HighScore","goal","score","edits_name","record","all","find","ChallengesPicker","panel","links","challenge","new_state","make","common","select","RoadSelector","roads","intersections","preview","mode","dragging","Mode","Pan","Route","i1","preview_path","Paint","Erase","new","make_controls","roads_changed","event","draw","warp","WARP_TO_CAM_ZOOM","Warping","warper","id","new_state","DebugWarp","panel","new_state","warp_to_id","inner_warp_to_id","CommonState","info_panel","cached_actions","new","event","draw","osd_for","draw_osd","draw_custom_osd","launch_info_panel","info_panel_open","tool_panel","list_names","cmp_duration_shorter","color_for_mode","color_for_agent_type","color_for_trip_phase","intersections_from_roads","checkbox_per_mode","jump_to_time_upon_startup","debug","blocked_by","Viewer","panel","graph","agent_positions","arrows","root_cause","new_state","arrow_for","trace_root_cause","find_worst_problems","simple_root_cause","floodfill","Floodfiller","panel","unzoomed","zoomed","source","floodfill","scc","new_state","Source","Floodfill","Scc","calculate","objects","ObjectDebugger","draw","dump_debug","path_counter","PathCounter","panel","unzoomed","zoomed","cnt","tooltip","demand_across_intersection","polygons","PolygonDebugger","panel","noun","items","idx","center","Item","Point","Triangle","Polygon","new_state","routes","RouteExplorer","panel","start","goal","new_state","recalc_paths","params_to_controls","controls_to_params","AllRoutesExplorer","panel","requests","baseline_counts","current_counts","unzoomed","zoomed","tooltip","new_state","calculate_demand","cmp_count","PathCostDebugger","draw_path","costs","tooltip","panel","maybe_new","select_roads","BulkSelect","panel","selector","new_state","make_select_panel","shared_row","export","road","lane","intersection","streetmix","export","road","lane","uber_turns","UberTurnPicker","members","new_state","UberTurnViewer","draw","ic","idx","legal_turns","new_state","DebugMode","panel","common","tool_panel","objects","hidden","layers","search_results","all_routes","highlighted_agents","new_state","reset_info","search_osm","SearchResults","query","num_matches","draw","calc_all_routes","Actions","find_bad_signals","find_degenerate_roads","diff_tags","find_large_intersections","ScreenshotTest","todo_maps","screenshot_done","new_state","export_for_leaflet","draw_banned_turns","draw_arterial_crosswalks","devtools","collisions","CollisionsViewer","data","dataviz","tooltips","panel","new_state","Filters","show_individual","time_range","severity","new","apply","make_controls","from_controls","Dataviz","Individual","draw_all_circles","Aggregated","unzoomed","zoomed","aggregated","individual","MapspaceTooltips","tooltips","hover","selected","new","event","draw","destinations","PopularDestinations","per_bldg","panel","draw","new_state","make","kml","ViewKML","panel","objects","draw","selected","quadtree","draw_query","Object","polygon","color","attribs","osm_bldg","RADIUS","THICKNESS","new_state","load_objects","make_object","make_query","pick_file","polygon","POINT_RADIUS","POINT_COLOR","POLYGON_COLOR","POINT_TO_MOVE","LAST_PLACED_POINT","PolygonEditor","panel","name","points","mouseover_pt","moving_pt","new_state","scenario","ScenarioManager","panel","scenario","unzoomed","zoomed","new_state","story","StoryMapEditor","panel","story","mode","dirty","hovering","Mode","View","PlacingMarker","Dragging","Editing","Freehand","new_state","redo_panel","make_panel","RecordedStoryMap","name","markers","StoryMap","name","markers","Marker","pts","event","hitbox","draw","new","load","save","new","draw_hovered","make_editor","Lasso","pl","new","event","draw","simplify","DevToolsMode","panel","new_state","edit","multiple_roads","SelectSegments","new_state","candidates","base_road","base_edits","current","draw","panel","selected","new_state","recalculate","roads","RoadEditor","r","current_lane","top_panel","main_panel","highlight_selection","hovering_on_lane","num_edit_cmds_originally","redo_stack","orig_road_state","new_state","modify_current_lane","recalc_all_panels","compress_edits","make_top_panel","make_main_panel","highlight_current_selection","lane_type_to_icon","width_choices","can_reverse","default_outside_lane_placement","determine_lane_dir","add_new_lane","routes","RouteEditor","panel","route","new_state","stop_signs","StopSignEditor","id","mode","geom","selected_sign","new_state","traffic_signals","edits","ChangeDuration","idx","new_state","edit_entire_signal","gmns","import","import_all","Record","osm_ids","timing_plan_id","green_time","stage","geometry","protection","mvmt_txt_id","parse_linestring","parse_osm_ids","Snapper","roads_incoming","roads_outgoing","movements","new","get_mvmnt","cardinal_direction","add_crosswalks","offsets","ShowAbsolute","members","labels","new_state","ShowRelative","base","members","labels","new_state","TuneRelative","i1","i2","members","labels","new_state","picker","SignalPicker","members","panel","mode","new_state","make_btn","preview","PreviewTrafficSignal","panel","time_panel","new_state","make_previewer","TrafficSignalEditor","side_panel","top_panel","mode","members","current_stage","movements","movement_selected","draw_current","tooltip","command_stack","redo_stack","original","warn_changed","fade_irrelevant","BundleEdits","signals","new_state","change_stage","add_new_edit","recalc_draw_current","validate_all_members","make_top_panel","make_side_panel","apply","commit","get_current","synchronize","check_for_missing_turns","draw_multiple_signals","squish_polygons_together","fade_irrelevant","validate","check_sidewalk_connectivity","check_blackholes","zones","ZoneEditor","panel","selector","allow_through_traffic","unzoomed","zoomed","orig_members","new_state","draw_zone","make_instructions","EditMode","tool_panel","top_center","changelist","orig_edits","orig_dirty","mode","changelist_key","unzoomed","zoomed","new_state","quit","SaveEdits","panel","current_name","cancel","on_success","reset","new_state","recalc_btn","LoadEdits","panel","mode","new_state","make_topcenter","apply_map_edits","can_edit_lane","speed_limit_choices","maybe_edit_intersection","make_changelist","cmd_to_id","ConfirmDiscard","panel","discard","new_state","info","building","info","info_body","people","people_body","header","draw_occupants","bus","stop","stop_body","bus_status","bus_status_body","bus_header","route","route_body","describe_schedule","debug","area","area_body","intersection","info","info_body","traffic","traffic_body","delay","delay_body","current_demand","current_demand_body","arrivals","traffic_signal","traffic_signal_body","delay_plot","header","lane","info","info_body","debug","debug_body","traffic","traffic_body","header","parking_lot","info","info_body","header","person","trips","trips_body","bio","bio_body","schedule","schedule_body","crowd","crowd_body","parked_car","parked_car_body","header","current_status","cmp_duration_shorter","trip","OpenTrip","show_after","cached_routes","single","new","ongoing","future","finished","cancelled","describe_problems","draw_problems","make_timeline","make_trip_details","make_elevation","endpoint","InfoPanel","tab","time","is_paused","panel","unzoomed","zoomed","tooltips","hyperlinks","warpers","time_warpers","cached_actions","Tab","PersonTrips","PersonBio","PersonSchedule","BusStatus","BusStop","BusRoute","ParkedCar","BldgInfo","BldgPeople","ParkingLot","Crowd","Area","IntersectionInfo","IntersectionTraffic","IntersectionDelay","IntersectionDemand","IntersectionArrivals","IntersectionTrafficSignal","LaneInfo","LaneDebug","LaneTraffic","from_id","to_id","changed_settings","variant","Details","unzoomed","zoomed","tooltips","hyperlinks","warpers","time_warpers","can_jump_to_time","stop_immediately","new","event","draw","active_keys","active_id","make_table","throughput","make_tabs","header_btns","ContextualActions","actions","execute","is_paused","gameplay_mode","DataOptions","show_before","show_end_of_day","disabled_types","new","to_controls","from_controls","disabled_series","layer","elevation","SteepStreets","tooltip","unzoomed","zoomed","panel","new","INTERSECTION_SEARCH_RADIUS","CONTOUR_STEP_SIZE","ElevationContours","tooltip","closest_elevation","unzoomed","panel","new","make_contours","favorites","Favorites","buildings","load","path","contains","add","remove","ShowFavorites","panel","draw","new","map","BikeActivity","panel","time","unzoomed","zoomed","tooltip","new","Static","panel","unzoomed","zoomed","name","new","edits","amenities","no_sidewalks","blackholes","CongestionCaps","panel","time","unzoomed","zoomed","tooltip","new","pandemic","Pandemic","time","opts","draw","panel","new","options","Seir","Sane","Exposed","Infected","Recovered","Dead","Options","heatmap","state","make_controls","parking","Occupancy","time","onstreet","garages","lots","private_bldgs","looking_for_parking","unzoomed","zoomed","panel","new","Loc","Road","Bldg","Lot","new","Efficiency","time","unzoomed","zoomed","panel","new","population","PopulationMap","time","opts","draw","panel","new","options","Options","heatmap","make_controls","problems","ProblemMap","time","opts","draw","panel","new","options","Options","heatmap","modes","time1","time2","show_delays","show_complex_crossings","show_overtakes","show_arterial_crossings","new","show","make_controls","traffic","Backpressure","time","unzoomed","zoomed","panel","new","Throughput","time","agent_types","tooltip","unzoomed","zoomed","panel","new","CompareThroughput","time","tooltip","unzoomed","zoomed","panel","new","TrafficJams","time","unzoomed","zoomed","panel","new","Jam","epicenter","members","cluster_jams","adjacent_to","all_polygons","Delay","time","unzoomed","panel","new","transit","TransitNetwork","panel","unzoomed","zoomed","new","Layer","name","event","draw","draw_minimap","simple_event","LayerOutcome","Close","Replace","PickLayer","panel","update","pick","header","PANEL_PLACEMENT","pregame","proposals","Proposals","panel","proposals","current","new_state","launch","built_info","CI_PLATFORM","PKG_VERSION","PKG_VERSION_MAJOR","PKG_VERSION_MINOR","PKG_VERSION_PATCH","PKG_VERSION_PRE","PKG_AUTHORS","PKG_NAME","PKG_DESCRIPTION","PKG_HOMEPAGE","PKG_LICENSE","PKG_REPOSITORY","TARGET","HOST","PROFILE","RUSTC","RUSTDOC","OPT_LEVEL","NUM_JOBS","DEBUG","FEATURES","FEATURES_STR","RUSTC_VERSION","RUSTDOC_VERSION","BUILT_TIME_UTC","CFG_TARGET_ARCH","CFG_ENDIAN","CFG_ENV","CFG_FAMILY","CFG_OS","CFG_POINTER_WIDTH","maybe_update","TitleScreen","panel","screensaver","rng","new","MainMenu","panel","new_state","About","panel","new_state","Screensaver","line","started","bounce","update","default_scenario_for_map","sandbox","dashboards","commuter","CommuterPatterns","bldg_to_block","border_to_block","blocks","current_block","filter","trips_from_block","trips_to_block","panel","draw_all_blocks","BlockSelection","NothingSelected","Unlocked","Locked","base","compare_to","PanelState","building_counts","max_count","total_trips","Block","id","bldgs","borders","shape","Filter","from_block","include_borders","depart_from","depart_until","modes","BlockID","new_state","count_per_block","build_block_drawable","redraw_panel","group_bldgs","BorderType","Incoming","Outgoing","Both","build_shape_for_border","Loop","bldgs","proper","roads","partition_sidewalk_loops","make_panel","generic_trip_table","open_trip_transition","preview_trip","preview_route","misc","ActiveTraffic","panel","new_state","downsample","TransitRoutes","panel","new_state","parking_overhead","ParkingOverhead","tab","table","panel","new_state","Entry","trip","total_duration","driving_duration","parking_duration","walking_duration","percent_overhead","starts_off_map","ends_off_map","Filters","starts_off_map","ends_off_map","produce_raw_data","make_table","risks","RiskSummaries","panel","new_state","Filter","modes","include_no_changes","export_problems","selector","RectangularSelector","panel","region","corners","new_state","traffic_signals","TrafficSignalDemand","panel","all_demand","hour","draw_all","selected","new_state","Demand","raw","all_demand","count","make_arrows","draw_demand","travel_times","TravelTimes","panel","new_state","make_panel","summary_boxes","scatter_plot","contingency_table","Filter","changes_pct","modes","include_no_changes","new","get_trips","pct_diff","export_times","trip_problems","ProblemType","IntersectionDelay","ComplexIntersectionCrossing","OvertakeDesired","ArterialIntersectionCrossing","count","all","TripProblemFilter","includes_mode","include_no_changes","trip_problems","finished_trip_count","CLEAR_COLOR_SCALE","__private_field","problem_matrix","Matrix","counts","buckets_x","buckets_y","new","add_pt","idx","draw","MatrixOptions","total_width","total_height","color_scale_for_bucket","tooltip_for_bucket","bucketize_isizes","trip_table","TripTable","tab","table_tabs","panel","finished_trips_table","cancelled_trips_table","unfinished_trips_table","recompute_filters","new","FinishedTrip","id","mode","modified","capped","start","end","departure","duration_after","duration_before","waiting","percent_waiting","CancelledTrip","id","mode","departure","start","end","duration_before","reason","UnfinishedTrip","id","mode","departure","duration_before","Filters","modes","off_map_starts","off_map_ends","starts_in","ends_in","unmodified_trips","modified_trips","uncapped_trips","capped_trips","produce_raw_data","make_table_finished_trips","make_table_cancelled_trips","make_table_unfinished_trips","DashTab","TripTable","TravelTimes","RiskSummaries","ParkingOverhead","ActiveTraffic","TransitRoutes","CommuterPatterns","TrafficSignals","picker","transition","gameplay","actdev","Actdev","top_right","scenario_name","bg_traffic","once","new_state","About","find_active_trip","commute","OptimizeCommute","top_right","person","mode","goal","time","done","trips","once","new_state","cutscene_pt1","cutscene_pt2","get_score","final_score","cutscene_task","fix_traffic_signals","THRESHOLD","FixTrafficSignals","top_right","time","worst","done_at","mode","new_state","cutscene_pt1","final_score","cutscene_pt1_task","freeform","importers","import_grid2demand","import_json","import_json_scenario","Input","scenario_name","people","spawner","AgentSpawner","panel","start","goal","confirmed","new_state","Freeform","top_right","new_state","ChangeScenario","new_state","spawn_agents_around","actions","execute","play_scenario","PlayScenario","top_right","scenario_name","modifiers","new_state","EditScenarioModifiers","scenario_name","modifiers","panel","new_state","ChangeMode","panel","scenario_name","modifiers","new_state","tutorial","ESCORT","CAR_BIKE_CONTENTION_GOAL","Tutorial","top_right","last_finished_task","msg_panel","warped","TutorialPointer","stage","part","new","start","initialize","make_gameplay","scenario","inner_event","Task","Nil","Camera","InspectObjects","TimeControls","PauseResume","Escort","LowParking","WatchBikes","FixBikes","Done","top_txt","label","Stage","messages","task","warp_to","custom_spawn","make_scenario","Message","txt","aligned","arrow","icon","new","arrow","dynamic_arrow","icon","left_aligned","new","msg","warp_to","custom_spawn","scenario","TutorialState","stages","current","window_dims","inspected_bike_lane","inspected_building","inspected_stop_sign","inspected_border","was_paused","num_pauses","following_car","car_parked","prank_done","parking_found","score_delivered","fire_station","make_bike_lane_scenario","transition","reset_state","stage","interaction","message","next","prev","make_top_right","make_state","new","scenarios_to_prebake","actions","execute","intro_story","bldg","GameplayMode","Freeform","PlayScenario","FixTrafficSignals","OptimizeCommute","Actdev","Tutorial","GameplayState","event","draw","on_destroy","recreate_panels","can_move_canvas","can_examine_objects","has_common","has_tool_panel","has_time_panel","has_minimap","is","downcast","downcast_rc","downcast_ref","downcast_mut","LoadScenario","Nothing","Path","Scenario","Future","map_name","scenario","can_edit_lanes","can_edit_stop_signs","can_jump_to_time","allows","initialize","challenge_header","FinalScore","panel","retry","next_mode","chose_next","chose_back_to_challenges","new_state","minimap","MinimapController","make_agent_toggles","make_tool_panel","misc_tools","RoutePreview","preview","new","event","draw","TrafficRecorder","members","panel","new_state","make_btn","speed","TimePanel","panel","override_height","time","paused","setting","baseline_finished_trips","SpeedSetting","Realtime","Fast","Faster","Fastest","new","recreate_panel","trips_completion_bar","create_time_panel","event","draw","pause","resume","is_paused","time_warp","JumpToTime","panel","target","maybe_mode","tabs","new_state","TimeWarpScreen","target","wall_time_started","sim_time_started","halt_upon_delay","panel","new_state","area_under_curve","compare_count","build_jump_to_time_btn","build_jump_to_delay_button","SandboxMode","gameplay","gameplay_mode","controls","recalc_unzoomed_agent","last_cs","SandboxControls","common","route_preview","tool_panel","time_panel","minimap","simple_new","async_new","start_from_savestate","contextual_actions","maybe_exit_sandbox","BackToMainMenu","Actions","is_paused","can_interact","gameplay","LoadStage","LoadingMap","LoadingScenario","GotScenario","LoadingPrebaked","GotPrebaked","Finalizing","SandboxLoader","stage","mode","finalize","mouseover_unzoomed_agent_circle","is_daytime","new","recreate_panels","main","run","setup_app","finish_app_setup","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","show","layers","show","layers","actions","execute","is_paused","gameplay_mode","actions","execute","is_paused","gameplay_mode","name","event","draw","draw_minimap","name","event","draw","draw_minimap","name","event","draw","draw_minimap","name","event","draw","draw_minimap","name","event","draw","draw_minimap","name","event","draw","draw_minimap","name","event","draw","draw_minimap","name","event","draw","draw_minimap","name","event","draw","draw_minimap","name","event","draw","draw_minimap","name","event","draw","draw_minimap","name","event","draw","draw_minimap","name","event","draw","draw_minimap","name","event","draw","draw_minimap","name","event","draw","draw_minimap","name","event","draw","draw_minimap","name","event","draw","draw_minimap","includes_mode","include_no_changes","includes_mode","include_no_changes","event","draw","recreate_panels","has_tool_panel","event","draw","recreate_panels","event","draw","recreate_panels","on_destroy","event","draw","recreate_panels","event","draw","on_destroy","recreate_panels","event","draw","recreate_panels","can_move_canvas","can_examine_objects","has_common","has_tool_panel","has_time_panel","has_minimap","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","eq","ne","eq","ne","eq","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","eq","ne","eq","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","deref","fmt","fmt","fmt","fmt","serialize","serialize","deserialize","deserialize","deserialize","deserialize","initialize","event","draw_baselayer","draw","event","draw","event","draw_baselayer","draw","event","draw","event","draw","event","draw","event","draw","event","draw","event","draw","event","draw","event","draw","event","draw","event","draw","event","draw_baselayer","draw","event","draw","event","draw","event","draw","event","draw","event","draw","event","draw","event","draw_baselayer","draw","event","draw_baselayer","draw","event","draw","on_destroy","event","draw","event","draw","event","draw","event","draw","event","draw_baselayer","draw","event","draw","event","draw","event","draw","event","draw","event","draw","event","draw_baselayer","draw","event","draw_baselayer","draw","event","draw","event","draw_baselayer","draw","event","draw_baselayer","draw","event","draw","event","draw","event","draw","event","draw","event","draw","event","draw","event","draw_baselayer","draw","event","draw","event","draw","event","draw","event","draw","event","draw","event","draw","event","draw","event","draw","event","draw_baselayer","draw","on_destroy","event","draw","on_destroy","event","draw","event","draw","map","sim","cs","mut_cs","draw_map","mut_draw_map","opts","mut_opts","map_switched","draw_with_opts","make_warper","before_event","draw_default","dump_before_abort","before_quit","free_memory","has_zorder","has_layer","draw_extra","make_unzoomed_panel","make_legend","make_zoomed_side_panel","panel_clicked","panel_changed","run","on_click","on_mouseover","other_event","draw","on_click","panel_changed","other_event","draw_baselayer","draw","on_click","on_mouseover","other_event","draw","on_click","panel_changed","other_event","draw_baselayer","on_click","on_mouseover","other_event","draw","on_click","on_mouseover","other_event","draw","on_click","other_event","draw","on_click","draw","on_click","draw"],"q":["game","game::app","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game","game::challenges","game::challenges::cutscene","","","","","","","","","","","","","","","","","","","","","","","","","","game::challenges","game::challenges::prebake","","game::challenges","","","","","","","","","","","","","","","","","","","game","game::common","game::common::select","","","","","","","","","game::common::select::Mode","","game::common::select","","","","","","","game::common","game::common::warp","","","","","","","","","","game::common","","","","","","","","","","","","","","","","","","","","game","game::debug","game::debug::blocked_by","","","","","","","","","","","game::debug","game::debug::floodfill","","","","","","","","","","","","game::debug","game::debug::objects","","","game::debug","game::debug::path_counter","","","","","","","game::debug","game::debug::polygons","","","","","","","","","","","game::debug","game::debug::routes","","","","","","","","","","","","","","","","","","","","","","","","","game::debug","game::debug::select_roads","","","","","game::debug","game::debug::shared_row","","","","game::debug","game::debug::streetmix","","","game::debug","game::debug::uber_turns","","","","","","","","","game::debug","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game","game::devtools","game::devtools::collisions","","","","","","","","","","","","","","","","game::devtools::collisions::Dataviz","game::devtools::collisions","game::devtools::collisions::Dataviz","","game::devtools::collisions","","","","","","","","","game::devtools","game::devtools::destinations","","","","","","game::devtools","game::devtools::kml","","","","","","","","","","","","","","","","","","","game::devtools","game::devtools::polygon","","","","","","","","","","","","game::devtools","game::devtools::scenario","","","","","","game::devtools","game::devtools::story","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::devtools","","","game","game::edit","game::edit::multiple_roads","","","","","","","","","","","game::edit","game::edit::roads","","","","","","","","","","","","","","","","","","","","","","","game::edit","game::edit::routes","","","","game::edit","game::edit::stop_signs","","","","","","game::edit","game::edit::traffic_signals","game::edit::traffic_signals::edits","","","","game::edit::traffic_signals","game::edit::traffic_signals::gmns","","","","","","","","","","","","","","","","","","","","game::edit::traffic_signals","game::edit::traffic_signals::offsets","","","","","","","","","","","","","","","game::edit::traffic_signals","game::edit::traffic_signals::picker","","","","","","game::edit::traffic_signals","game::edit::traffic_signals::preview","","","","","game::edit::traffic_signals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::edit","game::edit::validate","","game::edit","game::edit::zones","","","","","","","","","","game::edit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game","game::info","game::info::building","","","","","","game::info","game::info::bus","","","","","","","","game::info","game::info::debug","","game::info","game::info::intersection","","","","","","","","","","","","","game::info","game::info::lane","","","","","","","game::info","game::info::parking_lot","","","game::info","game::info::person","","","","","","","","","","","","","game::info","game::info::trip","","","","","","","","","","","","","","","game::info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game","game::layer","game::layer::elevation","","","","","","","","","","","","","","","game::layer","game::layer::favorites","","","","","","","","","","","game::layer","game::layer::map","","","","","","","","","","","","","","","","","","","","","","","","game::layer","game::layer::pandemic","","","","","","","","","","","","","","","","","game::layer","game::layer::parking","","","","","","","","","","","","","","","","","","","","","","game::layer","game::layer::population","","","","","","","","","","game::layer","game::layer::problems","","","","","","","","","","","","","","","","","","","game::layer","game::layer::traffic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer","game::layer::transit","","","","","game::layer","","","","","","","","","","","","","","","game","game::pregame","game::pregame::proposals","","","","","","game::pregame","game::pregame::built_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::pregame","","","","","","","","","","","","","","","","","game","game::sandbox","game::sandbox::dashboards","game::sandbox::dashboards::commuter","","","","","","","","","","","","","","game::sandbox::dashboards::commuter::BlockSelection","","game::sandbox::dashboards::commuter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards","game::sandbox::dashboards::generic_trip_table","","","game::sandbox::dashboards","game::sandbox::dashboards::misc","","","","","","","game::sandbox::dashboards","game::sandbox::dashboards::parking_overhead","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards","game::sandbox::dashboards::risks","","","","","","","game::sandbox::dashboards","game::sandbox::dashboards::selector","","","","","game::sandbox::dashboards","game::sandbox::dashboards::traffic_signals","","","","","","","","","","","","","game::sandbox::dashboards","game::sandbox::dashboards::travel_times","","","","","","","","","","","","","","","game::sandbox::dashboards","game::sandbox::dashboards::trip_problems","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards","game::sandbox::dashboards::trip_table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards","","","","","","","","","","","game::sandbox","game::sandbox::gameplay","game::sandbox::gameplay::actdev","","","","","","","","game::sandbox::gameplay","game::sandbox::gameplay::commute","","","","","","","","","","","","","","","game::sandbox::gameplay","game::sandbox::gameplay::fix_traffic_signals","","","","","","","","","","","game::sandbox::gameplay","game::sandbox::gameplay::freeform","game::sandbox::gameplay::freeform::importers","","","","","","game::sandbox::gameplay::freeform","game::sandbox::gameplay::freeform::spawner","","","","","","game::sandbox::gameplay::freeform","","","","","","","","game::sandbox::gameplay","game::sandbox::gameplay::play_scenario","","","","","","","","","","","","","","","game::sandbox::gameplay","game::sandbox::gameplay::tutorial","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox","game::sandbox::minimap","","","game::sandbox","game::sandbox::misc_tools","","","","","","","","","","game::sandbox","game::sandbox::speed","","","","","","","","","","","","","","","","","","","","","game::sandbox","game::sandbox::time_warp","","","","","","","","","","","","","","","","","game::sandbox","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game","","","","game::app","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::challenges::cutscene","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::challenges","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::common::select","","","","","","","","","","","","","","","","","","","","","","","","","","game::common::warp","","","","","","","","","","","","","","","","","","","","","","","","","game::common","","","","","","","","","","","","game::debug::blocked_by","","","","","","","","","","","","game::debug::floodfill","","","","","","","","","","","","","","","","","","","","","","","","","","","game::debug::objects","","","","","","","","","","","","","game::debug::path_counter","","","","","","","","","","","","game::debug::polygons","","","","","","","","","","","","","","","","","","","","","","","","","game::debug::routes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::debug::select_roads","","","","","","","","","","","","game::debug::uber_turns","","","","","","","","","","","","","","","","","","","","","","","","","","game::debug","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::devtools::collisions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::devtools::destinations","","","","","","","","","","","","game::devtools::kml","","","","","","","","","","","","","","","","","","","","","","","","","game::devtools::polygon","","","","","","","","","","","","game::devtools::scenario","","","","","","","","","","","","game::devtools::story","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::devtools","","","","","","","","","","","","game::edit::multiple_roads","","","","","","","","","","","","game::edit::roads","","","","","","","","","","","","game::edit::routes","","","","","","","","","","","","game::edit::stop_signs","","","","","","","","","","","","","game::edit::traffic_signals::edits","","","","","","","","","","","","","game::edit::traffic_signals::gmns","","","","","","","","","","","","","","","","","","","","","","","","","","game::edit::traffic_signals::offsets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::edit::traffic_signals::picker","","","","","","","","","","","","game::edit::traffic_signals::preview","","","","","","","","","","","","game::edit::traffic_signals","","","","","","","","","","","","","","","","","","","","","","","","","","","game::edit::zones","","","","","","","","","","","","game::edit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::info::trip","","","","","","","","","","","","","","","game::info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::elevation","","","","","","","","","","","","","","","","","","","","","","","","game::layer::favorites","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::pandemic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::parking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::population","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::problems","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::traffic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::transit","","","","","","","","","","","","game::layer","","","","","","","","","","","","","","","","","","","","","","","","game::pregame::proposals","","","","","","","","","","","","game::pregame","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::commuter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::misc","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::parking_overhead","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::risks","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::selector","","","","","","","","","","","","game::sandbox::dashboards::traffic_signals","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::travel_times","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::trip_problems","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::trip_table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards","","","","","","","","","","","","","","","game::sandbox::gameplay::actdev","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay::commute","","","","","","","","","","","","game::sandbox::gameplay::fix_traffic_signals","","","","","","","","","","","","game::sandbox::gameplay::freeform::importers","","","","","","","","","","","","","game::sandbox::gameplay::freeform::spawner","","","","","","","","","","","","game::sandbox::gameplay::freeform","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay::play_scenario","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay::tutorial","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::minimap","","","","","","","","","","","","","game::sandbox::misc_tools","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::speed","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::time_warp","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::app","","game::debug","","","","","","game::sandbox","","","","game::layer::elevation","","","","","","","","game::layer::favorites","","","","game::layer::map","","","","","","","","","","","","game::layer::pandemic","","","","game::layer::parking","","","","","","","","game::layer::population","","","","game::layer::problems","","","","game::layer::traffic","","","","","","","","","","","","","","","","","","","","game::layer::transit","","","","game::sandbox::dashboards::risks","","game::sandbox::dashboards::travel_times","","game::sandbox::gameplay::actdev","","","","game::sandbox::gameplay::commute","","","game::sandbox::gameplay::fix_traffic_signals","","","","game::sandbox::gameplay::freeform","","","game::sandbox::gameplay::play_scenario","","","","game::sandbox::gameplay::tutorial","","","","","","","","","game::sandbox::dashboards::trip_problems","game::app","game::debug::floodfill","game::devtools::story","game::edit::traffic_signals","game::info::trip","game::info","","game::layer::pandemic","","game::layer::parking","game::layer::population","game::layer::problems","game::sandbox::dashboards::commuter","game::sandbox::dashboards::trip_problems","game::sandbox::dashboards","game::sandbox::gameplay::tutorial","","game::sandbox::gameplay","game::sandbox::speed","game::layer::parking","game::sandbox::gameplay::tutorial","game::sandbox::gameplay","game::devtools::collisions","","game::edit::traffic_signals","","game::info::trip","game::info","","game::layer::pandemic","","","game::layer::parking","","game::layer::population","","game::layer::problems","","game::sandbox::dashboards::commuter","","","","game::sandbox::dashboards::trip_problems","game::sandbox::dashboards","game::sandbox::gameplay::tutorial","","","game::sandbox::gameplay","","game::sandbox::speed","game::layer::parking","game::sandbox::gameplay::tutorial","","game::sandbox::gameplay","game::sandbox::speed","game::sandbox::dashboards::trip_problems","game::edit::traffic_signals::gmns","game::layer::pandemic","game::sandbox::dashboards::trip_problems","game::sandbox::dashboards","game::devtools::story","game::layer::favorites","game::devtools::story","game::edit::traffic_signals::gmns","game::layer::favorites","game::sandbox::gameplay::freeform::importers","game::sandbox::dashboards::trip_problems","game::challenges::cutscene","","","","","game::challenges","","","game::common::warp","","","","game::debug::blocked_by","","game::debug::floodfill","","game::debug::path_counter","","game::debug::polygons","","game::debug::routes","","","","","","game::debug::select_roads","","game::debug","","","","","game::devtools::collisions","","game::devtools::destinations","","game::devtools::kml","","game::devtools::polygon","","game::devtools::scenario","","game::devtools::story","","","game::devtools","","","game::edit::multiple_roads","","","game::edit::roads","","game::edit::routes","","game::edit::traffic_signals::picker","","game::edit::traffic_signals::preview","","game::edit::traffic_signals","","","game::edit::zones","","game::edit","","","","","","","","game::layer","","","game::pregame::proposals","","","game::pregame","","","","","","","","game::sandbox::dashboards::commuter","","game::sandbox::dashboards::misc","","","","game::sandbox::dashboards::parking_overhead","","game::sandbox::dashboards::risks","","game::sandbox::dashboards::selector","","game::sandbox::dashboards::traffic_signals","","","game::sandbox::dashboards::travel_times","","game::sandbox::dashboards::trip_table","","game::sandbox::gameplay::freeform::spawner","","game::sandbox::gameplay::play_scenario","","","","game::sandbox::gameplay","","game::sandbox::misc_tools","","game::sandbox::time_warp","","","","","","game::sandbox","","","","","","","game::app","","","","","","","","","","","","","","","","game::sandbox::minimap","","","","","","","","game::app","game::debug::uber_turns","","","","","","","","","game::edit::stop_signs","","","","game::edit::traffic_signals::edits","","","","game::edit::traffic_signals::offsets","","","","","","","","","","","game::sandbox::gameplay::actdev","","game::sandbox::gameplay::freeform",""],"d":["","","The top-level data that lasts through the entire game, no …","","","","","Static data that lasts the entire session. Use sparingly.","","","","","Assumes some defaults.","","","","","","","","Ensure the map edits are blank, reset the simulation, and …","If an intersection was clicked, return its ID.","","","","","","","","","","","","","","","","","If true, all map edits immediately apply to the live …","Display an extra area with this name on the map. This …","All of the state that’s bound to a specific map.","","","","","","","","","If we ever left edit mode and resumed without restarting …","Any ScenarioModifiers in effect?","Sometimes we need the map before any edits have been …","","Only filled out in edit mode. Stored here once to avoid …","Only exists in some gameplay modes. Must be carefully …","The most recent Scenario loaded from a file. Don’t …","","","Returns whatever was there","If needed, makes sure the unedited_map is populated. …","","","","","","","","","","","","","","","","","Load an extra GeoJSON file, and add the area to the map …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Simulate a curated list of scenarios to completion, and …","","","","","","","","","","","","","","","","","","","","","","","A tool for selecting multiple roads.","","Intersections can’t be selected directly. If all roads …","","","","","No selecting, just normal click-and-drag controls.","The user is choosing two intersections, to select the …","","","Click and drag to select roads","Click and drag to unselect roads","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If you want a simulation to start after midnight, pass …","","","Visualize the graph of what agents are blocked by others.","","","","","","","","Figure out why some agent is blocked. Draws an arrow for …","Trace the root cause for everyone, find the most common …","","","","","","","","","","","","","","","","","","","","A state to count the number of trips that will cross …","","","","","","","","","","","","","","","","","","","","See how live-tuned routing parameters affect a single …","","","","","","","","See how live-tuned routing parameters affect all requests …","","","","","","","","","","","Evaluate why an alternative path wasn’t chosen, by …","","","","","","","","","","","","","Exports to https://github.com/d-wasserman/shared-row/, …","","","","","Exports a single road to Streetmix’s format, returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This directory contains extra/experimental tools not …","","","","","","","","","","","","","Returns the indices of all matching collisions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Loads and clips objects to the current map. Also returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Always starts focused on a certain lane.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This imports timing.csv from …","","","","","","","","","","","","Snaps a line to a vehicle movement across an …raws the timeline for a single trip, with tooltips","Creates the timeline, location warp, and time warp …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draw extra things when unzoomed.","Draw extra things when zoomed.","Show these tooltips over the map.","When a button with this label is clicked, open this info …","When a button with this label is clicked, warp to this ID.","When a button with this label is clicked, time-warp and …","","If this gets filled out, immediately execute this …","Also returns <code>Details::stop_immediately</code>, which can only be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A set of buildings that the player has starred, persisted …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates the top row for any layer panel.","","","","","","","","","","","The Continuous Integration platform detected during …","The full version.","The major version.","The minor version.","The patch version.","The pre-release version.","A colon-separated list of authors.","The name of the package.","The description.","The homepage.","The license.","The source repository as advertised in Cargo.toml.","The target triple that was being compiled for.","The host triple of the rust compiler.","<code>release</code> for release builds, <code>debug</code> for other builds.","The compiler that cargo resolved to use.","The documentation generator that cargo resolved to use.","Value of OPT_LEVEL for the profile used during …","The parallelism that was specified during compilation.","Value of DEBUG for the profile used during compilation.","The features that were enabled during compilation.","The features as a comma-separated string.","The output of <code>rustc -V</code>","The output of <code>rustdoc -V</code>","The build time in RFC2822, UTC.","The target architecture, given by <code>CARGO_CFG_TARGET_ARCH</code>.","The endianness, given by <code>CARGO_CFG_TARGET_ENDIAN</code>.","The toolchain-environment, given by <code>CARGO_CFG_TARGET_ENV</code>.","The OS-family, given by <code>CARGO_CFG_TARGET_FAMILY</code>.","The operating system, given by <code>CARGO_CFG_TARGET_OS</code>.","The pointer width, given by <code>CARGO_CFG_TARGET_POINTER_WIDTH</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Aka a 2D histogram. Counts the number of matching points …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A gameplay mode with specific controls for integration …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Launches the tutorial gameplay along with its cutscene","Idempotent. This must be called before <code>make_gameplay</code> or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","Returns a boxed object from a boxed trait object if the …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Returns a mutable reference to the object within the …","","","","","","","","","","","","Must be called after the scenario has been setup. The …","","","","","","","","","","","<code>is_enabled</code>: are (car, bike, bus, pedestrian) toggles …","","","Draws a preview of the path for the agent under the mouse …","","","","","","","","","","","","","","","","","","","1 sim second per real second","5 sim seconds per real second","30 sim seconds per real second","1 sim hour per real second","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If you don’t need to chain any transitions after the …","This does not immediately initialize anything (like …","Assumes that the map and simulation have already been set …i":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,0,3,3,0,4,4,0,5,5,5,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,7,7,7,7,7,0,8,8,8,8,0,9,9,9,0,0,0,0,10,10,0,11,11,11,0,12,12,10,10,10,10,10,10,0,13,13,13,13,13,0,0,14,14,0,0,0,0,15,15,15,15,15,0,16,16,16,16,15,15,0,17,17,17,17,17,0,0,0,18,18,18,18,18,0,19,19,20,20,19,19,18,18,18,18,18,0,0,0,21,21,21,0,22,22,0,0,0,23,23,23,23,23,23,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,24,0,0,25,25,25,25,25,25,25,0,26,26,26,0,0,27,27,0,0,28,28,28,28,28,28,0,0,29,29,29,29,29,0,30,30,30,29,0,0,31,31,31,31,31,0,0,0,32,32,32,32,32,32,32,32,0,0,0,33,33,33,33,33,0,0,34,34,34,0,0,0,0,0,0,0,0,0,0,0,0,35,35,0,36,36,36,36,36,0,37,37,37,37,37,37,37,37,37,37,37,0,0,38,38,38,0,0,0,0,0,0,0,39,39,39,0,0,0,0,0,0,40,40,40,40,40,0,41,41,41,41,41,41,41,0,42,43,42,44,44,42,42,0,45,45,45,45,45,45,0,0,46,46,46,46,46,0,0,47,47,47,47,47,47,0,48,48,48,48,0,0,47,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,49,0,0,50,50,50,50,50,0,0,51,51,51,51,51,0,52,52,52,52,52,51,51,0,0,53,53,0,54,54,0,55,55,55,55,54,54,54,55,55,55,0,56,56,56,56,0,0,57,57,0,0,0,58,58,58,58,58,58,58,58,58,58,0,0,59,59,59,59,59,59,59,59,59,59,59,59,59,0,0,0,0,0,0,0,0,0,0,0,60,60,60,0,0,61,61,61,61,61,0,0,0,62,62,0,0,0,0,0,63,63,63,63,63,63,63,0,0,0,64,64,64,64,64,0,0,0,0,65,65,65,0,66,66,66,66,0,67,67,67,67,67,0,0,68,68,68,68,0,0,0,69,69,69,0,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,71,70,70,70,70,70,0,0,71,71,71,71,0,0,0,0,0,0,0,0,0,72,72,72,72,72,72,72,0,0,0,73,73,73,73,73,73,73,73,73,73,73,0,74,74,74,74,74,74,74,0,75,75,75,0,0,0,0,0,0,0,0,76,76,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,77,77,77,0,0,0,0,0,0,0,0,0,0,0,78,78,78,78,78,78,78,78,78,78,78,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,80,80,80,80,80,80,80,80,78,78,78,78,78,0,0,0,0,0,81,81,81,81,0,82,82,82,82,82,82,82,0,0,0,83,83,83,83,83,0,0,0,84,84,84,84,84,0,0,0,85,85,85,85,85,85,0,86,86,86,0,0,87,87,87,87,87,87,0,88,88,88,88,88,88,88,88,88,0,89,89,89,89,89,89,0,0,90,90,90,90,90,90,0,91,91,91,91,91,0,92,92,0,0,0,93,93,93,93,93,93,93,93,93,93,0,94,94,94,94,0,95,95,95,95,95,0,0,96,96,96,96,96,96,0,97,0,0,0,98,98,98,98,98,98,0,99,99,99,99,99,99,99,99,99,99,0,0,0,100,100,100,100,100,0,101,101,101,101,101,101,101,0,102,102,102,102,102,102,0,103,103,103,103,103,0,104,104,0,104,104,0,105,105,105,105,0,0,106,106,106,106,0,107,107,107,107,107,0,108,108,0,109,109,109,0,0,0,0,0,110,110,110,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,111,111,111,111,0,112,112,0,113,113,0,114,114,114,114,0,0,0,0,0,115,115,115,115,115,115,115,115,115,0,116,116,116,117,117,0,118,118,118,0,119,119,119,119,0,120,120,120,120,120,0,115,115,115,115,0,0,121,121,121,0,0,122,122,122,0,0,0,0,0,0,0,0,123,123,0,0,124,124,0,0,125,125,125,125,0,126,126,126,126,126,126,126,126,0,127,127,0,0,0,0,128,128,0,129,129,0,0,0,130,130,130,130,0,0,131,131,131,131,131,131,0,132,132,132,132,132,0,0,133,133,133,0,0,0,0,134,134,134,134,134,0,0,0,0,135,135,135,135,135,135,0,136,136,136,136,0,137,0,0,138,138,138,138,138,138,138,0,139,139,139,139,0,0,0,140,140,140,140,140,140,140,140,0,141,141,141,141,141,141,141,141,141,141,141,0,142,142,142,142,142,142,142,0,143,143,143,143,0,144,144,144,144,144,144,144,144,144,0,0,0,0,0,145,145,145,145,145,145,145,145,145,145,0,0,0,146,146,146,146,146,0,0,0,0,147,147,147,147,147,147,147,147,147,147,147,0,0,0,0,0,0,148,148,148,148,148,148,148,0,0,0,0,0,0,0,0,149,149,0,0,150,150,150,150,150,0,151,151,0,152,0,0,0,0,0,153,153,153,153,0,154,154,154,154,0,155,155,155,155,0,0,0,0,156,156,156,156,0,157,157,157,156,156,156,156,156,0,158,158,158,158,158,158,158,158,158,158,158,158,0,159,159,159,159,159,0,160,160,160,160,160,160,160,160,160,159,159,159,159,159,0,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,0,0,161,161,161,161,161,161,161,161,161,161,0,0,0,0,0,162,162,162,162,162,162,0,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,0,164,164,164,164,162,162,162,162,162,162,162,0,0,165,165,165,165,165,165,0,0,0,0,0,0,166,166,166,166,0,167,167,167,0,0,0,168,168,168,168,168,168,0,169,169,169,169,168,168,168,168,168,168,168,168,168,0,0,170,170,170,170,170,0,171,171,171,171,171,171,0,0,0,0,0,172,172,172,172,172,0,173,173,173,173,173,172,172,172,172,0,0,0,174,174,174,0,175,175,175,175,175,175,0,176,176,176,0,0,173,173,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,177,177,177,177,177,177,177,177,177,177,177,177,177,39,39,39,39,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,42,42,42,42,45,45,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,63,63,63,63,63,64,64,64,64,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,65,65,65,65,66,66,66,66,66,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,67,67,67,67,67,67,68,68,68,68,68,68,68,68,68,68,68,68,69,69,69,69,69,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,70,70,70,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,73,73,73,73,74,74,74,74,74,74,74,74,74,74,74,74,75,75,75,75,75,75,75,75,75,75,75,75,76,76,76,76,76,76,76,76,76,76,76,76,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,78,78,78,78,78,78,78,78,78,78,78,78,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,80,80,80,80,80,80,80,80,80,80,80,80,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,83,83,83,83,83,83,83,83,83,83,83,83,84,84,84,84,84,84,84,84,84,84,84,84,85,85,85,85,85,85,85,85,85,85,85,85,85,86,86,86,86,86,86,86,86,86,86,86,86,87,87,87,87,87,87,87,87,87,87,87,87,88,88,88,88,88,88,88,88,88,88,88,88,89,89,89,89,89,89,89,89,89,89,89,89,90,90,90,90,90,90,90,90,90,90,90,90,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,93,93,93,93,93,93,93,93,93,93,93,93,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,95,95,95,95,95,95,95,95,95,95,95,95,96,96,96,96,96,96,96,96,96,96,96,96,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,98,98,98,98,98,98,98,98,98,98,98,98,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,100,100,100,100,100,100,100,100,100,100,100,100,101,101,101,101,101,101,101,101,101,101,101,101,102,102,102,102,102,102,102,102,102,102,102,102,103,103,103,103,103,103,103,103,103,103,103,103,104,104,104,104,104,104,104,104,104,104,104,104,104,105,105,105,105,105,105,105,105,105,105,105,105,106,106,106,106,106,106,106,106,106,106,106,106,108,108,108,108,108,108,108,108,108,108,108,108,109,109,109,109,109,109,109,109,109,109,109,109,110,110,110,110,110,110,110,110,110,110,110,110,111,111,111,111,111,111,111,111,111,111,111,111,112,112,112,112,112,112,112,112,112,112,112,112,113,113,113,113,113,113,113,113,113,113,113,113,114,114,114,114,114,114,114,114,114,114,114,114,114,115,115,115,115,115,115,115,115,115,115,115,115,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,118,118,118,118,118,118,118,118,118,118,118,118,118,119,119,119,119,119,119,119,119,119,119,119,119,119,120,120,120,120,120,120,120,120,120,120,120,120,120,121,121,121,121,121,121,121,121,121,121,121,121,121,122,122,122,122,122,122,122,122,122,122,122,122,122,123,123,123,123,123,123,123,123,123,123,123,123,124,124,124,124,124,124,124,124,124,124,124,124,125,125,125,125,125,125,125,125,125,125,125,125,126,126,126,126,126,126,126,126,126,126,126,126,126,127,127,127,127,127,127,127,127,127,127,127,127,127,128,128,128,128,128,128,128,128,128,128,128,128,129,129,129,129,129,129,129,129,129,129,129,129,129,130,130,130,130,130,130,130,130,130,130,130,130,131,131,131,131,131,131,131,131,131,131,131,131,132,132,132,132,132,132,132,132,132,132,132,132,132,133,133,133,133,133,133,133,133,133,133,133,133,134,134,134,134,134,134,134,134,134,134,134,134,134,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,137,137,137,137,137,137,137,137,137,137,137,137,137,138,138,138,138,138,138,138,138,138,138,138,138,138,139,139,139,139,139,139,139,139,139,139,139,139,140,140,140,140,140,140,140,140,140,140,140,140,141,141,141,141,141,141,141,141,141,141,141,141,141,142,142,142,142,142,142,142,142,142,142,142,142,142,143,143,143,143,143,143,143,143,143,143,143,143,143,144,144,144,144,144,144,144,144,144,144,144,144,144,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,146,146,146,146,146,146,146,146,146,146,146,146,178,178,178,178,178,178,178,178,178,178,178,178,178,147,147,147,147,147,147,147,147,147,147,147,147,148,148,148,148,148,148,148,148,148,148,148,148,149,149,149,149,149,149,149,149,149,149,149,149,149,150,150,150,150,150,150,150,150,150,150,150,150,151,151,151,151,151,151,151,151,151,151,151,151,152,152,152,152,152,152,152,152,152,152,152,152,152,153,153,153,153,153,153,153,153,153,153,153,153,154,154,154,154,154,154,154,154,154,154,154,154,155,155,155,155,155,155,155,155,155,155,155,155,156,156,156,156,156,156,156,156,156,156,156,156,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,159,159,159,159,159,159,159,159,159,159,159,159,160,160,160,160,160,160,160,160,160,160,160,160,161,161,161,161,161,161,161,161,161,161,161,161,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,164,164,164,164,164,164,164,164,164,164,164,164,165,165,165,165,165,165,165,165,165,165,165,165,179,179,179,179,179,179,179,179,179,179,179,179,179,166,166,166,166,166,166,166,166,166,166,166,166,166,167,167,167,167,167,167,167,167,167,167,167,167,168,168,168,168,168,168,168,168,168,168,168,168,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,170,170,170,170,170,170,170,170,170,170,170,170,171,171,171,171,171,171,171,171,171,171,171,171,172,172,172,172,172,172,172,172,172,172,172,172,173,173,173,173,173,173,173,173,173,173,173,173,180,180,180,180,180,180,180,180,180,180,180,180,180,174,174,174,174,174,174,174,174,174,174,174,174,174,175,175,175,175,175,175,175,175,175,175,175,175,175,176,176,176,176,176,176,176,176,176,176,176,176,4,4,37,37,177,177,177,177,174,174,174,174,83,83,83,83,84,84,84,84,86,86,86,86,87,87,87,87,88,88,88,88,89,89,89,89,90,90,90,90,93,93,93,93,95,95,95,95,96,96,96,96,98,98,98,98,100,100,100,100,101,101,101,101,102,102,102,102,103,103,103,103,105,105,105,105,106,106,106,106,129,129,134,134,146,146,146,146,147,147,147,148,148,148,148,151,151,151,153,153,153,153,156,156,156,156,156,156,156,156,156,135,5,26,53,71,77,79,82,91,92,94,97,99,116,135,145,157,158,162,169,94,157,162,41,41,71,71,77,82,82,91,92,92,94,94,97,97,99,99,116,116,120,120,135,145,157,157,158,162,162,169,94,157,158,162,169,137,63,91,135,145,53,85,53,63,85,149,137,13,13,13,14,14,17,17,17,21,21,22,22,24,24,25,25,28,28,29,29,31,31,32,32,33,33,34,34,37,37,37,39,39,40,40,46,46,47,47,49,49,50,50,51,51,51,57,57,57,58,58,58,59,59,60,60,68,68,69,69,70,70,70,72,72,73,73,74,74,75,75,76,76,109,109,109,110,110,110,111,111,112,112,112,113,113,113,115,115,123,123,124,124,125,125,128,128,130,130,131,131,131,133,133,140,140,150,150,154,154,155,155,165,165,167,167,170,170,171,171,171,171,172,172,172,180,180,176,176,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,179,179,179,179,179,179,179,179,9,35,35,35,35,36,36,36,36,36,61,61,61,61,62,62,62,62,65,65,65,65,66,66,66,66,67,67,67,178,178,152,152],"f":[null,null,null,null,null,null,null,null,[[],["option",4]],[[],["analytics",3]],[[["option",4]]],[[["showobject",8],["drawoptions",3],["gfxctx",3]]],[[["eventctx",3]]],[[["eventctx",3]],[["id",4],["option",4]]],[[["eventctx",3]],[["id",4],["option",4]]],[[["eventctx",3]],[["id",4],["option",4]]],[[["eventctx",3]],[["id",4],["option",4]]],[[["eventctx",3],["showobject",8]],[["id",4],["option",4]]],[[["eventctx",3],["showobject",8],["bool",15]],[["id",4],["option",4]]],[[["showobject",8],["prerender",3],["bounds",3],["agentcache",3]],[["renderable",8],["vec",3]]],[[["eventctx",3]]],[[["string",3],["eventctx",3],["into",8]],[["option",4],["intersectionid",3]]],null,null,null,null,null,null,null,[[],["showlayers",3]],null,[[["id",4]],["bool",15]],[[],["showlayers",3]],null,null,[[],["showeverything",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["timer",3],["eventctx",3],["flags",3],["colorscheme",3],["sim",3],["options",3],["map",3]],["permap",3]],[[["bool",15],["eventctx",3]]],[[],["sim",3]],[[["eventctx",3]],[["option",4],["transition",4]]],[[["id",4]],[["option",4],["pt2d",3]]],null,null,null,null,null,[[],["sessionstate",3]],null,null,[[],["perobjectactions",3]],[[]],[[["string",3],["eventctx",3],["into",8]],["bool",15]],null,null,null,null,[[["str",15],["map",3]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],["cutscenebuilder",3]],[[],["color",3]],[[["string",3],["into",8]],["cutscenebuilder",3]],[[["string",3],["into",8]],["cutscenebuilder",3]],[[["f64",15],["string",3],["str",15],["into",8]],["cutscenebuilder",3]],[[["box",3],["eventctx",3],["fn",8]],[["state",8],["box",3]]],null,null,null,null,null,null,[[["usize",15],["eventctx",3],["fn",8],["str",15]],["panel",3]],null,null,[[["color",3],["eventctx",3],["widget",3]],[["state",8],["box",3]]],null,[[]],[[["timer",3],["scenario",3],["map",3],["option",4],["simoptions",3]]],null,null,null,null,null,null,null,null,null,null,[[["gameplaymode",4],["app",3]]],[[],[["string",3],["vec",3],["btreemap",3]]],[[["gameplaymode",4]]],null,null,null,null,[[["app",3],["eventctx",3]],[["state",8],["box",3]]],[[["app",3],["eventctx",3],["option",4]],[["state",8],["box",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3],["app",3],["roadid",3],["btreeset",3]],["roadselector",3]],[[["eventctx",3]],["widget",3]],[[["app",3],["eventctx",3]]],[[["eventctx",3],["app",3],["option",4],["str",15]],["bool",15]],[[["app",3],["bool",15],["gfxctx",3]]],null,null,null,null,null,[[["eventctx",3],["f64",15],["id",4],["pt2d",3],["option",4],["permap",3],["option",4]],[["state",8],["box",3]]],null,null,[[["eventctx",3]],[["state",8],["box",3]]],[[["str",15],["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["str",15],["eventctx",3],["app",3]],[["option",4],["transition",4]]],null,null,null,[[],["commonstate",3]],[[["contextualactions",8],["eventctx",3],["app",3]],[["option",4],["transition",4]]],[[["app",3],["gfxctx",3]]],[[["app",3],["id",4]],["text",3]],[[["app",3],["gfxctx",3]]],[[["app",3],["text",3],["gfxctx",3]]],[[["contextualactions",8],["eventctx",3],["app",3],["tab",4]]],[[["app",3]],[["id",4],["option",4]]],[[["eventctx",3]],["panel",3]],[[["btreeset",3],["fn",8],["text",3],["string",3]]],[[["app",3],["duration",3]],[["textspan",3],["vec",3]]],[[["app",3],["tripmode",4]],["color",3]],[[["app",3],["agenttype",4]],["color",3]],[[["app",3],["tripphasetype",4]],["color",3]],[[["btreeset",3],["map",3]],[["btreeset",3],["intersectionid",3]]],[[["app",3],["btreeset",3],["eventctx",3]],["widget",3]],[[["duration",3]],[["box",3],["fnonce",8]]],null,null,null,null,null,null,null,null,[[["app",3],["eventctx",3]],[["state",8],["box",3]]],[[["app",3],["agentid",4]],["option",4]],[[["app",3],["agentid",4]]],[[["eventctx",3],["app",3]]],[[["agentid",4]],["delaycause",4]],null,null,null,null,null,null,[[["app",3],["eventctx",3],["laneid",3]],[["state",8],["box",3]]],[[["app",3],["eventctx",3],["laneid",3]],[["state",8],["box",3]]],[[["eventctx",3],["source",4],["app",3],["pathconstraints",4]],[["state",8],["box",3]]],null,null,null,[[["pathconstraints",4],["map",3]]],null,null,[[["app",3],["gfxctx",3]]],[[["id",4],["sim",3],["map",3]]],null,null,null,null,null,null,null,[[["app",3],["intersectionid",3],["eventctx",3]],[["state",8],["box",3]]],null,null,null,null,null,null,null,null,null,null,null,[[["item",4],["eventctx",3],["vec",3],["pt2d",3],["option",4],["str",15]],[["state",8],["box",3]]],null,null,null,null,null,[[["app",3],["eventctx",3],["tripendpoint",4]],[["state",8],["box",3]]],[[["app",3],["eventctx",3]]],[[["routingparams",3],["eventctx",3],["tripmode",4]],["widget",3]],[[["panel",3]]],null,null,null,null,null,null,null,null,[[["eventctx",3],["app",3]],[["state",8],["box",3]]],[[["app",3],["timer",3]],[["counter",3],["roadid",3]]],[[["usize",15]],[["textspan",3],["vec",3]]],null,null,null,null,null,[[["eventctx",3],["pathrequest",3],["app",3],["polygon",3]],[["option",4],["box",3]]],null,null,null,null,[[["roadid",3],["eventctx",3],["app",3]],[["state",8],["box",3]]],[[["roadselector",3],["eventctx",3]],["panel",3]],null,[[["vec",3],["map",3],["roadid",3],["intersectionid",3],["vec",3]],["string",3]],[[["roadid",3],["map",3]],["feature",3]],[[["lane",3]],[["option",4],["map",3]]],[[["intersectionid",3],["map",3]],["feature",3]],null,[[["roadid",3],["map",3]],["string",3]],[[["roadid",3],["map",3]],[["string",3],["map",3],["value",4]]],[[["lane",3],["direction",4]],[["string",3],["map",3],["value",4]]],null,null,null,[[["app",3],["intersectionid",3],["eventctx",3]],[["state",8],["box",3]]],null,null,null,null,null,[[["usize",15],["eventctx",3],["app",3],["btreeset",3],["intersectionid",3],["bool",15]],[["state",8],["box",3]]],null,null,null,null,null,null,null,null,null,null,[[["app",3],["eventctx",3]],[["state",8],["box",3]]],[[["eventctx",3]]],[[["string",3],["eventctx",3],["app",3]],[["transition",4],["app",3]]],null,null,null,null,[[["eventctx",3],["app",3]]],null,[[["app",3]]],[[["app",3]]],[[["tags",3]]],[[["app",3]]],null,null,null,[[["vec",3],["eventctx",3],["app",3],["mapname",3]],[["state",8],["box",3]]],[[["app",3],["eventctx",3]]],[[["app",3],["eventctx",3]],["drawable",3]],[[["app",3],["eventctx",3]],["drawable",3]],null,null,null,null,null,null,null,[[["app",3],["eventctx",3]],[["state",8],["box",3]]],null,null,null,null,[[],["filters",3]],[[["collisiondataset",3]],[["usize",15],["vec",3]]],[[["eventctx",3]],["widget",3]],[[["panel",3]],["filters",3]],null,null,null,null,null,null,[[["usize",15],["eventctx",3],["app",3],["collisiondataset",3],["vec",3]]],[[["usize",15],["eventctx",3],["app",3],["collisiondataset",3],["vec",3]]],null,null,null,null,[[["vec",3],["box",3],["fn",8]],["mapspacetooltips",3]],[[["eventctx",3]]],[[["gfxctx",3]]],null,null,null,null,null,[[["app",3],["scenario",3],["eventctx",3]],[["state",8],["box",3]]],[[["option",4],["eventctx",3],["app",3],["counter",3],["buildingid",3],["heatmapoptions",3]],[["state",8],["box",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3],["app",3],["string",3],["option",4]],[["state",8],["box",3]]],[[["timer",3],["app",3],["string",3],["option",4],["bool",15]]],[[["usize",15],["str",15],["vec",3],["pt2d",3],["colorscheme",3],["btreemap",3],["string",3],["hashmap",3]],["object",3]],[[["app",3],["str",15]]],[[["app",3],["eventctx",3]],[["transition",4],["app",3]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3],["eventctx",3],["string",3],["lonlat",3]],[["state",8],["box",3]]],null,null,null,null,null,null,[[["app",3],["scenario",3],["eventctx",3]],[["state",8],["box",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3]],[["state",8],["box",3]]],[[["eventctx",3]]],[[["eventctx",3],["bool",15],["mode",4],["storymap",3]],["panel",3]],null,null,null,null,null,null,null,null,null,null,null,[[],["storymap",3]],[[["app",3],["eventctx",3],["recordedstorymap",3]],[["option",4],["storymap",3]]],[[["app",3]]],[[["eventctx",3],["pt2d",3],["vec",3],["string",3]],["marker",3]],[[["gfxctx",3]]],[[["eventctx",3]],["panel",3]],null,null,[[["pt2d",3]],["lasso",3]],[[["eventctx",3]],[["ring",3],["option",4]]],[[["gfxctx",3]]],[[["vec",3],["pt2d",3]],["ring",3]],null,null,[[["eventctx",3],["app",3]],[["state",8],["box",3]]],null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3],["app",3],["roadid",3],["mapedits",3],["editroad",3]],[["state",8],["box",3]]],[[["app",3],["eventctx",3]]],null,null,null,null,null,null,null,null,null,null,null,[[["laneid",3],["eventctx",3],["app",3]],[["state",8],["box",3]]],[[["isize",15],["eventctx",3],["app",3],["option",4],["fn",8]],[["transition",4],["app",3]]],[[["app",3],["eventctx",3]]],[[["app",3]],[["option",4],["mapedits",3]]],[[["usize",15],["eventctx",3],["app",3],["bool",15],["roadid",3],["editroad",3]],["panel",3]],[[["eventctx",3],["laneid",3],["app",3],["road",3],["option",4]],["panel",3]],[[["eventctx",3],["laneid",3],["app",3],["roadid",3],["option",4]]],[[["lanetype",4]],[["str",15],["option",4]]],[[["app",3],["laneid",3]],[["vec",3],["choice",3]]],[[["lanetype",4]],["bool",15]],[[["direction",4],["editroad",3]],["usize",15]],[[["bool",15],["lanetype",4],["editroad",3]],["direction",4]],[[["lanetype",4],["editroad",3]],["usize",15]],null,null,null,null,[[["busrouteid",3],["eventctx",3],["app",3]],[["state",8],["box",3]]],null,null,null,null,null,null,[[["eventctx",3],["app",3],["intersectionid",3],["gameplaymode",4]],[["state",8],["box",3]]],null,null,null,null,[[["usize",15],["eventctx",3],["controltrafficsignal",3],["app",3]],[["state",8],["box",3]]],[[["eventctx",3],["app",3],["intersectionid",3],["gameplaymode",4],["bundleedits",3]],[["state",8],["box",3]]],null,[[["str",15],["intersectionid",3],["map",3]],[["result",6],["controltrafficsignal",3]]],[[["str",15],["eventctx",3],["app",3]],[["state",8],["box",3]]],null,null,null,null,null,null,null,null,[[["deserializer",8]],["result",6]],[[["deserializer",8]],[["result",6],["vec",3]]],null,null,null,null,[[["intersectionid",3],["map",3]],[["result",6],["snapper",3]]],[[["map",3],["str",15]],[["result",6],["movementid",3]]],[[["angle",3]],["str",15]],[[["controltrafficsignal",3],["map",3]]],null,null,null,null,[[["eventctx",3],["app",3],["btreeset",3],["intersectionid",3]],[["state",8],["box",3]]],null,null,null,null,[[["eventctx",3],["app",3],["intersectionid",3],["btreeset",3]],[["state",8],["box",3]]],null,null,null,null,null,[[["eventctx",3],["app",3],["intersectionid",3],["btreeset",3]],[["state",8],["box",3]]],null,null,null,null,null,[[["eventctx",3],["btreeset",3],["intersectionid",3],["gameplaymode",4]],[["state",8],["box",3]]],[[["usize",15],["eventctx",3]],["widget",3]],null,null,null,null,[[["app",3],["eventctx",3]],[["state",8],["box",3]]],[[["usize",15],["eventctx",3],["app",3],["btreeset",3],["intersectionid",3]],[["state",8],["box",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3],["app",3],["btreeset",3],["intersectionid",3],["gameplaymode",4]],[["state",8],["box",3]]],[[["app",3],["usize",15],["eventctx",3]]],[[["usize",15],["eventctx",3],["app",3],["fn",8]]],[[["app",3],["eventctx",3]]],[[["app",3]],["result",6]],[[["eventctx",3],["app",3],["bool",15]],["panel",3]],[[["usize",15],["btreeset",3],["eventctx",3],["app",3]],["panel",3]],[[["app",3]]],[[["eventctx",3],["app",3]]],[[["app",3],["btreeset",3]],["bundleedits",3]],[[["app",3],["btreeset",3]],["bundleedits",3]],[[["app",3],["btreeset",3]],[["option",4],["bundleedits",3]]],[[["usize",15],["btreeset",3],["eventctx",3],["app",3]],["widget",3]],[[["polygon",3],["vec",3]],["vec",3]],[[["app",3],["btreeset",3]],["geombatch",3]],null,[[["editcmd",4],["eventctx",3],["app",3]],[["option",4],["box",3]]],[[["editcmd",4],["eventctx",3],["app",3]],[["option",4],["box",3]]],null,null,null,null,null,null,null,null,[[["roadid",3],["eventctx",3],["app",3]],[["state",8],["box",3]]],[[["app",3],["btreeset",3],["eventctx",3]]],[[["btreeset",3],["eventctx",3]],["widget",3]],null,null,null,null,null,null,null,null,null,null,[[["gameplaymode",4],["eventctx",3],["app",3]],[["state",8],["box",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],null,null,null,null,null,null,[[["option",4],["box",3],["app",3],["transition",4],["bool",15],["eventctx",3],["fn",8],["string",3],["into",8]],[["state",8],["box",3]]],[[["app",3],["eventctx",3]]],null,null,null,[[["app",3],["gameplaymode",4],["eventctx",3]],[["state",8],["box",3]]],[[["app",3],["eventctx",3]],["panel",3]],[[["mapedits",3],["eventctx",3],["app",3]]],[[["gameplaymode",4],["app",3],["laneid",3]],["bool",15]],[[["app",3],["option",4],["speed",3]],[["vec",3],["choice",3]]],[[["eventctx",3],["app",3],["gameplaymode",4],["intersectionid",3]],[["option",4],["box",3]]],[[["app",3],["eventctx",3]],["panel",3]],[[["editcmd",4]],[["id",4],["option",4]]],null,null,null,[[["box",3],["eventctx",3],["fn",8]],[["state",8],["box",3]]],null,null,[[["details",3],["eventctx",3],["app",3],["buildingid",3]],["widget",3]],[[["details",3],["eventctx",3],["app",3],["buildingid",3]],["widget",3]],[[["details",3],["eventctx",3],["app",3],["buildingid",3]],["widget",3]],[[["details",3],["eventctx",3],["app",3],["buildingid",3]],["widget",3]],[[["eventctx",3],["details",3],["app",3],["buildingid",3],["tab",4]],["widget",3]],[[["details",3],["option",4],["app",3],["buildingid",3],["personid",3]]],null,[[["details",3],["busstopid",3],["eventctx",3],["app",3]],["widget",3]],[[["details",3],["busstopid",3],["eventctx",3],["app",3]],["widget",3]],[[["details",3],["carid",3],["eventctx",3],["app",3]],["widget",3]],[[["details",3],["carid",3],["eventctx",3],["app",3]],["widget",3]],[[["details",3],["carid",3],["eventctx",3],["app",3],["tab",4]],["widget",3]],[[["details",3],["eventctx",3],["app",3],["busrouteid",3]],["widget",3]],[[["details",3],["eventctx",3],["app",3],["busrouteid",3]],["widget",3]],[[["busroute",3]],["text",3]],null,[[["eventctx",3],["details",3],["areaid",3],["app",3]],["widget",3]],[[["eventctx",3],["app",3],["areaid",3]],["widget",3]],null,[[["eventctx",3],["details",3],["app",3],["intersectionid",3]],["widget",3]],[[["eventctx",3],["app",3],["intersectionid",3]],["widget",3]],[[["details",3],["eventctx",3],["app",3],["intersectionid",3],["dataoptions",3]],["widget",3]],[[["eventctx",3],["app",3],["intersectionid",3],["dataoptions",3]],["widget",3]],[[["details",3],["eventctx",3],["app",3],["intersectionid",3],["dataoptions",3],["bool",15]],["widget",3]],[[["eventctx",3],["app",3],["intersectionid",3],["dataoptions",3],["bool",15]],["widget",3]],[[["details",3],["eventctx",3],["app",3],["intersectionid",3]],["widget",3]],[[["app",3],["intersectionid",3],["eventctx",3]],["widget",3]],[[["details",3],["eventctx",3],["app",3],["intersectionid",3],["dataoptions",3]],["widget",3]],[[["details",3],["eventctx",3],["app",3],["intersectionid",3]],["widget",3]],[[["app",3],["intersectionid",3],["eventctx",3]],["widget",3]],[[["eventctx",3],["app",3],["intersectionid",3],["dataoptions",3],["bool",15]],["widget",3]],[[["eventctx",3],["details",3],["app",3],["intersectionid",3],["tab",4]],["widget",3]],null,[[["eventctx",3],["details",3],["laneid",3],["app",3]],["widget",3]],[[["eventctx",3],["app",3],["laneid",3]],["widget",3]],[[["eventctx",3],["details",3],["laneid",3],["app",3]],["widget",3]],[[["eventctx",3],["app",3],["laneid",3]],["widget",3]],[[["details",3],["eventctx",3],["laneid",3],["app",3],["dataoptions",3]],["widget",3]],[[["eventctx",3],["laneid",3],["app",3],["dataoptions",3]],["widget",3]],[[["eventctx",3],["details",3],["laneid",3],["app",3],["tab",4]],["widget",3]],null,[[["details",3],["eventctx",3],["app",3],["parkinglotid",3]],["widget",3]],[[["app",3],["parkinglotid",3],["eventctx",3]],["widget",3]],[[["eventctx",3],["details",3],["parkinglotid",3],["tab",4]],["widget",3]],null,[[["details",3],["eventctx",3],["app",3],["bool",15],["personid",3],["btreemap",3]],["widget",3]],[[["details",3],["eventctx",3],["app",3],["personid",3],["btreemap",3]],["widget",3]],[[["details",3],["eventctx",3],["app",3],["bool",15],["personid",3]],["widget",3]],[[["details",3],["eventctx",3],["app",3],["personid",3]],["widget",3]],[[["details",3],["eventctx",3],["app",3],["bool",15],["personid",3]],["widget",3]],[[["app",3],["eventctx",3],["personid",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3]],["widget",3]],[[["details",3],["carid",3],["eventctx",3],["app",3],["bool",15]],["widget",3]],[[["details",3],["carid",3],["eventctx",3],["app",3]],["widget",3]],[[["details",3],["eventctx",3],["app",3],["bool",15],["personid",3],["tab",4]],["widget",3]],[[["eventctx",3],["map",3],["person",3]],["widget",3]],[[["duration",3]],["textspan",3]],null,null,null,null,[[["tripid",3]],[["tripid",3],["btreemap",3],["opentrip",3]]],[[],["opentrip",3]],[[["details",3],["eventctx",3],["agentid",4],["app",3],["tripid",3],["opentrip",3]],["widget",3]],[[["details",3],["eventctx",3],["app",3],["tripid",3],["opentrip",3]],["widget",3]],[[["details",3],["eventctx",3],["app",3],["tripid",3],["personid",3],["btreemap",3]],["widget",3]],[[["details",3],["eventctx",3],["app",3],["tripid",3],["opentrip",3]],["widget",3]],[[["eventctx",3],["analytics",3],["tripid",3],["tripinfo",3],["percent",3]],["widget",3]],[[["eventctx",3],["details",3],["app",3],["analytics",3],["tripid",3]]],[[["f64",15],["eventctx",3],["app",3],["tripid",3],["option",4]],["widget",3]],[[["details",3],["app",3],["vec",3],["option",4],["f64",15],["eventctx",3],["map",3],["tripid",3],["tripphase",3],["opentrip",3]],["widget",3]],[[["eventctx",3],["color",3],["path",3],["bool",15],["map",3]],["widget",3]],[[["app",3],["tripendpoint",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["app",3],["id",4]],["tab",4]],[[["app",3]],[["id",4],["option",4]]],[[["panel",3]],[["option",4],["tab",4]]],[[]],null,null,null,null,null,null,null,null,null,[[["contextualactions",8],["eventctx",3],["app",3],["tab",4]]],[[["contextualactions",8],["eventctx",3],["app",3]]],[[["app",3],["gfxctx",3]]],[[],["vec",3]],[[["app",3]],[["id",4],["option",4]]],[[["eventctx",3],["vec",3]],[["widget",3],["vec",3]]],[[["eventctx",3],["fn",8],["app",3],["dataoptions",3],["str",15]],["widget",3]],[[["eventctx",3],["hashmap",3],["vec",3],["tab",4]],["widget",3]],[[["eventctx",3]],["widget",3]],null,[[["app",3],["id",4]],["vec",3]],[[["id",4],["eventctx",3],["app",3],["string",3],["bool",15]],[["transition",4],["app",3]]],[[],["bool",15]],[[],["gameplaymode",4]],null,null,null,null,[[],["dataoptions",3]],[[["app",3],["eventctx",3]],["widget",3]],[[["panel",3]],["dataoptions",3]],[[],[["string",3],["hashset",3]]],null,null,null,null,null,null,null,[[["app",3],["eventctx",3]],["steepstreets",3]],null,null,null,null,null,null,null,[[["app",3],["eventctx",3]],["elevationcontours",3]],[[["eventctx",3],["app",3],["distance",3]]],null,null,null,[[["app",3]],["favorites",3]],[[["app",3]],["string",3]],[[["app",3],["buildingid",3]],["bool",15]],[[["app",3],["buildingid",3]]],[[["app",3],["buildingid",3]]],null,null,null,[[["app",3],["eventctx",3]],["showfavorites",3]],null,null,null,null,null,null,null,[[["app",3],["eventctx",3]],["bikeactivity",3]],null,null,null,null,null,[[["eventctx",3],["string",3],["str",15],["widget",3],["colordiscrete",3]],["static",3]],[[["app",3],["eventctx",3]],["static",3]],[[["app",3],["eventctx",3]],["static",3]],[[["app",3],["eventctx",3]],["static",3]],[[["app",3],["eventctx",3]],["static",3]],null,null,null,null,null,null,[[["app",3],["eventctx",3]],["congestioncaps",3]],null,null,null,null,null,null,[[["app",3],["eventctx",3],["options",3]],["pandemic",3]],[[],["options",3]],null,null,null,null,null,null,null,null,null,[[["option",4],["eventctx",3],["app",3],["options",3],["widget",3]],["panel",3]],null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3],["app",3],["bool",15]],["occupancy",3]],null,null,null,null,[[["map",3],["parkingspot",4]],["loc",4]],null,null,null,null,null,[[["app",3],["eventctx",3]],["efficiency",3]],null,null,null,null,null,null,[[["app",3],["eventctx",3],["options",3]],["populationmap",3]],[[],["options",3]],null,null,[[["option",4],["eventctx",3],["app",3],["options",3],["widget",3]],["panel",3]],null,null,null,null,null,null,[[["app",3],["eventctx",3],["options",3]],["problemmap",3]],[[["app",3]],["options",3]],null,null,null,null,null,null,null,null,null,[[["app",3]],["options",3]],[[["time",3],["problem",4],["tripinfo",3]],["bool",15]],[[["option",4],["usize",15],["eventctx",3],["options",3],["app",3],["widget",3]],["panel",3]],null,null,null,null,null,null,[[["app",3],["eventctx",3]],["backpressure",3]],null,null,null,null,null,null,null,[[["eventctx",3],["app",3],["agenttype",4],["btreeset",3]],["throughput",3]],null,null,null,null,null,null,[[["app",3],["eventctx",3]],["comparethroughput",3]],null,null,null,null,null,[[["app",3],["eventctx",3]],["trafficjams",3]],null,null,null,[[["vec",3],["map",3]],["vec",3]],[[["intersectionid",3],["map",3]],["bool",15]],[[["map",3]],[["polygon",3],["vec",3]]],null,null,null,null,[[["app",3],["eventctx",3]],["delay",3]],null,null,null,null,null,[[["eventctx",3],["app",3],["bool",15]],["transitnetwork",3]],null,[[],[["str",15],["option",4]]],[[["eventctx",3],["app",3]],[["option",4],["layeroutcome",4]]],[[["app",3],["gfxctx",3]]],[[["gfxctx",3]]],[[["panel",3],["eventctx",3]],[["option",4],["layeroutcome",4]]],null,null,null,null,null,[[["eventctx",3],["app",3]],[["option",4],["transition",4]]],[[["app",3],["eventctx",3]],[["state",8],["box",3]]],[[["eventctx",3],["str",15]],["widget",3]],null,null,null,null,null,null,null,[[["eventctx",3],["app",3],["string",3],["option",4]],[["state",8],["box",3]]],[[["app",3],["eventctx",3],["permanentmapedits",3]],[["transition",4],["app",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3]],["widget",3]],null,null,null,null,[[["eventctx",3],["app",3]],["titlescreen",3]],null,null,[[["eventctx",3]],[["state",8],["box",3]]],null,null,[[["app",3],["eventctx",3]],[["state",8],["box",3]]],null,null,null,[[["xorshiftrng",3],["eventctx",3],["app",3]],["screensaver",3]],[[["xorshiftrng",3],["eventctx",3],["app",3]]],[[["mapname",3]],["string",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3],["app",3]],[["state",8],["box",3]]],[[["block",3]],["vec",3]],[[["eventctx",3],["app",3],["blockselection",4]]],[[["option",4],["eventctx",3],["app",3],["panelstate",3]]],[[["app",3]]],null,null,null,null,[[["map",3],["intersection",3],["bordertype",4]],["polygon",3]],null,null,null,null,[[["app",3]],[["loop",3],["vec",3]]],[[["app",3],["eventctx",3]],["panel",3]],null,[[["app",3],["usize",15]],[["transition",4],["app",3]]],[[["panel",3],["app",3],["gfxctx",3],["geombatch",3]]],[[["geombatch",3],["gfxctx",3],["app",3],["tripid",3]]],null,null,null,[[["app",3],["eventctx",3]],[["state",8],["box",3]]],[[["vec",3]],["vec",3]],null,null,[[["app",3],["eventctx",3]],[["state",8],["box",3]]],null,null,null,null,null,[[["app",3],["eventctx",3]],[["state",8],["box",3]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["app",3]],[["entry",3],["vec",3]]],[[["app",3]],[["table",3],["entry",3],["filters",3],["app",3]]],null,null,null,[[["app",3],["bool",15],["eventctx",3]],[["state",8],["box",3]]],null,null,null,[[["app",3]],[["string",3],["result",6]]],null,null,null,null,null,[[["refcell",3],["eventctx",3],["rc",3]],[["state",8],["box",3]]],null,null,null,null,null,null,null,[[["eventctx",3],["app",3]],[["state",8],["box",3]]],null,null,[[["app",3],["timer",3]],[["demand",3],["intersectionid",3],["hashmap",3]]],[[["time",3]],[["movementid",3],["counter",3]]],[[["time",3],["controltrafficsignal",3]],["vec",3]],[[["time",3],["eventctx",3],["hashmap",3],["app",3]],["drawable",3]],null,null,null,[[["app",3],["filter",3],["eventctx",3]],[["state",8],["box",3]]],[[["app",3],["filter",3],["eventctx",3]],["panel",3]],[[["app",3],["filter",3],["eventctx",3]],["widget",3]],[[["app",3],["filter",3],["eventctx",3]],["widget",3]],[[["app",3],["filter",3],["eventctx",3]],["widget",3]],null,null,null,null,[[],["filter",3]],[[["app",3]],["vec",3]],[[["duration",3]],["f64",15]],[[["app",3]],[["string",3],["result",6]]],null,null,null,null,null,null,[[],["usize",15]],[[],[["problemtype",4],["vec",3]]],null,[[["tripmode",4]],["bool",15]],[[],["bool",15]],[[["app",3],["problemtype",4]],["vec",3]],[[["app",3]],["usize",15]],null,null,[[["app",3],["eventctx",3]],["widget",3]],null,null,null,null,[[["vec",3],["vec",3]],["matrix",3]],[[]],[[["usize",15]],["usize",15]],[[["app",3],["matrixoptions",3],["eventctx",3]],["widget",3]],null,null,null,null,null,[[["usize",15]],[["vec",3],["isize",15]]],null,null,null,null,null,null,null,null,null,[[["app",3],["eventctx",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["app",3]]],[[["app",3]],[["filters",3],["finishedtrip",3],["table",3],["app",3]]],[[["app",3]],[["cancelledtrip",3],["filters",3],["table",3],["app",3]]],[[["app",3]],[["unfinishedtrip",3],["filters",3],["table",3],["app",3]]],null,null,null,null,null,null,null,null,null,[[["eventctx",3],["app",3]],["widget",3]],[[["panel",3],["eventctx",3],["app",3]],[["option",4],["transition",4]]],null,null,null,null,null,null,null,[[["string",3],["bool",15],["eventctx",3]],[["box",3],["gameplaystate",8]]],null,[[["app",3]],["option",4]],null,null,null,null,null,null,null,null,null,null,[[["eventctx",3],["app",3],["origpersonid",3],["duration",3]],[["box",3],["gameplaystate",8]]],[[["app",3],["gameplaymode",4],["eventctx",3]],[["state",8],["box",3]]],[[["app",3],["gameplaymode",4],["eventctx",3]],[["state",8],["box",3]]],[[["app",3]]],[[["eventctx",3],["app",3],["duration",3],["gameplaymode",4]],[["state",8],["box",3]]],[[["gameplaymode",4]],[["box",3],["fn",8]]],null,null,null,null,null,null,null,null,[[["eventctx",3]],[["box",3],["gameplaystate",8]]],[[["app",3],["gameplaymode",4],["eventctx",3]],[["state",8],["box",3]]],[[["eventctx",3],["app",3],["bool",15],["gameplaymode",4]],[["state",8],["box",3]]],[[["eventctx",3]],["widget",3]],null,null,[[["eventctx",3]],[["transition",4],["app",3]]],[[["eventctx",3]],[["transition",4],["app",3]]],[[["string",3],["timer",3],["map",3]],[["string",3],["result",6]]],null,null,null,null,null,null,null,null,null,[[["option",4],["eventctx",3],["app",3],["buildingid",3]],[["state",8],["box",3]]],null,null,[[["app",3],["eventctx",3]],[["box",3],["gameplaystate",8]]],null,[[["app",3],["eventctx",3],["str",15]],[["state",8],["box",3]]],[[["intersectionid",3],["app",3]]],[[["app",3],["id",4]],["vec",3]],[[["id",4],["eventctx",3],["app",3],["str",15]],[["transition",4],["app",3]]],null,null,null,null,null,[[["scenariomodifier",4],["eventctx",3],["app",3],["vec",3],["str",15]],[["box",3],["gameplaystate",8]]],null,null,null,null,[[["eventctx",3],["string",3],["vec",3],["scenariomodifier",4]],[["state",8],["box",3]]],null,null,null,null,[[["eventctx",3],["app",3],["string",3],["vec",3],["scenariomodifier",4]],[["state",8],["box",3]]],null,null,null,null,null,null,null,null,null,null,null,[[["usize",15]],["tutorialpointer",3]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["eventctx",3],["app",3]]],[[["tutorialpointer",3],["eventctx",3],["app",3]],[["box",3],["gameplaystate",8]]],[[["app",3],["tutorialpointer",3]],[["scenariogenerator",3],["option",4]]],[[["eventctx",3],["app",3],["sandboxcontrols",3],["tutorialstate",3]],[["option",4],["transition",4]]],null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3],["tutorialstate",3]],["text",3]],[[],["str",15]],null,null,null,null,null,null,null,null,null,null,null,[[["text",3]],["message",3]],[[["screenpt",3]],["message",3]],[[["box",3],["fn",8]],["message",3]],[[["str",15]],["message",3]],[[],["message",3]],[[["task",4]],["stage",3]],[[["message",3]],["stage",3]],[[["id",4],["f64",15],["option",4]],["stage",3]],[[["box",3],["fn",8]],["stage",3]],[[["scenariogenerator",3]],["stage",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["map",3]],["scenariogenerator",3]],[[["app",3],["tutorialstate",3]],[["transition",4],["app",3]]],[[]],[[],["stage",3]],[[],["task",4]],[[],[["option",4],["message",3]]],[[]],[[]],[[["bool",15],["eventctx",3]],["panel",3]],[[["eventctx",3],["app",3]],[["box",3],["gameplaystate",8]]],[[["app",3],["eventctx",3]],["tutorialstate",3]],[[["map",3]],[["scenariogenerator",3],["vec",3]]],[[["app",3],["id",4]],["vec",3]],[[["id",4],["eventctx",3],["app",3],["str",15]],[["transition",4],["app",3]]],[[["eventctx",3]],[["state",8],["box",3]]],[[["i64",15]],["osmid",4]],null,null,null,null,null,null,null,null,[[["eventctx",3],["app",3],["actions",3],["sandboxcontrols",3]],[["option",4],["transition",4]]],[[["app",3],["gfxctx",3]]],[[["app",3]]],[[["app",3],["eventctx",3]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["box",3]],[["result",4],["box",3],["box",3]]],[[["rc",3]],[["result",4],["rc",3],["rc",3]]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,[[],["mapname",3]],[[["app",3],["xorshiftrng",3],["timer",3]],["loadscenario",4]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["mapedits",3]],["bool",15]],[[["eventctx",3],["app",3]],[["box",3],["gameplaystate",8]]],[[["eventctx",3],["str",15]],["widget",3]],null,null,null,null,null,null,[[["eventctx",3],["app",3],["string",3],["gameplaymode",4],["option",4]],[["state",8],["box",3]]],null,null,[[["app",3],["eventctx",3]],[["widget",3],["vec",3]]],[[["app",3],["eventctx",3]],["widget",3]],null,null,null,[[],["routepreview",3]],[[["eventctx",3],["app",3]],[["option",4],["transition",4]]],[[["gfxctx",3]]],null,null,null,[[["btreeset",3],["intersectionid",3],["eventctx",3]],[["state",8],["box",3]]],[[["usize",15],["eventctx",3]],["widget",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["app",3],["eventctx",3]],["timepanel",3]],[[["app",3],["eventctx",3]]],[[["eventctx",3],["app",3]],["widget",3]],[[["eventctx",3],["app",3]],["widget",3]],[[["eventctx",3],["app",3],["gameplaymode",4],["option",4]],[["option",4],["transition",4]]],[[["gfxctx",3]]],[[["app",3],["eventctx",3]]],[[["app",3],["speedsetting",4],["eventctx",3]]],[[],["bool",15]],null,null,null,null,null,null,[[["eventctx",3],["app",3],["gameplaymode",4],["option",4]],[["state",8],["box",3]]],null,null,null,null,null,null,[[["time",3],["eventctx",3],["app",3],["option",4],["duration",3]],[["state",8],["box",3]]],[[["f64",15],["vec",3]],["polygon",3]],[[["usize",15]],["string",3]],[[["eventctx",3],["time",3]],["widget",3]],[[["eventctx",3],["duration",3]],["widget",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["gameplaymode",4],["app",3]],[["state",8],["box",3]]],[[["box",3],["app",3],["fnonce",8],["gameplaymode",4]],[["state",8],["box",3]]],[[["app",3]],[["state",8],["box",3]]],[[],["actions",3]],[[["eventctx",3]],[["transition",4],["app",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3],["app",3]]],[[["app",3]],["bool",15]],[[["app",3],["gameplaystate",8],["eventctx",3]],["sandboxcontrols",3]],[[["app",3],["eventctx",3]]],[[]],[[["settings",3]]],[[["flags",3],["bool",15],["option",4],["duration",3],["option",4],["eventctx",3],["string",3],["gameplaymode",4],["options",3],["option",4]]],[[["app",3],["bool",15],["option",4],["duration",3],["option",4],["eventctx",3],["string",3],["gameplaymode",4],["option",4]],[["vec",3],["box",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["id",4]],["bool",15]],[[],["showlayers",3]],[[["id",4]],["bool",15]],[[],["showlayers",3]],[[["app",3],["id",4]],["vec",3]],[[["id",4],["eventctx",3],["app",3],["string",3],["bool",15]],[["transition",4],["app",3]]],[[],["bool",15]],[[],["gameplaymode",4]],[[["app",3],["id",4]],["vec",3]],[[["id",4],["eventctx",3],["app",3],["string",3],["bool",15]],[["transition",4],["app",3]]],[[],["bool",15]],[[],["gameplaymode",4]],[[],[["str",15],["option",4]]],[[["eventctx",3],["app",3]],[["option",4],["layeroutcome",4]]],[[["app",3],["gfxctx",3]]],[[["gfxctx",3]]],[[],[["str",15],["option",4]]],[[["eventctx",3],["app",3]],[["option",4],["layeroutcome",4]]],[[["app",3],["gfxctx",3]]],[[["gfxctx",3]]],[[],[["str",15],["option",4]]],[[["eventctx",3],["app",3]],[["option",4],["layeroutcome",4]]],[[["app",3],["gfxctx",3]]],[[["gfxctx",3]]],[[],[["str",15],["option",4]]],[[["eventctx",3],["app",3]],[["option",4],["layeroutcome",4]]],[[["app",3],["gfxctx",3]]],[[["gfxctx",3]]],[[],[["str",15],["option",4]]],[[["eventctx",3],["app",3]],[["option",4],["layeroutcome",4]]],[[["app",3],["gfxctx",3]]],[[["gfxctx",3]]],[[],[["str",15],["option",4]]],[[["eventctx",3],["app",3]],[["option",4],["layeroutcome",4]]],[[["app",3],["gfxctx",3]]],[[["gfxctx",3]]],[[],[["str",15],["option",4]]],[[["eventctx",3],["app",3]],[["option",4],["layeroutcome",4]]],[[["app",3],["gfxctx",3]]],[[["gfxctx",3]]],[[],[["str",15],["option",4]]],[[["eventctx",3],["app",3]],[["option",4],["layeroutcome",4]]],[[["app",3],["gfxctx",3]]],[[["gfxctx",3]]],[[],[["str",15],["option",4]]],[[["eventctx",3],["app",3]],[["option",4],["layeroutcome",4]]],[[["app",3],["gfxctx",3]]],[[["gfxctx",3]]],[[],[["str",15],["option",4]]],[[["eventctx",3],["app",3]],[["option",4],["layeroutcome",4]]],[[["app",3],["gfxctx",3]]],[[["gfxctx",3]]],[[],[["str",15],["option",4]]],[[["eventctx",3],["app",3]],[["option",4],["layeroutcome",4]]],[[["app",3],["gfxctx",3]]],[[["gfxctx",3]]],[[],[["str",15],["option",4]]],[[["eventctx",3],["app",3]],[["option",4],["layeroutcome",4]]],[[["app",3],["gfxctx",3]]],[[["gfxctx",3]]],[[],[["str",15],["option",4]]],[[["eventctx",3],["app",3]],[["option",4],["layeroutcome",4]]],[[["app",3],["gfxctx",3]]],[[["gfxctx",3]]],[[],[["str",15],["option",4]]],[[["eventctx",3],["app",3]],[["option",4],["layeroutcome",4]]],[[["app",3],["gfxctx",3]]],[[["gfxctx",3]]],[[],[["str",15],["option",4]]],[[["eventctx",3],["app",3]],[["option",4],["layeroutcome",4]]],[[["app",3],["gfxctx",3]]],[[["gfxctx",3]]],[[],[["str",15],["option",4]]],[[["eventctx",3],["app",3]],[["option",4],["layeroutcome",4]]],[[["app",3],["gfxctx",3]]],[[["gfxctx",3]]],[[],[["str",15],["option",4]]],[[["eventctx",3],["app",3]],[["option",4],["layeroutcome",4]]],[[["app",3],["gfxctx",3]]],[[["gfxctx",3]]],[[["tripmode",4]],["bool",15]],[[],["bool",15]],[[["tripmode",4]],["bool",15]],[[],["bool",15]],[[["eventctx",3],["app",3],["actions",3],["sandboxcontrols",3]],[["option",4],["transition",4]]],[[["app",3],["gfxctx",3]]],[[["app",3],["eventctx",3]]],[[],["bool",15]],[[["eventctx",3],["app",3],["actions",3],["sandboxcontrols",3]],[["option",4],["transition",4]]],[[["app",3],["gfxctx",3]]],[[["app",3],["eventctx",3]]],[[["eventctx",3],["app",3],["actions",3],["sandboxcontrols",3]],[["option",4],["transition",4]]],[[["app",3],["gfxctx",3]]],[[["app",3],["eventctx",3]]],[[["app",3]]],[[["eventctx",3],["app",3],["actions",3],["sandboxcontrols",3]],[["option",4],["transition",4]]],[[["app",3],["gfxctx",3]]],[[["app",3],["eventctx",3]]],[[["eventctx",3],["app",3],["actions",3],["sandboxcontrols",3]],[["option",4],["transition",4]]],[[["app",3],["gfxctx",3]]],[[["app",3]]],[[["app",3],["eventctx",3]]],[[["eventctx",3],["app",3],["actions",3],["sandboxcontrols",3]],[["option",4],["transition",4]]],[[["app",3],["gfxctx",3]]],[[["app",3],["eventctx",3]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["problem",4]]],[[],["flags",3]],[[],["source",4]],[[],["recordedstorymap",3]],[[],["bundleedits",3]],[[],["opentrip",3]],[[],["tab",4]],[[],["dataoptions",3]],[[],["seir",4]],[[],["options",3]],[[],["loc",4]],[[],["options",3]],[[],["options",3]],[[],["blockselection",4]],[[],["problemtype",4]],[[],["dashtab",4]],[[],["tutorialpointer",3]],[[],["task",4]],[[],["gameplaymode",4]],[[],["speedsetting",4]],[[["loc",4]],["ordering",4]],[[["tutorialpointer",3]],["ordering",4]],[[["gameplaymode",4]],["ordering",4]],[[["filters",3]],["bool",15]],[[["filters",3]],["bool",15]],[[["bundleedits",3]],["bool",15]],[[["bundleedits",3]],["bool",15]],[[["opentrip",3]],["bool",15]],[[["dataoptions",3]],["bool",15]],[[["dataoptions",3]],["bool",15]],[[["seir",4]],["bool",15]],[[["options",3]],["bool",15]],[[["options",3]],["bool",15]],[[["loc",4]],["bool",15]],[[["loc",4]],["bool",15]],[[["options",3]],["bool",15]],[[["options",3]],["bool",15]],[[["options",3]],["bool",15]],[[["options",3]],["bool",15]],[[["blockselection",4]],["bool",15]],[[["blockselection",4]],["bool",15]],[[["filter",3]],["bool",15]],[[["filter",3]],["bool",15]],[[["problemtype",4]],["bool",15]],[[["dashtab",4]],["bool",15]],[[["tutorialpointer",3]],["bool",15]],[[["tutorialpointer",3]],["bool",15]],[[["task",4]],["bool",15]],[[["gameplaymode",4]],["bool",15]],[[["gameplaymode",4]],["bool",15]],[[["speedsetting",4]],["bool",15]],[[["loc",4]],[["ordering",4],["option",4]]],[[["tutorialpointer",3]],[["ordering",4],["option",4]]],[[["task",4]],[["ordering",4],["option",4]]],[[["gameplaymode",4]],[["ordering",4],["option",4]]],[[["speedsetting",4]],[["ordering",4],["option",4]]],[[],["colorscale",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[],["drawbaselayer",4]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[],["drawbaselayer",4]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[],["drawbaselayer",4]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[],["drawbaselayer",4]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[],["drawbaselayer",4]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[],["drawbaselayer",4]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[],["drawbaselayer",4]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[],["drawbaselayer",4]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[],["drawbaselayer",4]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[],["drawbaselayer",4]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[],["drawbaselayer",4]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[],["drawbaselayer",4]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[],["map",3]],[[],["sim",3]],[[],["colorscheme",3]],[[],["colorscheme",3]],[[],["drawmap",3]],[[],["drawmap",3]],[[],["options",3]],[[],["options",3]],[[["timer",3],["eventctx",3],["map",3]]],[[["drawoptions",3],["gfxctx",3]]],[[["eventctx",3],["f64",15],["id",4],["pt2d",3],["option",4],["option",4]],[["state",8],["box",3]]],[[]],[[["gfxctx",3]]],[[["canvas",3]]],[[["canvas",3]]],[[]],[[["app",3]],["bool",15]],[[["app",3]],["bool",15]],[[["app",3],["gfxctx",3]]],[[["app",3],["eventctx",3]],["panel",3]],[[["app",3],["eventctx",3]],["widget",3]],[[["app",3],["eventctx",3]],["widget",3]],[[["str",15],["eventctx",3],["app",3]],[["option",4],["transition",4]]],[[["panel",3],["eventctx",3],["app",3]]],[[["sim",3],["map",3]],["bool",15]],[[["eventctx",3],["app",3],["panel",3],["str",15]],[["transition",4],["app",3]]],[[["eventctx",3],["app",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3],["panel",3],["str",15]],[["transition",4],["app",3]]],[[["panel",3],["eventctx",3],["app",3]],[["option",4],["transition",4]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[],["drawbaselayer",4]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3],["panel",3],["str",15]],[["transition",4],["app",3]]],[[["eventctx",3],["app",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3],["panel",3],["str",15]],[["transition",4],["app",3]]],[[["panel",3],["eventctx",3],["app",3]],[["option",4],["transition",4]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[],["drawbaselayer",4]],[[["eventctx",3],["app",3],["panel",3],["str",15]],[["transition",4],["app",3]]],[[["eventctx",3],["app",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3],["panel",3],["str",15]],[["transition",4],["app",3]]],[[["eventctx",3],["app",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3],["panel",3],["str",15]],[["transition",4],["app",3]]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3],["panel",3],["str",15]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]],[[["eventctx",3],["app",3],["panel",3],["str",15]],[["transition",4],["app",3]]],[[["app",3],["gfxctx",3]]]],"p":[[3,"App"],[3,"ShowLayers"],[8,"ShowObject"],[3,"ShowEverything"],[3,"Flags"],[3,"PerMap"],[3,"SessionState"],[3,"PerObjectActions"],[3,"FindDelayedIntersections"],[3,"CutsceneBuilder"],[4,"Layout"],[3,"Scene"],[3,"CutscenePlayer"],[3,"ShowMessage"],[3,"Challenge"],[3,"HighScore"],[3,"ChallengesPicker"],[3,"RoadSelector"],[4,"Mode"],[13,"Route"],[3,"Warping"],[3,"DebugWarp"],[3,"CommonState"],[3,"Viewer"],[3,"Floodfiller"],[4,"Source"],[3,"ObjectDebugger"],[3,"PathCounter"],[3,"PolygonDebugger"],[4,"Item"],[3,"RouteExplorer"],[3,"AllRoutesExplorer"],[3,"PathCostDebugger"],[3,"BulkSelect"],[3,"UberTurnPicker"],[3,"UberTurnViewer"],[3,"DebugMode"],[3,"SearchResults"],[3,"ScreenshotTest"],[3,"CollisionsViewer"],[3,"Filters"],[4,"Dataviz"],[13,"Individual"],[13,"Aggregated"],[3,"MapspaceTooltips"],[3,"PopularDestinations"],[3,"ViewKML"],[3,"Object"],[3,"PolygonEditor"],[3,"ScenarioManager"],[3,"StoryMapEditor"],[4,"Mode"],[3,"RecordedStoryMap"],[3,"StoryMap"],[3,"Marker"],[3,"Lasso"],[3,"DevToolsMode"],[3,"SelectSegments"],[3,"RoadEditor"],[3,"RouteEditor"],[3,"StopSignEditor"],[3,"ChangeDuration"],[3,"Record"],[3,"Snapper"],[3,"ShowAbsolute"],[3,"ShowRelative"],[3,"TuneRelative"],[3,"SignalPicker"],[3,"PreviewTrafficSignal"],[3,"TrafficSignalEditor"],[3,"BundleEdits"],[3,"ZoneEditor"],[3,"EditMode"],[3,"SaveEdits"],[3,"LoadEdits"],[3,"ConfirmDiscard"],[3,"OpenTrip"],[3,"InfoPanel"],[4,"Tab"],[3,"Details"],[8,"ContextualActions"],[3,"DataOptions"],[3,"SteepStreets"],[3,"ElevationContours"],[3,"Favorites"],[3,"ShowFavorites"],[3,"BikeActivity"],[3,"Static"],[3,"CongestionCaps"],[3,"Pandemic"],[4,"Seir"],[3,"Options"],[3,"Occupancy"],[4,"Loc"],[3,"Efficiency"],[3,"PopulationMap"],[3,"Options"],[3,"ProblemMap"],[3,"Options"],[3,"Backpressure"],[3,"Throughput"],[3,"CompareThroughput"],[3,"TrafficJams"],[3,"Jam"],[3,"Delay"],[3,"TransitNetwork"],[8,"Layer"],[4,"LayerOutcome"],[3,"PickLayer"],[3,"Proposals"],[3,"TitleScreen"],[3,"MainMenu"],[3,"About"],[3,"Screensaver"],[3,"CommuterPatterns"],[4,"BlockSelection"],[13,"Locked"],[3,"PanelState"],[3,"Block"],[3,"Filter"],[4,"BorderType"],[3,"Loop"],[3,"ActiveTraffic"],[3,"TransitRoutes"],[3,"ParkingOverhead"],[3,"Entry"],[3,"Filters"],[3,"RiskSummaries"],[3,"Filter"],[3,"RectangularSelector"],[3,"TrafficSignalDemand"],[3,"Demand"],[3,"TravelTimes"],[3,"Filter"],[4,"ProblemType"],[8,"TripProblemFilter"],[3,"CLEAR_COLOR_SCALE"],[3,"Matrix"],[3,"MatrixOptions"],[3,"TripTable"],[3,"FinishedTrip"],[3,"CancelledTrip"],[3,"UnfinishedTrip"],[3,"Filters"],[4,"DashTab"],[3,"Actdev"],[3,"OptimizeCommute"],[3,"FixTrafficSignals"],[3,"Input"],[3,"AgentSpawner"],[3,"Freeform"],[3,"ChangeScenario"],[3,"PlayScenario"],[3,"EditScenarioModifiers"],[3,"ChangeMode"],[3,"Tutorial"],[3,"TutorialPointer"],[4,"Task"],[3,"Stage"],[3,"Message"],[3,"TutorialState"],[4,"GameplayMode"],[8,"GameplayState"],[4,"LoadScenario"],[3,"FinalScore"],[3,"RoutePreview"],[3,"TrafficRecorder"],[3,"TimePanel"],[4,"SpeedSetting"],[3,"JumpToTime"],[3,"TimeWarpScreen"],[3,"SandboxMode"],[3,"SandboxControls"],[3,"Actions"],[4,"LoadStage"],[3,"SandboxLoader"],[3,"Actions"],[3,"About"],[3,"MinimapController"],[3,"BackToMainMenu"]]},\
"generate_houses":{"doc":"Procedurally generates houses along empty residential …","t":[5,5,5,5],"n":["main","generate_buildings_on_empty_residential_roads","rand_dist","import_map"],"q":["generate_houses","","",""],"d":["","","",""],"i":[0,0,0,0],"f":[[[]],[[["timer",3],["map",3],["xorshiftrng",3]],[["vec",3],["polygon",3]]],[[["f64",15],["xorshiftrng",3]],["distance",3]],[[["option",4],["timer",3],["bool",15],["string",3]],["map",3]]],"p":[]},\
"geojson_to_osmosis":{"doc":"","t":[5,5],"n":["main","extract_boundaries"],"q":["geojson_to_osmosis",""],"d":["Reads GeoJSON input from STDIN, extracts a polygon from …",""],"i":[0,0],"f":[[[],["result",6]],[[["geojson",4]],[["result",6],["vec",3]]]],"p":[]},\
"geom":{"doc":"","t":[0,3,12,18,11,11,11,11,11,11,11,11,11,11,11,11,0,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,11,11,11,11,11,11,11,11,11,0,17,3,12,12,11,11,11,11,11,11,11,0,3,12,18,11,11,11,11,11,11,11,11,11,11,11,0,3,12,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,12,12,11,11,11,11,5,0,3,12,12,11,11,11,11,11,11,11,11,11,11,0,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,12,12,11,0,3,12,11,11,11,0,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,11,11,5,5,5,0,17,4,13,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,0,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,11,0,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,12,18,11,11,11,11,11,11,11,0,4,13,13,13,13,13,13,11,8,10,10,10,3,12,12,12,12,11,11,11,11,11,11,11,11,0,3,12,18,11,11,11,11,11,11,11,11,11,11,11,3,12,3,12,12,12,12,3,12,12,12,12,3,12,12,3,12,3,12,3,12,12,3,12,12,3,12,12,3,12,12,3,12,3,12,12,12,3,12,12,12,4,13,3,12,12,3,12,12,3,12,12,3,12,3,12,8,10,10,10,3,12,12,12,12,4,13,13,13,13,13,13,3,12,17,5,3,12,12,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["angle","Angle","0","ZERO","new_rads","degrees","opposite","invert_y","rotate_degs","normalized_radians","normalized_degrees","simple_shortest_rotation_towards","shortest_rotation_towards","approx_eq","reorient","average","bounds","Bounds","min_x","min_y","max_x","max_y","new","zero","from","update","union","add_buffer","contains","as_bbox","get_rectangle","width","height","center","GPSBounds","min_lon","min_lat","max_lon","max_lat","new","from","update","contains","get_max_world_pt","to_bounds","try_convert","convert","convert_back","circle","TRIANGLES_PER_CIRCLE","Circle","center","radius","new","contains_pt","get_bounds","to_polygon","to_partial_polygon","to_ring","to_outline","distance","Distance","0","ZERO","meters","const_meters","inches","miles","centimeters","feet","abs","sqrt","inner_meters","to_feet","to_string","duration","Duration","0","ZERO","EPSILON","seconds","minutes","hours","f64_minutes","const_seconds","to_u64","from_u64","inner_seconds","get_parts","parse","epsilon_eq","realtime_elapsed","round_up","num_minutes_rounded_up","make_intervals_for_max","to_string","find_closest","FindClosest","geometries","quadtree","new","add","all_close_pts","closest_pt","pts_to_line_string","gps","LonLat","longitude","latitude","new","x","y","to_pt","gps_dist","fast_dist","read_osmosis_polygon","write_osmosis_polygon","center","parse_wkt_linestring","line","Line","0","1","new","must_new","infinite","pt1","pt2","points","to_polyline","make_polygons","length","intersection","crosses","intersection_infinite","shift_right","shift_left","shift_either_direction","reverse","angle","dist_along","must_dist_along","unbounded_dist_along","unbounded_percent_along","percent_along","slice","middle","contains_pt","dist_along_of_point","percent_along_of_point","is_counter_clockwise","InfiniteLine","0","1","intersection","percent","Percent","0","inner","int","of","polygon","Polygon","points","indices","rings","buggy_new","with_holes","from_rings","from_geojson","precomputed","from_triangle","triangles","raw_for_rendering","contains_pt","get_bounds","transform","translate","scale","scale_xy","rotate","rotate_around","points","into_points","into_ring","center","rectangle","rectangle_centered","rectangle_two_corners","maybe_rounded_rectangle","pill","rounded_rectangle","union","union_all","intersection","convex_hull","concave_hull","polylabel","intersects","to_outline","strip_rings","area","clip_polyline","clip_ring","to_geojson","from_geojson_bytes","Triangle","pt1","pt2","pt3","new","contains_pt","to_geo","from_multi","downsize","polyline","MITER_THRESHOLD","ArrowCap","Triangle","PolyLine","pts","length","new","must_new","unchecked_new","deduping_new","to_thick_ring","to_thick_boundary","reversed","extend","must_extend","must_push","append","points","into_points","lines","length","slice","exact_slice","maybe_exact_slice","first_half","second_half","dist_along","must_dist_along","middle","first_pt","last_pt","first_line","last_line","shift_right","must_shift_right","shift_left","must_shift_left","shift_with_corrections","shift_with_sharp_angles","make_polygons","make_polygons_with_miter_threshold","exact_dashed_polygons","dashed_lines","maybe_make_arrow","make_arrow","make_double_arrow","dashed_arrow","intersection","intersection_infinite","get_slice_ending_at","get_slice_starting_at","dist_along_of_point","trim_to_endpts","get_bounds","extend_to_length","to_geojson","project_pt","overall_angle","fix_angles","to_set","pts_to_line_string","pt","Pt2D","x","y","new","zero","approx_eq","to_gps","x","y","project_away","raw_dist_to","dist_to","fast_dist","angle_to","offset","center","approx_dedupe","find_pts_between","to_hashable","HashablePt2D","x_nan","y_nan","to_pt2d","ring","Ring","pts","new","must_new","to_outline","into_polygon","points","into_points","all_intersections","get_both_slices_btwn","get_shorter_slice_btwn","split_points","contains_pt","to_geojson","translate","speed","Speed","0","ZERO","meters_per_second","const_meters_per_second","miles_per_hour","km_per_hour","from_dist_time","inner_meters_per_second","to_string","stats","Statistic","Min","Mean","P50","P90","P99","Max","all","HgramValue","hgram_zero","to_u64","from_u64","Histogram","count","histogram","min","max","new","add","remove","describe","percentile","select","count","seems_eq","time","Time","0","START_OF_DAY","seconds_since_midnight","get_parts","get_hours","ampm_tostring","as_filename","parse","percent_of","to_percent","inner_seconds","clamped_sub","round_seconds","Angle","0","Bounds","min_x","min_y","max_x","max_y","GPSBounds","min_lon","min_lat","max_lon","max_lat","Circle","center","radius","Distance","0","Duration","0","FindClosest","geometries","quadtree","LonLat","longitude","latitude","InfiniteLine","0","1","Line","0","1","Percent","0","Polygon","points","indices","rings","Triangle","pt1","pt2","pt3","ArrowCap","Triangle","PolyLine","pts","length","HashablePt2D","x_nan","y_nan","Pt2D","x","y","Ring","pts","Speed","0","HgramValue","hgram_zero","to_u64","from_u64","Histogram","count","histogram","min","max","Statistic","Min","Mean","P50","P90","P99","Max","Time","0","EPSILON_DIST","trim_f64","UnitFmt","round_durations","metric","CornerRadii","top_left","top_right","bottom_right","bottom_left","uniform","zero","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","hgram_zero","to_u64","from_u64","from","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","cmp","cmp","cmp","cmp","cmp","cmp","cmp","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","eq","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","div","div","div","div","div","div","rem","sub","sub","sub","sub","sub","add","add","add","add","add","mul","mul","mul","mul","mul","neg","neg","neg","add_assign","add_assign","add_assign","sub_assign","sub_assign","hash","hash","sum","sum","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize"],"q":["geom","geom::angle","","","","","","","","","","","","","","","geom","geom::bounds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom","geom::circle","","","","","","","","","","","geom","geom::distance","","","","","","","","","","","","","","geom","geom::duration","","","","","","","","","","","","","","","","","","","","geom","geom::find_closest","","","","","","","","geom","geom::gps","","","","","","","","","","","","","geom","geom::line","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom","geom::percent","","","","","geom","geom::polygon","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom","geom::polyline","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom","geom::pt","","","","","","","","","","","","","","","","","","","","","","","geom","geom::ring","","","","","","","","","","","","","","","geom","geom::speed","","","","","","","","","","geom","geom::stats","","","","","","","","","","","","","","","","","","","","","","","","","geom","geom::time","","","","","","","","","","","","","","geom","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::angle","","","","","","","","","","geom::bounds","","","","","","","","","","","","","","","","","","geom::circle","","","","","","","","","","geom::distance","","","","","","","","","","geom::duration","","","","","","","","","","geom::find_closest","","","","","","","geom::gps","","","","","","","","","","geom::line","","","","","","","","","","","","","","","","","","","","geom::percent","","","","","","","","","","geom::polygon","","","","","","","","","","","","","","","","","","","geom::polyline","","","","","","","","","","","","","","","","","geom::pt","","","","","","","","","","","","","","","","","","","geom::ring","","","","","","","","","","geom::speed","","","","","","","","","geom::stats","","","","","","","","","","","","","","","","","","","geom::time","","","","","","","","","","geom","","","","","","","","","","","","","","","","","","geom::duration","","","geom::polygon","geom::pt","","geom::ring","geom","geom::angle","geom::bounds","","geom::circle","geom::distance","geom::duration","geom::gps","geom::line","","geom::percent","geom::polygon","","geom::polyline","geom::pt","","geom::ring","geom::speed","geom::stats","","geom::time","geom","","geom::distance","geom::duration","geom::stats","geom","geom::distance","geom::duration","geom::gps","geom::pt","geom::speed","geom::stats","geom::time","geom::angle","","geom::bounds","","","","geom::distance","","geom::duration","","geom::gps","","geom::line","","geom::percent","","geom::polygon","","geom::polyline","","geom::pt","","","geom::ring","","geom::speed","","geom::stats","geom::time","","geom::angle","geom::distance","geom::duration","geom::gps","geom::pt","geom::speed","geom::stats","geom::time","geom::angle","geom::bounds","","geom::circle","geom::distance","geom::duration","geom::gps","geom::line","","geom::polygon","","geom::polyline","geom::pt","","geom::ring","geom::speed","geom::time","geom","geom::angle","geom::circle","geom::distance","geom::duration","geom::gps","geom::line","","geom::percent","geom::polygon","geom::polyline","geom::pt","geom::ring","geom::stats","geom::time","geom::distance","","","geom::duration","","geom::speed","geom::duration","geom::distance","geom::duration","geom::speed","geom::time","","geom::angle","geom::distance","geom::duration","geom::speed","geom::time","geom::distance","geom::duration","","geom::speed","","geom::angle","geom::distance","geom::speed","geom::distance","geom::duration","geom::time","geom::distance","geom::duration","geom::pt","geom::time","geom::distance","geom::duration","geom::angle","geom::bounds","","geom::circle","geom::distance","geom::duration","geom::gps","geom::line","","geom::polygon","geom::polyline","geom::pt","geom::ring","geom::speed","geom::stats","geom::time","geom","geom::angle","geom::bounds","","geom::circle","geom::distance","geom::duration","geom::gps","geom::line","","geom::polygon","geom::polyline","geom::pt","geom::ring","geom::speed","geom::stats","geom::time","geom"],"d":["","An angle, stored in radians.","","","Create an angle in radians.","Create an angle in degrees.","Invert the direction of this angle.","","Rotates this angle by some degrees.","Returns [0, 2pi)","Returns [0, 360)","Returns [-180, 180]","Logically this returns [-180, 180], but keep in mind when …","True if this angle is within some degrees of another, …","I don’t know how to describe what this does. Use for …","Calculates the average of some angles.","","Represents a rectangular boundary of <code>Pt2D</code> points.","","","","","A boundary including no points.","","Create a boundary covering some points.","Update the boundary to include this point.","Unions two boundaries.","Expand the existing boundary by some distance evenly on …","True if the point is within the boundary.","Converts the boundary to the format used by <code>aabb_quadtree</code>.","Creates a rectangle covering this boundary.","The width of this boundary.","The height of this boundary.","The center point of this boundary.","Represents a rectangular boundary of <code>LonLat</code> points. After …","","","","","A boundary including no points.","Create a boundary covering some points.","Update the boundary to include this point.","True if the point is within the boundary.","The bottom-right corner of the boundary, in map-space.","Converts the boundary to map-space.","Convert all points to map-space, failing if any points …","Convert all points to map-space. The points may be …","Convert map-space points back to <code>LonLat</code>s. This is only …","","","A circle, defined by a center and radius.","","","Creates a circle.","True if the point is inside the circle.","Get the boundary containing this circle.","Renders the circle as a polygon.","Renders some percent, between [0, 1], of the circle as a …","Returns the ring around the circle.","Creates an outline around the circle, strictly contained …","","A distance, in meters. Can be negative.","","","Creates a distance in meters.","","Creates a distance in inches.","Creates a distance in miles.","Creates a distance in centimeters.","Creates a distance in feet.","Returns the absolute value of this distance.","Returns the square root of this distance.","Returns the distance in meters. Prefer to work with …","Returns the distance in feet.","Describes the distance according to formatting rules.","","A duration, in seconds. Can be negative.","","","","Creates a duration in seconds.","Creates a duration in minutes.","Creates a duration in hours.","Creates a duration in minutes.","","","","Returns the duration in seconds. Prefer working in …","Splits the duration into (hours, minutes, seconds, …","Parses a duration such as “3:00” to …","If two durations are within this amount, they’ll print …","Returns the duration elapsed from this moment in real …","Rounds a duration up to the nearest whole number multiple.","Returns the duration as a number of minutes, rounded up.","Returns (rounded max, the boundaries in number of minutes)","Describes the duration according to formatting rules.","","A quad-tree to quickly find the closest points to some …","","","Creates the quad-tree, limited to points contained in the …","Add an object to the quadtree, remembering some key …","For every object within some distance of a query point, …","Finds the closest point on the existing geometry to the …","","","Represents a (longitude, latitude) point.","","","Note the order of arguments!","Returns the longitude of this point.","Returns the latitude of this point.","Transform this to a world-space point. Can go out of …","Returns the Haversine distance to another point.","Pretty meaningless units, for comparing distances very …","Parses a file in the …","Writes a set of points to a file in the …","Finds the average of a set of coordinates.","Parses a WKT-style line-string into a list of coordinates.","","A line segment.","","","Creates a line segment between two points. None if the …","Equivalent to <code>Line::new(pt1, pt2).unwrap()</code>. Use this to …","Returns an infinite line passing through this line’s …","Returns the first point in this line segment.","Returns the second point in this line segment.","Returns the two points in this line segment.","Returns a polyline containing these two points.","Returns a thick line segment.","Length of the line segment","If two line segments intersect – including endpoints –…","Determine if two line segments intersect, but more so …","If the line segment intersects with an infinite line – …","Perpendicularly shifts the line over to the right. Width …","Perpendicularly shifts the line over to the left. Width …","Perpendicularly shifts the line to the right if positive …","Returns a reversed line segment","The angle of the line segment, from the first to the …","Returns a point along the line segment, unless the …","Equivalent to <code>self.dist_along(dist).unwrap()</code>. Use this to …","","","","","","","","","","","","","Fails for parallel lines.","","Most of the time, [0, 1]. But some callers may go outside …","","","","","","","","Groups of three indices make up the triangles","If the polygon has holes, explicitly store all the rings …","","","","","","","","","Does this polygon contain the point either in the …","","","","","","","","The order of these points depends on the constructor! The …","","","","Top-left at the origin. Doesn’t take Distance, because …","","","Top-left at the origin. Doesn’t take Distance, because …","A rectangle, two sides of which are fully rounded …","Top-left at the origin. Doesn’t take Distance, because …","","","","","","","Do two polygons intersect at all?","Creates the outline around the polygon, with the …","Remove the internal rings used for to_outline. This is …","Usually m^2, unless the polygon is in screen-space","Doesn’t handle multiple crossings in and out.","","If the polygon is just a single outer ring, produces a …","Extracts all polygons from raw bytes representing a …","","","","","","","","","","","","","","","","","","","Doesn’t check for duplicates. Use at your own risk.","First dedupes adjacent points","Like make_polygons, but make sure the points actually …","","","","","","One or both args might be empty.","","","","","Returns the excess distance left over from the end","No excess leftover distance allowed.","","","","","","","","","","","","","","","","","The resulting polygon is manually triangulated and may …","The resulting polygon is manually triangulated and may …","","Don’t draw the dashes too close to the ends.","Fail if the length is too short.","If the length is too short, just give up and make the …","","","Also return the angle of the line where the hit was found","","Panics if the pt is not on the polyline. Returns None if …","Returns None if the point is the last point.","","","","If the current line is at least this long, return it. …","Produces a GeoJSON linestring, optionally mapping the …","Returns the point on the polyline closest to the query.","Returns the angle from the start to end of this polyline.","","","","","This represents world-space in meters.","","","","","","Can go out of bounds.","","","","","","Pretty meaningless units, for comparing distances very …","","","","","","","This represents world space, NOT LonLat.","","","","","Maybe a misnomer, but like a PolyLine, but closed.","","","","Draws the ring with some thickness, with half of it …","","","","Be careful with the order of results. Hits on an earlier …","","","Extract all PolyLines and Rings. Doesn’t handle crazy …","","Produces a GeoJSON polygon, optionally mapping the …","Translates the ring by a fixed offset.","","In meters per second. Can be negative.","","","","","","","","","Describes the speed according to formatting rules.","","","","","","","","","","","","","","","","","","","","","","","None if empty","","","Could implement PartialEq, but be a bit more clear how …","","In seconds since midnight. Can’t be negative.","","","","(hours, minutes, seconds, centiseconds)","Rounded down. 6:59:00 is hour 6.","","","","","","For RNG range generation. Don’t abuse.","","","An angle, stored in radians.","","Represents a rectangular boundary of <code>Pt2D</code> points.","","","","","Represents a rectangular boundary of <code>LonLat</code> points. After …","","","","","A circle, defined by a center and radius.","","","A distance, in meters. Can be negative.","","A duration, in seconds. Can be negative.","","A quad-tree to quickly find the closest points to some …","","","Represents a (longitude, latitude) point.","","","","","","A line segment.","","","Most of the time, [0, 1]. But some callers may go outside …","","","","Groups of three indices make up the triangles","If the polygon has holes, explicitly store all the rings …","","","","","","","","","","This represents world space, NOT LonLat.","","","This represents world-space in meters.","","","Maybe a misnomer, but like a PolyLine, but closed.","","In meters per second. Can be negative.","","","","","","","","","","","","","","","","","","In seconds since midnight. Can’t be negative.","","","Reduce the precision of an f64. This helps ensure …","Specifies how to stringify different geom objects.","Round <code>Duration</code>s to a whole number of seconds.","Display in metric; US imperial otherwisei":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,4,4,4,4,4,4,4,4,4,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,7,7,7,7,7,7,0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,10,10,10,0,0,11,11,11,11,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,13,13,13,13,13,0,0,0,0,0,0,14,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,17,17,17,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,19,19,19,19,19,19,19,19,19,0,0,20,20,20,20,20,20,20,0,21,21,21,0,22,22,22,22,22,22,22,22,22,22,22,22,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,0,1,0,2,2,2,2,0,3,3,3,3,0,4,4,0,5,0,6,0,7,7,0,8,8,0,10,10,0,9,9,0,11,0,12,12,12,0,13,13,13,0,14,0,15,15,0,17,17,0,16,16,0,18,0,19,0,21,21,21,0,22,22,22,22,0,20,20,20,20,20,20,0,23,0,0,0,24,24,0,25,25,25,25,25,25,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,6,6,6,12,16,16,18,25,1,2,3,4,5,6,8,9,10,11,12,13,15,16,17,18,19,20,22,23,24,25,5,6,22,25,5,6,8,17,19,20,23,1,1,2,2,3,3,5,5,6,6,8,8,9,9,11,11,12,12,15,15,16,17,17,18,18,19,19,20,23,23,1,5,6,8,17,19,20,23,1,2,3,4,5,6,8,9,10,12,13,15,16,17,18,19,23,25,1,4,5,6,8,9,10,11,12,15,16,18,20,23,5,5,5,6,6,19,6,5,6,19,23,23,1,5,6,19,23,5,6,6,19,19,1,5,19,5,6,23,5,6,17,23,5,6,1,2,3,4,5,6,8,9,10,12,15,16,18,19,20,23,24,1,2,3,4,5,6,8,9,10,12,15,16,18,19,20,23,24],"f":[null,null,null,null,[[["f64",15]],["angle",3]],[[["f64",15]],["angle",3]],[[],["angle",3]],[[],["angle",3]],[[["f64",15]],["angle",3]],[[],["f64",15]],[[],["f64",15]],[[["angle",3]],["f64",15]],[[["angle",3]],["angle",3]],[[["f64",15],["angle",3]],["bool",15]],[[],["angle",3]],[[["angle",3],["vec",3]],["angle",3]],null,null,null,null,null,null,[[],["bounds",3]],[[]],[[],["bounds",3]],[[["pt2d",3]]],[[["bounds",3]]],[[["distance",3]]],[[["pt2d",3]],["bool",15]],[[],["rect",3]],[[],["polygon",3]],[[],["f64",15]],[[],["f64",15]],[[],["pt2d",3]],null,null,null,null,null,[[],["gpsbounds",3]],[[["vec",3],["lonlat",3]],["gpsbounds",3]],[[["lonlat",3]]],[[["lonlat",3]],["bool",15]],[[],["pt2d",3]],[[],["bounds",3]],[[],[["vec",3],["option",4]]],[[],[["vec",3],["pt2d",3]]],[[],[["vec",3],["lonlat",3]]],null,null,null,null,null,[[["distance",3],["pt2d",3]],["circle",3]],[[["pt2d",3]],["bool",15]],[[],["bounds",3]],[[],["polygon",3]],[[["f64",15]],["polygon",3]],[[],["ring",3]],[[["distance",3]],[["polygon",3],["result",6]]],null,null,null,null,[[["f64",15]],["distance",3]],[[["f64",15]],["distance",3]],[[["f64",15]],["distance",3]],[[["f64",15]],["distance",3]],[[["usize",15]],["distance",3]],[[["f64",15]],["distance",3]],[[],["distance",3]],[[],["distance",3]],[[],["f64",15]],[[],["f64",15]],[[["unitfmt",3]],["string",3]],null,null,null,null,null,[[["f64",15]],["duration",3]],[[["usize",15]],["duration",3]],[[["usize",15]],["duration",3]],[[["f64",15]],["duration",3]],[[["f64",15]],["duration",3]],[[],["u64",15]],[[["u64",15]],["duration",3]],[[],["f64",15]],[[]],[[["str",15]],[["result",6],["duration",3]]],[[["duration",3]],["bool",15]],[[["instant",6]],["duration",3]],[[["duration",3]],["duration",3]],[[],["usize",15]],[[["usize",15]]],[[["unitfmt",3]],["string",3]],null,null,null,null,[[["bounds",3]],["findclosest",3]],[[]],[[["distance",3],["pt2d",3]],["vec",3]],[[["distance",3],["pt2d",3]],["option",4]],[[],[["linestring",3],["f64",15]]],null,null,null,null,[[["f64",15]],["lonlat",3]],[[],["f64",15]],[[],["f64",15]],[[["gpsbounds",3]],["pt2d",3]],[[["lonlat",3]],["distance",3]],[[["lonlat",3]],[["f64",15],["notnan",3]]],[[["str",15]],[["result",6],["vec",3]]],[[["str",15]],["result",6]],[[],["lonlat",3]],[[["str",15]],[["vec",3],["option",4]]],null,null,null,null,[[["pt2d",3]],[["option",4],["line",3]]],[[["pt2d",3]],["line",3]],[[],["infiniteline",3]],[[],["pt2d",3]],[[],["pt2d",3]],[[],[["vec",3],["pt2d",3]]],[[],["polyline",3]],[[["distance",3]],["polygon",3]],[[],["distance",3]],[[["line",3]],[["pt2d",3],["option",4]]],[[["line",3]],["bool",15]],[[["infiniteline",3]],[["pt2d",3],["option",4]]],[[["distance",3]],["line",3]],[[["distance",3]],["line",3]],[[["distance",3]],["line",3]],[[],["line",3]],[[],["angle",3]],[[["distance",3]],[["pt2d",3],["option",4]]],[[["distance",3]],["pt2d",3]],[[["distance",3]],["pt2d",3]],[[["f64",15]],["pt2d",3]],[[["f64",15]],[["pt2d",3],["option",4]]],[[["distance",3]],[["option",4],["line",3]]],[[],[["pt2d",3],["option",4]]],[[["pt2d",3]],["bool",15]],[[["pt2d",3]],[["distance",3],["option",4]]],[[["pt2d",3]],[["f64",15],["option",4]]],[[["pt2d",3]],["bool",15]],null,null,null,[[["infiniteline",3]],[["pt2d",3],["option",4]]],null,null,null,[[],["f64",15]],[[["usize",15]],["percent",3]],[[["usize",15]],["percent",3]],null,null,null,null,null,[[["vec",3],["pt2d",3]],["polygon",3]],[[["ring",3],["vec",3]],["polygon",3]],[[["ring",3],["vec",3]],["polygon",3]],[[],[["polygon",3],["result",6]]],[[["vec",3],["usize",15],["pt2d",3],["vec",3]],["polygon",3]],[[["triangle",3]],["polygon",3]],[[],[["vec",3],["triangle",3]]],[[]],[[["pt2d",3]],["bool",15]],[[],["bounds",3]],[[["fn",8]],["polygon",3]],[[["f64",15]],["polygon",3]],[[["f64",15]],["polygon",3]],[[["f64",15]],["polygon",3]],[[["angle",3]],["polygon",3]],[[["angle",3],["pt2d",3]],["polygon",3]],[[],["vec",3]],[[],[["vec",3],["pt2d",3]]],[[],["ring",3]],[[],["pt2d",3]],[[["f64",15]],["polygon",3]],[[["distance",3],["pt2d",3]],["polygon",3]],[[["pt2d",3]],[["polygon",3],["option",4]]],[[["f64",15],["cornerradii",3],["into",8]],[["polygon",3],["option",4]]],[[["f64",15]],["polygon",3]],[[["f64",15],["cornerradii",3],["into",8]],["polygon",3]],[[["polygon",3]],["polygon",3]],[[["polygon",3],["vec",3]],["polygon",3]],[[["polygon",3]],[["polygon",3],["vec",3]]],[[["polygon",3],["vec",3]],["polygon",3]],[[["f64",15],["polygon",3],["vec",3]],["polygon",3]],[[],["pt2d",3]],[[["polygon",3]],["bool",15]],[[["distance",3]],[["polygon",3],["result",6]]],[[],["polygon",3]],[[],["f64",15]],[[["polyline",3]],[["vec",3],["option",4]]],[[["ring",3]],[["vec",3],["option",4]]],[[["option",4],["gpsbounds",3]],["geometry",3]],[[["gpsbounds",3],["bool",15]],[["vec",3],["result",6]]],null,null,null,null,[[["pt2d",3]],["triangle",3]],[[["pt2d",3]],["bool",15]],[[],[["f64",15],["polygon",3]]],[[["f64",15],["multipolygon",3]],[["polygon",3],["vec",3]]],[[["usize",15],["vec",3]],[["vec",3],["u16",15]]],null,null,null,null,null,null,null,[[["vec",3],["pt2d",3]],[["polyline",3],["result",6]]],[[["vec",3],["pt2d",3]],["polyline",3]],[[["vec",3],["pt2d",3]],["polyline",3]],[[["vec",3],["pt2d",3]],[["polyline",3],["result",6]]],[[["distance",3]],["ring",3]],[[["distance",3]],[["polygon",3],["option",4]]],[[],["polyline",3]],[[["polyline",3]],[["polyline",3],["result",6]]],[[["polyline",3]],["polyline",3]],[[["pt2d",3]],["polyline",3]],[[["vec",3],["pt2d",3]],[["vec",3],["result",6]]],[[],["vec",3]],[[],[["vec",3],["pt2d",3]]],[[]],[[],["distance",3]],[[["distance",3]],["result",6]],[[["distance",3]],["polyline",3]],[[["distance",3]],[["polyline",3],["result",6]]],[[],["polyline",3]],[[],["polyline",3]],[[["distance",3]],["result",6]],[[["distance",3]]],[[],["pt2d",3]],[[],["pt2d",3]],[[],["pt2d",3]],[[],["line",3]],[[],["line",3]],[[["distance",3]],[["polyline",3],["result",6]]],[[["distance",3]],["polyline",3]],[[["distance",3]],[["polyline",3],["result",6]]],[[["distance",3]],["polyline",3]],[[["distance",3]],[["polyline",3],["result",6]]],[[["f64",15],["distance",3]],[["vec",3],["pt2d",3]]],[[["distance",3]],["polygon",3]],[[["f64",15],["distance",3]],["polygon",3]],[[["distance",3]],[["polygon",3],["vec",3]]],[[["distance",3]],[["polygon",3],["vec",3]]],[[["distance",3],["arrowcap",4]],[["polygon",3],["option",4]]],[[["distance",3],["arrowcap",4]],["polygon",3]],[[["distance",3],["arrowcap",4]],["polygon",3]],[[["distance",3],["arrowcap",4]],[["polygon",3],["vec",3]]],[[["polyline",3]],["option",4]],[[["infiniteline",3]],[["pt2d",3],["option",4]]],[[["pt2d",3]],[["option",4],["polyline",3]]],[[["pt2d",3]],[["option",4],["polyline",3]]],[[["pt2d",3]],["option",4]],[[["pt2d",3]],["polyline",3]],[[],["bounds",3]],[[["distance",3]],["polyline",3]],[[["option",4],["gpsbounds",3]],["geometry",3]],[[["pt2d",3]],["pt2d",3]],[[],["angle",3]],[[["polyline",3],["polyline",3]],[["polyline",3],["result",6]]],[[]],[[],[["linestring",3],["f64",15]]],null,null,null,null,[[["f64",15]],["pt2d",3]],[[]],[[["distance",3],["pt2d",3]],["bool",15]],[[["gpsbounds",3]],["lonlat",3]],[[],["f64",15]],[[],["f64",15]],[[["distance",3],["angle",3]],["pt2d",3]],[[["pt2d",3]],["f64",15]],[[["pt2d",3]],["distance",3]],[[["pt2d",3]],[["f64",15],["notnan",3]]],[[["pt2d",3]],["angle",3]],[[["f64",15]],["pt2d",3]],[[],["pt2d",3]],[[["vec",3],["distance",3],["pt2d",3]],[["vec",3],["pt2d",3]]],[[["distance",3],["pt2d",3]],[["vec",3],["option",4]]],[[],["hashablept2d",3]],null,null,null,[[],["pt2d",3]],null,null,null,[[["vec",3],["pt2d",3]],[["ring",3],["result",6]]],[[["vec",3],["pt2d",3]],["ring",3]],[[["distance",3]],["polygon",3]],[[],["polygon",3]],[[],["vec",3]],[[],[["vec",3],["pt2d",3]]],[[["polyline",3]],[["vec",3],["pt2d",3]]],[[["pt2d",3]],["option",4]],[[["pt2d",3]],[["option",4],["polyline",3]]],[[],["result",6]],[[["pt2d",3]],["bool",15]],[[["option",4],["gpsbounds",3]],["geometry",3]],[[["f64",15]],["ring",3]],null,null,null,null,[[["f64",15]],["speed",3]],[[["f64",15]],["speed",3]],[[["f64",15]],["speed",3]],[[["f64",15]],["speed",3]],[[["distance",3],["duration",3]],["speed",3]],[[],["f64",15]],[[["unitfmt",3]],["string",3]],null,null,null,null,null,null,null,null,[[],[["vec",3],["statistic",4]]],null,[[]],[[],["u64",15]],[[["u64",15]]],null,null,null,null,null,[[],["histogram",3]],[[]],[[]],[[],["string",3]],[[["f64",15]],["option",4]],[[["statistic",4]],["option",4]],[[],["usize",15]],[[["histogram",3]],["bool",15]],null,null,null,null,[[["f64",15]],["time",3]],[[]],[[],["usize",15]],[[],["string",3]],[[],["string",3]],[[["str",15]],[["time",3],["result",6]]],[[["f64",15]],["time",3]],[[["time",3]],["f64",15]],[[],["f64",15]],[[["duration",3]],["time",3]],[[["f64",15]],["time",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["u64",15]],[[["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["f64",15]],["f64",15]],null,null,null,null,null,null,null,null,[[["f64",15]]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["duration",3]],[[],["u64",15]],[[["u64",15]],["duration",3]],[[["f64",15],["polygon",3]]],[[["f64",15],["coordinate",3]]],[[["f64",15],["point",3]]],[[["linestring",3],["f64",15]]],[[["f64",15]]],[[],["angle",3]],[[],["bounds",3]],[[],["gpsbounds",3]],[[],["circle",3]],[[],["distance",3]],[[],["duration",3]],[[],["lonlat",3]],[[],["line",3]],[[],["infiniteline",3]],[[],["percent",3]],[[],["polygon",3]],[[],["triangle",3]],[[],["polyline",3]],[[],["pt2d",3]],[[],["hashablept2d",3]],[[],["ring",3]],[[],["speed",3]],[[],["statistic",4]],[[],["histogram",3]],[[],["time",3]],[[],["unitfmt",3]],[[],["cornerradii",3]],[[],["distance",3]],[[],["duration",3]],[[],["histogram",3]],[[]],[[["distance",3]],["ordering",4]],[[["duration",3]],["ordering",4]],[[["lonlat",3]],["ordering",4]],[[["hashablept2d",3]],["ordering",4]],[[["speed",3]],["ordering",4]],[[["statistic",4]],["ordering",4]],[[["time",3]],["ordering",4]],[[["angle",3]],["bool",15]],[[["angle",3]],["bool",15]],[[["bounds",3]],["bool",15]],[[["bounds",3]],["bool",15]],[[["gpsbounds",3]],["bool",15]],[[["gpsbounds",3]],["bool",15]],[[["distance",3]],["bool",15]],[[["distance",3]],["bool",15]],[[["duration",3]],["bool",15]],[[["duration",3]],["bool",15]],[[["lonlat",3]],["bool",15]],[[["lonlat",3]],["bool",15]],[[["line",3]],["bool",15]],[[["line",3]],["bool",15]],[[["percent",3]],["bool",15]],[[["percent",3]],["bool",15]],[[["polygon",3]],["bool",15]],[[["polygon",3]],["bool",15]],[[["polyline",3]],["bool",15]],[[["polyline",3]],["bool",15]],[[["pt2d",3]],["bool",15]],[[["hashablept2d",3]],["bool",15]],[[["hashablept2d",3]],["bool",15]],[[["ring",3]],["bool",15]],[[["ring",3]],["bool",15]],[[["speed",3]],["bool",15]],[[["speed",3]],["bool",15]],[[["statistic",4]],["bool",15]],[[["time",3]],["bool",15]],[[["time",3]],["bool",15]],[[["angle",3]],[["ordering",4],["option",4]]],[[["distance",3]],[["ordering",4],["option",4]]],[[["duration",3]],[["ordering",4],["option",4]]],[[["lonlat",3]],[["ordering",4],["option",4]]],[[["hashablept2d",3]],[["ordering",4],["option",4]]],[[["speed",3]],[["ordering",4],["option",4]]],[[["statistic",4]],[["ordering",4],["option",4]]],[[["time",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["distance",3]],["f64",15]],[[["f64",15]],["distance",3]],[[["speed",3]],["duration",3]],[[["duration",3]],["f64",15]],[[["f64",15]],["duration",3]],[[["speed",3]],["f64",15]],[[["duration",3]],["duration",3]],[[["distance",3]],["distance",3]],[[["duration",3]],["duration",3]],[[["speed",3]],["speed",3]],[[["duration",3]],["time",3]],[[["time",3]],["duration",3]],[[["angle",3]],["angle",3]],[[["distance",3]],["distance",3]],[[["duration",3]],["duration",3]],[[["speed",3]],["speed",3]],[[["duration",3]],["time",3]],[[["f64",15]],["distance",3]],[[["f64",15]],["duration",3]],[[["speed",3]],["distance",3]],[[["f64",15]],["speed",3]],[[["duration",3]],["distance",3]],[[],["angle",3]],[[],["distance",3]],[[],["speed",3]],[[["distance",3]]],[[["duration",3]]],[[["duration",3]]],[[["distance",3]]],[[["duration",3]]],[[]],[[]],[[],["distance",3]],[[],["duration",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]]],"p":[[3,"Angle"],[3,"Bounds"],[3,"GPSBounds"],[3,"Circle"],[3,"Distance"],[3,"Duration"],[3,"FindClosest"],[3,"LonLat"],[3,"Line"],[3,"InfiniteLine"],[3,"Percent"],[3,"Polygon"],[3,"Triangle"],[4,"ArrowCap"],[3,"PolyLine"],[3,"Pt2D"],[3,"HashablePt2D"],[3,"Ring"],[3,"Speed"],[4,"Statistic"],[8,"HgramValue"],[3,"Histogram"],[3,"Time"],[3,"UnitFmt"],[3,"CornerRadii"]]},\
"headless":{"doc":"","t":[3,12,3,12,3,12,5,5,5,3,12,12,12,12,12,12,3,12,3,12,3,12,3,12,12,12,12,12,12,3,12,3,12,12,12,12,3,12,3,12,12,12,12,12,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["MAP","__private_field","SIM","__private_field","LOAD","__private_field","main","serve_req","handle_command","FinishedTrip","id","person","duration","distance_crossed","mode","capped","Delays","per_direction","Throughput","per_direction","AgentPositions","agents","AgentPosition","id","trip","person","vehicle_type","pos","distance_crossed","RoadThroughput","counts","TrafficSignalState","current_stage_idx","remaining_time","accepted","waiting","BlockedByGraph","blocked_by","LoadSim","scenario","modifiers","edits","rng_seed","opts","setup","export_geometry","export_all_geometry","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","deref","deref","deref","initialize","initialize","initialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","deserialize"],"q":["headlessd":["","","","","","","","","","","","","","","","","","","","","","","","The agent’s ID","None for buses","None for buses","None for pedestrians","The agent’s current position. For pedestrians, this is …","The distance crossed so far by the agent, in meters. …","","","","","","","","","Each entry indicates that some agent has been stuck in …i":[0,1,0,2,0,3,0,0,0,0,4,4,4,4,4,4,0,5,0,6,0,7,0,8,8,8,8,8,8,0,9,0,10,10,10,10,0,11,0,12,12,12,12,12,12,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,1,2,3,1,2,3,4,5,6,7,8,9,10,11,12],"f":[null,null,null,null,null,null,[[]],[[["body",3],["request",3]]],[[["loadsim",3],["map",3],["hashmap",3],["sim",3],["str",15]],[["result",6],["string",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["timer",3]]],[[["map",3],["intersectionid",3]],["geojson",4]],[[["map",3]],["geojson",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[],["rwlock",3]],[[],["rwlock",3]],[[],["rwlock",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]]],"p":[[3,"MAP"],[3,"SIM"],[3,"LOAD"],[3,"FinishedTrip"],[3,"Delays"],[3,"Throughput"],[3,"AgentPositions"],[3,"AgentPosition"],[3,"RoadThroughput"],[3,"TrafficSignalState"],[3,"BlockedByGraph"],[3,"LoadSim"]]},\
"import_grid2demand":{"doc":"","t":[5,5,5,5,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["main","parse_trips","parse_linestring","parse_time","Record","agent_type","geometry","departure_time","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","fmt","deserialize"],"q":["import_grid2demand","","","","","","","","","","","","","","","","","","","","","",""],"d":["Import a scenario from …","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[[[],["result",6]],[[["string",3]],[["result",6],["vec",3]]],[[["str",15]],["option",4]],[[["string",3]],[["result",6],["time",3]]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[["formatter",3]],["result",6]],[[],["result",4]]],"p":[[3,"Record"]]},\
"import_traffic":{"doc":"","t":[5,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["main","Input","scenario_name","people","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","deserialize"],"q":["import_traffic","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[[[]],null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[],["result",4]]],"p":[[3,"Input"]]},\
"importer":{"doc":"It’s assumed that the importer is run with the current …","t":[0,5,5,3,12,12,5,0,3,12,12,12,12,5,0,3,12,12,12,12,12,12,12,11,0,5,5,5,5,5,3,12,12,3,12,12,5,0,0,3,12,5,5,5,5,5,3,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,3,12,12,12,0,3,12,12,12,5,5,5,5,0,5,5,5,3,12,12,12,12,12,12,12,12,5,5,0,5,5,5,5,5,5,3,12,12,12,12,12,12,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["berlin","import_extra_data","correlate_population","Record","raumid","e_e","distribute_residents","configuration","ImporterConfiguration","osmconvert","unzip","gunzip","gunzip_args","load_configuration","generic","GenericCityImporter","osm_url","map_config","onstreet_parking","public_offstreet_parking","private_offstreet_parking","include_railroads","extra_buildings","osm_to_raw","seattle","input","osm_to_raw","ensure_popdat_exists","adjust_private_parking","add_gtfs_schedules","TripRecord","shape_id","trip_id","StopTimeRecord","trip_id","arrival_time","match_parcels_to_buildings","soundcast","popdat","PopDat","trips","import_data","import_trips","import_parcels","get_purpose","get_mode","RawTrip","opcl","dpcl","deptm","mode","opurp","dpurp","travtime","travdist","hhno","pno","tour","half","tseg","RawParcel","parcelid","hh_p","parkdy_p","parkhr_p","xcoord_p","ycoord_p","OrigTrip","from","to","depart_at","mode","person","seq","purpose","trip_time","trip_dist","Endpoint","pos","osm_building","parcel_id","trips","Trip","from","to","orig","endpoints","other_border","clip_trips","make_weekday_scenario","uk","import_collision_data","generate_scenario","parse_desire_lines","Record","home_zone","work_zone","num_transit1","num_transit2","num_transit3","num_drivers","num_bikers","num_pedestrians","parse_zones","load_study_area","utils","download","download_kml","osmconvert","raw_to_map","main","regenerate_everything","Job","city","osm_to_raw","raw_to_map","scenario","city_overview","only_map","run","oneshot","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","clone","clone","clone","default","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","serialize","serialize","serialize","serialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize"],"q":["importer","importer::berlin","","","","","","importer","importer::configuration","","","","","","importer","importer::generic","","","","","","","","","importer","importer::seattle","","","","","","","","","","","","importer","importer::soundcast","importer::soundcast::popdat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","importer::soundcast","importer::soundcast::trips","","","","","","","","importer","importer::uk","","","","","","","","","","","","","","importer","importer::utils","","","","importer","","","","","","","","","","","importer::berlin","","","","","","","","","","","","","importer::configuration","","","","","","","","","","","","","importer::generic","","","","","","","","","","","","","importer::seattle","","","","","","","","","","","","","","","","","","","","","","","","","","importer::soundcast::popdat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","importer::soundcast::trips","","","","","","","","","","","","","","","importer::uk","","","","","","","","","","","","","importer","","","","","","","","","","","","","importer::soundcast::popdat","","importer::soundcast::trips","importer::configuration","importer::berlin","importer::seattle","","importer::soundcast::popdat","","","","importer::soundcast::trips","importer::uk","importer::generic","importer::soundcast::popdat","","","importer::berlin","importer::configuration","importer::generic","importer::seattle","","importer::soundcast::popdat","","","","","importer::uk"],"d":["","","","","","","","","","","","","","","","Importing a new city can be done just by filling out this …","The URL to a .osm or .osm.pbf file containing the entire …","","","","","OSM railway=rail will be included as light rail if so. …","If provided, read polygons from this GeoJSON file and add …","","","","","Download and pre-process data needed to generate Seattle …","","This import from GTFS:","","","","","","","Match OSM buildings to parcels, scraping the number of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If the output file doesn’t already exist, downloads the …","If the output file doesn’t already exist, downloads the …","Uses osmconvert to clip the input .osm (or .pbf) against …","Converts a RawMap to a Mapi":[0,0,0,0,1,1,0,0,0,2,2,2,2,0,0,0,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,4,4,0,5,5,0,0,0,0,6,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,0,8,8,8,8,8,8,0,9,9,9,9,9,9,9,9,9,0,10,10,10,0,0,11,11,11,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,9,10,11,2,1,4,5,7,8,9,10,11,12,3,6,9,10,1,2,3,4,5,6,7,8,9,10,12],"f":[null,[[["importerconfiguration",3],["rawmap",3],["timer",3]]],[[["string",3],["timer",3]]],null,null,null,[[["map",3],["timer",3]]],null,null,null,null,null,null,[[],["importerconfiguration",3]],null,null,null,null,null,null,null,null,null,[[["mapname",3],["timer",3],["importerconfiguration",3]]],null,[[["importerconfiguration",3],["timer",3]]],[[["importerconfiguration",3],["timer",3],["str",15]]],[[["importerconfiguration",3],["timer",3]]],[[["map",3],["scenario",3]]],[[["map",3]]],null,null,null,null,null,null,[[["map",3],["extrashapes",3],["timer",3]]],null,null,null,null,[[["map",3],["timer",3]],["popdat",3]],[[["map",3],["timer",3]],[["vec",3],["origtrip",3]]],[[["map",3],["timer",3]]],[[["str",15]],["trippurpose",4]],[[["str",15]],["tripmode",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["map",3],["pathconstraints",4],["endpoint",3],["hashmap",3],["option",4]],["option",4]],[[["map",3],["pathconstraints",4],["endpoint",3],["hashmap",3]],[["option",4],["intersectionid",3]]],[[["map",3],["timer",3],["popdat",3]],[["trip",3],["vec",3]]],[[["map",3],["timer",3],["popdat",3]],["scenario",3]],null,[[["importerconfiguration",3],["rawmap",3],["timer",3]]],[[["map",3],["importerconfiguration",3],["timer",3]]],[[["string",3]],[["result",6],["vec",3]]],null,null,null,null,null,null,null,null,null,[[["string",3],["gpsbounds",3]],[["result",6],["hashmap",3]]],[[["map",3]],[["polygon",3],["result",6]]],null,[[["importerconfiguration",3],["string",3],["str",15]]],[[["string",3],["gpsbounds",3],["bool",15],["timer",3],["str",15]]],[[["string",3],["importerconfiguration",3]]],[[["timer",3],["mapname",3],["rawtomapoptions",3]],["map",3]],[[]],[[["usize",15],["importerconfiguration",3]]],null,null,null,null,null,null,null,[[["importerconfiguration",3],["timer",3],["rawtomapoptions",3]]],[[["string",3],["option",4],["bool",15],["rawtomapoptions",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[],["origtrip",3]],[[],["endpoint",3]],[[],["trip",3]],[[],["importerconfiguration",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]]],"p":[[3,"Record"],[3,"ImporterConfiguration"],[3,"GenericCityImporter"],[3,"TripRecord"],[3,"StopTimeRecord"],[3,"PopDat"],[3,"RawTrip"],[3,"RawParcel"],[3,"OrigTrip"],[3,"Endpoint"],[3,"Trip"],[3,"Record"],[3,"Job"]]},\
"json_to_binary_map":{"doc":"","t":[5],"n":["main"],"q":["json_to_binary_map"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"kml":{"doc":"","t":[3,12,3,12,12,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ExtraShapes","shapes","ExtraShape","points","attributes","load","recurse","parse_pt","load_csv","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","clone","fmt","serialize","serialize","deserialize","deserialize"],"q":["kml","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Some dataset imported from KML, CSV, or something else. …","","A single object in the dataset.","The object has a different inferred shape depending on …","Arbitrary key/value pairs associated with this object; no …","Parses a .kml file and returns ExtraShapes. Objects will …","","","Parses a .csv file and returns ExtraShapes. Each record …","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,0,2,2,0,0,0,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,1,2,1,2],"f":[null,null,null,null,null,[[["gpsbounds",3],["string",3],["timer",3],["bool",15]],[["extrashapes",3],["result",6]]],[[["btreemap",3],["gpsbounds",3],["usize",15],["node",3],["bool",15],["vec",3]],["result",6]],[[["str",15]],[["lonlat",3],["option",4]]],[[["gpsbounds",3],["string",3],["timer",3]],[["extrashapes",3],["result",6]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["extrashape",3]],[[["formatter",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]]],"p":[[3,"ExtraShapes"],[3,"ExtraShape"]]},\
"map_editor":{"doc":"The map_editor renders and lets you edit RawMaps, which …","t":[0,3,12,12,11,0,17,17,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,13,5,5,0,8,10,3,12,12,11,3,12,12,12,3,12,12,12,11,11,11,11,11,11,11,3,12,3,12,12,12,4,13,13,13,13,13,13,13,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["edit","EditRoad","r","show_direction","new_state","model","INTERSECTION_RADIUS","BUILDING_LENGTH","Model","map","showing_pts","world","include_bldgs","intersection_geom","blank","import","export_to_osm","set_boundary","compute_bounds","intersection_added","create_i","move_i","delete_i","toggle_i","show_intersection_geometry","road_added","road_deleted","create_r","delete_r","road_object","show_r_points","stop_showing_pts","move_r_pt","delete_r_pt","insert_r_pt","clear_r_pts","merge_r","toggle_junction","bldg_added","create_b","move_b","delete_b","ID","Building","Intersection","Road","RoadPoint","time_to_id","dump_to_osm","world","ObjectID","zorder","Object","id","geometry","new","WorldObject","unioned_polygon","draw","quadtree_id","World","objects","quadtree","current_selection","new","draw","handle_mouseover","force_set_selection","get_selection","add","delete","App","model","MainState","mode","panel","last_id","Mode","Viewing","MovingIntersection","MovingBuilding","MovingRoadPoint","CreatingRoad","SetBoundaryPt1","SetBoundaryPt2","new","main","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","zorder","clone","eq","ne","fmt","hash","event","draw","dump_before_abort","before_quit","on_click","other_event","draw","draw_baselayer"],"q":["map_editor","map_editor::edit","","","","map_editor","map_editor::model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_editor","map_editor::world","","","","","","","","","","","","","","","","","","","","","map_editor","","","","","","","","","","","","","","","","map_editor::edit","","","","","","","","","","","","","map_editor::model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_editor::world","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_editor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_editor::model","","","","","","map_editor","","","","map_editor::edit","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Express a RawMap as a .osm file. Why not just save the …i":[0,0,1,1,1,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,0,0,0,0,4,0,5,5,5,0,6,6,6,0,7,7,7,7,7,7,7,7,7,7,0,8,0,9,9,9,0,10,10,10,10,10,10,10,9,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,3,3,3,3,3,3,9,9,8,8,1,1,1,1],"f":[null,null,null,null,[[["app",3],["originalroad",3],["eventctx",3]],[["box",3],["state",8]]],null,null,null,null,null,null,null,null,null,[[],["model",3]],[[["bool",15],["string",3],["eventctx",3]],["model",3]],[[]],[[["pt2d",3],["eventctx",3]]],[[],["bounds",3]],[[["nodeid",3],["eventctx",3]]],[[["pt2d",3],["eventctx",3]]],[[["nodeid",3],["pt2d",3],["eventctx",3]]],[[["nodeid",3]]],[[["nodeid",3],["eventctx",3]]],[[["bool",15],["eventctx",3]]],[[["originalroad",3],["eventctx",3]]],[[["originalroad",3]]],[[["nodeid",3],["eventctx",3]]],[[["originalroad",3],["eventctx",3]]],[[["originalroad",3]],[["object",3],["id",4]]],[[["originalroad",3],["eventctx",3]]],[[["originalroad",3]]],[[["usize",15],["eventctx",3],["pt2d",3],["originalroad",3]]],[[["originalroad",3],["usize",15],["eventctx",3]]],[[["originalroad",3],["pt2d",3],["eventctx",3]],[["id",4],["option",4]]],[[["originalroad",3],["eventctx",3]]],[[["originalroad",3],["eventctx",3]]],[[["originalroad",3],["eventctx",3]]],[[["osmid",4],["eventctx",3]]],[[["pt2d",3],["eventctx",3]],["id",4]],[[["osmid",4],["pt2d",3],["eventctx",3]]],[[["osmid",4]]],null,null,null,null,null,[[],["i64",15]],[[["rawmap",3]],[["error",3],["result",4]]],null,null,[[],["usize",15]],null,null,null,[[["polygon",3],["color",3]],["object",3]],null,null,null,null,null,null,null,null,[[],["world",3]],[[["fn",8],["gfxctx",3]]],[[["eventctx",3]]],[[]],[[],["option",4]],[[["object",3],["eventctx",3]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[],["usize",15]],[[],["id",4]],[[["id",4]],["bool",15]],[[["id",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[["app",3],["eventctx",3]],[["app",3],["transition",4]]],[[["gfxctx",3],["app",3]]],[[["canvas",3]]],[[["canvas",3]]],[[["panel",3],["app",3],["eventctx",3],["str",15]],[["app",3],["transition",4]]],[[["app",3],["eventctx",3]],[["app",3],["transition",4]]],[[["gfxctx",3],["app",3]]],[[],["drawbaselayer",4]]],"p":[[3,"EditRoad"],[3,"Model"],[4,"ID"],[8,"ObjectID"],[3,"Object"],[3,"WorldObject"],[3,"World"],[3,"App"],[3,"MainState"],[4,"Mode"]]},\
"map_gui":{"doc":"This crate contains common code for applications that …","tn":["colors","ColorSchemeChoice","DayMode","NightMode","Pregame","SAMGreenDay","SAMDesertDay","Brian","Osm","Starcat","Textured","MapboxLight","MapboxDark","FadedZoom","NegativeSpace","choices","ColorScheme","scheme","panel_bg","inner_panel_bg","day_time_slider","night_time_slider","selected","current_object","perma_selected_object","fade_map_dark","gui_style","dialog_bg","minimap_cursor_border","minimap_cursor_bg","driving_lane","bus_lane","parking_lane","bike_lane","sidewalk","sidewalk_lines","general_road_marking","road_center_line","light_rail_track","private_road","unzoomed_highway","unzoomed_arterial","unzoomed_residential","unzoomed_trail","normal_intersection","stop_sign","stop_sign_pole","signal_protected_turn","signal_permitted_turn","signal_banned_turn","signal_box","signal_spinner","signal_turn_block_bg","slowest_intersection","slower_intersection","slow_intersection","void_background","map_background","unzoomed_interesting_intersection","residential_building","commercial_building","building_outline","parking_lot","grass","water","median_strip","pedestrian_plaza","study_area","unzoomed_car","unzoomed_bike","unzoomed_bus","unzoomed_pedestrian","agent_colors","route","turn_arrow","brake_light","bus_body","bus_label","train_body","ped_head","ped_foot","ped_preparing_bike_body","ped_crowd","bike_frame","parked_car","good_to_bad_red","good_to_bad_green","bus_layer","edits_layer","parking_trip","bike_trip","bus_trip","before_changes","after_changes","new","pregame","day_mode","light_background","rotating_color_plot","rotating_color_agents","unzoomed_road_surface","zoomed_road_surface","zoomed_intersection_surface","road_center_line","general_road_marking","solid_road_center","export","import","modulo_color","hex","night_mode","sam_green_day","sam_desert_day","brian","osm","starcat","textured","mapbox_light","mapbox_dark","faded_zoom","negative_space","load","native_loader","FileLoader","path","on_load","new_state","RawFileLoader","path","on_load","new_state","FileLoader","path","on_load","RawFileLoader","path","on_load","MapLoader","new_state","MapAlreadyLoaded","on_load","FutureLoader","loading_title","started","panel","receiver","on_load","outer_progress_receiver","inner_progress_receiver","last_outer_progress","last_inner_progress","runtime","new_state","options","Options","dev","debug_all_agents","traffic_signal_style","color_scheme","toggle_day_night_colors","min_zoom_for_detail","camera_angle","minimal_controls","canvas_settings","time_increment","dont_draw_time_warp","jump_to_delay","language","units","load_or_default","update_from_args","TrafficSignalStyle","Brian","Yuwen","IndividualTurnArrows","CameraAngle","TopDown","IsometricNE","IsometricNW","IsometricSE","IsometricSW","Abstract","OptionsPanel","panel","new_state","render","agents","AgentCache","unzoomed_agents","time","agents_per_on","unzoomed","new_state","get","populate_if_needed","calculate_unzoomed_agents","draw_unzoomed_agents","UnzoomedAgents","cars","bikes","buses_and_trains","peds","new","cars","bikes","buses_and_trains","peds","color","update","area","DrawArea","id","new","fill","bike","DrawBike","id","body_circle","zorder","draw_default","new","building","DrawBuilding","id","label","new","draw_driveway","clear_rendering","bus_stop","RADIUS","DrawBusStop","id","center","zorder","draw_default","new","car","CAR_WIDTH","DrawCar","id","body","body_polygon","zorder","draw_default","new","thick_line_from_angle","zoomed_color_car","intersection","DrawIntersection","id","zorder","draw_default","draw_traffic_signal","new","render","stop_sign_geom","clear_rendering","calculate_corners","calculate_corners_with_borders","calculate_border_arrows","make_octagon","make_crosswalk","make_rainbow_crosswalk","perp_line","lane","DrawLane","id","polygon","zorder","draw_default","new","render","clear_rendering","perp_line","calculate_sidewalk_lines","calculate_parking_lines","calculate_driving_lines","calculate_turn_markings","calculate_one_way_markings","map","DrawMap","roads","lanes","intersections","buildings","parking_lots","bus_stops","areas","boundary_polygon","draw_all_unzoomed_roads_and_intersections","draw_all_buildings","draw_all_building_driveways","draw_all_building_outlines","draw_all_unzoomed_parking_lots","draw_all_areas","zorder_range","show_zorder","quadtree","quadtree_ids","new","regenerate_unzoomed_layer","get_r","get_l","get_i","get_b","get_pl","get_bs","get_a","get_obj","get_matching_objects","get_renderables_back_to_front","zoomed_batch","create_lane","delete_lane","recreate_intersection","recreate_road","recreate_building_driveways","free_memory","parking_lot","DrawParkingLot","id","draw","new","render","clear_rendering","pedestrian","DrawPedestrian","id","body_circle","zorder","draw_default","new","geometry","DrawPedCrowd","members","blob","blob_pl","zorder","draw_default","new","road","DrawRoad","id","zorder","draw","new","render","clear_rendering","traffic_signal","draw_signal_stage","draw_stage_number","draw_time_left","walk_icon","dont_walk_icon","crosswalk_icon","turn","TURN_ICON_ARROW_LENGTH","DrawMovement","id","hitbox","for_i","draw_selected_movement","make_circle_geom","AgentCache","unzoomed_agents","time","agents_per_on","unzoomed","UnzoomedAgents","cars","bikes","buses_and_trains","peds","DrawArea","id","DrawBuilding","id","label","calculate_corners","DrawIntersection","id","zorder","draw_default","draw_traffic_signal","DrawMap","roads","lanes","intersections","buildings","parking_lots","bus_stops","areas","boundary_polygon","draw_all_unzoomed_roads_and_intersections","draw_all_buildings","draw_all_building_driveways","draw_all_building_outlines","draw_all_unzoomed_parking_lots","draw_all_areas","zorder_range","show_zorder","quadtree","quadtree_ids","DrawPedCrowd","members","blob","blob_pl","zorder","draw_default","DrawPedestrian","id","body_circle","zorder","draw_default","DrawMovement","id","hitbox","BIG_ARROW_THICKNESS","CROSSWALK_LINE_THICKNESS","OUTLINE_THICKNESS","Renderable","get_id","draw","get_zorder","get_outline","contains_pt","draw_vehicle","DrawOptions","suppress_traffic_signal_details","label_buildings","show_building_driveways","new","unzoomed_agent_radius","grey_out_unhighlighted_people","simple_app","SimpleApp","map","draw_map","cs","opts","current_selection","session","time","new","draw_unzoomed","draw_zoomed","recalculate_current_selection","mouseover_unzoomed_roads_and_intersections","mouseover_unzoomed_buildings","calculate_current_selection","SimpleWarper","warper","tools","camera","CameraState","cam_x","cam_y","cam_zoom","DefaultMap","last_map","save","load","city_picker","CityPicker","panel","districts","selected","on_load","new_state","new_in_city","AllCityPicker","panel","on_load","new_state","CitiesInCountryPicker","panel","on_load","new_state","cities_per_country","chose_city","colors","ColorDiscrete","map","unzoomed","zoomed","categories","colors","new","add_l","add_r","add_i","add_b","add_bs","build","ColorLegend","row","gradient","categories","DivergingScale","low_color","mid_color","high_color","min","avg","max","ignore","new","range","ignore","eval","make_legend","ColorNetwork","map","unzoomed","zoomed","new","add_l","add_r","add_i","add_b","add_pl","ranked_roads","ranked_intersections","pct_roads","pct_intersections","build","ColorScale","0","eval","from_colorous","inner_eval","command","RunCommand","p","comm","panel","lines","max_capacity","started","last_drawn","on_load","new_state","read_output","heatmap","NEIGHBORS","HeatmapOptions","resolution","radius","smoothing","contours","color_scheme","new","to_controls","from_controls","make_heatmap","Grid","data","width","height","new","idx","icons","start_marker","goal_marker","importer","ImportCity","panel","on_load","new_state","grab_geojson_from_clipboard","minimap","MINIMAP_WIDTH","MINIMAP_HEIGHT","Minimap","controls","time","app_type","dragging","panel","zoomed","layer","zoom_lvl","base_zoom","zoom","offset_x","offset_y","MinimapControls","has_zorder","has_layer","draw_extra","make_unzoomed_panel","make_legend","make_zoomed_side_panel","panel_clicked","panel_changed","new","recreate_panel","map_to_minimap_pct","set_zoom","recenter","event","draw","draw_with_extra_layers","get_panel","mut_panel","navigate","Navigator","panel","new_state","CrossStreet","first","panel","draw","new_state","SearchBuildings","panel","new_state","turn_explorer","TurnExplorer","l","idx","panel","new_state","make_panel","color_turn_type","CURRENT_TURN","CONFLICTING_TURN","ui","ChooseSomething","panel","cb","new_state","PromptInput","panel","cb","new_state","PopupMsg","panel","unzoomed","zoomed","new_state","also_draw","FilePicker","new_state","updater","NEXT_RELEASE","size_of_city","prettyprint_bytes","prompt_to_download_missing_data","download_cities","url","URLManager","update_url_free_param","update_url_cam","parse_center_camera","update_url","change_url_free_param","change_url_cam","CameraState","cam_x","cam_y","cam_zoom","DefaultMap","last_map","CityPicker","panel","districts","selected","on_load","ColorDiscrete","map","unzoomed","zoomed","categories","colors","ColorLegend","ColorNetwork","map","unzoomed","zoomed","ColorScale","0","DivergingScale","low_color","mid_color","high_color","min","avg","max","ignore","make_heatmap","Grid","data","width","height","HeatmapOptions","resolution","radius","smoothing","contours","color_scheme","goal_marker","start_marker","Minimap","controls","time","app_type","dragging","panel","zoomed","layer","zoom_lvl","base_zoom","zoom","offset_x","offset_y","MinimapControls","has_zorder","has_layer","draw_extra","make_unzoomed_panel","make_legend","make_zoomed_side_panel","panel_clicked","panel_changed","Navigator","panel","TurnExplorer","l","idx","panel","ChooseSomething","panel","cb","FilePicker","PopupMsg","panel","unzoomed","zoomed","PromptInput","panel","cb","URLManager","RunCommand","p","comm","panel","lines","max_capacity","started","last_drawn","on_load","prompt_to_download_missing_data","loading_tips","grey_out_map","nice_map_name","nice_country_name","open_browser","find_exe","SimpleApp","map","draw_map","cs","opts","current_selection","session","time","AppLike","map","sim","cs","mut_cs","draw_map","mut_draw_map","opts","mut_opts","map_switched","draw_with_opts","make_warper","sim_time","current_stage_and_remaining_time","change_color_scheme","ID","Road","Lane","Intersection","Building","ParkingLot","Car","Pedestrian","PedCrowd","BusStop","Area","from_agent","agent_id","as_intersection","as_building","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","get_id","draw","get_outline","get_id","draw","get_outline","contains_pt","get_zorder","get_id","draw","get_zorder","get_outline","contains_pt","get_id","draw","get_outline","contains_pt","get_zorder","get_id","draw","get_outline","contains_pt","get_zorder","get_id","draw","get_outline","contains_pt","get_zorder","get_id","draw","get_outline","contains_pt","get_zorder","get_id","draw","get_zorder","get_outline","contains_pt","get_id","draw","get_outline","contains_pt","get_zorder","get_id","draw","get_outline","get_zorder","get_id","draw","get_outline","contains_pt","get_zorder","map","sim","cs","mut_cs","draw_map","mut_draw_map","opts","mut_opts","map_switched","draw_with_opts","make_warper","sim_time","current_stage_and_remaining_time","clone","clone","clone","clone","clone","clone","clone","cmp","eq","eq","eq","eq","ne","eq","ne","eq","ne","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","hash","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","serialize","serialize","serialize","serialize","serialize","serialize","draw_default","dump_before_abort","before_quit","free_memory","event","draw","event","draw","event","draw","event","draw","event","draw","event","draw","event","draw_baselayer","draw","event","draw_baselayer","draw","event","draw_baselayer","draw","event","draw","event","draw","event","draw","event","draw","event","draw","event","draw_baselayer","draw","event","draw_baselayer","draw","event","draw_baselayer","draw","event","draw_baselayer","draw"],"q":["map_gui","map_gui::colors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui","map_gui::load","map_gui::load::native_loader","","","","","","","","map_gui::load","","","","","","","","","","","","","","","","","","","","","","map_gui","map_gui::options","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui","map_gui::render","map_gui::render::agents","","","","","","","","","","","","","","","","","","","","","","map_gui::render","map_gui::render::area","","","","map_gui::render","map_gui::render::bike","","","","","","map_gui::render","map_gui::render::building","","","","","","map_gui::render","map_gui::render::bus_stop","","","","","","","map_gui::render","map_gui::render::car","","","","","","","","","","map_gui::render","map_gui::render::intersection","","","","","","","","","","","","","","","","map_gui::render","map_gui::render::lane","","","","","","","","","","","","","","map_gui::render","map_gui::render::map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render","map_gui::render::parking_lot","","","","","","map_gui::render","map_gui::render::pedestrian","","","","","","","","","","","","","","map_gui::render","map_gui::render::road","","","","","","","map_gui::render","map_gui::render::traffic_signal","","","","","","map_gui::render","map_gui::render::turn","","","","","","","map_gui::render","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui","map_gui::simple_app","","","","","","","","","","","","","","","","","map_gui","map_gui::tools","map_gui::tools::camera","","","","","","","","map_gui::tools","map_gui::tools::city_picker","","","","","","","","","","","","","","","","","map_gui::tools","map_gui::tools::colors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools","map_gui::tools::command","","","","","","","","","","","map_gui::tools","map_gui::tools::heatmap","","","","","","","","","","","","","","","","","map_gui::tools","map_gui::tools::icons","","map_gui::tools","map_gui::tools::importer","","","","","map_gui::tools","map_gui::tools::minimap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools","map_gui::tools::navigate","","","","","","","","","","","map_gui::tools","map_gui::tools::turn_explorer","","","","","","","","","map_gui::tools","map_gui::tools::ui","","","","","","","","","","","","","","","","map_gui::tools","map_gui::tools::updater","","","","","map_gui::tools","map_gui::tools::url","","","","","","","map_gui::tools","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::minimap","","","","","","","map_gui::tools","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::colors","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::load::native_loader","","","","","","","","","","","","","","","","","","","","","","","","map_gui::load","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::options","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::agents","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::area","","","","","","","","","","","","","map_gui::render::bike","","","","","","","","","","","","","map_gui::render::building","","","","","","","","","","","","","map_gui::render::bus_stop","","","","","","","","","","","","","map_gui::render::car","","","","","","","","","","","","","map_gui::render::intersection","","","","","","","","","","","","map_gui::render::lane","","","","","","","","","","","","","map_gui::render::map","","","","","","","","","","","","map_gui::render::parking_lot","","","","","","","","","","","","","map_gui::render::pedestrian","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::road","","","","","","","","","","","","","map_gui::render::turn","","","","","","","","","","","","","map_gui::render","","","","","","","","","","","","","map_gui::simple_app","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::camera","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::city_picker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::colors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::command","","","","","","","","","","","","map_gui::tools::heatmap","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::importer","","","","","","","","","","","","map_gui::tools::minimap","","","","","","","","","","","","map_gui::tools::navigate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::turn_explorer","","","","","","","","","","","","map_gui::tools::ui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::url","","","","","","","","","","","","","map_gui","","","","","","","","","","","","","","","","","map_gui::render::area","","","map_gui::render::bike","","","","","map_gui::render::building","","","","","map_gui::render::bus_stop","","","","","map_gui::render::car","","","","","map_gui::render::intersection","","","","","map_gui::render::lane","","","","","map_gui::render::parking_lot","","","","","map_gui::render::pedestrian","","","","","","","","","map_gui::render::road","","","","","map_gui::simple_app","","","","","","","","","","","","","map_gui::colors","map_gui::options","","","map_gui::render::agents","map_gui::tools::heatmap","map_gui","","map_gui::colors","map_gui::options","","map_gui::render::agents","","map_gui::tools::heatmap","","map_gui","","","map_gui::colors","map_gui::options","","map_gui::tools::camera","","map_gui","","map_gui::colors","map_gui::options","","","map_gui::tools::camera","","map_gui::colors","map_gui::options","","","map_gui::tools::camera","","map_gui::simple_app","","","","map_gui::load","","map_gui::load::native_loader","","","","map_gui::load","","map_gui::options","","map_gui::simple_app","","map_gui::tools::city_picker","","","","","","","","","map_gui::tools::command","","map_gui::tools::importer","","map_gui::tools::navigate","","","","","","map_gui::tools::turn_explorer","","","map_gui::tools::ui","","","","","","","",""],"d":["A color scheme groups colors used for different map, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Loading large resources (like maps, scenarios, and …","","Loads a JSON or bincoded file, then deserializes it","","","","Loads a file without deserializing it.","","","","Loads a JSON or bincoded file, then deserializes it","","","Loads a file without deserializing it.","","","","","","","","","","","","","","","","","","","","Options controlling the UI. Some of the options are …","Dev mode exposes experimental tools useful for debugging, …","Every time we draw, render all agents zoomed in. …","How traffic signals should be rendered.","The color scheme for map elements, agents, and the UI.","Automatically change color_scheme based on simulation …","Map elements are drawn differently when unzoomed and …","Draw buildings in different perspectives","When making a screen recording, enable this option to …","widgetry options","How much to advance the sim with one of the speed controls","When time warping, don’t draw to speed up simulation","The delay threshold to halt on when jumping to the next …","Display roads and buildings in an alternate language, if …","How to render geometric units","Restore previous options. If the file is missing or the …","Update the options using command-line flags.","Different ways of drawing traffic signals. The names of …","","","","","","","","","","","","","","Render static and dynamic map elements.","","","This is controlled almost entirely by the minimap panel. …","","","","","","","If the sim time has changed or the unzoomed agent filters …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unsorted, unexpanded, raw result.","A simple variation of the one in game that shows all …","Build a single gigantic <code>GeomBatch</code> to render the entire …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is controlled almost entirely by the minimap panel. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Control how the map is drawn.","Don’t draw the current traffic signal state.","Label every building.","Draw building driveways.","Default options for drawing a map.","","If the sim has highlighted people, then fade all others …","","Simple app state that just renders a static map, without …","","","","","","Custom per-app state can be stored here","If desired, this can be advanced to render traffic …","","","","Assumes some defaults.","","Only select buildings, and work whether zoomed in or not.","","","","Assorted tools and UI states that’re useful for …","","Represents the state of a widgetry Canvas.","","","","Track the last map used, to resume next session.","","Save the camera’s configuration for the specified map, …","Load the camera’s configuration for the specified map. …","","Lets the player switch maps.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Executes a command and displays STDOUT and STDERR in a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draw a start marker pointing at something.","Draw a goal marker pointing at something.","","","","","","","","","","","","","","","","","","","","","","","Customize the appearance and behavior of a minimap.","Should the user be able to control the z-order visible? …","Is there some additional layer displayed on the minimap? …","Draw extra stuff on the minimap, just pulling from the …","When unzoomed, display this panel. By default, no …","A row beneath the minimap in the zoomed view, usually …","Controls to be placed to the left to the zoomed-in panel","If a button is clicked that was produced by some method …","Called for <code>Outcome::Changed</code> on the panel.","","","","","","","","","","","","","","","","","","","","","","","","A tool to explore all of the turns from a single lane.","","","","","","","","","Generic UI tools. Some of this should perhaps be lifted …","Choose something from a menu, then feed the answer to a …","","","","Prompt for arbitrary text input, then feed the answer to …","","","","Display a message dialog.","","","","","","","","","","How many bytes to download for a city?","","Prompt to download a missing city. On either success or …","","","Utilities for reflecting the current map and viewport in …","This does nothing on native. On web, it modifies the …","This does nothing on native. On web, it modifies the …","Parse an OSM-style <code>zoom/lat/lon</code> string …","","","","Represents the state of a widgetry Canvas.","","","","Track the last map used, to resume next session.","","Lets the player switch maps.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draw a goal marker pointing at something.","Draw a start marker pointing at something.","","","","","","","","","","","","","","Customize the appearance and behavior of a minimap.","Should the user be able to control the z-order visible? …","Is there some additional layer displayed on the minimap? …","Draw extra stuff on the minimap, just pulling from the …","When unzoomed, display this panel. By default, no …","A row beneath the minimap in the zoomed view, usually …","Controls to be placed to the left to the zoomed-in panel","If a button is clicked that was produced by some method …","Called for <code>Outcome::Changed</code> on the panel.","","","A tool to explore all of the turns from a single lane.","","","","Choose something from a menu, then feed the answer to a …","","","","Display a message dialog.","","","","Prompt for arbitrary text input, then feed the answer to …","","","Utilities for reflecting the current map and viewport in …","Executes a command and displays STDOUT and STDERR in a …","","","","","","","","","Prompt to download a missing city. On either success or …","","Make it clear the map can’t be interacted with right …","","","","Returns the path to an executable. Native-only.","Simple app state that just renders a static map, without …","","","","","","Custom per-app state can be stored here","If desired, this can be advanced to render traffic …","An application wishing to use the tools in this crate has …","","","","","","","","","","","Create a <code>widgetry::State</code> that warps to the given point.","","","Change the color scheme. Idempotent. Return true if there …i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,2,2,2,2,2,2,2,2,2,2,2,0,0,0,3,3,3,0,4,4,4,0,3,3,0,4,4,0,5,0,6,0,7,7,7,7,7,7,7,7,7,7,7,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,9,9,9,0,10,10,10,10,10,10,0,11,11,0,0,0,12,12,12,12,12,12,12,12,12,0,13,13,13,13,13,13,13,13,13,13,13,0,0,14,14,14,0,0,15,15,15,15,15,0,0,16,16,16,16,16,0,0,0,17,17,17,17,17,0,0,0,18,18,18,18,18,18,0,0,0,0,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,22,22,22,22,22,0,0,23,23,23,23,23,23,0,24,24,24,24,24,24,0,0,25,25,25,25,25,25,0,0,0,0,0,0,0,0,0,0,26,26,26,26,0,0,12,12,12,12,0,13,13,13,13,0,14,0,16,16,0,0,19,19,19,19,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,24,24,24,24,24,0,23,23,23,23,0,26,26,0,0,0,0,27,27,27,27,27,0,0,28,28,28,28,0,0,0,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,30,0,0,0,31,31,31,0,32,31,31,0,0,33,33,33,33,33,33,0,34,34,34,0,35,35,35,0,0,0,0,36,36,36,36,36,36,36,36,36,36,36,36,0,37,37,37,0,38,38,38,38,38,38,38,38,38,38,38,38,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,40,40,40,40,0,0,41,41,41,41,41,41,41,41,41,41,0,0,0,42,42,42,42,42,42,42,42,0,0,43,43,43,43,43,0,0,0,0,0,44,44,44,0,0,0,0,0,45,45,45,45,45,45,45,45,45,45,45,45,0,46,46,46,46,46,46,46,46,45,45,45,45,45,45,45,45,45,45,0,0,47,47,0,48,48,48,48,0,49,49,0,0,50,50,50,50,50,50,0,0,0,0,51,51,51,0,52,52,52,0,53,53,53,53,53,0,54,0,0,0,0,0,0,0,0,55,55,55,0,0,0,0,31,31,31,0,32,0,33,33,33,33,0,36,36,36,36,36,0,0,39,39,39,0,40,0,38,38,38,38,38,38,38,0,0,43,43,43,0,42,42,42,42,42,0,0,0,45,45,45,45,45,45,45,45,45,45,45,45,0,46,46,46,46,46,46,46,46,0,47,0,50,50,50,0,51,51,0,0,53,53,53,0,52,52,0,0,41,41,41,41,41,41,41,41,0,0,0,0,0,0,0,0,29,29,29,29,29,29,29,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,45,45,47,47,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,55,55,55,55,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,14,14,14,15,15,15,15,15,16,16,16,16,16,17,17,17,17,17,18,18,18,18,18,19,19,19,19,19,20,20,20,20,20,22,22,22,22,22,23,23,23,23,23,24,24,24,24,25,25,25,25,25,29,29,29,29,29,29,29,29,29,29,29,29,29,1,8,9,10,13,42,57,57,1,9,10,13,13,42,42,57,57,57,1,9,10,31,32,57,57,1,8,9,10,31,32,1,8,9,10,31,32,29,29,29,29,6,6,3,3,4,4,7,7,11,11,30,30,33,33,33,34,34,34,35,35,35,41,41,44,44,47,47,48,48,49,49,50,50,50,51,51,51,52,52,52,53,53,53],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["vec",3],["choice",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["colorschemechoice",4],["eventctx",3]],["colorscheme",3]],[[],["colorscheme",3]],[[],["colorscheme",3]],[[["style",3]],["colorscheme",3]],[[["usize",15]],["color",3]],[[["usize",15]],["color",3]],[[["roadrank",4]],["color",3]],[[["roadrank",4],["lanetype",4]],["color",3]],[[["roadrank",4]],["color",3]],[[["roadrank",4]],["color",3]],[[["roadrank",4]],["color",3]],[[],["bool",15]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["usize",15]],["color",3]],[[["str",15]],["color",3]],[[],["colorscheme",3]],[[],["colorscheme",3]],[[],["colorscheme",3]],[[],["colorscheme",3]],[[],["colorscheme",3]],[[],["colorscheme",3]],[[],["colorscheme",3]],[[],["colorscheme",3]],[[],["colorscheme",3]],[[],["colorscheme",3]],[[],["colorscheme",3]],null,null,null,null,null,[[["eventctx",3],["string",3],["fnonce",8],["box",3]],[["state",8],["box",3]]],null,null,null,[[["eventctx",3],["string",3],["box",3],["fnonce",8]],[["state",8],["box",3]]],null,null,null,null,null,null,null,[[["fnonce",8],["eventctx",3],["mapname",3],["box",3]],[["state",8],["box",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["box",3],["string",3],["receiver",3],["str",15],["box",3],["fnonce",8],["eventctx",3],["pin",3]],[["state",8],["box",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["options",3]],[[["cmdargs",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3]],[["state",8],["box",3]]],null,null,null,null,null,null,null,[[],["agentcache",3]],[[["traversable",4]],[["renderable",8],["vec",3]]],[[["prerender",3],["traversable",4],["colorscheme",3],["map",3],["sim",3]]],[[["applike",8]],["quadtree",3]],[[["applike",8],["gfxctx",3]]],null,null,null,null,null,[[],["unzoomedagents",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["colorscheme",3],["unzoomedagent",3]],[["color",3],["option",4]]],[[["panel",3]]],null,null,null,[[["area",3],["eventctx",3],["geombatch",3],["colorscheme",3]],["drawarea",3]],[[["areatype",4],["colorscheme",3]],["fill",4]],null,null,null,null,null,null,[[["prerender",3],["colorscheme",3],["map",3],["sim",3],["drawcarinput",3]],["drawbike",3]],null,null,null,null,[[["eventctx",3],["geombatch",3],["building",3],["map",3],["colorscheme",3],["options",3]],["drawbuilding",3]],[[["geombatch",3],["building",3],["map",3],["colorscheme",3],["options",3]]],[[]],null,null,null,null,null,null,null,[[["eventctx",3],["busstop",3],["colorscheme",3],["map",3]],["drawbusstop",3]],null,null,null,null,null,null,null,null,[[["prerender",3],["colorscheme",3],["map",3],["sim",3],["drawcarinput",3]],["drawcar",3]],[[["angle",3],["distance",3],["pt2d",3]],["polygon",3]],[[["drawcarinput",3],["sim",3],["colorscheme",3]],["color",3]],null,null,null,null,null,null,[[["intersection",3],["map",3]],["drawintersection",3]],[[["applike",8]],["geombatch",3]],[[["roadwithstopsign",3],["map",3]],["option",4]],[[]],[[["intersection",3],["map",3]],[["polygon",3],["vec",3]]],[[["geombatch",3],["applike",8],["intersection",3]]],[[["intersection",3],["road",3],["map",3]],[["polygon",3],["vec",3]]],[[["angle",3],["pt2d",3],["distance",3]],["polygon",3]],[[["geombatch",3],["colorscheme",3],["map",3],["turn",3]]],[[["geombatch",3],["map",3],["turn",3]],["bool",15]],[[["distance",3],["line",3]],["line",3]],null,null,null,null,null,null,[[["map",3],["lane",3]],["drawlane",3]],[[["applike",8]],["geombatch",3]],[[]],[[["distance",3],["line",3]],["line",3]],[[["lane",3]],[["polygon",3],["vec",3]]],[[["map",3],["lane",3]],[["polygon",3],["vec",3]]],[[["road",3],["lane",3]],[["polygon",3],["vec",3]]],[[["map",3],["lane",3]],[["polygon",3],["vec",3]]],[[["road",3],["lane",3]],[["polygon",3],["vec",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3],["colorscheme",3],["map",3],["options",3],["timer",3]],["drawmap",3]],[[["eventctx",3],["timer",3],["colorscheme",3],["map",3]],["drawable",3]],[[["roadid",3]],["drawroad",3]],[[["laneid",3]],["drawlane",3]],[[["intersectionid",3]],["drawintersection",3]],[[["buildingid",3]],["drawbuilding",3]],[[["parkinglotid",3]],["drawparkinglot",3]],[[["busstopid",3]],["drawbusstop",3]],[[["areaid",3]],["drawarea",3]],[[["eventctx",3],["agentcache",3],["id",4],["applike",8]],[["renderable",8],["option",4]]],[[["bounds",3]],[["id",4],["vec",3]]],[[["map",3],["bounds",3]],[["renderable",8],["vec",3]]],[[["eventctx",3],["applike",8]],["geombatch",3]],[[["laneid",3],["map",3]]],[[["laneid",3]]],[[["intersectionid",3],["map",3]]],[[["road",3],["map",3]]],[[["eventctx",3],["colorscheme",3],["map",3],["options",3]]],[[]],null,null,null,null,[[["eventctx",3],["parkinglot",3],["geombatch",3],["colorscheme",3]],["drawparkinglot",3]],[[["applike",8]],["geombatch",3]],[[]],null,null,null,null,null,null,[[["drawpedestrianinput",3],["usize",15],["prerender",3],["colorscheme",3],["map",3],["sim",3]],["drawpedestrian",3]],[[["usize",15],["geombatch",3],["drawpedestrianinput",3],["colorscheme",3],["sim",3]]],null,null,null,null,null,null,[[["prerender",3],["drawpedcrowdinput",3],["colorscheme",3],["map",3]],["drawpedcrowd",3]],null,null,null,null,null,[[["road",3]],["drawroad",3]],[[["applike",8]],["geombatch",3]],[[]],null,[[["usize",15],["geombatch",3],["option",4],["applike",8],["trafficsignalstyle",4],["prerender",3],["intersectionid",3],["duration",3],["stage",3]]],[[["prerender",3],["intersectionid",3],["usize",15],["geombatch",3],["applike",8]]],[[["prerender",3],["intersectionid",3],["usize",15],["duration",3],["geombatch",3],["applike",8],["stage",3]]],[[["prerender",3],["movement",3]],["geombatch",3]],[[["prerender",3],["movement",3]],["geombatch",3]],[[["polyline",3]]],null,null,null,null,null,[[["prerender",3],["intersectionid",3],["usize",15],["colorscheme",3],["map",3]],["vec",3]],[[["geombatch",3],["applike",8],["option",4],["turnpriority",4]]],[[["f64",15],["polyline",3],["angle",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["intersection",3],["map",3]],[["polygon",3],["vec",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["id",4]],[[["drawoptions",3],["applike",8],["gfxctx",3]]],[[],["isize",15]],[[["map",3]],["polygon",3]],[[["map",3],["pt2d",3]],["bool",15]],[[["prerender",3],["colorscheme",3],["map",3],["sim",3],["drawcarinput",3]],[["box",3],["renderable",8]]],null,null,null,null,[[],["drawoptions",3]],[[["option",4],["vehicletype",4]],["distance",3]],[[["color",3],["option",4],["sim",3]],["color",3]],null,null,null,null,null,null,null,null,null,[[["fn",8],["options",3],["eventctx",3]]],[[["gfxctx",3]]],[[["drawoptions",3],["gfxctx",3]]],[[["eventctx",3]]],[[["eventctx",3]],[["option",4],["id",4]]],[[["eventctx",3]],[["option",4],["id",4]]],[[["bool",15],["eventctx",3]],[["option",4],["id",4]]],null,null,null,null,null,null,null,null,null,null,[[["canvas",3],["mapname",3]]],[[["mapname",3],["eventctx",3]],["bool",15]],null,null,null,null,null,null,[[["box",3],["fnonce",8],["eventctx",3]],[["state",8],["box",3]]],[[["fnonce",8],["eventctx",3],["cityname",3],["box",3]],[["state",8],["box",3]]],null,null,null,[[["box",3],["fnonce",8],["eventctx",3]],[["state",8],["box",3]]],null,null,null,[[["str",15],["fnonce",8],["eventctx",3],["box",3]],[["state",8],["box",3]]],[[],[["string",3],["vec",3],["btreemap",3]]],[[["mapname",3],["option",4],["eventctx",3]],[["transition",4],["applike",8]]],null,null,null,null,null,null,null,[[["applike",8],["vec",3]],["colordiscrete",3]],[[["laneid",3],["asref",8],["str",15]]],[[["str",15],["roadid",3],["asref",8]]],[[["intersectionid",3],["asref",8],["str",15]]],[[["buildingid",3],["asref",8],["str",15]]],[[["str",15],["asref",8],["busstopid",3]]],[[["eventctx",3]]],null,[[["color",3],["eventctx",3]],["widget",3]],[[["colorscale",3],["into",8],["eventctx",3],["string",3],["vec",3]],["widget",3]],[[["vec",3],["eventctx",3]],["widget",3]],null,null,null,null,null,null,null,null,[[["color",3]],["divergingscale",3]],[[["f64",15]],["divergingscale",3]],[[["f64",15]],["divergingscale",3]],[[["f64",15]],[["color",3],["option",4]]],[[["into",8],["eventctx",3],["string",3],["vec",3]],["widget",3]],null,null,null,null,[[["applike",8]],["colornetwork",3]],[[["laneid",3],["color",3]]],[[["color",3],["roadid",3]]],[[["intersectionid",3],["color",3]]],[[["buildingid",3],["color",3]]],[[["parkinglotid",3],["color",3]]],[[["counter",3],["colorscale",3],["roadid",3]]],[[["colorscale",3],["intersectionid",3],["counter",3]]],[[["counter",3],["colorscale",3],["roadid",3]]],[[["colorscale",3],["intersectionid",3],["counter",3]]],[[["eventctx",3]]],null,null,[[["f64",15]],["color",3]],[[["gradient",3]],["colorscale",3]],[[["f64",15]]],null,null,null,null,null,null,null,null,null,null,[[["fnonce",8],["vec",3],["eventctx",3],["string",3],["box",3]],[["state",8],["box",3]]],[[]],null,null,null,null,null,null,null,null,[[],["heatmapoptions",3]],[[["widget",3],["eventctx",3]],[["widget",3],["vec",3]]],[[["panel",3]],["heatmapoptions",3]],[[["geombatch",3],["pt2d",3],["bounds",3],["eventctx",3],["heatmapoptions",3],["vec",3]],["widget",3]],null,null,null,null,[[["usize",15]],["grid",3]],[[["usize",15]],["usize",15]],null,[[["f64",15],["pt2d",3]],["geombatch",3]],[[["f64",15],["pt2d",3]],["geombatch",3]],null,null,null,null,[[["box",3],["fnonce",8],["eventctx",3]],[["state",8],["box",3]]],[[],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[["gfxctx",3]]],[[["eventctx",3]],["panel",3]],[[["eventctx",3]],["widget",3]],[[["eventctx",3]],["widget",3]],[[["str",15],["eventctx",3]],[["option",4],["transition",4]]],[[["panel",3],["eventctx",3]]],[[["eventctx",3]],["minimap",3]],[[["eventctx",3]]],[[["pt2d",3]]],[[["usize",15],["eventctx",3]]],[[["eventctx",3]]],[[["eventctx",3]],[["option",4],["transition",4]]],[[["gfxctx",3]]],[[["vec",3],["drawable",3],["gfxctx",3]]],[[],["panel",3]],[[],["panel",3]],null,null,null,[[["eventctx",3]],[["state",8],["box",3]]],null,null,null,null,[[["vec",3],["roadid",3],["eventctx",3]],[["state",8],["box",3]]],null,null,[[["eventctx",3]],[["state",8],["box",3]]],null,null,null,null,null,[[["laneid",3],["eventctx",3]],[["state",8],["box",3]]],[[["usize",15],["laneid",3],["eventctx",3]],["panel",3]],[[["turntype",4]],["color",3]],null,null,null,null,null,null,[[["choice",3],["into",8],["vec",3],["eventctx",3],["string",3],["box",3],["fnonce",8]],[["state",8],["box",3]]],null,null,null,[[["box",3],["fnonce",8],["eventctx",3],["string",3],["str",15]],[["state",8],["box",3]]],null,null,null,null,[[["str",15],["vec",3],["eventctx",3]],[["state",8],["box",3]]],[[["vec",3],["drawable",3],["eventctx",3],["str",15]],[["state",8],["box",3]]],null,[[["fnonce",8],["eventctx",3],["string",3],["option",4],["box",3]],[["state",8],["box",3]]],null,null,[[["mapname",3]],["u64",15]],[[["u64",15]],["string",3]],[[["mapname",3],["eventctx",3]],[["transition",4],["applike",8]]],[[["vec",3],["sender",3],["string",3]]],null,null,[[["string",3]],["result",6]],[[["eventctx",3]],["result",6]],[[["string",3]],["option",4]],[[["box",3],["fn",8]],["result",6]],[[["string",3],["str",15]],["string",3]],[[["string",3],["str",15]],["string",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["geombatch",3],["pt2d",3],["bounds",3],["eventctx",3],["heatmapoptions",3],["vec",3]],["widget",3]],null,null,null,null,null,null,null,null,null,null,[[["f64",15],["pt2d",3]],["geombatch",3]],[[["f64",15],["pt2d",3]],["geombatch",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[["gfxctx",3]]],[[["eventctx",3]],["panel",3]],[[["eventctx",3]],["widget",3]],[[["eventctx",3]],["widget",3]],[[["str",15],["eventctx",3]],[["option",4],["transition",4]]],[[["panel",3],["eventctx",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["mapname",3],["eventctx",3]],[["transition",4],["applike",8]]],[[],["text",3]],[[["applike",8],["gfxctx",3]]],[[["mapname",3]],["str",15]],[[["str",15]],["str",15]],[[["asref",8],["str",15]]],[[["str",15]],["string",3]],null,null,null,null,null,null,null,null,null,[[],["map",3]],[[],["sim",3]],[[],["colorscheme",3]],[[],["colorscheme",3]],[[],["drawmap",3]],[[],["drawmap",3]],[[],["options",3]],[[],["options",3]],[[["map",3],["timer",3],["eventctx",3]]],[[["drawoptions",3],["gfxctx",3]]],[[["f64",15],["eventctx",3],["pt2d",3],["option",4],["id",4],["option",4]],[["box",3],["state",8]]],[[],["time",3]],[[["intersectionid",3]]],[[["colorschemechoice",4],["eventctx",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,[[["agentid",4]],["id",4]],[[],[["agentid",4],["option",4]]],[[],["intersectionid",3]],[[],["buildingid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[],["id",4]],[[["drawoptions",3],["applike",8],["gfxctx",3]]],[[["map",3]],["polygon",3]],[[],["id",4]],[[["drawoptions",3],["applike",8],["gfxctx",3]]],[[["map",3]],["polygon",3]],[[["map",3],["pt2d",3]],["bool",15]],[[],["isize",15]],[[],["id",4]],[[["drawoptions",3],["applike",8],["gfxctx",3]]],[[],["isize",15]],[[["map",3]],["polygon",3]],[[["map",3],["pt2d",3]],["bool",15]],[[],["id",4]],[[["drawoptions",3],["applike",8],["gfxctx",3]]],[[["map",3]],["polygon",3]],[[["map",3],["pt2d",3]],["bool",15]],[[],["isize",15]],[[],["id",4]],[[["drawoptions",3],["applike",8],["gfxctx",3]]],[[["map",3]],["polygon",3]],[[["map",3],["pt2d",3]],["bool",15]],[[],["isize",15]],[[],["id",4]],[[["drawoptions",3],["applike",8],["gfxctx",3]]],[[["map",3]],["polygon",3]],[[["map",3],["pt2d",3]],["bool",15]],[[],["isize",15]],[[],["id",4]],[[["drawoptions",3],["applike",8],["gfxctx",3]]],[[["map",3]],["polygon",3]],[[["map",3],["pt2d",3]],["bool",15]],[[],["isize",15]],[[],["id",4]],[[["drawoptions",3],["applike",8],["gfxctx",3]]],[[],["isize",15]],[[["map",3]],["polygon",3]],[[["map",3],["pt2d",3]],["bool",15]],[[],["id",4]],[[["drawoptions",3],["applike",8],["gfxctx",3]]],[[["map",3]],["polygon",3]],[[["map",3],["pt2d",3]],["bool",15]],[[],["isize",15]],[[],["id",4]],[[["drawoptions",3],["applike",8],["gfxctx",3]]],[[["map",3]],["polygon",3]],[[],["isize",15]],[[],["id",4]],[[["drawoptions",3],["applike",8],["gfxctx",3]]],[[["map",3]],["polygon",3]],[[["map",3],["pt2d",3]],["bool",15]],[[],["isize",15]],[[],["map",3]],[[],["sim",3]],[[],["colorscheme",3]],[[],["colorscheme",3]],[[],["drawmap",3]],[[],["drawmap",3]],[[],["options",3]],[[],["options",3]],[[["map",3],["timer",3],["eventctx",3]]],[[["drawoptions",3],["gfxctx",3]]],[[["f64",15],["eventctx",3],["pt2d",3],["option",4],["id",4],["option",4]],[["state",8],["box",3]]],[[],["time",3]],[[["intersectionid",3]]],[[],["colorschemechoice",4]],[[],["options",3]],[[],["trafficsignalstyle",4]],[[],["cameraangle",4]],[[],["unzoomedagents",3]],[[],["heatmapoptions",3]],[[],["id",4]],[[["id",4]],["ordering",4]],[[["colorschemechoice",4]],["bool",15]],[[["trafficsignalstyle",4]],["bool",15]],[[["cameraangle",4]],["bool",15]],[[["unzoomedagents",3]],["bool",15]],[[["unzoomedagents",3]],["bool",15]],[[["heatmapoptions",3]],["bool",15]],[[["heatmapoptions",3]],["bool",15]],[[["id",4]],["bool",15]],[[["id",4]],["bool",15]],[[["id",4]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["gfxctx",3]]],[[["canvas",3]]],[[["canvas",3]]],[[]],[[["eventctx",3]],["transition",4]],[[["gfxctx",3]]],[[["eventctx",3]],["transition",4]],[[["gfxctx",3]]],[[["eventctx",3]],["transition",4]],[[["gfxctx",3]]],[[["eventctx",3]],["transition",4]],[[["gfxctx",3]]],[[["eventctx",3]],["transition",4]],[[["gfxctx",3]]],[[["simpleapp",3],["eventctx",3]],[["transition",4],["simpleapp",3]]],[[["simpleapp",3],["gfxctx",3]]],[[["eventctx",3]],["transition",4]],[[],["drawbaselayer",4]],[[["gfxctx",3]]],[[["eventctx",3]],["transition",4]],[[],["drawbaselayer",4]],[[["gfxctx",3]]],[[["eventctx",3]],["transition",4]],[[],["drawbaselayer",4]],[[["gfxctx",3]]],[[["eventctx",3]],["transition",4]],[[["gfxctx",3]]],[[["eventctx",3]],["transition",4]],[[["gfxctx",3]]],[[["eventctx",3]],["transition",4]],[[["gfxctx",3]]],[[["eventctx",3]],["transition",4]],[[["gfxctx",3]]],[[["eventctx",3]],["transition",4]],[[["gfxctx",3]]],[[["eventctx",3]],["transition",4]],[[],["drawbaselayer",4]],[[["gfxctx",3]]],[[["eventctx",3]],["transition",4]],[[],["drawbaselayer",4]],[[["gfxctx",3]]],[[["eventctx",3]],["transition",4]],[[],["drawbaselayer",4]],[[["gfxctx",3]]],[[["eventctx",3]],["transition",4]],[[],["drawbaselayer",4]],[[["gfxctx",3]]]],"p":[[4,"ColorSchemeChoice"],[3,"ColorScheme"],[3,"FileLoader"],[3,"RawFileLoader"],[3,"MapLoader"],[3,"MapAlreadyLoaded"],[3,"FutureLoader"],[3,"Options"],[4,"TrafficSignalStyle"],[4,"CameraAngle"],[3,"OptionsPanel"],[3,"AgentCache"],[3,"UnzoomedAgents"],[3,"DrawArea"],[3,"DrawBike"],[3,"DrawBuilding"],[3,"DrawBusStop"],[3,"DrawCar"],[3,"DrawIntersection"],[3,"DrawLane"],[3,"DrawMap"],[3,"DrawParkingLot"],[3,"DrawPedestrian"],[3,"DrawPedCrowd"],[3,"DrawRoad"],[3,"DrawMovement"],[8,"Renderable"],[3,"DrawOptions"],[3,"SimpleApp"],[3,"SimpleWarper"],[3,"CameraState"],[3,"DefaultMap"],[3,"CityPicker"],[3,"AllCityPicker"],[3,"CitiesInCountryPicker"],[3,"ColorDiscrete"],[3,"ColorLegend"],[3,"DivergingScale"],[3,"ColorNetwork"],[3,"ColorScale"],[3,"RunCommand"],[3,"HeatmapOptions"],[3,"Grid"],[3,"ImportCity"],[3,"Minimap"],[8,"MinimapControls"],[3,"Navigator"],[3,"CrossStreet"],[3,"SearchBuildings"],[3,"TurnExplorer"],[3,"ChooseSomething"],[3,"PromptInput"],[3,"PopupMsg"],[3,"FilePicker"],[3,"URLManager"],[8,"AppLike"],[4,"ID"]]},\
"map_model":{"doc":"<code>map_model</code> describes the world where simulations occur. …","t":[0,3,12,12,12,12,11,11,0,0,3,12,12,11,11,11,3,12,12,5,5,3,12,12,5,4,13,13,13,5,5,3,12,12,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,3,12,12,12,12,12,3,12,12,12,3,12,12,3,12,12,12,3,12,12,12,11,0,3,12,12,12,12,12,12,12,4,13,12,13,13,4,13,12,12,12,13,12,12,12,13,12,12,12,11,11,11,11,3,12,12,12,12,12,12,12,12,4,13,13,13,3,12,12,12,11,11,4,13,12,12,12,13,12,12,12,13,12,12,12,3,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,5,5,5,5,5,0,0,5,0,5,5,5,0,5,5,5,0,0,17,5,5,5,5,3,12,12,12,12,5,5,0,5,5,3,12,12,12,3,12,12,12,12,12,12,12,11,3,12,12,12,12,12,11,0,5,0,5,5,5,5,0,5,5,5,5,0,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,17,17,5,5,5,0,5,5,3,12,12,11,11,5,5,0,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,3,12,12,12,11,5,5,0,3,12,12,12,12,4,13,13,0,0,3,12,4,13,13,13,13,13,13,3,12,12,12,12,12,0,3,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,4,13,13,4,13,12,12,13,13,13,11,3,12,11,11,11,11,11,11,11,11,11,5,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,12,12,12,11,11,11,11,0,3,12,12,3,12,3,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,11,11,0,3,12,4,13,13,13,13,3,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,17,17,17,17,17,3,12,4,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,3,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,3,12,3,12,12,12,12,12,12,12,12,12,12,11,0,3,12,11,4,13,13,11,3,12,12,11,11,11,11,11,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,12,12,3,12,12,11,11,11,0,17,3,12,12,12,12,3,12,12,12,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,0,3,12,12,12,4,13,13,13,13,13,13,4,13,13,13,3,12,12,12,12,11,11,11,11,11,11,11,3,12,12,12,12,11,3,12,12,3,12,12,12,12,12,11,11,11,5,11,0,3,12,12,11,3,12,12,12,11,5,0,17,17,17,17,17,17,17,17,17,17,17,17,17,4,13,13,13,11,11,3,12,3,12,3,12,4,13,13,13,11,0,0,3,12,12,12,12,12,11,11,11,11,5,0,5,5,5,5,5,5,0,3,12,12,11,11,11,11,11,3,12,5,0,4,13,13,11,11,11,11,11,0,3,12,12,3,12,11,11,11,5,5,11,11,11,3,12,11,11,11,0,4,13,13,13,11,11,11,11,3,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,11,5,5,5,0,4,13,13,13,3,12,12,12,12,11,11,11,11,11,11,11,5,0,3,12,12,12,12,12,4,13,13,11,11,11,5,5,0,3,12,12,12,12,4,13,13,13,11,11,11,11,11,11,5,5,5,5,4,13,13,13,13,13,11,11,11,11,5,3,12,12,12,12,11,0,3,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,12,11,11,11,11,3,12,12,12,3,12,12,12,12,12,3,12,12,12,12,3,12,12,12,4,13,13,3,12,12,12,11,3,12,12,12,12,12,12,12,12,12,3,12,12,12,12,0,3,12,12,11,11,11,11,11,11,11,11,11,11,11,4,13,13,11,11,11,11,11,11,11,11,11,17,17,5,5,3,12,12,12,12,4,13,12,12,12,13,12,12,12,13,12,12,12,3,12,12,12,12,12,12,12,4,13,13,13,3,12,12,12,3,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,3,12,12,12,4,13,13,3,12,12,12,12,3,12,12,12,12,12,3,12,4,13,13,13,13,13,13,3,12,12,12,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,4,13,12,12,13,13,13,3,12,4,13,13,3,12,12,12,12,12,12,12,12,12,12,12,3,12,3,12,12,12,12,12,3,12,12,3,12,12,12,12,12,12,12,12,12,12,3,12,4,13,13,13,13,3,12,12,12,12,12,12,12,12,12,12,12,3,12,3,12,12,12,4,13,13,13,13,13,13,13,13,13,17,17,17,3,12,12,12,12,12,12,12,12,12,12,3,12,3,12,12,4,13,13,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,3,12,12,3,12,12,3,12,12,12,12,3,12,12,12,4,13,13,3,12,12,3,12,12,12,12,12,3,12,12,12,12,3,12,12,12,12,3,12,12,12,4,13,13,13,4,13,13,13,13,13,13,3,12,12,3,12,12,12,3,12,12,3,12,3,12,12,12,12,12,12,4,13,13,13,13,13,3,12,12,12,4,13,13,13,4,13,13,13,3,12,12,12,12,3,12,12,12,12,3,12,12,4,13,13,17,17,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["city","City","name","boundary","areas","districts","from_huge_map","from_individual_maps","connectivity","walking","WalkingOptions","allow_shoulders","walking_speed","default","common_speeds","default_speed","Item","cost","node","all_walking_costs_from","all_walking_costs_from","WalkingOptions","allow_shoulders","walking_speed","vehicle_cost","WalkingNode","SidewalkEndpoint","RideBus","LeaveMap","find_scc","all_vehicle_costs_from","Item","cost","node","debug_vehicle_costs","edits","compat","upgrade","walk","fix_offset","fix_intersection_ids","fix_road_direction","fix_old_lane_cmds","fix_merge_zones","fix_map_name","fix_phase_to_stage","fix_adaptive_stages","fix_plans","fix_city_name","fix_lane_widths","OriginalLane","parent","num_fwd","num_back","dir","idx","ChangeLaneType","id","lt","orig_lt","ReverseLane","l","dst_i","ChangeSpeedLimit","id","new","old","ChangeAccessRestrictions","id","new","old","lookup","perma","PermanentMapEdits","map_name","edits_name","version","commands","merge_zones","proposal_description","proposal_link","PermanentEditIntersection","StopSign","must_stop","TrafficSignal","Closed","PermanentEditCmd","ChangeRoad","r","new","old","ChangeIntersection","i","new","old","ChangeRouteSchedule","osm_rel_id","old","new","into_cmd","into_edits","into_edits_permissive","with_permanent","MapEdits","edits_name","commands","merge_zones","changed_roads","original_intersections","changed_routes","proposal_description","proposal_link","EditIntersection","StopSign","TrafficSignal","Closed","EditRoad","lanes_ltr","speed_limit","access_restrictions","get_orig_from_osm","diff","EditCmd","ChangeRoad","r","old","new","ChangeIntersection","i","new","old","ChangeRouteSchedule","id","old","new","EditEffects","changed_roads","deleted_lanes","changed_intersections","added_turns","deleted_turns","resnapped_buildings","changed_parking_lots","new","load","save","update_derived","compress","changed_lanes","describe","apply","undo","recalculate_turns","modify_lanes","recalculate_intersection_polygon","fix_building_driveways","fix_parking_lot_driveways","make","bridges","find_bridges","buildings","make_all_buildings","get_address","classify_bldg","collapse_intersections","collapse","is_cycleway","collapse_intersection","initial","geometry","DEGENERATE_INTERSECTION_HALF_LENGTH","intersection_polygon","generalized_trim_back","deadend","close_off_polygon","Piece","id","left","center","right","on_off_ramp","convex_hull_merged_intersection","lane_specs","get_lane_specs_ltr","assemble_ltr","InitialMap","roads","intersections","bounds","Road","id","src_i","dst_i","trimmed_center_pts","half_width","lane_specs_ltr","osm_tags","new","Intersection","id","polygon","roads","intersection_type","elevation","new","medians","find_medians","merge_intersections","merge_short_roads","should_merge","connects_dual_carriageway","angle","parking_lots","make_all_parking_lots","snap_driveway","infer_spots","line_valid","remove_disconnected","remove_disconnected_roads","traffic_signals","lagging_green","make_traffic_signal","make_signal","optimize","make_crosswalk_variable","merge_stages","is_conflict","protected_yield_stage","multi_way_stages","add_stage","turns","remove_movement","three_way_three_stage","four_way_four_stage","movements","straight_types","make_lagging_green_variable","get_possible_policies","new","greedy_assignment","degenerate","half_signal","three_way","four_way_four_stage","four_way_two_stage","all_walk_all_yield","stage_per_road","expand_all_stages","PROTECTED","YIELD","make_stages","make_stages_filtered","synchronize","transit","make_stops_and_routes","make_route","Matcher","sidewalk_pts","light_rail_pts","new","lookup","pick_start_lane","default_spawn_times","turns","make_all_turns","ensure_unique","verify_vehicle_connectivity","make_vehicle_turns","curvey_turn","to_pt","from_pt","remove_merging_turns","turn_type_from_angles","expected_turn_types_for_four_way","walking_turns","make_walking_turns","filter_turns","_make_walking_turns_v2","make_footway_turns","make_crosswalks","make_degenerate_crosswalks","make_shared_sidewalk_corner","turn_id","get_sidewalk","RawToMapOptions","build_ch","consolidate_all_intersections","keep_bldg_tags","default","match_points_to_lanes","trim_path","map","MapConfig","driving_side","bikes_can_use_bus_lanes","inferred_sidewalks","street_parking_spot_length","DrivingSide","Right","Left","objects","area","AreaID","0","AreaType","Park","Water","Island","MedianStrip","PedestrianPlaza","StudyArea","Area","id","area_type","polygon","osm_tags","osm_id","building","BuildingID","0","Building","id","polygon","levels","address","name","orig_id","label_center","amenities","bldg_type","parking","osm_tags","sidewalk_pos","driveway_geom","Amenity","names","amenity_type","osm_tags","OffstreetParking","PublicGarage","Private","BuildingType","Residential","num_residents","num_housing_units","ResidentialCommercial","Commercial","Empty","has_residents","NamePerLanguage","0","get","new","unnamed","sidewalk","house_number","driving_connection","biking_connection","num_parking_spots","has_amenity","sidewalk_to_bike","AmenityType","Bank","Bar","Beauty","Bike","Cafe","CarRepair","CarShare","Childcare","ConvenienceStore","Culture","Exercise","FastFood","Food","GreenSpace","Hotel","Laundry","Library","Medical","Pet","Playground","Pool","PostOffice","Religious","School","Shopping","Supermarket","Tourism","University","AmenityTypeIter","idx","back_idx","marker","get","types","all","categorize","bus_stop","BusStopID","sidewalk","idx","BusRouteID","0","BusStop","id","name","driving_pos","sidewalk_pos","is_train_stop","BusRoute","id","full_name","short_name","gtfs_trip_marker","osm_rel_id","stops","start","end_border","route_type","spawn_times","orig_spawn_times","all_steps","plural_noun","intersection","IntersectionID","0","IntersectionType","StopSign","TrafficSignal","Border","Construction","Intersection","id","polygon","turns","elevation","intersection_type","orig_id","incoming_lanes","outgoing_lanes","roads","merged","is_border","is_incoming_border","is_outgoing_border","is_closed","is_stop_sign","is_traffic_signal","is_light_rail","is_private","is_footway","is_cycleway","get_incoming_lanes","get_outgoing_lanes","get_zorder","get_rank","get_roads_sorted_by_incoming_angle","get_sorted_incoming_roads","some_outgoing_road","some_incoming_road","name","lane","PARKING_LOT_SPOT_LENGTH","NORMAL_LANE_THICKNESS","SERVICE_ROAD_LANE_THICKNESS","SIDEWALK_THICKNESS","SHOULDER_THICKNESS","LaneID","0","LaneType","Driving","Parking","Sidewalk","Shoulder","Biking","Bus","SharedLeftTurn","Construction","LightRail","is_for_moving_vehicles","supports_any_movement","is_walkable","describe","short_name","from_short_name","Lane","id","parent","lane_type","lane_center_pts","width","dir","src_i","dst_i","bus_stops","driving_blackhole","biking_blackhole","LaneSpec","lt","dir","width","first_pt","last_pt","first_line","last_line","endpoint","end_line","dist_along_of_point","length","intersections","number_parking_spots","is_driving","is_biking","is_bus","is_walkable","is_sidewalk","is_shoulder","is_parking","is_light_rail","get_directed_parent","get_lane_level_turn_restrictions","trace_around_block","typical_lane_widths","parse_turn_type_from_osm","parking_lot","ParkingLotID","0","ParkingLot","id","polygon","aisles","osm_id","spots","extra_spots","driveway_line","driving_pos","sidewalk_line","sidewalk_pos","capacity","road","RoadID","0","both_directions","Direction","Fwd","Back","opposite","DirectedRoadID","id","dir","src_i","dst_i","lanes","must_get_sidewalk","has_lanes","Road","id","osm_tags","turn_restrictions","complicated_turn_restrictions","orig_id","speed_limit","access_restrictions","zorder","percent_incline","lanes_ltr","center_pts","untrimmed_center_pts","src_i","dst_i","lanes_ltr","lane_specs","get_left_side","offset","dir_and_offset","parking_to_driving","speed_limit_from_osm","find_closest_lane","all_lanes","get_dir_change_pl","get_half_width","get_width","get_thick_polygon","get_half_polygon","get_name","get_rank","get_detailed_rank","all_bus_stops","is_light_rail","is_footway","is_service","is_cycleway","common_endpt","is_private","access_restrictions_from_osm","get_zone","is_extremely_short","directed_id_from","directed_id_to","create_lanes","children_forwards","children_backwards","children","incoming_lanes","outgoing_lanes","stop_signs","ControlStopSign","id","roads","RoadWithStopSign","lane_closest_to_edge","must_stop","new","get_priority","flip_sign","traffic_signals","CROSSWALK_PACE","ControlTrafficSignal","id","stages","offset","movements","Stage","protected_movements","yield_movements","stage_type","StageType","Fixed","Variable","simple_duration","new","validating_new","get_possible_policies","get_min_crossing_time","validate","convert_to_ped_scramble","convert_to_ped_scramble_without_promotion","internal_convert_to_ped_scramble","adjust_major_minor_timing","turn_to_movement","missing_turns","compressed_id","simple_cycle_duration","new","could_be_protected","get_priority_of_turn","get_priority_of_movement","edit_movement","enforce_minimum_crosswalk_time","max_crosswalk_time","export","import","export_movement","import_movement","find_r","turn","TurnID","parent","src","dst","TurnType","Crosswalk","SharedSidewalkCorner","Straight","Right","Left","UTurn","TurnPriority","Banned","Yield","Protected","Turn","id","turn_type","geom","other_crosswalk_ids","conflicts_with","angle","between_sidewalks","penalty","is_crossing_arterial_intersection","permitted_by_lane","permitted_by_road","MovementID","from","to","parent","crosswalk","get","CompressedMovementID","i","idx","Movement","id","turn_type","members","geom","angle","for_i","src_center_and_width","conflicts_with","movement_geom","to_movement","zone","AccessRestrictions","allow_through_traffic","cap_vehicles_per_hour","new","Zone","members","borders","restrictions","make_all","floodfill","osm","NAME","HIGHWAY","MAXSPEED","PARKING_RIGHT","PARKING_LEFT","PARKING_BOTH","SIDEWALK","OSM_WAY_ID","OSM_REL_ID","ENDPT_FWD","ENDPT_BACK","INFERRED_PARKING","INFERRED_SIDEWALKS","RoadRank","Local","Arterial","Highway","from_highway","detailed_from_highway","NodeID","0","WayID","0","RelationID","0","OsmID","Node","Way","Relation","inner","pathfind","ch","ContractionHierarchyPathfinder","car_graph","bike_graph","bus_graph","walking_graph","walking_with_transit_graph","new","pathfind","should_use_transit","apply_edits","round","dijkstra","pathfind","build_graph_for_vehicles","pathfind_avoiding_roads","calc_path","build_graph_for_pedestrians","pathfind_walking","node_map","NodeMap","node_to_id","id_to_node","new","get_or_insert","get","translate","guarantee_node_ordering","InnerNodeMap","id_to_node","deserialize_nodemap","pathfinder","Pathfinder","Dijkstra","CH","pathfind","pathfind_with_params","pathfind_avoiding_roads","should_use_transit","apply_edits","uber_turns","IntersectionCluster","members","uber_turns","UberTurn","path","find_all","new","autodetect","flood","trace_back","entry","exit","geom","UberTurnV2","path","into_v2","entry","exit","v1","PathStep","Lane","ContraflowLane","Turn","as_traversable","as_lane","as_turn","exact_slice","Path","steps","orig_req","total_length","crossed_so_far","uber_turns","currently_inside_ut","new","dist_crossed_from_step","one_step","get_req","crossed_so_far","total_length","percent_dist_crossed","is_empty","is_last_step","isnt_last_step","currently_inside_ut","about_to_start_ut","shift","add","is_upcoming_uber_turn_component","modify_step","current_step","next_step","maybe_next_step","last_step","trace","trace_from_start","get_steps","estimate_duration","PathRequest","start","end","constraints","between_buildings","validate_continuity","validate_restrictions","validate_zones","v2","PathStepV2","Along","Contraflow","Movement","PathV2","steps","req","cost","uber_turns","new","from_roads","get_req","get_steps","get_cost","into_v1","into_v1_walking","find_uber_turns","vehicles","VehiclePathfinder","graph","nodes","uber_turns","constraints","path_calc","Node","Road","UberTurn","new","pathfind","apply_edits","make_input_graph","vehicle_cost","walking","SidewalkPathfinder","graph","nodes","use_transit","path_calc","WalkingNode","SidewalkEndpoint","RideBus","LeaveMap","closest","end_transit","new","apply_edits","pathfind","should_use_transit","make_input_graph","transit_input_graph","walking_path_to_steps","one_step_walking_path","PathConstraints","Pedestrian","Car","Bike","Bus","Train","all","from_lt","can_use","filter_lanes","zone_cost","RoutingParams","unprotected_turn_penalty","bike_lane_penalty","bus_lane_penalty","driving_lane_penalty","default","raw","RawMap","name","roads","intersections","buildings","bus_routes","areas","parking_lots","parking_aisles","boundary_polygon","gps_bounds","config","OriginalRoad","osm_way_id","i1","i2","new","as_string_code","common_endpt","blank","roads_per_intersection","new_osm_node_id","new_osm_way_id","preview_intersection","trimmed_road_geometry","save","get_city_name","can_delete_intersection","delete_intersection","move_intersection","closest_intersection","path_dist_to","merge_short_road","RawRoad","center_points","osm_tags","turn_restrictions","complicated_turn_restrictions","percent_incline","get_geometry","is_light_rail","is_footway","is_service","RawIntersection","point","intersection_type","elevation","RawBuilding","polygon","osm_tags","public_garage_name","num_parking_spots","amenities","RawArea","area_type","polygon","osm_tags","osm_id","RawParkingLot","osm_id","polygon","osm_tags","RestrictionType","BanTurns","OnlyAllowTurns","TurnRestriction","0","1","2","new","RawBusRoute","full_name","short_name","osm_rel_id","gtfs_trip_marker","is_bus","stops","border_start","border_end","all_pts","RawBusStop","name","vehicle_pos","matched_road","ped_pos","traversable","Position","lane","dist_along","new","start","end","lane","dist_along","pt","pt_and_angle","equiv_pos","equiv_pos_for_long_object","min_dist","buffer_dist","Traversable","Lane","Turn","as_lane","as_turn","maybe_turn","maybe_lane","get_polyline","get_zorder","max_speed_along","max_speed_along_road","max_speed_along_movement","MAX_BIKE_SPEED","MAX_WALKING_SPEED","bike_speed_on_incline","walking_speed_on_incline","City","name","boundary","areas","districts","EditCmd","ChangeRoad","r","old","new","ChangeIntersection","i","new","old","ChangeRouteSchedule","id","old","new","EditEffects","changed_roads","deleted_lanes","changed_intersections","added_turns","deleted_turns","resnapped_buildings","changed_parking_lots","EditIntersection","StopSign","TrafficSignal","Closed","EditRoad","lanes_ltr","speed_limit","access_restrictions","MapEdits","edits_name","commands","merge_zones","changed_roads","original_intersections","changed_routes","proposal_description","proposal_link","PermanentMapEdits","map_name","edits_name","version","commands","merge_zones","proposal_description","proposal_link","RawToMapOptions","build_ch","consolidate_all_intersections","keep_bldg_tags","DrivingSide","Right","Left","MapConfig","driving_side","bikes_can_use_bus_lanes","inferred_sidewalks","street_parking_spot_length","Area","id","area_type","polygon","osm_tags","osm_id","AreaID","0","AreaType","Park","Water","Island","MedianStrip","PedestrianPlaza","StudyArea","Amenity","names","amenity_type","osm_tags","AmenityType","Bank","Bar","Beauty","Bike","Cafe","CarRepair","CarShare","Childcare","ConvenienceStore","Culture","Exercise","FastFood","Food","GreenSpace","Hotel","Laundry","Library","Medical","Pet","Playground","Pool","PostOffice","Religious","School","Shopping","Supermarket","Tourism","University","Building","id","polygon","levels","address","name","orig_id","label_center","amenities","bldg_type","parking","osm_tags","sidewalk_pos","driveway_geom","BuildingID","0","BuildingType","Residential","num_residents","num_housing_units","ResidentialCommercial","Commercial","Empty","NamePerLanguage","0","OffstreetParking","PublicGarage","Private","BusRoute","id","full_name","short_name","gtfs_trip_marker","osm_rel_id","stops","start","end_border","route_type","spawn_times","orig_spawn_times","BusRouteID","0","BusStop","id","name","driving_pos","sidewalk_pos","is_train_stop","BusStopID","sidewalk","idx","Intersection","id","polygon","turns","elevation","intersection_type","orig_id","incoming_lanes","outgoing_lanes","roads","merged","IntersectionID","0","IntersectionType","StopSign","TrafficSignal","Border","Construction","Lane","id","parent","lane_type","lane_center_pts","width","dir","src_i","dst_i","bus_stops","driving_blackhole","biking_blackhole","LaneID","0","LaneSpec","lt","dir","width","LaneType","Driving","Parking","Sidewalk","Shoulder","Biking","Bus","SharedLeftTurn","Construction","LightRail","NORMAL_LANE_THICKNESS","PARKING_LOT_SPOT_LENGTH","SIDEWALK_THICKNESS","ParkingLot","id","polygon","aisles","osm_id","spots","extra_spots","driveway_line","driving_pos","sidewalk_line","sidewalk_pos","ParkingLotID","0","DirectedRoadID","id","dir","Direction","Fwd","Back","Road","id","osm_tags","turn_restrictions","complicated_turn_restrictions","orig_id","speed_limit","access_restrictions","zorder","percent_incline","lanes_ltr","center_pts","untrimmed_center_pts","src_i","dst_i","RoadID","0","ControlStopSign","id","roads","RoadWithStopSign","lane_closest_to_edge","must_stop","ControlTrafficSignal","id","stages","offset","movements","Stage","protected_movements","yield_movements","stage_type","StageType","Fixed","Variable","CompressedMovementID","i","idx","Movement","id","turn_type","members","geom","angle","MovementID","from","to","parent","crosswalk","Turn","id","turn_type","geom","other_crosswalk_ids","TurnID","parent","src","dst","TurnPriority","Banned","Yield","Protected","TurnType","Crosswalk","SharedSidewalkCorner","Straight","Right","Left","UTurn","AccessRestrictions","allow_through_traffic","cap_vehicles_per_hour","Zone","members","borders","restrictions","IntersectionCluster","members","uber_turns","UberTurn","path","Path","steps","orig_req","total_length","crossed_so_far","uber_turns","currently_inside_ut","PathConstraints","Pedestrian","Car","Bike","Bus","Train","PathRequest","start","end","constraints","PathStep","Lane","ContraflowLane","Turn","PathStepV2","Along","Contraflow","Movement","PathV2","steps","req","cost","uber_turns","RoutingParams","unprotected_turn_penalty","bike_lane_penalty","bus_lane_penalty","driving_lane_penalty","Position","lane","dist_along","Traversable","Lane","Turn","MAX_BIKE_SPEED","MAX_WALKING_SPEED","Map","roads","lanes","lane_id_counter","intersections","buildings","bus_stops","bus_routes","areas","parking_lots","boundary_polygon","stop_signs","traffic_signals","gps_bounds","bounds","config","pathfinder","pathfinder_dirty","routing_params","zones","name","edits","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","next_back","len","next","size_hint","nth","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","sub","not","bitand","bitor","bitxor","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","from_str","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","iter","enum_into_u32","enum_from_u32","serialize","deserialize","to_perma","to_permanent","to_permanent","new_edits","get_edits","unsaved_edits","get_r_edit","edit_road_cmd","get_i_edit","save_edits","must_apply_edits","try_apply_edits","apply_edits","recalculate_pathfinding_after_edits","incremental_edit_traffic_signal","create_from_raw","import_minimal","load_synchronously","map_loaded_directly","blank","all_roads","all_lanes","all_intersections","all_turns","all_buildings","all_areas","all_parking_lots","all_zones","maybe_get_r","maybe_get_l","maybe_get_i","maybe_get_t","maybe_get_b","maybe_get_pl","maybe_get_a","maybe_get_bs","maybe_get_stop_sign","maybe_get_traffic_signal","maybe_get_br","get_r","get_l","get_i","get_t","get_b","get_a","get_pl","get_stop_sign","get_traffic_signal","get_turns_in_intersection","get_turns_from_lane","get_turns_to_lane","get_turn_between","get_next_turns_and_lanes","get_turns_for","get_movements_for","get_next_roads","get_parent","get_gps_bounds","get_bounds","get_city_name","get_name","all_bus_stops","get_bs","get_br","all_bus_routes","get_bus_route","get_routes_serving_stop","building_to_road","all_incoming_borders","all_outgoing_borders","all_directed_roads_for","save","find_driving_lane_near_building","get_boundary_polygon","pathfind","pathfind_avoiding_roads","pathfind_with_params","should_use_transit","get_movement","find_r_by_osm_id","find_i_by_osm_id","find_b_by_osm_id","find_br","hack_override_offstreet_spots","hack_override_offstreet_spots_individ","hack_override_bldg_type","hack_override_orig_spawn_times","hack_add_area","hack_override_routing_params","get_languages","get_config","simple_path_btwn","routing_params"],"q":["map_model","map_model::city","","","","","","","map_model","map_model::connectivity","map_model::connectivity::walking","","","","","","","","","","map_model::connectivity","","","","","","","","","","","","","","","map_model","map_model::edits","map_model::edits::compat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::edits","map_model::edits::perma","","","","","","","","","","map_model::edits::perma::PermanentEditIntersection","map_model::edits::perma","","","","map_model::edits::perma::PermanentEditCmd","","","map_model::edits::perma","map_model::edits::perma::PermanentEditCmd","","","map_model::edits::perma","map_model::edits::perma::PermanentEditCmd","","","map_model::edits::perma","","","","map_model::edits","","","","","","","","","","","","","","","","","","","","","map_model::edits::EditCmd","","","map_model::edits","map_model::edits::EditCmd","","","map_model::edits","map_model::edits::EditCmd","","","map_model::edits","","","","","","","","","","","","","","","","","","","","","","map_model","map_model::make","map_model::make::bridges","map_model::make","map_model::make::buildings","","","map_model::make","map_model::make::collapse_intersections","","","map_model::make","map_model::make::initial","map_model::make::initial::geometry","","","","","","","","","","","","map_model::make::initial","map_model::make::initial::lane_specs","","map_model::make::initial","","","","","","","","","","","","","","","","","","","","map_model::make","map_model::make::medians","map_model::make","map_model::make::merge_intersections","","","","map_model::make","map_model::make::parking_lots","","","","map_model::make","map_model::make::remove_disconnected","map_model::make","map_model::make::traffic_signals","map_model::make::traffic_signals::lagging_green","","","","","","","","","","","","","","","","map_model::make::traffic_signals","","","","","","","","","","","","","","","","map_model::make","map_model::make::transit","","","","","","","","","map_model::make","map_model::make::turns","","","","","","","","","","map_model::make","map_model::make::walking_turns","","","","","","","","","map_model::make","","","","","","","map_model","map_model::map","","","","","","","","map_model","map_model::objects","map_model::objects::area","","","","","","","","","","","","","","","map_model::objects","map_model::objects::building","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::building::BuildingType","","map_model::objects::building","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects","map_model::objects::bus_stop","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects","map_model::objects::intersection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects","map_model::objects::lane","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects","map_model::objects::parking_lot","","","","","","","","","","","","","","map_model::objects","map_model::objects::road","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects","map_model::objects::stop_signs","","","","","","","","","map_model::objects","map_model::objects::traffic_signals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects","map_model::objects::turn","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects","map_model::objects::zone","","","","","","","","","","map_model","map_model::osm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model","map_model::pathfind","map_model::pathfind::ch","","","","","","","","","","","map_model::pathfind","map_model::pathfind::dijkstra","","","","","","map_model::pathfind","map_model::pathfind::node_map","","","","","","","","","","","map_model::pathfind","map_model::pathfind::pathfinder","","","","","","","","map_model::pathfind","map_model::pathfind::uber_turns","","","","","","","","","","","","","","","","","","map_model::pathfind","map_model::pathfind::v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::pathfind","map_model::pathfind::v2","","","","","","","","","","","","","","","","","map_model::pathfind","map_model::pathfind::vehicles","","","","","","","","","","","","","","map_model::pathfind","map_model::pathfind::walking","","","","","","","","","map_model::connectivity","","map_model::pathfind::walking","","","","","","","","map_model::pathfind","","","","","","","","","","","","","","","","","map_model","map_model::raw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model","map_model::traversable","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model","","","","","","","map_model::EditCmd","","","map_model","map_model::EditCmd","","","map_model","map_model::EditCmd","","","map_model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::BuildingType","","map_modelmap_model::city","","","","","","","","map_model::connectivity::walking","","","","","","","","","","","","","","","","","","","map_model::connectivity","","","","","","","","","","","","","","","","","","","","","map_model::edits::compat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::edits::perma","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::edits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::make::initial::geometry","","","","","","","","map_model::make::initial","","","","","","","","","","","","","","","","","","","","","","","","map_model::make::transit","","","","","","","","map_model::make","","","","","","","","","","map_model::map","","","","","","","","","","","","","","","","","","","","map_model::objects::area","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::building","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::bus_stop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::intersection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::lane","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::parking_lot","","","","","","","","","","","","","","","","","","","","","map_model::objects::road","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::stop_signs","","","","","","","","","","","","","","","","","","","","map_model::objects::traffic_signals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::turn","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::zone","","","","","","","","","","","","","","","","","","map_model::osm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::pathfind::ch","","","","","","","","map_model::pathfind::node_map","","","","","","","","","","","","","","","","map_model::pathfind::pathfinder","","","","","","","","map_model::pathfind::uber_turns","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::pathfind::v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::pathfind::v2","","","","","","","","","","","","","","","","","","","","map_model::pathfind::vehicles","","","","","","","","","","","","","","","","","","","map_model::pathfind::walking","","","","","","","","map_model::pathfind","","","","","","","","","","","","","","","","","","","map_model::raw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::traversable","","","","","","","","","","","","","","","","","","","","","","","","","map_model","","","","","","","","map_model::objects::building","","","","","map_model::connectivity::walking","map_model::edits::perma","","","map_model::edits","","","","map_model::make","map_model::map","","map_model::objects::area","","map_model::objects::building","","","","","","","map_model::objects::bus_stop","","","map_model::objects::intersection","","map_model::objects::lane","","","map_model::objects::parking_lot","map_model::objects::road","","","map_model::objects::stop_signs","","map_model::objects::traffic_signals","","","map_model::objects::turn","","","","","","","map_model::objects::zone","map_model::osm","","","","","map_model::pathfind::uber_turns","","map_model::pathfind::v1","","","map_model::pathfind::v2","","map_model::pathfind::vehicles","map_model::connectivity","map_model::pathfind","map_model::raw","","","","","","","","map_model::traversable","","map_model::edits","map_model::connectivity::walking","map_model::connectivity","map_model::objects::area","map_model::objects::building","","","map_model::objects::bus_stop","","map_model::objects::intersection","map_model::objects::lane","","map_model::objects::parking_lot","map_model::objects::road","","","map_model::objects::turn","","","","map_model::osm","","","","","map_model::pathfind::uber_turns","map_model::pathfind::v1","map_model::pathfind::vehicles","map_model::connectivity","map_model::pathfind","map_model::raw","","","map_model::traversable","","map_model::connectivity::walking","","map_model::connectivity","","map_model::edits","","","","","","","","map_model::map","map_model::objects::area","","","map_model::objects::building","","","","","","","map_model::objects::bus_stop","","","","","","map_model::objects::intersection","","","map_model::objects::lane","","","","","map_model::objects::parking_lot","","map_model::objects::road","","","","","map_model::objects::stop_signs","","","","map_model::objects::traffic_signals","","","","","","map_model::objects::turn","","","","","","","","","","","","map_model::objects::zone","","","","map_model::osm","","","","","","","","","map_model::pathfind::uber_turns","","","","map_model::pathfind::v1","","","","","","map_model::pathfind::vehicles","","map_model::connectivity","","map_model::pathfind","","","","map_model::raw","","","","","","","","","map_model::traversable","","","","map_model::connectivity::walking","map_model::connectivity","map_model::objects::area","map_model::objects::building","","","map_model::objects::bus_stop","","map_model::objects::intersection","map_model::objects::lane","","map_model::objects::parking_lot","map_model::objects::road","","","map_model::objects::turn","","","","","map_model::osm","","","","","map_model::pathfind::uber_turns","map_model::pathfind::v1","map_model::pathfind::vehicles","map_model::connectivity","map_model::pathfind","map_model::raw","","","map_model::traversable","","map_model::edits::compat","","","","","map_model::edits","","","","map_model::map","","map_model::objects::area","","","map_model::objects::building","","","","","","map_model::objects::bus_stop","","","","map_model::objects::intersection","","","map_model::objects::lane","","","","map_model::objects::parking_lot","map_model::objects::road","","","","map_model::objects::stop_signs","","map_model::objects::traffic_signals","","","map_model::objects::turn","","","","","","","map_model::objects::zone","","map_model::osm","","","","","map_model::pathfind::uber_turns","","map_model::pathfind::v1","","","map_model::pathfind::v2","","map_model::pathfind::vehicles","map_model::connectivity","map_model::pathfind","map_model::raw","","","","","","","","","","","map_model::traversable","","map_model::objects::area","map_model::objects::building","","map_model::objects::bus_stop","","map_model::objects::intersection","map_model::objects::lane","map_model::objects::parking_lot","map_model::objects::road","","","map_model::objects::turn","map_model::osm","","","","map_model::pathfind::v1","map_model::raw","map_model::traversable","","map_model::pathfind","","","","","map_model::objects::area","","map_model::objects::building","map_model::objects::bus_stop","","map_model::objects::intersection","","map_model::objects::lane","","map_model::objects::parking_lot","map_model::objects::road","","","map_model::objects::turn","","","map_model::osm","","","","map_model::pathfind::v1","map_model::connectivity","map_model::raw","","","map_model::traversable","map_model::objects::building","map_model::city","map_model::edits::perma","","","map_model::edits","map_model::map","","map_model::objects::area","","","map_model::objects::building","","","","","","map_model::objects::bus_stop","","","","map_model::objects::intersection","","","map_model::objects::lane","","","","map_model::objects::parking_lot","","map_model::objects::road","","","","map_model::objects::stop_signs","","map_model::objects::traffic_signals","","","map_model::objects::turn","","","","","","","map_model::objects::zone","","map_model::osm","","","","map_model::pathfind::ch","map_model::pathfind::node_map","map_model::pathfind::pathfinder","map_model::pathfind::uber_turns","","map_model::pathfind::v1","","","map_model::pathfind::v2","","map_model::pathfind::vehicles","","map_model::pathfind::walking","map_model::connectivity","map_model::pathfind","","map_model::raw","","","","","","","","","","map_model::traversable","","map_model","map_model::city","map_model::edits::compat","","","","","map_model::edits::perma","","","map_model::edits","map_model::map","","map_model::objects::area","","","map_model::objects::building","","","","","","map_model::objects::bus_stop","","","","map_model::objects::intersection","","","map_model::objects::lane","","","","map_model::objects::parking_lot","","map_model::objects::road","","","","map_model::objects::stop_signs","","map_model::objects::traffic_signals","","","map_model::objects::turn","","","","","","","map_model::objects::zone","","map_model::osm","","","","map_model::pathfind::ch","map_model::pathfind::node_map","map_model::pathfind::pathfinder","map_model::pathfind::uber_turns","","map_model::pathfind::v1","","","map_model::pathfind::v2","","map_model::pathfind::vehicles","","map_model::pathfind::walking","map_model::connectivity","map_model::pathfind","","map_model::raw","","","","","","","","","","map_model::traversable","","map_model","map_model::objects::building","map_model::pathfind","","","","map_model::edits","","","map_model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","A single city (like Seattle) can be broken down into …","","","","The individual maps","If there’s a single map covering all the smaller maps, …","Generate a city from a bunch of smaller, individual maps. …","","","","If true, allow walking on shoulders.","","","","","","","","Starting from some initial buildings, calculate the cost …","Starting from some initial buildings, calculate the cost …","","If true, allow walking on shoulders.","","This returns the pathfinding cost of crossing one road …","","false is src_i, true is dst_i","","","Calculate the strongly connected components (SCC) of the …","Starting from some initial buildings, calculate the cost …","","","","Return the cost of a single path, and also a mapping from …","Once a Map exists, the player can edit it in the UI …","","When the PermanentMapEdits format changes, add a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","MapEdits are converted to this before serializing. …","","","","","If false, adjacent roads with the same AccessRestrictions …","Edits without these are player generated.","The link is optional even for proposals","","","","","","","","","","","","","","","","","","","","Transform permanent edits to MapEdits, looking up the map …","Transform permanent edits to MapEdits, looking up the map …","","Represents changes to a map. Note this isn’t …","","A stack, oldest edit is first. The same intersection may …","If false, adjacent roads with the same AccessRestrictions …","Derived from commands, kept up to date by update_derived","","","Some edits are included in the game by default, in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Assumes update_derived has been called.","Pick apart changed_roads and figure out if an entire road …","(summary, details)","","","","","","Recalculate the driveways of some buildings after map …","Recalculate the driveways of some parking lots after map …","See …","","Look for roads underneath bridges, then lower their …","","Finalize importing of buildings, mostly by matching them …","","","","Collapse degenerate intersections between two cycleways.","","","Naming is confusing, but RawMap -> InitialMap -> Map. …","OSM describes roads as center-lines that intersect. Turn …","","Also returns a list of labeled polygons for debugging.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fill in empty space between one-way roads.","","Merge tiny “roads” that’re actually just part of a …","","","","","Take in parking lots from OSM and all parking aisle …","Returns (driveway_line, driving_pos, sidewalk_line, …","","","","Some roads might be totally disconnected from the largest …","The various traffic signal generators live in the traffic …","","Create a traffic signal which has a stage that is: …","","","","","","","Build stages. First find roads that are straight across, …","","","","","","","","","Applies a bunch of heuristics to a single intersection, …","","","","","","","","","","","","","","","Simple second-pass after generating all signals. Find …","","Construct the final model of bus/train stops and routes. …","","","","","","","","","","Generate all driving and walking turns at an …","","Ideally, we want every incoming lane to lead to at least …","","","","","","","","","Generate Crosswalk and SharedSidewalkCorner (places where …","Filter out crosswalks on really short roads. In reality, …","","At an intersection of footpaths only, just generate a …","","","","","","Options for converting RawMaps to Maps.","Should contraction hierarchies for pathfinding be built? …","Try to consolidate all short roads. Will likely break.","Preserve all OSM tags for buildings, increasing the final …","","Snap points to an exact Position along the nearest lane. …","Adjust the path to start on the polygon’s border, not …","A bunch of (mostly read-only) queries on a Map.","","If true, driving happens on the right side of the road …","","If true, roads without explicitly tagged sidewalks may …","Street parking is divided into spots of this length. 8 …","","","","","","","","","","","","","","Not from OSM. A user-specified area to focus on.","Areas are just used for drawing.","","","","","The importing process also automatically creates some …","","","","A building has connections to the road and sidewalk, may …","","","","","","","Where a text label should be centered to have the best …","","","","Depending on options while importing, these might be …","The building’s connection for any agent can change …","Goes from building to sidewalk","A business located inside a building.","","This is the specific amenity listed in OSM, not the more …","Depending on options while importing, these might be …","Represent no parking as Private(0, false).","(Name, spots)","(Spots, explicitly tagged as a garage)","","","","","An estimated number of residents, workers","An estimated number of workers","","","None corresponds to the native name","","","","","","","The polyline goes from the building to the driving …","Returns (biking position, sidewalk position). Could fail …","","Does this building contain any amenity matching the …","","Businesses are categorized into one of these types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All types of amenities, in alphabetical order.","Categorize an OSM amenity tag.","Bus stops and routes.","","","As long as this is unique per lane, this value is …","","","","","","These may be on different roads entirely, like for light …","","If it’s both, train overrides bus","","","","","","","","May be a border or not. If not, is long enough for buses …","","","Non-empty, times in order for one day when a vehicle …","Explicitly store whatever the original was, since this can…","","","","","","","","","","","An intersection connects roads. Most have >2 roads and …","","This needs to be in clockwise orientation, or later …","","","","","Note that a lane may belong to both incoming_lanes and …","","","Was a short road adjacent to this intersection merged?","","","","","","","","","","","","Strict for bikes. If there are bike lanes, not allowed to …","","","","Return all incoming roads to an intersection, sorted by …","","","","","From some manually audited cases in Seattle, the length …","","","","","","","","","","","","","","","","","","","","","","","A road segment is broken down into individual lanes, …","","","","","","","","","Meaningless order","{Cars, bikes} trying to start or end here might not be …","","","","","","","","","","","pt2 will be endpoint","","","","","","","","","","","","","","Returns the set of allowed turn types, based on …","Starting from this lane, follow the lane’s left edge to …","For a given lane type, returns some likely widths. This …","","","","","Parking lots have some fixed capacity for cars, and are …","","","","","The middle of the “T”, pointing towards the parking …","If we can’t render all spots (maybe a lot with no …","Goes from the lot to the driving lane","Guaranteed to be at least 7m (MAX_CAR_LENGTH + a little …","Lot to sidewalk","","","","","","","","","","","","","","","","Strict for bikes. If there are bike lanes, not allowed to …","Get the only sidewalk or shoulder on this side of the …","Does this directed road have any lanes of a certain type?","A Road represents a segment between exactly two …","","","self is ‘from’","self is ‘from’. (via, to). Only BanTurns.","","","","","[-1.0, 1.0] theoretically, but in practice, about [-0.25, …","Invariant: A road must contain at least one child","The physical center of the road, including sidewalks, …","Like center_pts, but before any trimming for intersection …","","","Returns all lanes from the left side of the road to …","","","Counting from the left side of the road","lane must belong to this road. Offset 0 is the centermost …","","","Includes off-side","","This is the FIRST yellow line where the direction of the …","","","","Creates the thick polygon representing one half of the …","","","","","","","","","","","","","Many roads wind up with almost no length, due to their …","Get the DirectedRoadID pointing to the intersection. …","Get the DirectedRoadID pointing from the intersection. …","","These are ordered from closest to center lane (left-most …","","","Returns lanes from the “center” going out","Returns lanes from the “center” going out","","","","Only roads incoming to the intersection are listed here.","","","","","Get the priority of a turn according to the stop sign – …","","","","A traffic signal consists of a sequence of Stages that …","","","","","","","","","","","Minimum is the minimum duration, 0 allows cycle to be …","","","Only call this variant while importing the map, to …","","","","Move crosswalks from stages, adding them to an all-walk …","Move crosswalks from stages, adding them to an all-walk …","","Modifies the fixed timing of all stages, applying either …","","","","How long a full cycle of the signal lasts, assuming no …","","","","","","","","","","","","","","Turns are uniquely identified by their (src, dst) lanes …","","src and dst must both belong to parent. No guarantees …","","","","","","","","","","For stop signs: Can’t currently specify this! For …","For stop signs: cars have to stop before doing this turn, …","For stop signs: cars can do this without stopping. These …","A Turn leads from the end of one Lane to the start of …","","","","Empty except for TurnType::Crosswalk. Usually just one …","","","","penalties for (lane types, lane-changing, slow lane)","","Is this turn legal, according to turn lane tagging?","Is this turn legal, according to turn restrictions …","A movement is like a turn, but with less detail – it …","","","","","","This is cheaper to store than a MovementID. It simply …","","","A Movement groups all turns from one road to another, …","","","","The “overall” path of movement, aka, an “average” …","","","Polyline points FROM intersection","","","","Zones and AccessRestrictions are used to model things …","","","","","A contiguous set of roads with access restrictions. This …","","","","","","Useful utilities for working with OpenStreetMap.","","","","","","","","","","","","","","","","","","","Larger number means a bigger road, according to …","","","","","","","","","","","","Everything related to pathfinding through a map for …","Uses https://github.com/easbar/fast_paths. Slower …","","","","","","","","","","","","Pathfinding without needing to build a separate …","","","","","","","Some helpers for working with fast_paths.","A bidirectional mapping between fast_paths NodeId and …","","","","","","","Call this after filling out the input graph, right before …","","","","","Most of the time, prefer using the faster contraction …","","","Finds a path from a start to an end for a certain type of …","Finds a path from a start to an end for a certain type of …","Note this is a slower implementation, never using …","","","To deal with complicated intersections and short roads in …","This only applies to VehiclePathfinder; walking through …","","","","","","(legal, illegal)","Find all other traffic signals “close” to one. Ignore …","","","","","","A sequence of movements through a cluster of …","","Group lane-based uber-turns into road-based UberTurnV2s.","","","","","Original direction","Sidewalks only!","","","","","","","","","","","","","","Once we finish this PathStep, how much distance will be …","","The original PathRequest used to produce this path. If …","","","","","","","","","","","","Trusting the caller to do this in valid ways.","","","","","Traces along the path from its originally requested …","Traces along the path from a specified distance along the …","","Estimate how long following the path will take in the …","","","","","Determines the start and end position to travel between …","","","","Structures related to the new road-based pathfinding …","One step along a path.","Original direction","Opposite direction, sidewalks only","","A path between two endpoints for a particular mode. This …","","","","","","Vehicle implementations often just calculate the sequence …","The original PathRequest used to produce this path.","All steps in this path.","The time needed to perform this path. This time is not a …","Transform a sequence of roads representing a path into …","","","Pathfinding for cars, bikes, buses, and trains using …","","","","","","","","","","","","","","This returns the pathfinding cost of crossing one road …","Pathfinding for pedestrians using contraction …","","","","","","","false is src_i, true is dst_i","","","","","","","","Attempt the pathfinding and see if we should ride a bus. …","","","","","Who’s asking for a path?","","","","","","","Not bijective, but this is the best guess of user intent","Can an agent use a lane? There are some subtle exceptions …","Strict for bikes. If there are bike lanes, not allowed to …","Heavily penalize crossing into an access-restricted zone …","Tuneable parameters for all types of routing.","","","","","","The convert_osm crate produces a RawMap from OSM and …","","","","","","","","","","","","","A way to refer to roads across many maps and over time. …","","","","","Prints the OriginalRoad in a way that can be copied to …","","","","","","(Intersection polygon, polygons for roads, list of …","Generate the trimmed <code>PolyLine</code> for a single RawRoad by …","","","","","","","","(the surviving intersection, the deleted intersection, …","","This is effectively a PolyLine, except there’s a case …","","","(via, to). For turn restrictions where ‘via’ is an …","","Returns the corrected center and total width","","","","","Represents the original place where OSM center-lines …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If not, light rail","","","","This is guaranteed to be in order and contiguous.","","","Probably not an intersection, but this type is more …","Guaranteed to be filled out when RawMap is fully written.","If it’s not explicitly mapped, we’ll do equiv_pos.","","Represents a specific point some distance along a lane.","","","","","","","","","","Given a position along a lane, find the equivalent …","","","","Either a lane or a turn, where most movement happens.","","","","","","","Return the center-line geometry of this lane or turn.","","The single definitive place to determine how fast …","The single definitive place to determine how fast …","The single definitive place to determine how fast …","","","","","A single city (like Seattle) can be broken down into …","","","","The individual maps","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents changes to a map. Note this isn’t …","","A stack, oldest edit is first. The same intersection may …","If false, adjacent roads with the same AccessRestrictions …","Derived from commands, kept up to date by update_derived","","","Some edits are included in the game by default, in …","","MapEdits are converted to this before serializing. …","","","","","If false, adjacent roads with the same AccessRestrictions …","Edits without these are player generated.","The link is optional even for proposals","Options for converting RawMaps to Maps.","Should contraction hierarchies for pathfinding be built? …","Try to consolidate all short roads. Will likely break.","Preserve all OSM tags for buildings, increasing the final …","","","","","If true, driving happens on the right side of the road …","","If true, roads without explicitly tagged sidewalks may …","Street parking is divided into spots of this length. 8 …","Areas are just used for drawing.","","","","","The importing process also automatically creates some …","","","","","","","","","Not from OSM. A user-specified area to focus on.","A business located inside a building.","","This is the specific amenity listed in OSM, not the more …","Depending on options while importing, these might be …","Businesses are categorized into one of these types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A building has connections to the road and sidewalk, may …","","","","","","","Where a text label should be centered to have the best …","","","","Depending on options while importing, these might be …","The building’s connection for any agent can change …","Goes from building to sidewalk","","","","","","","An estimated number of residents, workers","An estimated number of workers","","None corresponds to the native name","","Represent no parking as Private(0, false).","(Name, spots)","(Spots, explicitly tagged as a garage)","","","","","","","","May be a border or not. If not, is long enough for buses …","","","Non-empty, times in order for one day when a vehicle …","Explicitly store whatever the original was, since this can…","","","","","","These may be on different roads entirely, like for light …","","If it’s both, train overrides bus","","","As long as this is unique per lane, this value is …","An intersection connects roads. Most have >2 roads and …","","This needs to be in clockwise orientation, or later …","","","","","Note that a lane may belong to both incoming_lanes and …","","","Was a short road adjacent to this intersection merged?","","","","","","","","A road segment is broken down into individual lanes, …","","","","","","","","","Meaningless order","{Cars, bikes} trying to start or end here might not be …","","","","","","","","","","","","","","","","","","","From some manually audited cases in Seattle, the length …","","Parking lots have some fixed capacity for cars, and are …","","","","","The middle of the “T”, pointing towards the parking …","If we can’t render all spots (maybe a lot with no …","Goes from the lot to the driving lane","Guaranteed to be at least 7m (MAX_CAR_LENGTH + a little …","Lot to sidewalk","","","","","","","","","","A Road represents a segment between exactly two …","","","self is ‘from’","self is ‘from’. (via, to). Only BanTurns.","","","","","[-1.0, 1.0] theoretically, but in practice, about [-0.25, …","Invariant: A road must contain at least one child","The physical center of the road, including sidewalks, …","Like center_pts, but before any trimming for intersection …","","","","","","","Only roads incoming to the intersection are listed here.","","","","A traffic signal consists of a sequence of Stages that …","","","","","","","","","","","Minimum is the minimum duration, 0 allows cycle to be …","This is cheaper to store than a MovementID. It simply …","","","A Movement groups all turns from one road to another, …","","","","The “overall” path of movement, aka, an “average” …","","A movement is like a turn, but with less detail – it …","","","","","A Turn leads from the end of one Lane to the start of …","","","","Empty except for TurnType::Crosswalk. Usually just one …","Turns are uniquely identified by their (src, dst) lanes …","","src and dst must both belong to parent. No guarantees …","","","For stop signs: Can’t currently specify this! For …","For stop signs: cars have to stop before doing this turn, …","For stop signs: cars can do this without stopping. These …","","","","","","","","","","","A contiguous set of roads with access restrictions. This …","","","","This only applies to VehiclePathfinder; walking through …","","","","","","","","","","","","Who’s asking for a path?","","","","","","","","","","","Original direction","Sidewalks only!","","One step along a path.","Original direction","Opposite direction, sidewalks only","","A path between two endpoints for a particular mode. This …","","","","","Tuneable parameters for all types of routing.","","","","","Represents a specific point some distance along a lane.","","","Either a lane or a turn, where most movement happensncode the edits in a permanent format, referring to …","","","","","","","Panics on borders","","Returns (changed_roads, deleted_lanes, deleted_turns, …","","","This can expensive, so don’t constantly do it while …","Since the player is in the middle of editing, the signal …","","Use for creating a map directly from some external …","Load a map from a local serialized Map or RawMap. Note …","After deserializing a map directly, call this after.","Just for temporary std::mem::replace tricks.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The turns may belong to two different intersections!","","","","","Find all movements from one road to another that’re …","","","","","","","","","","","","","","This and all_outgoing_borders are expensive to constantly …","","Find all directed roads usable by somebody.","","Cars trying to park near this building should head for …","","","","","","","","","","","","","","","","","","","Simple search along undirected roads","Returns the routing params baked into the map."],"i":[0,0,1,1,1,1,1,1,0,0,0,2,2,2,2,2,0,3,3,0,0,0,2,2,0,0,4,4,4,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,0,7,7,7,0,8,8,0,9,9,9,0,10,10,10,6,0,0,11,11,11,11,11,11,11,0,12,13,12,12,0,14,15,15,15,14,16,16,16,14,17,17,17,14,11,11,12,0,18,18,18,18,18,18,18,18,0,19,19,19,0,20,20,20,20,20,0,21,22,22,22,21,23,23,23,21,24,24,24,0,25,25,25,25,25,25,25,18,18,18,18,18,18,21,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,26,26,0,0,0,0,0,0,27,27,27,0,28,28,28,28,28,28,28,28,0,29,29,29,29,29,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,30,30,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,31,31,0,0,0,0,32,32,32,32,0,33,33,0,0,0,34,0,35,35,35,35,35,35,0,36,36,36,36,36,0,0,37,0,38,38,38,38,38,38,38,38,38,38,38,38,38,0,39,39,39,0,40,40,0,41,42,42,41,41,41,41,0,43,43,43,43,38,38,38,38,38,38,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,45,45,45,45,44,44,44,0,0,46,46,0,47,0,48,48,48,48,48,0,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,50,0,51,51,51,51,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,0,0,0,0,0,0,53,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,55,55,55,55,55,55,55,55,55,55,55,0,56,56,56,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,56,0,0,0,57,0,58,58,58,58,58,58,58,58,58,58,58,0,0,59,59,0,60,60,60,0,61,61,61,61,61,61,61,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,0,63,63,0,64,64,63,63,63,0,0,0,65,65,65,65,0,66,66,66,0,67,67,67,65,65,65,65,65,65,65,65,65,65,65,65,65,66,66,66,66,66,66,66,65,65,0,0,0,0,0,68,68,68,0,69,69,69,69,69,69,0,70,70,70,0,71,71,71,71,71,71,71,71,71,71,71,0,72,72,72,72,72,0,73,73,0,74,74,74,74,74,74,74,74,0,68,0,0,75,75,75,0,76,76,76,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,77,77,77,77,0,78,0,79,0,80,0,81,81,81,81,0,0,0,82,82,82,82,82,82,82,82,82,0,0,0,0,0,0,0,0,0,0,83,83,83,83,83,83,83,0,84,0,0,0,85,85,85,85,85,85,85,0,0,86,86,0,87,86,86,86,0,0,87,87,87,0,88,86,88,88,0,0,89,89,89,89,89,89,89,0,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,0,91,91,91,91,0,0,0,0,0,92,92,92,0,93,93,93,93,93,93,93,93,93,93,93,0,0,0,94,94,94,94,94,0,95,95,94,94,94,0,0,0,0,96,96,96,96,0,4,4,4,4,4,96,96,96,96,0,0,0,0,0,97,97,97,97,97,97,97,97,97,0,0,98,98,98,98,98,0,0,99,99,99,99,99,99,99,99,99,99,99,0,100,100,100,100,100,100,99,99,99,99,99,99,99,99,99,99,99,99,99,99,0,101,101,101,101,101,101,101,101,101,0,102,102,102,0,103,103,103,103,103,0,104,104,104,104,0,105,105,105,0,106,106,0,107,107,107,106,0,108,108,108,108,108,108,108,108,108,0,109,109,109,109,0,0,110,110,110,110,110,110,110,110,110,110,110,110,110,0,111,111,111,111,111,111,111,111,111,111,111,0,0,0,0,0,1,1,1,1,0,21,22,22,22,21,23,23,23,21,24,24,24,0,25,25,25,25,25,25,25,0,19,19,19,0,20,20,20,0,18,18,18,18,18,18,18,18,0,11,11,11,11,11,11,11,0,31,31,31,0,33,33,0,32,32,32,32,0,36,36,36,36,36,0,34,0,35,35,35,35,35,35,0,39,39,39,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,38,38,38,38,38,38,38,38,38,38,38,38,38,0,37,0,41,42,42,41,41,41,0,43,0,40,40,0,49,49,49,49,49,49,49,49,49,49,49,0,47,0,48,48,48,48,48,0,46,46,0,52,52,52,52,52,52,52,52,52,52,0,50,0,51,51,51,51,0,55,55,55,55,55,55,55,55,55,55,55,0,53,0,56,56,56,0,54,54,54,54,54,54,54,54,54,0,0,0,0,58,58,58,58,58,58,58,58,58,58,0,57,0,61,61,0,60,60,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,59,0,63,63,0,64,64,0,65,65,65,65,0,66,66,66,0,67,67,0,73,73,0,74,74,74,74,74,0,72,72,72,72,0,71,71,71,71,0,68,68,68,0,70,70,70,0,69,69,69,69,69,69,0,75,75,0,76,76,76,0,86,86,0,87,0,90,90,90,90,90,90,0,97,97,97,97,97,0,91,91,91,0,89,89,89,0,92,92,92,0,93,93,93,93,0,98,98,98,98,0,110,110,0,111,111,0,0,0,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,14,14,14,14,14,14,14,14,14,14,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,43,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,63,63,64,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,65,66,66,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,67,67,67,68,68,68,68,68,68,68,68,68,68,68,68,68,69,69,69,69,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,70,71,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,73,73,73,73,74,74,74,74,74,74,74,74,74,74,75,75,75,75,75,75,75,75,75,75,76,76,76,76,76,76,76,76,77,77,77,77,77,77,77,77,77,77,77,78,78,78,78,78,78,78,78,78,78,78,78,78,79,79,79,79,79,79,79,79,79,79,79,79,79,80,80,80,80,80,80,80,80,80,80,80,80,80,81,81,81,81,81,81,81,81,81,81,81,81,81,82,82,82,82,82,82,82,82,83,83,83,83,83,83,83,83,84,84,84,84,84,84,84,84,85,85,85,85,85,85,85,85,86,86,86,86,86,86,86,86,87,87,87,87,87,87,87,87,87,87,88,88,88,88,88,88,88,88,88,88,88,89,89,89,89,89,89,89,89,89,89,89,89,90,90,90,90,90,90,90,90,90,90,91,91,91,91,91,91,91,91,91,91,91,91,92,92,92,92,92,92,92,92,92,92,93,93,93,93,93,93,93,93,93,93,94,94,94,94,94,94,94,94,95,95,95,95,95,95,95,95,95,95,95,96,96,96,96,96,96,96,96,97,97,97,97,97,97,97,97,97,97,97,98,98,98,98,98,98,98,98,99,99,99,99,99,99,99,99,100,100,100,100,100,100,100,100,100,100,100,100,100,101,101,101,101,101,101,101,101,101,101,102,102,102,102,102,102,102,102,102,102,103,103,103,103,103,103,103,103,103,103,104,104,104,104,104,104,104,104,104,104,105,105,105,105,105,105,105,105,105,105,106,106,106,106,106,106,106,106,106,106,106,106,107,107,107,107,107,107,107,107,107,107,107,107,108,108,108,108,108,108,108,108,109,109,109,109,109,109,109,109,110,110,110,110,110,110,110,110,110,110,110,110,111,111,111,111,111,111,111,111,111,111,111,111,111,112,112,112,112,112,112,112,112,45,45,45,45,45,2,11,12,14,18,19,20,21,31,32,33,34,35,37,39,40,41,43,44,45,46,47,48,50,51,53,54,56,57,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,87,88,89,90,91,92,93,95,4,97,100,101,102,103,104,105,106,107,110,111,18,3,5,34,37,43,44,46,47,50,53,54,57,59,60,61,68,69,72,73,77,78,79,80,81,88,89,95,4,97,100,106,107,110,111,3,3,5,5,18,18,19,19,20,20,21,21,33,34,34,35,37,37,40,40,43,43,44,46,46,47,47,48,48,50,50,51,53,53,54,56,56,57,57,59,59,60,61,61,63,63,64,64,65,65,66,66,67,67,68,68,69,70,71,71,72,72,73,73,74,74,75,75,76,76,77,78,78,79,79,80,80,81,81,87,87,88,88,89,89,90,90,91,91,95,95,4,4,97,97,98,98,100,100,101,101,102,102,106,107,107,110,110,111,111,3,5,34,37,43,44,46,47,50,53,54,57,59,60,61,68,69,70,72,73,77,78,79,80,81,88,89,95,4,97,100,106,107,110,111,6,7,8,9,10,18,19,20,21,32,33,34,35,36,37,38,39,40,41,43,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,87,88,89,90,91,92,93,95,4,97,99,100,101,102,103,104,105,106,107,108,109,110,111,34,37,44,46,47,50,53,57,59,60,61,68,78,79,80,81,91,100,110,111,97,97,97,97,97,34,35,37,46,47,50,51,53,54,57,59,60,61,68,72,73,78,79,80,81,89,4,100,106,107,111,44,1,11,12,14,20,32,33,34,35,36,37,38,39,40,41,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,85,87,88,89,90,91,92,93,94,95,96,4,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,1,6,7,8,9,10,11,12,14,20,32,33,34,35,36,37,38,39,40,41,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,84,85,87,88,89,90,91,92,93,94,95,96,4,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,44,97,97,97,97,21,18,19,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112],"f":[null,null,null,null,null,null,[[["map",3]],["city",3]],[[["cityname",3],["timer",3]],["city",3]],null,null,null,null,null,[[],["walkingoptions",3]],[[],["vec",3]],[[],["speed",3]],null,null,null,[[["walkingoptions",3],["duration",3],["map",3],["buildingid",3],["vec",3]],[["hashmap",3],["buildingid",3],["duration",3]]],[[["walkingoptions",3],["duration",3],["map",3],["buildingid",3],["vec",3]],[["hashmap",3],["buildingid",3],["duration",3]]],null,null,null,[[["pathconstraints",4],["movementid",3],["routingparams",3],["map",3],["directedroadid",3]],["duration",3]],null,null,null,null,[[["map",3],["pathconstraints",4]]],[[["pathconstraints",4],["duration",3],["map",3],["buildingid",3],["vec",3]],[["hashmap",3],["buildingid",3],["duration",3]]],null,null,null,[[["pathrequest",3],["map",3]],["option",4]],null,null,[[["map",3],["value",4]],[["permanentmapedits",3],["result",6]]],[[["value",4]]],[[["value",4]]],[[["value",4]]],[[["value",4]]],[[["map",3],["value",4]],["result",6]],[[["value",4]]],[[["value",4]]],[[["value",4]]],[[["value",4]]],[[["value",4]]],[[["value",4]]],[[["map",3],["value",4]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["map",3]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["map",3]],[["editcmd",4],["result",6]]],[[["map",3]],[["result",6],["mapedits",3]]],[[["map",3]],["mapedits",3]],[[["map",3],["intersectionid",3]],[["editintersection",4],["result",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["road",3],["mapconfig",3]],["editroad",3]],[[["editroad",3]],[["vec",3],["string",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["mapedits",3]],[[["map",3],["timer",3],["string",3]],[["result",6],["mapedits",3]]],[[["map",3]]],[[["map",3]]],[[["map",3]]],[[["map",3]]],[[["map",3]]],[[["editeffects",3],["map",3]]],[[],["editcmd",4]],[[["editeffects",3],["map",3],["intersectionid",3]]],[[["lanespec",3],["editeffects",3],["vec",3],["map",3],["roadid",3]]],[[["distance",3],["intersectionid",3],["map",3],["roadid",3]],[["vec",3],["roadid",3]]],[[["buildingid",3],["map",3],["vec",3]]],[[["parkinglotid",3],["map",3],["vec",3]]],null,null,[[["vec",3],["bounds",3],["timer",3]]],null,[[["btreemap",3],["timer",3],["map",3],["bool",15]],[["building",3],["vec",3]]],[[["map",3],["tags",3],["laneid",3]],["string",3]],[[["f64",15],["tags",3],["xorshiftrng",3]],["buildingtype",4]],null,[[["rawmap",3]]],[[["rawroad",3],["rawmap",3]],["bool",15]],[[["rawmap",3],["nodeid",3]]],null,null,null,[[["btreeset",3],["nodeid",3],["bool",15],["originalroad",3],["btreemap",3]],["result",6]],[[["nodeid",3],["btreemap",3]],["result",6]],[[["nodeid",3],["btreemap",3]],["result",6]],[[["vec",3],["pt2d",3]],[["vec",3],["pt2d",3]]],null,null,null,null,null,[[["nodeid",3],["vec",3],["btreemap",3]],["option",4]],[[["btreemap",3],["btreeset",3],["polygon",3],["nodeid",3],["originalroad",3]],[["polygon",3],["option",4]]],null,[[["tags",3],["mapconfig",3]],[["lanespec",3],["vec",3]]],[[["lanespec",3],["drivingside",4],["vec",3]],[["lanespec",3],["vec",3]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["originalroad",3],["rawroad",3],["mapconfig",3]],[["road",3],["result",6]]],null,null,null,null,null,null,[[["bounds",3],["btreeset",3],["timer",3],["rawmap",3]],["initialmap",3]],null,[[["map",3]],[["vec",3],["polygon",3]]],null,[[["rawmap",3],["bool",15]],[["btreeset",3],["nodeid",3]]],[[["bool",15],["originalroad",3],["rawmap",3]],["bool",15]],[[["originalroad",3],["rawmap",3]],["bool",15]],[[["rawroad",3]],["angle",3]],null,[[["map",3],["timer",3]],[["vec",3],["parkinglot",3]]],[[["hashmap",3],["polygon",3],["hashablept2d",3],["map",3]],["result",6]],[[["polygon",3]],["vec",3]],[[["line",3],["polygon",3]],["bool",15]],null,[[["rawmap",3],["timer",3]]],null,null,[[["map",3],["intersectionid",3]],[["controltrafficsignal",3],["option",4]]],[[["map",3],["intersectionid",3]],[["controltrafficsignal",3],["option",4]]],[[["controltrafficsignal",3]],[["controltrafficsignal",3],["option",4]]],[[["controltrafficsignal",3]]],[[["controltrafficsignal",3]],[["controltrafficsignal",3],["option",4]]],[[["stage",3],["controltrafficsignal",3]],["option",4]],[[["movementid",3]],["stage",3]],[[["map",3],["intersectionid",3]],[["controltrafficsignal",3],["option",4]]],[[["stage",3],["controltrafficsignal",3]]],[[["roadid",3]],[["movementid",3],["vec",3]]],[[["vec",3],["roadid",3]],[["option",4],["movementid",3]]],[[["map",3],["intersectionid",3]],[["controltrafficsignal",3],["option",4]]],[[["map",3],["intersectionid",3]],[["controltrafficsignal",3],["option",4]]],[[["controltrafficsignal",3]]],[[]],[[["controltrafficsignal",3]]],[[["map",3],["bool",15],["intersectionid",3]],["vec",3]],[[["map",3],["intersectionid",3]],["controltrafficsignal",3]],[[["map",3],["intersectionid",3]],["controltrafficsignal",3]],[[["map",3],["intersectionid",3]],[["controltrafficsignal",3],["option",4]]],[[["map",3],["intersectionid",3]],[["controltrafficsignal",3],["option",4]]],[[["map",3],["intersectionid",3]],[["controltrafficsignal",3],["option",4]]],[[["map",3],["intersectionid",3]],[["controltrafficsignal",3],["option",4]]],[[["map",3],["intersectionid",3]],[["controltrafficsignal",3],["option",4]]],[[["map",3],["intersectionid",3]],["controltrafficsignal",3]],[[["map",3],["intersectionid",3]],["controltrafficsignal",3]],[[["controltrafficsignal",3]]],null,null,[[["drivingside",4],["controltrafficsignal",3],["vec",3],["vec",3]]],[[["drivingside",4],["controltrafficsignal",3],["vec",3],["vec",3],["bool",15]]],[[["map",3]]],null,[[["map",3],["timer",3]]],[[["rawbusroute",3],["matcher",3],["map",3],["btreemap",3]],["result",6]],null,null,null,[[["map",3],["timer",3]],["matcher",3]],[[["rawbusstop",3],["pathconstraints",4],["map",3]],["result",6]],[[["position",3],["pathconstraints",4],["map",3]],[["laneid",3],["result",6]]],[[],[["time",3],["vec",3]]],null,[[["map",3],["intersection",3]],[["vec",3],["turn",3]]],[[["vec",3],["turn",3]],[["vec",3],["turn",3]]],[[["map",3],["intersection",3]],["result",6]],[[["map",3],["intersection",3]],[["vec",3],["turn",3]]],[[["lane",3]],[["polyline",3],["result",6]]],[[["pt2d",3]],[["f64",15],["point2d",3]]],[[["f64",15],["point2d",3]],["pt2d",3]],[[["turn",3],["map",3],["vec",3],["turntype",4]],[["vec",3],["turn",3]]],[[["angle",3]],["turntype",4]],[[["map",3],["intersection",3]],[["option",4],["hashmap",3]]],null,[[["map",3],["intersection",3]],[["vec",3],["turn",3]]],[[["turn",3],["vec",3],["map",3],["intersection",3]],[["vec",3],["turn",3]]],[[["map",3],["intersection",3]],[["vec",3],["turn",3]]],[[["map",3],["intersection",3]],[["vec",3],["turn",3]]],[[["drivingside",4],["lane",3],["intersectionid",3]],[["option",4],["vec",3]]],[[["intersectionid",3],["road",3],["btreemap",3]],[["option",4],["vec",3]]],[[["drivingside",4],["lane",3],["intersection",3]],["polyline",3]],[[["laneid",3],["intersectionid",3]],["turnid",3]],[[["vec",3],["btreemap",3]],[["option",4],["lane",3]]],null,null,null,null,[[],["rawtomapoptions",3]],[[["bounds",3],["distance",3],["hashset",3],["fn",8],["timer",3],["hashablept2d",3],["btreemap",3]],[["position",3],["hashablept2d",3],["hashmap",3]]],[[["polygon",3],["line",3]],["line",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],null,null,[[["option",4],["string",3]],["string",3]],[[["tags",3]],[["option",4],["nameperlanguage",3]]],[[],["nameperlanguage",3]],[[],["laneid",3]],[[],[["option",4],["string",3]]],[[["map",3]],["option",4]],[[["map",3]],["option",4]],[[],["usize",15]],[[["amenitytype",4]],["bool",15]],[[["position",3],["map",3]],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15]],[["option",4],["amenitytype",4]]],[[],[["vec",3],["str",15]]],[[],[["vec",3],["amenitytype",4]]],[[["str",15]],[["option",4],["amenitytype",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["map",3]],[["vec",3],["pathrequest",3]]],[[],["str",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["map",3]],["bool",15]],[[["map",3]],["bool",15]],[[["map",3]],["bool",15]],[[["map",3]],["bool",15]],[[["map",3],["pathconstraints",4]],[["vec",3],["laneid",3]]],[[["map",3],["pathconstraints",4]],[["vec",3],["laneid",3]]],[[["map",3]],["isize",15]],[[["map",3]],["roadrank",4]],[[],[["vec",3],["roadid",3]]],[[["map",3]],[["vec",3],["roadid",3]]],[[["map",3]],[["option",4],["directedroadid",3]]],[[["map",3]],[["option",4],["directedroadid",3]]],[[["option",4],["map",3],["string",3]],["string",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["str",15]],[[],["str",15]],[[["str",15]],[["option",4],["lanetype",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["pt2d",3]],[[],["pt2d",3]],[[],["line",3]],[[],["line",3]],[[["intersectionid",3]],["pt2d",3]],[[["intersectionid",3]],["line",3]],[[["pt2d",3]],[["distance",3],["option",4]]],[[],["distance",3]],[[],[["vec",3],["intersectionid",3]]],[[["mapconfig",3]],["usize",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["directedroadid",3]],[[["bool",15],["road",3]],[["btreeset",3],["option",4]]],[[["map",3]],["option",4]],[[["lanetype",4],["tags",3]],["vec",3]],[[["str",15]],[["vec",3],["turntype",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["usize",15]],null,null,null,[[],[["vec",3],["directedroadid",3]]],null,null,null,[[],["direction",4]],null,null,null,[[["map",3]],["intersectionid",3]],[[["map",3]],["intersectionid",3]],[[["map",3],["pathconstraints",4]],[["vec",3],["laneid",3]]],[[["map",3]],["laneid",3]],[[["map",3],["lanetype",4]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["vec",3]],[[["map",3]],[["lanespec",3],["vec",3]]],[[["map",3]],["polyline",3]],[[["laneid",3]],["usize",15]],[[["laneid",3]]],[[["map",3],["laneid",3]],[["option",4],["laneid",3]]],[[],["speed",3]],[[["fn",8],["map",3],["laneid",3]],[["option",4],["laneid",3]]],[[],[["vec",3],["laneid",3]]],[[["map",3]],["polyline",3]],[[["map",3]],["distance",3]],[[["map",3]],["distance",3]],[[["map",3]],["polygon",3]],[[["map",3],["direction",4]],[["polygon",3],["result",6]]],[[["option",4],["string",3]],["string",3]],[[],["roadrank",4]],[[],["usize",15]],[[["map",3]],[["vec",3],["busstopid",3]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["road",3]],["intersectionid",3]],[[],["bool",15]],[[],["accessrestrictions",3]],[[["map",3]],[["option",4],["zone",3]]],[[],["bool",15]],[[["intersectionid",3]],["directedroadid",3]],[[["intersectionid",3]],["directedroadid",3]],[[["lanespec",3],["vec",3],["usize",15]],[["vec",3],["lane",3]]],[[],["vec",3]],[[],["vec",3]],[[["direction",4]],["vec",3]],[[["intersectionid",3]],["vec",3]],[[["intersectionid",3]],["vec",3]],null,null,null,null,null,null,null,[[["map",3],["intersectionid",3]],["controlstopsign",3]],[[["map",3],["turnid",3]],["turnpriority",4]],[[["roadid",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["duration",3]],[[["map",3],["intersectionid",3]],["controltrafficsignal",3]],[[["map",3],["intersectionid",3]],["controltrafficsignal",3]],[[["map",3],["intersectionid",3]],["vec",3]],[[["usize",15]],["duration",3]],[[],["result",6]],[[],["bool",15]],[[],["bool",15]],[[["bool",15]],["bool",15]],[[["map",3],["duration",3]],["result",6]],[[["turnid",3]],["movementid",3]],[[],[["btreeset",3],["movementid",3]]],[[["turnid",3]],["compressedmovementid",3]],[[],["duration",3]],[[],["stage",3]],[[["btreemap",3],["movementid",3]],["bool",15]],[[["turnid",3],["controltrafficsignal",3]],["turnpriority",4]],[[["movementid",3]],["turnpriority",4]],[[["turnpriority",4],["movement",3]]],[[["movement",3]]],[[["btreemap",3]],[["option",4],["duration",3]]],[[["map",3]],["trafficsignal",3]],[[["map",3],["trafficsignal",3],["intersectionid",3]],[["controltrafficsignal",3],["result",6]]],[[["movementid",3],["map",3]],["turn",3]],[[["map",3],["turn",3]],[["movementid",3],["result",6]]],[[["map",3],["directedroad",3]],[["result",6],["directedroadid",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["turn",3]],["bool",15]],[[],["angle",3]],[[],["bool",15]],[[["map",3]]],[[["map",3]],["bool",15]],[[["map",3]],["bool",15]],[[["map",3],["intersection",3]],["bool",15]],null,null,null,null,null,[[["map",3]],[["result",6],["movement",3]]],null,null,null,null,null,null,null,null,null,[[["map",3],["intersectionid",3]],[["result",6],["btreemap",3]]],[[["map",3]]],[[["movement",3]],["bool",15]],[[["vec",3],["polyline",3],["directedroadid",3]],[["polyline",3],["result",6]]],[[["map",3]],["movementid",3]],null,null,null,null,[[],["accessrestrictions",3]],null,null,null,null,[[["map",3]],[["vec",3],["zone",3]]],[[["map",3],["roadid",3]],["zone",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],["roadrank",4]],[[["str",15]],["usize",15]],null,null,null,null,null,null,null,null,null,null,[[],["i64",15]],null,null,null,null,null,null,null,null,[[["map",3],["timer",3]],["contractionhierarchypathfinder",3]],[[["pathrequest",3],["map",3]],[["option",4],["pathv2",3]]],[[["map",3],["position",3]],["option",4]],[[["map",3],["timer",3]]],[[["duration",3]],["usize",15]],null,[[["pathrequest",3],["map",3],["routingparams",3]],[["option",4],["pathv2",3]]],[[["map",3],["pathconstraints",4]],[["movementid",3],["digraphmap",6],["directedroadid",3]]],[[["pathrequest",3],["roadid",3],["map",3],["btreeset",3]],[["result",6],["pathv2",3]]],[[["pathrequest",3],["digraphmap",6],["movementid",3],["routingparams",3],["map",3],["directedroadid",3]],[["option",4],["pathv2",3]]],[[["map",3]],[["digraphmap",6],["duration",3],["walkingnode",4]]],[[["pathrequest",3],["map",3]],[["option",4],["pathv2",3]]],null,null,null,null,[[],["nodemap",3]],[[],["nodeid",6]],[[],["nodeid",6]],[[["shortestpath",3]],["vec",3]],[[["inputgraph",3]]],null,null,[[["deserializer",8]],[["nodemap",3],["result",4]]],null,null,null,null,[[["pathrequest",3],["map",3]],[["option",4],["pathv2",3]]],[[["pathrequest",3],["map",3],["routingparams",3]],[["option",4],["pathv2",3]]],[[["pathrequest",3],["roadid",3],["map",3],["btreeset",3]],[["result",6],["pathv2",3]]],[[["map",3],["position",3]],["option",4]],[[["map",3],["timer",3]]],null,null,null,null,null,null,[[["map",3]],[["vec",3],["intersectioncluster",3]]],[[["btreeset",3],["map",3],["intersectionid",3]]],[[["map",3],["intersectionid",3]],[["btreeset",3],["option",4]]],[[["map",3],["btreeset",3],["turnid",3]],[["uberturn",3],["vec",3]]],[[["btreemap",3],["turnid",3]],[["vec",3],["turnid",3]]],[[],["laneid",3]],[[],["laneid",3]],[[["map",3]],["polyline",3]],null,null,[[["map",3]],[["vec",3],["uberturnv2",3]]],[[],["directedroadid",3]],[[],["directedroadid",3]],null,null,null,null,null,[[],["traversable",4]],[[],["laneid",3]],[[],["turnid",3]],[[["map",3],["distance",3],["option",4]],[["polyline",3],["result",6]]],null,null,null,null,null,null,null,[[["pathrequest",3],["vec",3],["map",3],["vec",3],["uberturn",3],["pathstep",4]],["path",3]],[[["map",3],["pathstep",4]],["distance",3]],[[["pathrequest",3],["map",3]],["path",3]],[[],["pathrequest",3]],[[],["distance",3]],[[],["distance",3]],[[],["f64",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["option",4]],[[],[["option",4],["uberturn",3]]],[[["map",3]],["pathstep",4]],[[["map",3],["pathstep",4]]],[[["turnid",3]],["bool",15]],[[["usize",15],["map",3],["pathstep",4]]],[[],["pathstep",4]],[[],["pathstep",4]],[[],[["option",4],["pathstep",4]]],[[],["pathstep",4]],[[["map",3]],[["polyline",3],["option",4]]],[[["map",3],["distance",3]],[["polyline",3],["option",4]]],[[],["vecdeque",3]],[[["option",4],["pathconstraints",4],["map",3],["speed",3]],["duration",3]],null,null,null,null,[[["map",3],["buildingid",3],["pathconstraints",4]],[["option",4],["pathrequest",3]]],[[["map",3]]],[[["map",3]]],[[["map",3],["pathrequest",3]]],null,null,null,null,null,null,null,null,null,null,[[["vec",3],["pathstepv2",4],["pathrequest",3],["duration",3],["vec",3],["uberturnv2",3]],["pathv2",3]],[[["pathrequest",3],["vec",3],["duration",3],["map",3],["vec",3],["uberturnv2",3],["directedroadid",3]],["pathv2",3]],[[],["pathrequest",3]],[[],["vec",3]],[[],["duration",3]],[[["map",3]],[["result",6],["path",3]]],[[["map",3]],[["result",6],["path",3]]],[[["map",3],["vec",3],["uberturnv2",3]],[["uberturn",3],["vec",3]]],null,null,null,null,null,null,null,null,null,null,[[["pathconstraints",4],["map",3],["vehiclepathfinder",3],["option",4]],["vehiclepathfinder",3]],[[["pathrequest",3],["map",3]],[["option",4],["pathv2",3]]],[[["map",3]]],[[["map",3],["pathconstraints",4],["nodemap",3]],["inputgraph",3]],[[["pathconstraints",4],["movementid",3],["routingparams",3],["map",3],["directedroadid",3]],["duration",3]],null,null,null,null,null,null,null,null,null,null,[[["position",3],["map",3]],["walkingnode",4]],[[["position",3],["map",3]],["walkingnode",4]],[[["map",3],["bool",15],["vehiclepathfinder",3]],["sidewalkpathfinder",3]],[[["map",3],["vehiclepathfinder",3]]],[[["pathrequest",3],["map",3]],[["option",4],["pathv2",3]]],[[["map",3],["position",3]],["option",4]],[[["map",3],["nodemap",3],["bool",15],["vehiclepathfinder",3]],["inputgraph",3]],[[["map",3],["nodemap",3],["inputgraph",3],["vehiclepathfinder",3]]],[[["vec",3],["map",3],["walkingnode",4]],[["vec",3],["pathstepv2",4]]],[[["pathrequest",3],["map",3]],["pathv2",3]],null,null,null,null,null,null,[[],[["pathconstraints",4],["vec",3]]],[[["lanetype",4]],["pathconstraints",4]],[[["map",3],["lane",3]],["bool",15]],[[["map",3],["vec",3],["laneid",3]],[["vec",3],["laneid",3]]],[[["map",3],["pathconstraints",4],["movementid",3]],["duration",3]],null,null,null,null,null,[[],["routingparams",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i64",15]],["originalroad",3]],[[],["string",3]],[[["originalroad",3]],["nodeid",3]],[[["mapname",3]],["rawmap",3]],[[["nodeid",3]],[["vec",3],["originalroad",3]]],[[["i64",15]],["nodeid",3]],[[["i64",15]],["wayid",3]],[[["nodeid",3]]],[[["originalroad",3]],[["polyline",3],["option",4]]],[[]],[[],["cityname",3]],[[["nodeid",3]],["bool",15]],[[["nodeid",3]]],[[["pt2d",3],["nodeid",3]],[["option",4],["vec",3]]],[[["pt2d",3]],["nodeid",3]],[[["nodeid",3]],[["distance",3],["option",4]]],[[["originalroad",3]],["result",6]],null,null,null,null,null,null,[[["originalroad",3],["mapconfig",3]],["result",6]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],[["option",4],["restrictiontype",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["distance",3],["laneid",3]],["position",3]],[[["laneid",3]],["position",3]],[[["map",3],["laneid",3]],["position",3]],[[],["laneid",3]],[[],["distance",3]],[[["map",3]],["pt2d",3]],[[["map",3]]],[[["map",3],["laneid",3]],["position",3]],[[["map",3],["distance",3],["laneid",3]],["position",3]],[[["map",3],["distance",3]],[["option",4],["position",3]]],[[["map",3],["distance",3]],[["option",4],["position",3]]],null,null,null,[[],["laneid",3]],[[],["turnid",3]],[[],[["option",4],["turnid",3]]],[[],[["option",4],["laneid",3]]],[[["map",3]],["polyline",3]],[[["map",3]],["isize",15]],[[["option",4],["pathconstraints",4],["map",3],["speed",3]],["speed",3]],[[["option",4],["directedroadid",3],["pathconstraints",4],["map",3],["speed",3]],["speed",3]],[[["option",4],["pathconstraints",4],["movementid",3],["map",3],["speed",3]],["speed",3]],null,null,[[["f64",15],["speed",3]],["speed",3]],[[["f64",15],["speed",3]],["speed",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[],["usize",15]],[[],["option",4]],[[]],[[["usize",15]],["option",4]],[[],["walkingoptions",3]],[[],["permanentmapedits",3]],[[],["permanenteditintersection",4]],[[],["permanenteditcmd",4]],[[],["mapedits",3]],[[],["editintersection",4]],[[],["editroad",3]],[[],["editcmd",4]],[[],["rawtomapoptions",3]],[[],["mapconfig",3]],[[],["drivingside",4]],[[],["areaid",3]],[[],["areatype",4]],[[],["buildingid",3]],[[],["amenity",3]],[[],["offstreetparking",4]],[[],["buildingtype",4]],[[],["nameperlanguage",3]],[[],["amenitytype",4]],[[],["amenitytypeiter",3]],[[],["busstopid",3]],[[],["busrouteid",3]],[[],["busstop",3]],[[],["intersectionid",3]],[[],["intersectiontype",4]],[[],["laneid",3]],[[],["lanetype",4]],[[],["lanespec",3]],[[],["parkinglotid",3]],[[],["roadid",3]],[[],["direction",4]],[[],["directedroadid",3]],[[],["controlstopsign",3]],[[],["roadwithstopsign",3]],[[],["controltrafficsignal",3]],[[],["stage",3]],[[],["stagetype",4]],[[],["turnid",3]],[[],["turntype",4]],[[],["turnpriority",4]],[[],["turn",3]],[[],["movementid",3]],[[],["compressedmovementid",3]],[[],["movement",3]],[[],["accessrestrictions",3]],[[],["roadrank",4]],[[],["nodeid",3]],[[],["wayid",3]],[[],["relationid",3]],[[],["osmid",4]],[[],["uberturn",3]],[[],["uberturnv2",3]],[[],["pathstep",4]],[[],["path",3]],[[],["pathrequest",3]],[[],["pathstepv2",4]],[[],["pathv2",3]],[[],["node",4]],[[],["walkingnode",4]],[[]],[[],["originalroad",3]],[[],["rawroad",3]],[[],["rawintersection",3]],[[],["rawbuilding",3]],[[],["rawarea",3]],[[],["rawparkinglot",3]],[[],["restrictiontype",4]],[[],["turnrestriction",3]],[[],["position",3]],[[],["traversable",4]],[[],["mapedits",3]],[[["item",3]],["ordering",4]],[[["item",3]],["ordering",4]],[[["areaid",3]],["ordering",4]],[[["buildingid",3]],["ordering",4]],[[["nameperlanguage",3]],["ordering",4]],[[["amenitytype",4]],["ordering",4]],[[["busstopid",3]],["ordering",4]],[[["busrouteid",3]],["ordering",4]],[[["intersectionid",3]],["ordering",4]],[[["laneid",3]],["ordering",4]],[[["lanetype",4]],["ordering",4]],[[["parkinglotid",3]],["ordering",4]],[[["roadid",3]],["ordering",4]],[[["direction",4]],["ordering",4]],[[["directedroadid",3]],["ordering",4]],[[["turnid",3]],["ordering",4]],[[["turntype",4]],["ordering",4]],[[["movementid",3]],["ordering",4]],[[["compressedmovementid",3]],["ordering",4]],[[["roadrank",4]],["ordering",4]],[[["nodeid",3]],["ordering",4]],[[["wayid",3]],["ordering",4]],[[["relationid",3]],["ordering",4]],[[["osmid",4]],["ordering",4]],[[["uberturnv2",3]],["ordering",4]],[[["pathstep",4]],["ordering",4]],[[["node",4]],["ordering",4]],[[["walkingnode",4]],["ordering",4]],[[["pathconstraints",4]],["ordering",4]],[[["originalroad",3]],["ordering",4]],[[["restrictiontype",4]],["ordering",4]],[[["turnrestriction",3]],["ordering",4]],[[["position",3]],["ordering",4]],[[["traversable",4]],["ordering",4]],[[["item",3]],["bool",15]],[[["item",3]],["bool",15]],[[["item",3]],["bool",15]],[[["item",3]],["bool",15]],[[["mapedits",3]],["bool",15]],[[["mapedits",3]],["bool",15]],[[["editintersection",4]],["bool",15]],[[["editintersection",4]],["bool",15]],[[["editroad",3]],["bool",15]],[[["editroad",3]],["bool",15]],[[["editcmd",4]],["bool",15]],[[["editcmd",4]],["bool",15]],[[["drivingside",4]],["bool",15]],[[["areaid",3]],["bool",15]],[[["areaid",3]],["bool",15]],[[["areatype",4]],["bool",15]],[[["buildingid",3]],["bool",15]],[[["buildingid",3]],["bool",15]],[[["offstreetparking",4]],["bool",15]],[[["offstreetparking",4]],["bool",15]],[[["nameperlanguage",3]],["bool",15]],[[["nameperlanguage",3]],["bool",15]],[[["amenitytype",4]],["bool",15]],[[["busstopid",3]],["bool",15]],[[["busstopid",3]],["bool",15]],[[["busrouteid",3]],["bool",15]],[[["busrouteid",3]],["bool",15]],[[["busstop",3]],["bool",15]],[[["busstop",3]],["bool",15]],[[["intersectionid",3]],["bool",15]],[[["intersectionid",3]],["bool",15]],[[["intersectiontype",4]],["bool",15]],[[["laneid",3]],["bool",15]],[[["laneid",3]],["bool",15]],[[["lanetype",4]],["bool",15]],[[["lanespec",3]],["bool",15]],[[["lanespec",3]],["bool",15]],[[["parkinglotid",3]],["bool",15]],[[["parkinglotid",3]],["bool",15]],[[["roadid",3]],["bool",15]],[[["roadid",3]],["bool",15]],[[["direction",4]],["bool",15]],[[["directedroadid",3]],["bool",15]],[[["directedroadid",3]],["bool",15]],[[["controlstopsign",3]],["bool",15]],[[["controlstopsign",3]],["bool",15]],[[["roadwithstopsign",3]],["bool",15]],[[["roadwithstopsign",3]],["bool",15]],[[["controltrafficsignal",3]],["bool",15]],[[["controltrafficsignal",3]],["bool",15]],[[["stage",3]],["bool",15]],[[["stage",3]],["bool",15]],[[["stagetype",4]],["bool",15]],[[["stagetype",4]],["bool",15]],[[["turnid",3]],["bool",15]],[[["turnid",3]],["bool",15]],[[["turntype",4]],["bool",15]],[[["turnpriority",4]],["bool",15]],[[["turn",3]],["bool",15]],[[["turn",3]],["bool",15]],[[["movementid",3]],["bool",15]],[[["movementid",3]],["bool",15]],[[["compressedmovementid",3]],["bool",15]],[[["compressedmovementid",3]],["bool",15]],[[["movement",3]],["bool",15]],[[["movement",3]],["bool",15]],[[["accessrestrictions",3]],["bool",15]],[[["accessrestrictions",3]],["bool",15]],[[["zone",3]],["bool",15]],[[["zone",3]],["bool",15]],[[["roadrank",4]],["bool",15]],[[["nodeid",3]],["bool",15]],[[["nodeid",3]],["bool",15]],[[["wayid",3]],["bool",15]],[[["wayid",3]],["bool",15]],[[["relationid",3]],["bool",15]],[[["relationid",3]],["bool",15]],[[["osmid",4]],["bool",15]],[[["osmid",4]],["bool",15]],[[["uberturn",3]],["bool",15]],[[["uberturn",3]],["bool",15]],[[["uberturnv2",3]],["bool",15]],[[["uberturnv2",3]],["bool",15]],[[["pathstep",4]],["bool",15]],[[["pathstep",4]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["pathrequest",3]],["bool",15]],[[["pathrequest",3]],["bool",15]],[[["node",4]],["bool",15]],[[["node",4]],["bool",15]],[[["walkingnode",4]],["bool",15]],[[["walkingnode",4]],["bool",15]],[[],["bool",15]],[[["enumset",3]],["bool",15]],[[["routingparams",3]],["bool",15]],[[["routingparams",3]],["bool",15]],[[["originalroad",3]],["bool",15]],[[["originalroad",3]],["bool",15]],[[["rawroad",3]],["bool",15]],[[["rawroad",3]],["bool",15]],[[["rawintersection",3]],["bool",15]],[[["rawintersection",3]],["bool",15]],[[["restrictiontype",4]],["bool",15]],[[["turnrestriction",3]],["bool",15]],[[["turnrestriction",3]],["bool",15]],[[["position",3]],["bool",15]],[[["position",3]],["bool",15]],[[["traversable",4]],["bool",15]],[[["traversable",4]],["bool",15]],[[["item",3]],[["option",4],["ordering",4]]],[[["item",3]],[["option",4],["ordering",4]]],[[["areaid",3]],[["ordering",4],["option",4]]],[[["buildingid",3]],[["ordering",4],["option",4]]],[[["nameperlanguage",3]],[["ordering",4],["option",4]]],[[["amenitytype",4]],[["ordering",4],["option",4]]],[[["busstopid",3]],[["ordering",4],["option",4]]],[[["busrouteid",3]],[["ordering",4],["option",4]]],[[["intersectionid",3]],[["ordering",4],["option",4]]],[[["laneid",3]],[["ordering",4],["option",4]]],[[["lanetype",4]],[["ordering",4],["option",4]]],[[["parkinglotid",3]],[["ordering",4],["option",4]]],[[["roadid",3]],[["ordering",4],["option",4]]],[[["direction",4]],[["ordering",4],["option",4]]],[[["directedroadid",3]],[["ordering",4],["option",4]]],[[["turnid",3]],[["ordering",4],["option",4]]],[[["turntype",4]],[["ordering",4],["option",4]]],[[["turnpriority",4]],[["ordering",4],["option",4]]],[[["movementid",3]],[["ordering",4],["option",4]]],[[["compressedmovementid",3]],[["ordering",4],["option",4]]],[[["roadrank",4]],[["ordering",4],["option",4]]],[[["nodeid",3]],[["ordering",4],["option",4]]],[[["wayid",3]],[["ordering",4],["option",4]]],[[["relationid",3]],[["ordering",4],["option",4]]],[[["osmid",4]],[["ordering",4],["option",4]]],[[["uberturnv2",3]],[["ordering",4],["option",4]]],[[["pathstep",4]],[["ordering",4],["option",4]]],[[["node",4]],[["ordering",4],["option",4]]],[[["walkingnode",4]],[["ordering",4],["option",4]]],[[["pathconstraints",4]],[["ordering",4],["option",4]]],[[["originalroad",3]],[["ordering",4],["option",4]]],[[["restrictiontype",4]],[["ordering",4],["option",4]]],[[["turnrestriction",3]],[["ordering",4],["option",4]]],[[["position",3]],[["ordering",4],["option",4]]],[[["traversable",4]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],[["result",4],["amenitytype",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["amenitytypeiter",3]],[[],["u32",15]],[[["u32",15]]],[[["pathconstraints",4],["enumset",3],["serializer",8]],["result",4]],[[["deserializer",8]],[["result",4],["enumset",3]]],[[["map",3]],["permanenteditcmd",4]],[[["map",3]],["permanentmapedits",3]],[[["map",3]],["permanenteditintersection",4]],[[],["mapedits",3]],[[],["mapedits",3]],[[],["bool",15]],[[["roadid",3]],["editroad",3]],[[["fn",8],["roadid",3]],["editcmd",4]],[[["intersectionid",3]],["editintersection",4]],[[]],[[["mapedits",3]],["editeffects",3]],[[["mapedits",3]]],[[["bool",15],["mapedits",3]],["editeffects",3]],[[["timer",3]]],[[["controltrafficsignal",3]]],[[["timer",3],["rawmap",3],["rawtomapoptions",3]],["map",3]],[[["intersection",3],["mapname",3],["lane",3],["vec",3],["vec",3],["bounds",3],["road",3],["gpsbounds",3],["vec",3]],["map",3]],[[["timer",3],["string",3]],["map",3]],[[]],[[],["map",3]],[[],["vec",3]],[[],["btreemap",3]],[[],["vec",3]],[[]],[[],["vec",3]],[[],["vec",3]],[[],["vec",3]],[[],["vec",3]],[[["roadid",3]],[["road",3],["option",4]]],[[["laneid",3]],[["option",4],["lane",3]]],[[["intersectionid",3]],[["intersection",3],["option",4]]],[[["turnid",3]],[["turn",3],["option",4]]],[[["buildingid",3]],[["building",3],["option",4]]],[[["parkinglotid",3]],[["parkinglot",3],["option",4]]],[[["areaid",3]],[["option",4],["area",3]]],[[["busstopid",3]],[["option",4],["busstop",3]]],[[["intersectionid",3]],[["controlstopsign",3],["option",4]]],[[["intersectionid",3]],[["option",4],["controltrafficsignal",3]]],[[["busrouteid",3]],[["busroute",3],["option",4]]],[[["roadid",3]],["road",3]],[[["laneid",3]],["lane",3]],[[["intersectionid",3]],["intersection",3]],[[["turnid",3]],["turn",3]],[[["buildingid",3]],["building",3]],[[["areaid",3]],["area",3]],[[["parkinglotid",3]],["parkinglot",3]],[[["intersectionid",3]],["controlstopsign",3]],[[["intersectionid",3]],["controltrafficsignal",3]],[[["intersectionid",3]],["vec",3]],[[["laneid",3]],[["turn",3],["vec",3]]],[[["laneid",3]],[["turn",3],["vec",3]]],[[["intersectionid",3],["laneid",3]],[["turn",3],["option",4]]],[[["intersectionid",3],["laneid",3]],["vec",3]],[[["pathconstraints",4],["laneid",3]],[["turn",3],["vec",3]]],[[["pathconstraints",4],["directedroadid",3]],[["movementid",3],["vec",3]]],[[["roadid",3]],[["roadid",3],["btreeset",3]]],[[["laneid",3]],["road",3]],[[],["gpsbounds",3]],[[],["bounds",3]],[[],["cityname",3]],[[],["mapname",3]],[[],["btreemap",3]],[[["busstopid",3]],["busstop",3]],[[["busrouteid",3]],["busroute",3]],[[],["vec",3]],[[["str",15]],[["busroute",3],["option",4]]],[[["busstopid",3]],[["busroute",3],["vec",3]]],[[["buildingid",3]],["road",3]],[[],[["vec",3],["intersection",3]]],[[],[["vec",3],["intersection",3]]],[[["pathconstraints",4]],[["vec",3],["directedroadid",3]]],[[]],[[["buildingid",3]],["laneid",3]],[[],["polygon",3]],[[["pathrequest",3]],[["result",6],["path",3]]],[[["pathrequest",3],["btreeset",3],["roadid",3]],[["result",6],["path",3]]],[[["pathrequest",3],["routingparams",3]],[["result",6],["path",3]]],[[["position",3]],["option",4]],[[["turnid",3]],[["option",4],["movementid",3]]],[[["originalroad",3]],[["result",6],["roadid",3]]],[[["nodeid",3]],[["intersectionid",3],["result",6]]],[[["osmid",4]],[["option",4],["buildingid",3]]],[[["relationid",3]],[["option",4],["busrouteid",3]]],[[["usize",15]]],[[["usize",15],["buildingid",3]]],[[["buildingtype",4],["buildingid",3]]],[[["time",3],["busrouteid",3],["vec",3]]],[[["tags",3],["areatype",4],["polygon",3]]],[[["routingparams",3],["timer",3]]],[[],[["str",15],["btreeset",3]]],[[],["mapconfig",3]],[[["intersectionid",3]],[["vec",3],["option",4]]],[[],["routingparams",3]]],"p":[[3,"City"],[3,"WalkingOptions"],[3,"Item"],[4,"WalkingNode"],[3,"Item"],[3,"OriginalLane"],[3,"ChangeLaneType"],[3,"ReverseLane"],[3,"ChangeSpeedLimit"],[3,"ChangeAccessRestrictions"],[3,"PermanentMapEdits"],[4,"PermanentEditIntersection"],[13,"StopSign"],[4,"PermanentEditCmd"],[13,"ChangeRoad"],[13,"ChangeIntersection"],[13,"ChangeRouteSchedule"],[3,"MapEdits"],[4,"EditIntersection"],[3,"EditRoad"],[4,"EditCmd"],[13,"ChangeRoad"],[13,"ChangeIntersection"],[13,"ChangeRouteSchedule"],[3,"EditEffects"],[3,"Piece"],[3,"InitialMap"],[3,"Road"],[3,"Intersection"],[3,"Matcher"],[3,"RawToMapOptions"],[3,"MapConfig"],[4,"DrivingSide"],[3,"AreaID"],[4,"AreaType"],[3,"Area"],[3,"BuildingID"],[3,"Building"],[3,"Amenity"],[4,"OffstreetParking"],[4,"BuildingType"],[13,"Residential"],[3,"NamePerLanguage"],[4,"AmenityType"],[3,"AmenityTypeIter"],[3,"BusStopID"],[3,"BusRouteID"],[3,"BusStop"],[3,"BusRoute"],[3,"IntersectionID"],[4,"IntersectionType"],[3,"Intersection"],[3,"LaneID"],[4,"LaneType"],[3,"Lane"],[3,"LaneSpec"],[3,"ParkingLotID"],[3,"ParkingLot"],[3,"RoadID"],[4,"Direction"],[3,"DirectedRoadID"],[3,"Road"],[3,"ControlStopSign"],[3,"RoadWithStopSign"],[3,"ControlTrafficSignal"],[3,"Stage"],[4,"StageType"],[3,"TurnID"],[4,"TurnType"],[4,"TurnPriority"],[3,"Turn"],[3,"MovementID"],[3,"CompressedMovementID"],[3,"Movement"],[3,"AccessRestrictions"],[3,"Zone"],[4,"RoadRank"],[3,"NodeID"],[3,"WayID"],[3,"RelationID"],[4,"OsmID"],[3,"ContractionHierarchyPathfinder"],[3,"NodeMap"],[3,"InnerNodeMap"],[4,"Pathfinder"],[3,"IntersectionCluster"],[3,"UberTurn"],[3,"UberTurnV2"],[4,"PathStep"],[3,"Path"],[3,"PathRequest"],[4,"PathStepV2"],[3,"PathV2"],[3,"VehiclePathfinder"],[4,"Node"],[3,"SidewalkPathfinder"],[4,"PathConstraints"],[3,"RoutingParams"],[3,"RawMap"],[3,"OriginalRoad"],[3,"RawRoad"],[3,"RawIntersection"],[3,"RawBuilding"],[3,"RawArea"],[3,"RawParkingLot"],[4,"RestrictionType"],[3,"TurnRestriction"],[3,"RawBusRoute"],[3,"RawBusStop"],[3,"Position"],[4,"Traversable"],[3,"Map"]]},\
"one_step_import":{"doc":"","t":[5],"n":["main"],"q":["one_step_import"],"d":["Import a one-shot A/B Street map in a single command. …"],"i":[0],"f":[[[],["result",6]]],"p":[]},\
"osm_viewer":{"doc":"","t":[0,6,3,12,12,12,12,11,11,11,3,12,12,12,12,11,11,11,11,3,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["viewer","App","Viewer","top_panel","fixed_object_outline","minimap","businesses","new_state","recalculate_top_panel","calculate_tags","BusinessSearch","counts","show","highlight","hovering_on_amenity","new","update","hovering_on_amenity","render","MinimapController","main","run","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","event","draw_baselayer","draw","has_zorder","make_legend"],"q":["osm_viewer","osm_viewer::viewer","","","","","","","","","","","","","","","","","","","osm_viewer","","osm_viewer::viewer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,3,3],"f":[null,null,null,null,null,null,null,[[["simpleapp",3],["eventctx",3]],[["box",3],["state",8]]],[[["simpleapp",3],["option",4],["widget",3],["eventctx",3]]],[[["simpleapp",3],["eventctx",3]],["widget",3]],null,null,null,null,null,[[["simpleapp",3],["eventctx",3]],["businesssearch",3]],[[["simpleapp",3],["eventctx",3]]],[[["simpleapp",3],["eventctx",3],["option",4],["string",3]]],[[["eventctx",3]],["widget",3]],null,[[]],[[["settings",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[["simpleapp",3],["eventctx",3]],[["simpleapp",3],["transition",4]]],[[],["drawbaselayer",4]],[[["simpleapp",3],["gfxctx",3]]],[[["simpleapp",3]],["bool",15]],[[["simpleapp",3],["eventctx",3]],["widget",3]]],"p":[[3,"Viewer"],[3,"BusinessSearch"],[3,"MinimapController"]]},\
"parking_mapper":{"doc":"","t":[0,6,3,12,12,12,12,12,4,13,13,13,13,13,4,13,13,13,13,13,11,11,3,12,12,12,12,12,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["mapper","App","ParkingMapper","panel","draw_layer","show","selected","data","Show","ToDo","Done","DividedHighways","UnmappedDividedHighways","OverlappingStuff","Value","BothSides","NoStopping","RightOnly","LeftOnly","Complicated","new_state","make","ChangeWay","panel","draw","osm_way_id","data","show","new_state","generate_osmc","find_divided_highways","find_overlapping_stuff","main","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","clone","clone","eq","eq","fmt","event","draw","event","draw"],"q":["parking_mapper","parking_mapper::mapper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","parking_mapper","parking_mapper::mapper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,1,1,1,0,2,2,2,2,2,0,3,3,3,3,3,1,1,0,4,4,4,4,4,4,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,2,3,2,3,2,1,1,4,4],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3],["simpleapp",3]],[["box",3],["state",8]]],[[["value",4],["eventctx",3],["show",4],["btreemap",3],["simpleapp",3],["wayid",3]],[["box",3],["state",8]]],null,null,null,null,null,null,[[["value",4],["eventctx",3],["show",4],["btreemap",3],["hashset",3],["simpleapp",3],["wayid",3]],[["box",3],["state",8]]],[[["btreemap",3],["bool",15],["timer",3]],["result",6]],[[["simpleapp",3]],[["hashset",3],["roadid",3]]],[[["timer",3],["simpleapp",3]],[["polygon",3],["vec",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[],["show",4]],[[],["value",4]],[[["show",4]],["bool",15]],[[["value",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["eventctx",3],["simpleapp",3]],[["simpleapp",3],["transition",4]]],[[["gfxctx",3],["simpleapp",3]]],[[["eventctx",3],["simpleapp",3]],[["simpleapp",3],["transition",4]]],[[["gfxctx",3],["simpleapp",3]]]],"p":[[3,"ParkingMapper"],[4,"Show"],[4,"Value"],[3,"ChangeWay"]]},\
"pick_geofabrik":{"doc":"","t":[5,5,5],"n":["main","load_remote_geojson","find_matching_regions"],"q":["pick_geofabrik","",""],"d":["Takes an osmosis polygon boundary file as input, then …","",""],"i":[0,0,0],"f":[[[],["result",6]],[[["string",3],["str",15]]],[[["lonlat",3],["geojson",4]],["vec",3]]],"p":[]},\
"popdat":{"doc":"popdat (“population data”) generates <code>Scenarios</code> given …","t":[0,5,5,5,5,0,5,5,0,0,5,3,12,11,11,11,11,5,0,3,12,12,12,12,3,12,12,11,5,3,12,12,12,12,12,5,11,11,11,3,12,12,11,11,5,3,12,12,3,12,12,12,12,4,13,13,3,12,4,13,13,13,13,13,13,13,13,13,13,3,12,12,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["activities","rand_duration","rand_time","minutes","hours","distribute_people","assign_people_to_houses","distribute_population_to_homes","import_census","make_person","make_people","PersonFactory","activity_to_buildings","new","activity_to_buildings","find_building_for_activity","make_person","pick_mode","od","DesireLine","home_zone","work_zone","mode","number_commuters","Options","departure_time","work_duration","default","disaggregate","Zone","polygon","pct_overlap","homes","workplaces","borders","create_zones","pick_home","pick_workplace","pick_borders","NormalDistribution","mean","std_deviation","new","sample","distribute_population_to_homes","CensusArea","polygon","population","CensusPerson","home","age","employed","owns_car","PersonType","Student","Worker","Schedule","activities","Activity","Breakfast","Lunch","Dinner","School","Entertainment","Errands","Financial","Healthcare","Home","Work","Config","walk_for_distances_shorter_than","walk_or_bike_for_distances_shorter_than","default","generate_scenario","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","clone","eq","ne","eq","fmt","fmt","fmt","hash","generate_schedule","fetch_all_for_map"],"q":["popdat","popdat::activities","","","","popdat","popdat::distribute_people","","popdat","","popdat::make_person","","","","","","","","popdat","popdat::od","","","","","","","","","","","","","","","","","","","","","","","","","popdat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","popdat::make_person","","","","","","","","","","","","","popdat::od","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","popdat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","popdat::od","popdat","","","",""],"d":["","","","","","","","Starting from some number of total people living in a …","","","","","","","","","","","This is an alternative pipeline for generating a …","This describes some number of commuters living in some …","","","","","","When should somebody depart from home to work?","How long should somebody work before returning home?","","Generates a scenario from aggregated origin/destination …","","","","","","","","Returns endpoints to (leave home, goto home). These’re …","Returns endpoints to (leave work, goto work). These’re …","","A normal distribution of Durations.","","","","","Starting from some number of total people living in a …","Represents aggregate demographic data for some part of a …","","","Demographic information for a single person","","","","","It might be useful to classify a CensusPerson into …","","","A single person’s daily schedule. It’s assumed that …","","Different things people might do in the day. Maybe it’s …","","","","","","","","","","","Any arbitrarily chosen parameters needed should be put …","","","","Wires together all the pieces, so you can just hand this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,2,2,2,2,0,3,3,3,0,0,4,4,4,4,4,0,4,4,4,0,5,5,5,5,0,0,6,6,0,7,7,7,7,0,8,8,0,9,0,10,10,10,10,10,10,10,10,10,10,0,11,11,11,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,6,6,10,2,6,10,10,7,6],"f":[null,[[["xorshiftrng",3],["duration",3]],["duration",3]],[[["xorshiftrng",3],["duration",3]],["time",3]],[[["usize",15]],["duration",3]],[[["usize",15]],["duration",3]],null,[[["config",3],["xorshiftrng",3],["vec",3],["map",3],["censusarea",3]],[["vec",3],["censusperson",3]]],[[["f64",15],["usize",15],["xorshiftrng",3],["polygon",3],["map",3]],["vec",3]],null,null,[[["timer",3],["config",3],["censusperson",3],["xorshiftrng",3],["map",3],["vec",3]],[["personspec",3],["vec",3]]],null,null,[[["map",3]]],[[["map",3]],[["vec",3],["activity",4],["hashmap",3]]],[[["tripendpoint",4],["activity",4],["xorshiftrng",3],["map",3]],[["option",4],["buildingid",3]]],[[["config",3],["xorshiftrng",3],["censusperson",3],["map",3]],["personspec",3]],[[["tripendpoint",4],["xorshiftrng",3],["config",3],["map",3]],["tripmode",4]],null,null,null,null,null,null,null,null,null,[[],["options",3]],[[["string",3],["vec",3],["desireline",3],["xorshiftrng",3],["map",3],["timer",3],["options",3],["hashmap",3],["polygon",3]],[["personspec",3],["vec",3]]],null,null,null,null,null,null,[[["string",3],["hashmap",3],["polygon",3],["map",3]],[["hashmap",3],["string",3],["zone",3]]],[[["xorshiftrng",3],["map",3],["tripmode",4]],["option",4]],[[["xorshiftrng",3],["map",3],["tripmode",4]],["option",4]],[[["xorshiftrng",3],["map",3],["tripmode",4]],["option",4]],null,null,null,[[["duration",3]],["normaldistribution",3]],[[["xorshiftrng",3]],["duration",3]],[[["f64",15],["usize",15],["xorshiftrng",3],["polygon",3],["map",3]],["vec",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["config",3]],[[["str",15],["config",3],["xorshiftrng",3],["vec",3],["map",3],["censusarea",3]],["scenario",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[],["activity",4]],[[["censusarea",3]],["bool",15]],[[["censusarea",3]],["bool",15]],[[["activity",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["config",3],["xorshiftrng",3]],["schedule",3]],[[["polygon",3],["gpsbounds",3]]]],"p":[[3,"PersonFactory"],[3,"DesireLine"],[3,"Options"],[3,"Zone"],[3,"NormalDistribution"],[3,"CensusArea"],[3,"CensusPerson"],[4,"PersonType"],[3,"Schedule"],[4,"Activity"],[3,"Config"]]},\
"random_scenario":{"doc":"","t":[5],"n":["main"],"q":["random_scenario"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"santa":{"doc":"","t":[0,17,3,12,12,11,3,11,3,12,11,11,11,0,3,12,12,12,3,12,12,12,12,4,13,12,12,12,13,12,12,12,13,12,12,12,11,11,11,11,11,11,11,3,12,12,12,3,12,12,12,12,12,11,11,11,11,11,0,17,3,12,12,12,12,12,12,12,11,11,5,5,5,0,3,12,12,12,12,4,13,13,13,13,11,11,11,0,17,3,12,11,11,5,0,17,17,17,17,3,12,12,12,12,12,12,12,12,11,11,11,11,11,3,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,3,12,12,12,12,11,11,3,0,3,12,12,12,12,12,12,12,12,12,12,11,0,5,5,0,17,17,3,12,3,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,0,17,3,12,12,12,12,12,11,11,11,11,11,11,11,11,4,13,13,11,3,12,11,11,0,3,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,11,11,11,11,11,0,3,11,5,5,5,3,11,5,0,3,12,12,12,12,12,11,11,11,6,6,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["after_level","ZOOM","Strategize","unlock_messages","draw_all","new_state","Results","new_state","RecordPath","pts","new","add_pt","render","animation","Animator","active","draw_mapspace","draw_screenspace","Animation","start","end","effect","screenspace","Effect","Scale","orig","center","lerp_scale","FollowPath","color","width","pl","Flash","orig","alpha_scale","cycles","new","add","add_screenspace","event","draw","is_done","render","SnowEffect","rng","flakes","draw","Snowflake","start","initial_pos","fall_speed","swoop_period","max_swoop","pos","new","spawn_new","event","draw","before_level","ZOOM","Picker","vehicle_panel","instructions_panel","upzone_panel","level","bldgs","current_picks","draw_start","new_state","randomly_pick_upzones","make_vehicle_panel","make_upzone_panel","explain_upzoning","buildings","Buildings","buildings","draw_all","total_housing_units","upzones","BldgState","Undelivered","Store","Done","Ignore","new","all_stores","draw_done_houses","controls","HACK","InstantController","facing","new","displacement","angle_from_arrow_keys","game","MAX_BOOST","ACQUIRE_BOOST_RATE","BOOST_SPEED_MULTIPLIER","HANGRY_SPEED_MULTIPLIER","Game","status_panel","time_panel","pause_panel","minimap","animator","snow","state","player","new_state","update_time_panel","update_status_panel","update_boost_panel","update","GameState","level","vehicle","bldgs","score","energy","boost","draw_done_houses","energyless_arrow","idle_time","game_over","warned_low_time","warned_low_energy","record_path","new","present_dropped","has_energy","met_goal","EnergylessArrow","draw","started","last_update","all_stores","new","update","MinimapController","levels","Level","title","description","map","music","start","minimap_zoom","time_limit","goal","unlock_upzones","unlock_vehicles","all","meters","custom_bar","make_bar","music","OUT_OF_GAME","IN_GAME","Music","inner","Inner","_stream","stream_handle","sink","unmuted_volume","current_song","panel","empty","start","event","draw","specify_volume","change_song","new","unmute","mute","specify_volume","change_song","player","ZOOM","Player","pos","facing","on","bldgs_along_road","controls","new","update_with_speed","pos_to_on","apply_displacement","get_pos","get_angle","on_good_road","override_pos","On","Intersection","Road","get_connections","BuildingsAlongRoad","per_road","new","query_range","session","Session","levels","enable_modding","colors","high_scores","levels_unlocked","current_vehicle","vehicles_unlocked","upzones_unlocked","upzones_explained","upzones_per_level","music","play_music","ColorScheme","house","apartment","store","visited","score","energy","boost","load","record_score","unlock_all","update_music","save","title","TitleScreen","new_state","level_btn","locked_level","unlocked_level","Credits","new_state","link","vehicles","Vehicle","name","speed","max_energy","draw_frames","scale","get","animate","max_stats","App","Transition","main","run","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","vzip","clone","clone","clone","default","eq","ne","eq","ne","event","draw","event","draw","on_destroy","on_click","other_event","draw","on_click","other_event","draw","on_click","other_event","draw","on_click","other_event","draw","deserialize","deserialize","deserialize","serialize","serialize","serialize","has_zorder","make_legend"],"q":["santa","santa::after_level","","","","","","","","","","","","santa","santa::animation","","","","","","","","","","","santa::animation::Effect","","","santa::animation","santa::animation::Effect","","","santa::animation","santa::animation::Effect","","","santa::animation","","","","","","","","","","","","","","","","","","","","","","santa","santa::before_level","","","","","","","","","","","","","","santa","santa::buildings","","","","","","","","","","","","","santa","santa::controls","","","","","","santa","santa::game","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa","santa::levels","","","","","","","","","","","","santa","santa::meters","","santa","santa::music","","","","","","","","","","","","","","","","","","","","","","santa","santa::player","","","","","","","","","","","","","","","","","","","","","","","santa","santa::session","","","","","","","","","","","","","","","","","","","","","","","","","","santa","santa::title","","","","","","","","santa","santa::vehicles","","","","","","","","","santa","","","","santa::after_level","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::animation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::before_level","","","","","","","","","","","","santa::buildings","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::controls","","","","","","","","","","","","","santa::game","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::levels","","","","","","","","","","","","","","","santa::music","","","","","","","","","","","","","","","","","","","","","","","","santa::player","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::session","","","","","","","","","","","","","","","","","","","","","","","","","santa::title","","","","","","","","","","","","","","","","","","","","","","","","","","santa::vehicles","","","","","","","","","","","","","santa::buildings","santa::levels","santa::player","santa::music","santa::levels","","santa::player","","santa::before_level","","santa::game","","","santa::after_level","","","","","","santa::title","","","","","","santa::levels","santa::session","","santa::levels","santa::session","","santa::game",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pass in a future value for <code>now</code> to schedule a delayed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Which of the 8 directions are we facing, based on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns any buildings we passed","","","","","Is the player currently on a road with a bus or bike lane?","For the game over animation","","","","","","","","","","Persistent state that lasts across levels.","","Enable this to use the levels, instead of overwriting …","","Level title -> the top 3 scores","","","","","","","","","","","","","","","","","","If a message is returned, a new level and some powers …","","","","","","","","","","","","","","","","","","","","","","(max speed, max energyi":[0,0,0,1,1,1,0,2,0,3,3,3,3,0,0,4,4,4,0,5,5,5,5,0,6,7,7,7,6,8,8,8,6,9,9,9,4,4,4,4,4,4,6,0,10,10,10,0,11,11,11,11,11,11,10,10,10,10,0,0,0,12,12,12,12,12,12,12,12,12,0,0,0,0,0,13,13,13,13,0,14,14,14,14,13,13,13,0,0,0,15,15,15,0,0,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,18,18,18,18,18,18,0,0,0,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,20,0,21,21,21,21,21,21,20,20,20,20,20,20,21,21,21,21,21,0,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,0,23,23,23,0,24,24,24,0,0,25,25,25,25,25,25,25,25,25,25,25,25,0,26,26,26,26,26,26,26,25,25,25,25,25,0,0,27,0,0,0,0,28,0,0,0,29,29,29,29,29,29,29,29,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,30,30,30,30,30,30,30,30,30,30,30,30,30,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,29,14,19,23,20,19,19,23,23,12,12,16,16,16,1,1,1,2,2,2,27,27,27,28,28,28,19,25,26,19,25,26,30,30],"f":[null,null,null,null,null,[[["usize",15],["buildings",3],["simpleapp",3],["recordpath",3],["eventctx",3],["level",3]],[["state",8],["box",3]]],null,[[["usize",15],["simpleapp",3],["eventctx",3],["level",3]],[["state",8],["box",3]]],null,null,[[],["recordpath",3]],[[["pt2d",3]]],[[["distance",3]],["polygon",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3]],["animator",3]],[[["time",3],["effect",4],["duration",3]]],[[["time",3],["effect",4],["duration",3]]],[[["time",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["bool",15]],[[["f64",15],["geombatch",3]]],null,null,null,null,null,null,null,null,null,null,[[["time",3]],["pt2d",3]],[[["eventctx",3]],["snoweffect",3]],[[["time",3],["pt2d",3]],["snowflake",3]],[[["time",3],["eventctx",3]]],[[["gfxctx",3]]],null,null,null,null,null,null,null,null,null,null,[[["level",3],["simpleapp",3],["eventctx",3]],[["state",8],["box",3]]],[[["simpleapp",3]]],[[["simpleapp",3],["eventctx",3]],["panel",3]],[[["usize",15],["simpleapp",3],["eventctx",3]],["panel",3]],[[["eventctx",3]],[["transition",4],["simpleapp",3]]],null,null,null,null,null,null,null,null,null,null,null,[[["buildingid",3],["simpleapp",3],["hashset",3],["eventctx",3]],["buildings",3]],[[],[["buildingid",3],["vec",3]]],[[["simpleapp",3],["eventctx",3]],["drawable",3]],null,null,null,null,[[],["instantcontroller",3]],[[["speed",3],["eventctx",3]],["option",4]],[[["eventctx",3]],[["option",4],["angle",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["buildingid",3],["hashset",3],["simpleapp",3],["level",3],["eventctx",3],["vehicle",3]],[["state",8],["box",3]]],[[["simpleapp",3],["eventctx",3]]],[[["simpleapp",3],["eventctx",3]]],[[["simpleapp",3],["eventctx",3]]],[[["simpleapp",3],["eventctx",3],["duration",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["buildings",3],["level",3],["vehicle",3],["eventctx",3]],["gamestate",3]],[[["buildingid",3],["simpleapp",3],["eventctx",3]],[["usize",15],["option",4]]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,[[["time",3],["buildingid",3],["vec",3],["eventctx",3]],["energylessarrow",3]],[[["simpleapp",3],["eventctx",3],["pt2d",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["level",3],["vec",3]]],null,[[["f64",15],["color",3],["text",3],["eventctx",3]],["widget",3]],[[["usize",15],["color",3],["eventctx",3]],["widget",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["music",3]],[[["bool",15],["eventctx",3],["str",15]],["music",3]],[[["eventctx",3],["bool",15]]],[[["gfxctx",3]]],[[["f32",15]]],[[["str",15]]],[[["bool",15],["eventctx",3],["str",15]],[["inner",3],["result",6]]],[[]],[[]],[[["f32",15]]],[[["str",15]],["result",6]],null,null,null,null,null,null,null,null,[[["intersectionid",3],["simpleapp",3],["eventctx",3]],["player",3]],[[["simpleapp",3],["eventctx",3],["speed",3]],[["buildingid",3],["vec",3]]],[[["simpleapp",3],["pt2d",3]],[["option",4],["on",4]]],[[["f64",15],["simpleapp",3],["bool",15],["eventctx",3]],[["buildingid",3],["vec",3]]],[[],["pt2d",3]],[[],["angle",3]],[[["simpleapp",3]],["bool",15]],[[["pt2d",3]]],null,null,null,[[["simpleapp",3]]],null,null,[[["simpleapp",3]],["buildingsalongroad",3]],[[["roadid",3],["distance",3]],[["buildingid",3],["vec",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["session",3]],[[["usize",15],["string",3]],[["vec",3],["option",4]]],[[]],[[["eventctx",3]]],[[]],null,null,[[["simpleapp",3],["eventctx",3]],[["state",8],["box",3]]],[[["usize",15],["simpleapp",3],["eventctx",3],["level",3]],["geombatch",3]],[[["usize",15],["simpleapp",3],["eventctx",3],["level",3]],["widget",3]],[[["usize",15],["simpleapp",3],["eventctx",3],["level",3]],["widget",3]],null,[[["eventctx",3]],[["state",8],["box",3]]],[[["eventctx",3],["str",15]],["widget",3]],null,null,null,null,null,null,null,[[["str",15]],["vehicle",3]],[[["time",3],["prerender",3]],["geombatch",3]],[[]],null,null,[[]],[[["settings",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[],["bldgstate",4]],[[],["level",3]],[[],["on",4]],[[],["music",3]],[[["level",3]],["bool",15]],[[["level",3]],["bool",15]],[[["on",4]],["bool",15]],[[["on",4]],["bool",15]],[[["simpleapp",3],["eventctx",3]],[["transition",4],["simpleapp",3]]],[[["simpleapp",3],["gfxctx",3]]],[[["simpleapp",3],["eventctx",3]],[["transition",4],["simpleapp",3]]],[[["simpleapp",3],["gfxctx",3]]],[[["simpleapp",3],["eventctx",3]]],[[["simpleapp",3],["panel",3],["eventctx",3],["str",15]],[["transition",4],["simpleapp",3]]],[[["simpleapp",3],["eventctx",3]],[["transition",4],["simpleapp",3]]],[[["simpleapp",3],["gfxctx",3]]],[[["simpleapp",3],["panel",3],["eventctx",3],["str",15]],[["transition",4],["simpleapp",3]]],[[["simpleapp",3],["eventctx",3]],[["transition",4],["simpleapp",3]]],[[["simpleapp",3],["gfxctx",3]]],[[["simpleapp",3],["panel",3],["eventctx",3],["str",15]],[["transition",4],["simpleapp",3]]],[[["simpleapp",3],["eventctx",3]],[["transition",4],["simpleapp",3]]],[[["simpleapp",3],["gfxctx",3]]],[[["simpleapp",3],["panel",3],["eventctx",3],["str",15]],[["transition",4],["simpleapp",3]]],[[["simpleapp",3],["eventctx",3]],[["transition",4],["simpleapp",3]]],[[["simpleapp",3],["gfxctx",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["simpleapp",3]],["bool",15]],[[["simpleapp",3],["eventctx",3]],["widget",3]]],"p":[[3,"Strategize"],[3,"Results"],[3,"RecordPath"],[3,"Animator"],[3,"Animation"],[4,"Effect"],[13,"Scale"],[13,"FollowPath"],[13,"Flash"],[3,"SnowEffect"],[3,"Snowflake"],[3,"Picker"],[3,"Buildings"],[4,"BldgState"],[3,"InstantController"],[3,"Game"],[3,"GameState"],[3,"EnergylessArrow"],[3,"Level"],[3,"Music"],[3,"Inner"],[3,"Player"],[4,"On"],[3,"BuildingsAlongRoad"],[3,"Session"],[3,"ColorScheme"],[3,"TitleScreen"],[3,"Credits"],[3,"Vehicle"],[3,"MinimapController"]]},\
"sim":{"doc":"The sim crate runs a traffic simulation on top of the …","t":[0,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,12,3,12,12,11,11,11,11,11,11,11,11,3,12,12,11,11,11,0,6,3,12,12,12,12,4,13,13,13,12,13,3,12,12,12,11,11,11,11,11,0,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,13,13,13,13,4,13,13,13,13,4,13,13,13,13,13,13,13,13,13,11,0,0,5,5,5,0,3,12,3,12,12,12,12,12,4,13,13,11,3,12,12,12,12,12,12,11,11,0,3,12,12,12,12,3,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,11,11,11,11,11,5,0,3,12,12,12,12,18,11,11,11,11,0,4,13,13,12,12,12,12,13,11,11,5,0,3,12,12,12,12,3,12,12,3,12,12,12,12,12,12,12,11,4,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,0,3,12,12,4,13,12,12,12,12,13,12,12,13,12,12,12,13,12,12,13,12,12,12,13,12,12,12,12,12,11,11,4,13,13,13,11,11,11,11,11,11,5,0,0,3,12,12,12,12,12,12,12,12,11,11,11,11,4,13,13,12,13,12,13,13,13,11,11,0,17,17,17,3,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,17,17,3,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,3,12,12,12,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,4,13,13,11,11,3,12,12,12,12,12,12,12,12,12,12,11,3,12,12,12,12,11,11,11,3,12,12,12,12,12,12,12,11,11,0,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,5,5,0,17,17,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,12,12,12,12,12,12,11,11,11,11,4,13,13,13,13,13,13,13,13,13,11,11,5,0,0,3,12,12,12,12,12,12,12,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,11,3,12,11,11,4,13,13,13,13,13,3,12,12,12,12,11,4,13,13,13,13,13,13,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,12,12,12,11,11,11,11,0,3,12,12,12,12,12,12,12,12,3,12,12,12,12,4,13,13,13,3,12,12,12,12,12,12,12,12,12,4,13,13,3,12,12,12,12,0,3,12,12,12,4,13,13,13,13,13,13,4,13,12,12,12,12,13,12,12,13,12,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,4,13,13,13,13,13,13,13,13,13,13,11,11,11,4,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,3,12,12,3,12,12,12,12,12,12,11,11,11,11,11,11,11,11,0,0,3,12,12,12,12,12,4,13,13,17,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,11,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,11,11,11,11,11,11,11,11,11,11,11,0,6,3,12,12,12,3,12,12,12,12,3,12,12,12,12,4,13,13,13,13,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,11,4,13,13,13,4,13,13,13,13,11,11,11,11,11,11,4,13,13,13,13,13,13,11,11,3,12,12,12,12,12,12,12,12,12,11,4,13,13,13,3,12,12,12,12,12,12,12,12,12,12,4,13,13,3,12,12,12,12,12,12,12,12,12,3,12,12,12,12,3,12,12,12,12,12,12,12,12,4,13,13,13,3,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,13,13,13,13,3,12,12,12,12,12,4,13,13,13,13,4,13,13,13,13,13,13,13,13,13,5,3,12,12,12,12,12,12,12,12,3,12,3,12,12,12,12,12,4,13,13,3,12,12,12,12,12,12,12,3,12,12,12,12,12,12,3,12,12,3,12,12,12,12,3,12,12,12,12,4,13,13,12,12,12,12,13,3,12,12,12,12,3,12,12,12,12,12,12,12,4,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,3,12,12,12,12,12,4,13,13,13,4,13,13,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,8,10,3,12,12,12,12,12,12,12,12,12,12,12,12,12,4,13,13,13,13,3,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,4,13,13,13,3,12,12,12,12,12,12,12,12,4,13,13,13,13,13,13,17,17,17,17,17,17,17,3,12,12,3,12,4,13,13,13,11,11,11,11,4,13,13,13,13,13,13,11,11,11,11,3,12,3,12,3,12,12,4,13,13,13,13,11,11,3,12,12,12,12,12,3,12,12,12,11,4,13,13,13,3,12,12,12,4,13,13,11,11,3,12,12,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,3,12,12,11,11,11,3,12,12,11,11,11,11,3,12,12,12,12,12,12,12,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["analytics","Analytics","road_thruput","intersection_thruput","traffic_signal_thruput","demand","bus_arrivals","passengers_boarding","passengers_alighting","started_trips","finished_trips","problems_per_trip","trip_log","intersection_delays","parking_lane_changes","parking_lot_changes","alerts","record_anything","Problem","IntersectionDelay","ComplexIntersectionCrossing","ArterialIntersectionCrossing","OvertakeDesired","new","event","record_demand","finished_trip_time","both_finished_trips","get_trip_phases","get_all_trip_phases","active_agents","parking_lane_availability","parking_lot_availability","parking_spot_availability","TripPhase","start_time","end_time","path","has_path_req","phase_type","TimeSeriesCount","counts","raw","new","record","total_for","total_for_with_agent_types","total_for_by_time","all_total_counts","count_per_hour","raw_throughput","Window","times","window_size","new","add","count","cap","ZoneIdx","CapSimState","road_to_zone","zones","cancel_drivers_delay_threshold","delay_trips_instead_of_cancelling","CapResult","OK","Reroute","Cancel","reason","Delay","Zone","cap","entered_in_last_hour","hour_started","new","maybe_cap_path","get_cap_counter","trip_under_cap","path_crosses_delay","events","Event","CarReachedParkingSpot","CarLeftParkingSpot","BusArrivedAtStop","BusDepartedFromStop","PassengerBoardsTransit","PassengerAlightsTransit","PersonEntersBuilding","PersonLeavesBuilding","PersonLeavesMap","PersonEntersMap","PedReachedParkingSpot","BikeStoppedAtSidewalk","ProblemEncountered","AgentEntersTraversable","IntersectionDelayMeasured","TripFinished","trip","mode","total_time","blocked_time","TripCancelled","TripPhaseStarting","PathAmended","Alert","AlertLocation","Nil","Intersection","Person","Building","TripPhaseType","Driving","Walking","Biking","Parking","WaitingForBus","RidingBus","Cancelled","Finished","DelayedStart","describe","make","activity_model","create_prole","select_trip_mode","rand_time","external","ExternalPerson","trips","ExternalTrip","departure","origin","destination","mode","purpose","ExternalTripEndpoint","TripEndpoint","Position","import","MapBorders","incoming_walking","incoming_driving","incoming_biking","outgoing_walking","outgoing_driving","outgoing_biking","new","for_mode","generator","ScenarioGenerator","scenario_name","only_seed_buses","spawn_over_time","border_spawn_over_time","SpawnOverTime","num_agents","start_time","stop_time","goal","percent_driving","percent_biking","percent_use_transit","BorderSpawnOverTime","num_peds","num_cars","num_bikes","percent_use_transit","start_time","stop_time","start_from_border","goal","generate","small_run","empty","spawn_agent","spawn","rand_time","load","SimFlags","load","modifiers","rng_seed","opts","RNG_SEED","from_args","for_test","make_rng","load_synchronously","modifier","ScenarioModifier","RepeatDays","ChangeMode","pct_ppl","departure_filter","from_modes","to_mode","AddExtraTrips","apply","describe","repeat_days","scenario","Scenario","scenario_name","map_name","people","only_seed_buses","PersonSpec","orig_id","trips","IndividTrip","depart","origin","destination","mode","purpose","cancelled","modified","new","TripPurpose","Home","Work","School","Escort","PersonalBusiness","Shopping","Meal","Social","Recreation","Medical","ParkAndRideTransfer","instantiate","instantiate_without_retries","save","empty","rand_car","rand_bike","rand_dist","rand_speed","rand_ped_speed","count_parked_cars_per_bldg","remove_weird_schedules","seed_parked_cars","find_spot_near_building","check_schedule","get_vehicles","spawner","StartTripArgs","retry_if_no_room","use_vehicle","TripSpec","VehicleAppearing","start_pos","goal","use_vehicle","retry_if_no_room","SpawningFailure","use_vehicle","error","UsingParkedCar","car","start_bldg","goal","JustWalking","start","goal","UsingBike","bike","start","goal","UsingTransit","start","goal","route","stop1","maybe_stop2","into_plan","maybe_new","TripEndpoint","Bldg","Border","SuddenlyAppear","path_req","start_sidewalk_spot","end_sidewalk_spot","driving_goal","pos","pt","fork_rng","mechanics","car","Car","vehicle","state","router","trip_and_person","started_at","total_blocked_time","last_steps","wants_to_overtake","crossing_state","crossing_state_with_end_dist","get_draw_car","is_parking","CarState","Crossing","Queued","blocked_since","WaitingToAdvance","blocked_since","Unparking","Parking","IdlingAtStop","get_end_time","time_spent_waiting","driving","TIME_TO_WAIT_AT_BUS_STOP","BLIND_RETRY_TO_CREEP_FORWARDS","BLIND_RETRY_TO_REACH_END_DIST","DrivingSimState","cars","queues","events","waiting_to_spawn","recalc_lanechanging","handle_uber_turns","time_to_unpark_onstreet","time_to_park_onstreet","time_to_unpark_offstreet","time_to_park_offstreet","new","start_car_on_lane","vehicle_waiting_to_spawn","update_car","update_car_without_distances","update_car_with_distances","delete_car","delete_car_internal","update_laggy_head","trim_last_steps","collect_events","handle_live_edits","get_unzoomed_agents","does_car_exist","get_all_draw_cars","get_single_draw_car","get_draw_cars_on","debug_car","debug_car_ui","debug_lane","agent_properties","get_path","get_all_driving_paths","trace_route","percent_along_route","get_owner_of_car","target_lane_penalty","find_trips_to_edited_parking","find_vehicles_affected_by_live_edits","all_waiting_people","debug_queue_lengths","get_blocked_by_graph","get_car_front","wants_to_overtake","intersection","WAIT_AT_STOP_SIGN","WAIT_BEFORE_YIELD_AT_TRAFFIC_SIGNAL","IntersectionSimState","state","use_freeform_policy_everywhere","dont_block_the_box","break_turn_conflict_cycles","handle_uber_turns","disable_turn_conflicts","blocked_by","events","total_repeat_requests","not_allowed_requests","blocked_by_someone_requests","State","id","accepted","waiting","reserved","uber_turn_neighbors","signal","SignalState","current_stage","stage_ends_at","extensions_count","Request","agent","turn","new","turn_finished","cancel_request","space_freed","vehicle_gone","agent_deleted_mid_turn","wakeup_waiting","update_intersection","maybe_start_turn","collect_events","handle_live_edited_traffic_signals","handle_live_edits","nobody_headed_towards","debug","get_accepted_agents","get_waiting_agents","delayed_intersections","current_stage_and_remaining_time","describe_stats","populate_blocked_by","check_for_conflicts_before_uber_turn","stop_sign_policy","traffic_signal_policy","handle_accepted_conflicts","detect_conflict_cycle","new","allow_block_the_box","parking","ParkingSim","handle_live_edits","get_free_onstreet_spots","get_free_offstreet_spots","get_free_lot_spots","reserve_spot","unreserve_spot","remove_parked_car","add_parked_car","get_draw_cars","get_draw_cars_in_lots","get_draw_car","canonical_pt","get_all_draw_cars","is_free","get_car_at_spot","get_all_free_spots","spot_to_driving_pos","spot_to_sidewalk_pos","get_owner_of_car","lookup_parked_car","get_all_parking_spots","path_to_free_parking_spot","collect_events","all_parked_car_positions","bldg_to_parked_cars","ParkingSimState","Normal","Infinite","new","is_infinite","NormalParkingSimState","parked_cars","occupants","reserved_spots","onstreet_lanes","driving_to_parking_lanes","num_spots_per_offstreet","driving_to_offstreet","num_spots_per_lot","driving_to_lots","events","new","ParkingLane","parking_lane","driving_lane","sidewalk","spot_dist_along","new","dist_along_for_car","spots","InfiniteParkingSimState","parked_cars","occupants","reserved_spots","driving_to_offstreet","blackholed_building_redirects","num_occupants_per_offstreet","events","new","get_free_bldg_spot","queue","Queue","id","cars","laggy_head","geom_len","reserved_length","new","get_last_car_position","get_car_positions","inner_get_last_car_position","get_idx_to_insert_car","try_to_reserve_entry","is_overflowing","room_for_car","free_reserved_space","target_lane_penalty","get_leader","validate_positions","dump_cars","walking","TIME_TO_START_BIKING","TIME_TO_FINISH_BIKING","WalkingSimState","peds","peds_per_traversable","events","new","spawn_ped","get_draw_ped","get_all_draw_peds","update_ped","ped_boarded_bus","delete_ped","debug_ped","agent_properties","trace_route","get_path","get_unzoomed_agents","get_draw_peds_on","collect_events","find_trips_to_parking","all_waiting_people","populate_commuter_counts","Pedestrian","id","state","speed","total_blocked_time","started_at","path","start","goal","trip","person","crossing_state","get_dist_along","get_draw_ped","maybe_transition","PedState","Crossing","WaitingToTurn","LeavingBuilding","EnteringBuilding","LeavingParkingLot","EnteringParkingLot","StartingToBike","FinishingBiking","WaitingForBus","get_end_time","time_spent_waiting","find_crowds","pandemic","model","PandemicModel","pop","bldgs","bus_stops","buses","person_to_bus","rng","initialized","Cmd","BecomeHospitalized","BecomeQuarantined","new","initialize","count_sane","count_exposed","count_infected","count_recovered","count_dead","count_total","handle_event","handle_cmd","get_time","is_sane","is_infectious","is_exposed","is_recovered","is_dead","infectious_contact","transmission","transition","become_exposed","SharedSpace","occupants","new","person_enters_space","person_leaves_space","AnyTime","0","inner_seconds","is_finite","StateEvent","Exposition","Incubation","Hospitalization","Recovery","Death","Event","s","p_hosp","p_death","t","next","State","Sane","Exposed","Infectious","Hospitalized","Recovered","Dead","T_INF","T_INC","R_0","E_RATIO","I_RATIO","ini_infectious_ratio","ini_exposed_ratio","new","get_time_exp","get_time_normal","is_sane","is_exposed","is_infectious","is_recovered","is_dead","get_time","get_event_time","next_default","next","start","recorder","TrafficRecorder","capture_points","trips","seen_trips","new","handle_event","num_recorded_trips","save","render","DrawPedestrianInput","id","pos","facing","waiting_for_turn","preparing_bike","waiting_for_bus","on","person","DrawPedCrowdInput","low","high","members","location","PedCrowdLocation","Sidewalk","BldgDriveway","LotDriveway","DrawCarInput","id","waiting_for_turn","status","show_parking_intent","on","partly_on","label","person","body","CarStatus","Moving","Parked","UnzoomedAgent","id","pos","person","parking","router","Router","path","goal","owner","ActionAtEnd","VanishAtBorder","StartParking","GotoLaneEnd","StopBiking","BusAtStop","GiveUpOnParking","Goal","ParkNearBuilding","target","spot","stuck_end_dist","started_looking","EndAtBorder","end_dist","i","BikeThenStop","goal","FollowBusRoute","end_dist","end_at_border","vanish_bus","park_near","bike_then_stop","follow_bus_route","head","next","maybe_next","last_step","get_end_dist","get_path","advance","maybe_handle_end","opportunistically_lanechange","is_parking","get_parking_spot_goal","scheduler","Command","SpawnCar","SpawnPed","StartTrip","UpdateCar","UpdateLaggyHead","UpdatePed","UpdateIntersection","Callback","Pandemic","StartBus","update_agent","to_type","to_simple_type","CommandType","StartTrip","Car","CarLaggyHead","Ped","Intersection","Callback","Pandemic","StartBus","SimpleCommandType","StartTrip","Car","CarLaggyHead","Ped","Intersection","Callback","Pandemic","StartBus","Item","time","cmd_type","Scheduler","items","queued_commands","latest_time","last_time","delta_times","cmd_type_counts","new","push","update","cancel","peek_next_time","get_last_time","get_next","describe_stats","sim","queries","AgentProperties","total_time","waiting_here","total_waiting","dist_crossed","total_dist","DelayCause","Agent","Intersection","BLIND_RETRY_TO_SPAWN","Sim","driving","parking","walking","intersections","transit","cap","trips","pandemic","scheduler","time","map_name","edits_name","run_name","step_count","highlighted_people","analytics","recorder","alerts","Ctx","parking","intersections","cap","scheduler","map","handling_live_edits","SimOptions","run_name","use_freeform_policy_everywhere","dont_block_the_box","recalc_lanechanging","break_turn_conflict_cycles","handle_uber_turns","enable_pandemic_model","alerts","infinite_parking","disable_turn_conflicts","cancel_drivers_delay_threshold","delay_trips_instead_of_cancelling","skip_analytics","from_args","AlertHandler","Print","Block","Silence","new","new","spawn_trips","get_free_onstreet_spots","get_free_offstreet_spots","get_free_lot_spots","get_all_parking_spots","bldg_to_parked_cars","walking_path_to_nearest_parking_spot","new_person","seed_parked_car","seed_bus_route","start_bus","set_run_name","get_run_name","minimal_step","do_step","dispatch_events","timed_step","tiny_step","time_limited_step","dump_before_abort","save_dir","save_path","save","find_previous_savestate","find_next_savestate","load_savestate","handle_live_edited_traffic_signals","handle_live_edits","find_trips_affected_by_live_edits","delete_car","clear_alerts","SimCallback","run","is","downcast","downcast_rc","downcast_ref","downcast_mut","set_periodic_callback","unset_periodic_callback","record_traffic_for","num_recorded_trips","save_recorded_traffic","set_highlighted_people","transit","StopIdx","Stop","id","driving_pos","next_stop","Route","stops","start","end_at_border","active_vehicles","Bus","car","route","passengers","state","BusState","DrivingToStop","AtStop","DrivingOffMap","Done","TransitSimState","buses","routes","peds_waiting","events","new","create_empty_route","bus_created","bus_arrived_at_stop","bus_departed_from_stop","ped_waiting_for_bus","collect_events","get_passengers","bus_route","buses_for_route","active_vehicles","get_people_waiting_at_stop","get_unzoomed_transit_riders","trips","TripManager","trips","people","active_trip_mode","unfinished_trips","car_id_counter","events","new","new_person","new_car_id","new_trip","start_trip","collect_events","agent_starting_trip_leg","car_reached_parking_spot","ped_reached_parking_spot","ped_ready_to_bike","bike_reached_end","ped_reached_building","ped_reached_bus_stop","ped_boarded_bus","person_left_bus","ped_reached_border","transit_rider_reached_border","car_or_bike_reached_border","trip_finished","start_delayed_trip","spawn_ped","maybe_spawn_car","cancel_unstarted_trip","cancel_trip","trip_abruptly_cancelled","active_agents","active_agents_and_trips","num_active_agents","trip_to_agent","agent_to_trip","debug_trip","num_trips","num_agents","num_commuters_vehicles","num_ppl","is_done","trip_info","all_trip_info","finished_trip_details","trip_blocked_time","bldg_to_people","get_person","get_all_people","trip_to_person","all_arrivals_at_border","generate_scenario","Trip","id","info","started","finished_at","total_blocked_time","total_distance","legs","person","TripInfo","departure","mode","start","end","purpose","modified","capped","cancellation_reason","assert_walking_leg","TripLeg","Walk","Drive","RideBus","TripMode","Walk","Bike","Transit","Drive","all","verb","ongoing_verb","noun","to_constraints","from_constraints","TripResult","Ok","ModeChange","TripDone","TripDoesntExist","TripNotStarted","TripCancelled","ok","propagate_error","Person","id","orig_id","trips","state","ped","ped_speed","vehicles","delayed_trips","on_bus","get_vehicle","PersonState","Trip","Inside","OffMap","CommutersVehiclesCounts","walking_commuters","walking_to_from_transit","walking_to_from_car","walking_to_from_bike","cyclists","sov_drivers","buses","trains","bus_riders","train_riders","CarStatus","Moving","Parked","DrawCarInput","id","waiting_for_turn","status","show_parking_intent","on","partly_on","label","person","body","DrawPedCrowdInput","low","high","members","location","DrawPedestrianInput","id","pos","facing","waiting_for_turn","preparing_bike","waiting_for_bus","on","person","PedCrowdLocation","Sidewalk","BldgDriveway","LotDriveway","UnzoomedAgent","id","pos","person","parking","Analytics","road_thruput","intersection_thruput","traffic_signal_thruput","demand","bus_arrivals","passengers_boarding","passengers_alighting","started_trips","finished_trips","problems_per_trip","trip_log","intersection_delays","parking_lane_changes","parking_lot_changes","alerts","record_anything","Problem","IntersectionDelay","ComplexIntersectionCrossing","ArterialIntersectionCrossing","OvertakeDesired","TripPhase","start_time","end_time","path","has_path_req","phase_type","AlertLocation","Nil","Intersection","Person","Building","TripPhaseType","Driving","Walking","Biking","Parking","WaitingForBus","RidingBus","Cancelled","Finished","DelayedStart","fork_rng","BorderSpawnOverTime","num_peds","num_cars","num_bikes","percent_use_transit","start_time","stop_time","start_from_border","goal","ExternalPerson","trips","ExternalTrip","departure","origin","destination","mode","purpose","ExternalTripEndpoint","TripEndpoint","Position","IndividTrip","depart","origin","destination","mode","purpose","cancelled","modified","MapBorders","incoming_walking","incoming_driving","incoming_biking","outgoing_walking","outgoing_driving","outgoing_biking","PersonSpec","orig_id","trips","Scenario","scenario_name","map_name","people","only_seed_buses","ScenarioGenerator","scenario_name","only_seed_buses","spawn_over_time","border_spawn_over_time","ScenarioModifier","RepeatDays","ChangeMode","pct_ppl","departure_filter","from_modes","to_mode","AddExtraTrips","SimFlags","load","modifiers","rng_seed","opts","SpawnOverTime","num_agents","start_time","stop_time","goal","percent_driving","percent_biking","percent_use_transit","TripEndpoint","Bldg","Border","SuddenlyAppear","TripPurpose","Home","Work","School","Escort","PersonalBusiness","Shopping","Meal","Social","Recreation","Medical","ParkAndRideTransfer","AgentProperties","total_time","waiting_here","total_waiting","dist_crossed","total_dist","AlertHandler","Print","Block","Silence","DelayCause","Agent","Intersection","Sim","driving","parking","walking","intersections","transit","cap","trips","pandemic","scheduler","time","map_name","edits_name","run_name","step_count","highlighted_people","analytics","recorder","alerts","SimCallback","run","SimOptions","run_name","use_freeform_policy_everywhere","dont_block_the_box","recalc_lanechanging","break_turn_conflict_cycles","handle_uber_turns","enable_pandemic_model","alerts","infinite_parking","disable_turn_conflicts","cancel_drivers_delay_threshold","delay_trips_instead_of_cancelling","skip_analytics","TripMode","Walk","Bike","Transit","Drive","CommutersVehiclesCounts","walking_commuters","walking_to_from_transit","walking_to_from_car","walking_to_from_bike","cyclists","sov_drivers","buses","trains","bus_riders","train_riders","Person","id","orig_id","trips","state","ped","ped_speed","vehicles","delayed_trips","on_bus","PersonState","Trip","Inside","OffMap","TripInfo","departure","mode","start","end","purpose","modified","capped","cancellation_reason","TripResult","Ok","ModeChange","TripDone","TripDoesntExist","TripNotStarted","TripCancelled","BIKE_LENGTH","MIN_CAR_LENGTH","MAX_CAR_LENGTH","BUS_LENGTH","LIGHT_RAIL_LENGTH","FOLLOWING_DISTANCE","SPAWN_DIST","CarID","id","vehicle_type","PedestrianID","0","AgentID","Car","Pedestrian","BusPassenger","as_car","to_type","to_vehicle_type","is_car","AgentType","Car","Bike","Bus","Train","Pedestrian","TransitRider","all","noun","plural_noun","ongoing_verb","TripID","0","PersonID","0","OrigPersonID","0","1","VehicleType","Car","Bus","Train","Bike","to_constraints","is_transit","Vehicle","id","owner","vehicle_type","length","max_speed","VehicleSpec","vehicle_type","length","max_speed","make","ParkingSpot","Onstreet","Offstreet","Lot","ParkedCar","vehicle","spot","parked_since","DrivingGoal","ParkNear","Border","goal_pos","make_router","SidewalkSpot","connection","sidewalk_pos","SidewalkPOI","ParkingSpot","DeferredParkingSpot","Building","BusStop","Border","BikeRack","SuddenlyAppear","deferred_parking_spot","parking_spot","building","bike_rack","bus_stop","start_at_border","end_at_border","suddenly_appear","TimeInterval","start","end","new","percent","percent_clamp_end","DistanceInterval","start","end","new_driving","new_walking","lerp","length","CreatePedestrian","id","start","speed","goal","path","trip","person","CreateCar","vehicle","router","maybe_parked_car","trip_and_person","maybe_route","for_appearing","for_parked_car","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","equivalent","get_hash","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","handle_live_edits","get_free_onstreet_spots","get_free_offstreet_spots","get_free_lot_spots","reserve_spot","unreserve_spot","remove_parked_car","add_parked_car","get_draw_cars","get_draw_cars_in_lots","get_draw_car","canonical_pt","get_all_draw_cars","is_free","get_car_at_spot","get_all_free_spots","spot_to_driving_pos","spot_to_sidewalk_pos","get_owner_of_car","lookup_parked_car","get_all_parking_spots","path_to_free_parking_spot","collect_events","all_parked_car_positions","bldg_to_parked_cars","handle_live_edits","get_free_onstreet_spots","get_free_offstreet_spots","get_free_lot_spots","reserve_spot","unreserve_spot","remove_parked_car","add_parked_car","get_draw_cars","get_draw_cars_in_lots","get_draw_car","canonical_pt","get_all_draw_cars","is_free","get_car_at_spot","get_all_free_spots","spot_to_driving_pos","spot_to_sidewalk_pos","get_owner_of_car","lookup_parked_car","get_all_parking_spots","path_to_free_parking_spot","collect_events","all_parked_car_positions","bldg_to_parked_cars","handle_live_edits","get_free_onstreet_spots","get_free_offstreet_spots","get_free_lot_spots","reserve_spot","unreserve_spot","remove_parked_car","add_parked_car","get_draw_cars","get_draw_cars_in_lots","get_draw_car","canonical_pt","get_all_draw_cars","is_free","get_car_at_spot","get_all_free_spots","spot_to_driving_pos","spot_to_sidewalk_pos","get_owner_of_car","lookup_parked_car","get_all_parking_spots","path_to_free_parking_spot","collect_events","all_parked_car_positions","bldg_to_parked_cars","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","sub","sub","add","add_assign","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","try_into","try_into","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","index","index","proletariat_robot","time","is_done","is_empty","num_trips","num_agents","num_commuters_vehicles","num_ppl","debug_ped","debug_car","debug_car_ui","debug_intersection","debug_lane","agent_properties","num_transit_passengers","bus_route_id","active_agents","num_active_agents","agent_to_trip","trip_to_agent","trip_info","all_trip_info","finished_trip_details","trip_blocked_time","trip_to_person","agent_to_person","person_to_agent","get_owner_of_car","lookup_parked_car","all_parked_car_positions","lookup_person","get_person","find_person_by_orig_id","get_all_people","lookup_car_id","get_path","get_all_driving_paths","trace_route","get_canonical_pt_per_trip","get_canonical_pt_per_person","canonical_pt_for_agent","get_accepted_agents","get_waiting_agents","get_blocked_by_graph","status_of_buses","get_analytics","delayed_intersections","bldg_to_people","get_pandemic_model","get_end_of_day","current_stage_and_remaining_time","all_arrivals_at_border","target_lane_penalty","get_people_waiting_at_stop","generate_scenario","get_cap_counter","infinite_parking","all_waiting_people","describe_internal_stats","debug_queue_lengths","get_trip_time_lower_bound","get_highlighted_people","step_count","get_draw_car","get_draw_ped","get_draw_cars","get_draw_peds","get_all_draw_cars","get_all_draw_peds","get_unzoomed_agents","get_unzoomed_transit_riders"],"q":["sim","sim::analytics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim","sim::cap","","","","","","","","","","sim::cap::CapResult","sim::cap","","","","","","","","","","sim","sim::events","","","","","","","","","","","","","","","","","sim::events::Event","","","","sim::events","","","","","","","","","","","","","","","","","","","","sim","sim::make","sim::make::activity_model","","","sim::make","sim::make::external","","","","","","","","","","","","","","","","","","","","","sim::make","sim::make::generator","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::make","sim::make::load","","","","","","","","","","sim::make","sim::make::modifier","","","sim::make::modifier::ScenarioModifier","","","","sim::make::modifier","","","","sim::make","sim::make::scenario","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::make","sim::make::spawner","","","","","sim::make::spawner::TripSpec","","","","sim::make::spawner","sim::make::spawner::TripSpec","","sim::make::spawner","sim::make::spawner::TripSpec","","","sim::make::spawner","sim::make::spawner::TripSpec","","sim::make::spawner","sim::make::spawner::TripSpec","","","sim::make::spawner","sim::make::spawner::TripSpec","","","","","sim::make::spawner","","","","","","","","","","","","sim::make","sim","sim::mechanics","sim::mechanics::car","","","","","","","","","","","","","","","","sim::mechanics::car::CarState","sim::mechanics::car","sim::mechanics::car::CarState","sim::mechanics::car","","","","","sim::mechanics","sim::mechanics::driving","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::mechanics","sim::mechanics::intersection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::mechanics","sim::mechanics::parking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::mechanics","sim::mechanics::queue","","","","","","","","","","","","","","","","","","","sim::mechanics","sim::mechanics::walking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim","sim::pandemic","sim::pandemic::model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::pandemic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim","sim::recorder","","","","","","","","sim","sim::render","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim","sim::router","","","","","","","","","","","","","sim::router::Goal","","","","sim::router","sim::router::Goal","","sim::router","sim::router::Goal","sim::router","sim::router::Goal","sim::router","","","","","","","","","","","","","","","","sim","sim::scheduler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim","sim::sim","sim::sim::queries","","","","","","","","","sim::sim","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim","sim::transit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim","sim::trips","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::ScenarioModifier","","","","simsim::analytics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::cap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::events","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::make::external","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::make::generator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::make::load","","","","","","","","","","","","","","","sim::make::modifier","","","","","","","","","","","","","","","","sim::make::scenario","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::make::spawner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::mechanics::car","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::mechanics::driving","","","","","","","","","","","","","","","sim::mechanics::intersection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::mechanics::parking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::mechanics::queue","","","","","","","","","","","","","","","sim::mechanics::walking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::pandemic::model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::pandemic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::recorder","","","","","","","","","","","","","","","sim::render","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::router","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::scheduler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::sim::queries","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::sim","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::transit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::trips","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","simsim::mechanics::parking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::pandemic","","sim::analytics","","","sim::cap","","sim::events","","","sim::make::external","sim::make::generator","","","sim::make::load","sim::make::modifier","sim::make::scenario","","","","sim::make::spawner","","","sim::mechanics::car","","sim::mechanics::driving","sim::mechanics::intersection","","","","sim::mechanics::parking","","","","sim::mechanics::queue","sim::mechanics::walking","","","sim::pandemic::model","","","sim::pandemic","","","","sim::recorder","sim::render","","","","sim::router","","sim::scheduler","","","","","sim::sim::queries","sim::sim","","","sim::transit","","","","","sim::trips","","","","","","","sim","","","","","","","","","","","","","","","","","","","sim::analytics","sim::sim","","sim::make::modifier","sim::make::spawner","sim::mechanics::intersection","sim::pandemic::model","sim::scheduler","","","sim::sim::queries","sim::trips","sim","","","","","","","","","","sim::analytics","","sim::events","","","","","","sim::make::modifier","","sim::make::spawner","","","","","","sim::mechanics::intersection","","sim::pandemic::model","","sim::pandemic","","sim::render","sim::router","","","","sim::scheduler","","","","","","","sim::sim::queries","","sim::trips","","","","","sim","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::make::modifier","sim::make::spawner","sim::mechanics::intersection","sim::pandemic::model","sim::pandemic","sim::scheduler","","","sim::sim::queries","sim::trips","sim","","","","","","","","","","sim::analytics","","sim::events","","","sim::make::generator","","","sim::make::scenario","","","","sim::make::spawner","","","sim::mechanics::car","","sim::mechanics::intersection","","","sim::mechanics::queue","sim::mechanics::walking","sim::pandemic::model","sim::pandemic","","","","sim::router","","","sim::scheduler","","","sim::sim::queries","sim::trips","","","","","","","sim","","","","","","","","","","","","","","","","","","","sim::make::scenario","sim","","","","","","sim::pandemic","","","","sim::pandemic::model","sim::scheduler","sim","","","","","","","","sim::mechanics::parking","","sim::analytics","","","sim::cap","","sim::events","","","sim::make::generator","","","sim::make::modifier","sim::make::scenario","","","","sim::make::spawner","","","sim::mechanics::car","","sim::mechanics::driving","sim::mechanics::intersection","","","","sim::mechanics::parking","","","","sim::mechanics::queue","sim::mechanics::walking","","","sim::pandemic::model","sim::router","","sim::scheduler","","","","sim::sim::queries","sim::sim","sim::transit","","","","","sim::trips","","","","","","","sim","","","","","","","","","","","","","","","","","","","sim::analytics","","","sim::cap","","sim::events","","","sim::make::external","","","sim::make::generator","","","sim::make::modifier","sim::make::scenario","","","","sim::make::spawner","","","sim::mechanics::car","","sim::mechanics::driving","sim::mechanics::intersection","","","","sim::mechanics::parking","","","","sim::mechanics::queue","sim::mechanics::walking","","","sim::pandemic::model","sim::router","","sim::scheduler","","","","sim::sim","sim::transit","","","","","sim::trips","","","","","","","sim","","","","","","","","","","","","","","","","","","","","","sim::make::generator","sim::sim","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","As a simulation runs, different pieces emit Events. The …","","","","Most fields in Analytics are cumulative over time, but …","","For each passenger boarding, how long did they wait at …","","","Finish time, ID, mode, trip duration if successful (or …","Record different problems that each trip encounters.","","Only for traffic signals. The u8 is the movement index …","Per parking lane or lot, when does a spot become filled …","","","For benchmarking, we may want to disable collecting data.","","A vehicle waited >30s, or a pedestrian waited >15s.","A cyclist crossed an intersection with >4 connecting …","A pedestrian crossed an intersection with an Arterial …","Another vehicle wanted to over-take this cyclist …","","","","Ignores the current time. Returns None for cancelled …","Returns pairs of trip times for finished trips in both …","If calling on prebaked Analytics, be careful to pass in …","","","Returns the free spots over time","","","","","","","","","See https://github.com/a-b-street/abstreet/issues/85","(Road or intersection, type, hour block) -> count for …","Very expensive to store, so it’s optional. But useful …","","","","","","","","","","","","","Returns the count at time","Grab the count at this time, but don’t add a new time","","","Dynamically limit driving trips that meet different …","","","","","","","","","","","","","","","","Before the driving portion of a trip begins, check that …","","","","","As a simulation runs, different systems emit Events. This …","","","","","How long waiting at the stop?","","","","None if cancelled","","","","","If the agent is a transit vehicle, then include a count …","TripID, TurnID (Where the delay was encountered), Time …","","","","","","","","Just use for parking replanning. Not happy about copying …","","","","","","","","","","","","","What stop did they board at?","","","","","Everything needed to setup a simulation. …","An activity model creates “people” that follow a set …","","","","Some users of the API …","","","","","","","","","","","","Import external scenario data. The main difference …","Lists all border intersections of the map, broken down by …","","","","","","","","Returns the (incoming, outgoing) borders for the …","This is a much more primitive way to randomly generate …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SimFlags specifies a simulation to setup.","A path to some file.","","","","","","","","Loads a map and simulation. Not appropriate for use in …","","Transforms an existing Scenario before instantiating it.","","","","","","If <code>None</code>, then just cancel the trip.","Scenario name","If this modifies scenario_name, then that means prebaked …","","","","A Scenario describes all the input to a simulation. …","","","","None means seed all buses. Otherwise the route name must …","","Just used for debugging","There must be continuity between trips: each trip starts …","","","","","","","","Did a ScenarioModifier affect this?","","Lifted from Seattle’s Soundcast model, but seems …","","","","","","","","","","","","","If retry_if_no_room is false, any vehicles that fail to …","","","","","","","","","","","","Verify that a person’s trips make sense","","Intermediate structures used to instantiate a Scenario. …","We need to remember a few things from scenario …","","","","Can be used to spawn from a border or anywhere for …","","","This must be a currently off-map vehicle owned by the …","","Something went wrong spawning the trip.","","","","This must be a currently parked vehicle owned by the …","","","","","","","","","","","","","","","","","Turn an origin/destination pair and mode into a specific …","Specifies where a trip begins or ends.","","","Used for interactive spawning, tests, etc. For now, only …","Figure out a single PathRequest that goes between two …","","","","","Returns a point representing where this endpoint is.","Need to explain this trick – basically keeps …","","","Represents a single vehicle. Note “car” is a …","","","","None for buses","","","In reverse order – most recently left is first. The sum …","Since lane over-taking isn’t implemented yet, a vehicle …","Assumes the current head of the path is the thing to …","","","","See …","","","","","","Where’s the front of the car while this is happening?","","","","","","","","","Simulates vehicles!","","","","","","","","","","","","None if it worked, otherwise returns the CreateCar …","If start_car_on_lane fails and a retry is scheduled, this …","State transitions for this car:","","","Abruptly remove a vehicle from the simulation. They may …","","","","","","Note the ordering of results is non-deterministic!","","Note the ordering of results is non-deterministic!","This is about as expensive as get_draw_cars_on.","","","","","","","","","","","","","Finds vehicles that’re laggy heads on affected parts of …","","","","","Does the given car want to over-take the vehicle in front …","","","","Manages conflicts at intersections. When an agent has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","For deleting cars","","Vanished at border, stopped biking, etc – a vehicle …","","","This is only triggered for traffic signals.","For cars: The head car calls this when they’re at the …","","","","","","","","Returns intersections with travelers waiting for at least …","","","","See if any agent is currently performing a turn that …","","","","","","","","Manages the state of parked cars. There are two …","Returns any cars that got very abruptly evicted from …","","","","","Needed when abruptly deleting a car, in case they’re …","","","","","","There’s no DrawCarInput for cars parked offstreet, so …","","","","The vehicle’s front is currently at the given …","","","","","(Filled, available)","Unrealistically assumes the driver has knowledge of …","","","","","","","Counterintuitive: any spots located in blackholes are …","","","","","","","","","","","","","","","","","","","","","","This assigns infinite private parking to all buildings …","","","","","","","","","","","A Queue of vehicles on a single lane or turn. No …","","","This car’s back is still partly in this queue.","","When a car’s turn is accepted, reserve the vehicle …","","","Farthest along (greatest distance) is first.","","","If true, there’s room and the car must actually start …","","","","","Find the vehicle in front of the specified input. None if …","","","","","","Simulates pedestrians. Unlike vehicles, pedestrians can …","","","","","","","","","","Abruptly remove a pedestrian from the simulation. They …","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Distance is either 0 or the current traversable’s …","","","","","","","","","","","An experimental SEIR model by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Records trips beginning and ending at a specified set of …","","","","","","","","Intermediate structures so that sim and game crates don’…","","","","","","","","","","","","","","","","bool is contraflow","","","","","","","","Front of the car","Possibly the rest","","None means a bus or parked car. Note parked cars do NOT …","","","","","","","","None means a bus.","True only for cars currently looking for parking. I don’…","For vehicles only, not pedestrians. Follows a Path from …","","Front is always the current step","","","","","","","","","","","Spot and cached distance along the last driving lane","","","No parking available at all!","","","","","","","","","","","","","","","","","","","","Returns the step just finished","Called when the car is Queued at the last step, or when …","","","","","","If true, retry when there’s no room to spawn somewhere","","","","Distinguish this from UpdateCar to avoid confusing things","","","","","The Time is redundant, just used to dedupe commands","","","","A smaller version of Command that satisfies many more …","","","","","","","","","A more compressed form of CommandType, just used for …","","","","","","","","","","","","The priority queue driving the discrete event simulation. …","","","","","","","","","","","This next command might’ve actually been rescheduled to …","","This API is safer than handing out a batch of items at a …","","","All sorts of read-only queries about a simulation","","","","","","","Why is an agent delayed? If there are multiple reasons, …","Queued behind someone, or someone’s doing a conflicting …","Waiting on a traffic signal to change, or pausing at a …","","The Sim ties together all the pieces of the simulation. …","","","","","","","","","","","","","","","","","","","","","","","","","If present, live map edits are being processed, and the …","Options controlling the traffic simulation.","Used to distinguish savestates for running the same …","Ignore all stop signs and traffic signals, instead using …","Prevent a vehicle from starting a turn if their target …","As a vehicle follows a route, opportunistically make …","If a cycle of vehicles depending on each other to turn is …","Enable experimental handling for “uber-turns”, …","Enable an experimental SEIR pandemic model.","When a warning is encountered during simulation, …","Ignore parking data in the map and instead treat every …","Allow all agents to immediately proceed into an …","If present, cancel any driving trips who will pass …","Instead of cancelling trips due to …","Don’t collect any analytics. Only useful for …","","","Just print the alert to STDOUT","Print the alert to STDOUT and don’t proceed until the …","Don’t do anything","","","","","","","(Filled, available)","","","","","","","","","","","","","","","","","","","","","","","Respond to arbitrary map edits without resetting the …","Returns (trips affected, number of parked cars displaced)","","","","","Returns true if the trait object wraps an object of type …","Returns a boxed object from a boxed trait object if the …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Returns a mutable reference to the object within the …","Only one at a time supported.","","","","","","","","","","","","","","","","","","","","Where does each passenger want to deboard?","","","","","","","Manages public transit vehicles (buses and trains) that …","","","waiting at => (ped, route, bound for, started waiting)","","","Returns the path for the first leg.","","If true, the bus is idling. If false, the bus actually …","","Returns the bus if the pedestrian boarded immediately.","","","","also stop idx that the bus is coming from","(buses, trains)","","","","Manages people, each of which executes some trips through …","","","","","","","","","","","","","This is idempotent to handle the case of cars retrying …","","","","","","If no route is returned, the pedestrian boarded a bus …","","","","","","","","","Returns the path to use if successful. Caller is …","Cancel a trip before it’s started. The person will stay …","Cancel a trip after it’s started. The person will be …","","","","","","This will be None for parked cars and buses. Should …","","","","","","","","","","","","","","","","Recreate the Scenario from an instantiated simulation. …","","","","","","","","","","","Scheduled departure; the start may be delayed if the …","","","","","Did a ScenarioModifier apply to this?","Was this trip affected by a congestion cap?","","","These don’t specify where the leg starts, since it …","","A person may own many vehicles, so specify which they use","Maybe get off at a stop, maybe ride off-map","","","","","","","","","","","","","","","","","","","","","","","","","","","","Both cars and bikes","","","","","","","","The number of active vehicles and commuters, broken into …","","","","","","","","","","","","","","","","","","","Front of the car","Possibly the rest","","None means a bus or parked car. Note parked cars do NOT …","","","","","","","","","","","","","","","","","bool is contraflow","","","","","","None means a bus.","True only for cars currently looking for parking. I don’…","As a simulation runs, different pieces emit Events. The …","","","","Most fields in Analytics are cumulative over time, but …","","For each passenger boarding, how long did they wait at …","","","Finish time, ID, mode, trip duration if successful (or …","Record different problems that each trip encounters.","","Only for traffic signals. The u8 is the movement index …","Per parking lane or lot, when does a spot become filled …","","","For benchmarking, we may want to disable collecting data.","","A vehicle waited >30s, or a pedestrian waited >15s.","A cyclist crossed an intersection with >4 connecting …","A pedestrian crossed an intersection with an Arterial …","Another vehicle wanted to over-take this cyclist …","","","","","","","","","","","","","","","","","","What stop did they board at?","","","","Need to explain this trick – basically keeps …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Did a ScenarioModifier affect this?","Lists all border intersections of the map, broken down by …","","","","","","","","Just used for debugging","There must be continuity between trips: each trip starts …","A Scenario describes all the input to a simulation. …","","","","None means seed all buses. Otherwise the route name must …","","","","","","Transforms an existing Scenario before instantiating it.","","","","","","If <code>None</code>, then just cancel the trip.","Scenario name","SimFlags specifies a simulation to setup.","A path to some file.","","","","","","","","","","","","Specifies where a trip begins or ends.","","","Used for interactive spawning, tests, etc. For now, only …","Lifted from Seattle’s Soundcast model, but seems …","","","","","","","","","","","","","","","","","","","Just print the alert to STDOUT","Print the alert to STDOUT and don’t proceed until the …","Don’t do anything","Why is an agent delayed? If there are multiple reasons, …","Queued behind someone, or someone’s doing a conflicting …","Waiting on a traffic signal to change, or pausing at a …","The Sim ties together all the pieces of the simulation. …","","","","","","","","","","","","","","","","","","","","","Options controlling the traffic simulation.","Used to distinguish savestates for running the same …","Ignore all stop signs and traffic signals, instead using …","Prevent a vehicle from starting a turn if their target …","As a vehicle follows a route, opportunistically make …","If a cycle of vehicles depending on each other to turn is …","Enable experimental handling for “uber-turns”, …","Enable an experimental SEIR pandemic model.","When a warning is encountered during simulation, …","Ignore parking data in the map and instead treat every …","Allow all agents to immediately proceed into an …","If present, cancel any driving trips who will pass …","Instead of cancelling trips due to …","Don’t collect any analytics. Only useful for …","","","","","","The number of active vehicles and commuters, broken into …","","","","","","","","","","","","","","","","","","Both cars and bikes","","","","","","","","Scheduled departure; the start may be delayed if the …","","","","","Did a ScenarioModifier apply to this?","Was this trip affected by a congestion cap?","","","","","","","","","","","","","","At all speeds (including at rest), cars must be at least …","When spawning at borders, start the front of the vehicle …","","The numeric ID must be globally unique, without …","VehicleType is bundled for convenience; many places need …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lane and idx","Building and idx (pretty meaningless)","","","","","","","","","","","","","","Point of interest, that is","Note that for offstreet parking, the path will be the …","Don’t actually know where this goes yet!","","","","The bikeable position","","Pretty hacky case","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","None for buseseturns any cars that got very abruptly evicted from …","","","","","Needed when abruptly deleting a car, in case they’re …","","","","","","There’s no DrawCarInput for cars parked offstreet, so …","","","","The vehicle’s front is currently at the given …","","","","","(Filled, available)","Unrealistically assumes the driver has knowledge of …esigned in …","","","","(number of finished trips, number of unfinished trips)","","","(total number of people, just in buildings, just off map)","","","Return a short string to debug a car in the UI.","","","Only call for active agents, will panic otherwise","","","","","","","","","If trip is finished, returns (total time, total waiting …","","","","","","","For every parked car, (position of parking spot, position …","","","","","","","","","","","","","","For every agent that’s currently not moving, figure out …","(bus, stop index it’s coming from, percent to next …","","For intersections with an agent waiting beyond some …","","","","","","(number of vehicles in the lane, penalty if a bike or …","","","","","","","","Returns the best-case time for a trip in a world with no …","","","","","","","","","This does not include transit riders. Some callers need …",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,0,3,3,3,3,3,0,4,4,4,4,4,4,4,4,4,4,0,5,5,5,5,5,0,0,0,6,6,6,6,0,7,7,7,8,7,0,9,9,9,6,6,6,6,6,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,10,10,10,10,0,12,12,12,12,0,13,13,13,13,13,13,13,13,13,13,0,0,0,0,0,0,0,14,0,15,15,15,15,15,0,16,16,14,0,17,17,17,17,17,17,17,17,0,0,18,18,18,18,0,19,19,19,19,19,19,19,0,20,20,20,20,20,20,20,20,18,18,18,19,20,0,0,0,21,21,21,21,21,21,21,21,21,0,0,22,22,23,23,23,23,22,22,22,0,0,0,24,24,24,24,0,25,25,0,26,26,26,26,26,26,26,26,0,27,27,27,27,27,27,27,27,27,27,27,24,24,24,24,24,24,24,24,24,24,24,0,0,25,25,0,0,28,28,0,29,30,30,30,30,29,31,31,29,32,32,32,29,33,33,29,34,34,34,29,35,35,35,35,35,29,29,0,36,36,36,36,36,36,36,36,36,0,0,0,0,37,37,37,37,37,37,37,37,37,37,37,37,0,38,38,39,38,40,38,38,38,38,38,0,0,0,0,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,0,0,42,42,42,42,42,42,42,42,42,42,42,0,43,43,43,43,43,43,0,44,44,44,0,45,45,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,44,0,0,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,47,47,47,47,0,48,48,48,48,48,48,48,48,48,48,48,0,49,49,49,49,49,49,49,0,50,50,50,50,50,50,50,50,50,0,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,0,0,0,0,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,54,54,54,54,54,54,54,54,54,54,54,0,0,0,0,55,55,55,55,55,55,55,0,56,56,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,57,57,57,57,0,58,58,58,0,59,59,59,59,59,0,60,60,60,60,60,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,0,62,62,62,62,62,62,62,0,0,63,63,63,63,63,63,63,63,0,64,64,64,64,0,65,65,65,0,66,66,66,66,66,66,66,66,66,0,67,67,0,68,68,68,68,0,0,69,69,69,0,70,70,70,70,70,70,0,71,72,72,72,72,71,73,73,71,74,71,75,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,0,0,76,76,76,76,76,76,76,76,76,76,76,76,76,0,77,77,77,77,77,77,77,77,0,78,78,78,78,78,78,78,78,0,79,79,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,0,0,81,81,81,81,81,0,82,82,0,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,84,84,84,84,84,84,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,86,86,86,85,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,87,87,87,87,87,87,83,83,83,83,83,83,0,0,0,88,88,88,0,89,89,89,89,0,90,90,90,90,0,91,91,91,91,0,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,0,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,0,94,94,94,94,94,94,94,94,0,95,95,95,95,95,95,95,95,94,0,96,96,96,0,97,97,97,97,97,97,97,97,97,97,0,98,98,98,98,98,98,98,98,0,99,99,99,99,99,99,99,99,99,99,0,100,100,100,0,101,101,101,101,101,101,101,101,101,101,0,67,67,0,66,66,66,66,66,66,66,66,66,0,64,64,64,64,0,63,63,63,63,63,63,63,63,0,65,65,65,0,68,68,68,68,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,0,3,3,3,3,3,0,12,12,12,12,0,13,13,13,13,13,13,13,13,13,0,0,20,20,20,20,20,20,20,20,0,14,0,15,15,15,15,15,0,16,16,0,26,26,26,26,26,26,26,0,17,17,17,17,17,17,0,25,25,0,24,24,24,24,0,18,18,18,18,0,22,22,23,23,23,23,22,0,21,21,21,21,0,19,19,19,19,19,19,19,0,36,36,36,0,27,27,27,27,27,27,27,27,27,27,27,0,81,81,81,81,81,0,86,86,86,0,82,82,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,87,0,85,85,85,85,85,85,85,85,85,85,85,85,85,0,97,97,97,97,0,101,101,101,101,101,101,101,101,101,101,0,99,99,99,99,99,99,99,99,99,0,100,100,100,0,95,95,95,95,95,95,95,95,0,98,98,98,98,98,98,0,0,0,0,0,0,0,0,102,102,0,103,0,104,104,104,104,104,104,104,0,105,105,105,105,105,105,105,105,105,105,0,106,0,107,0,108,108,0,109,109,109,109,109,109,0,110,110,110,110,110,0,111,111,111,111,0,112,112,112,0,113,113,113,0,114,114,114,114,0,115,115,0,116,116,116,116,116,116,116,115,115,115,115,115,115,115,115,0,117,117,117,117,117,0,118,118,118,118,118,118,0,119,119,119,119,119,119,119,0,120,120,120,120,120,120,120,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,64,64,64,64,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,68,68,68,68,68,68,68,68,68,68,68,68,68,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,70,70,70,70,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,81,81,81,81,81,81,81,81,81,81,81,81,81,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,84,84,84,84,84,84,84,84,84,84,84,84,84,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,98,98,98,98,98,98,98,98,98,98,98,98,98,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,101,101,101,101,101,101,101,101,101,101,101,101,101,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,47,47,58,58,1,2,4,6,9,10,12,13,17,18,19,20,21,22,24,25,26,27,28,29,36,37,38,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,69,71,76,77,78,79,80,82,83,85,86,88,89,90,91,92,93,94,95,96,97,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,1,85,86,22,36,45,56,77,78,79,82,97,102,103,104,105,106,107,108,109,112,116,2,2,10,10,12,12,13,13,22,22,28,28,29,29,36,36,45,45,56,56,58,58,67,69,69,71,71,76,76,77,77,78,79,79,82,82,96,96,97,100,100,102,102,103,103,104,104,105,106,106,107,107,108,108,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,22,36,45,56,58,77,78,79,82,97,102,103,104,105,106,107,108,109,112,116,2,3,10,12,13,18,19,20,24,25,26,27,28,29,36,37,38,43,44,45,51,54,56,58,59,60,61,69,70,71,76,77,78,82,93,94,95,96,97,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,27,102,103,104,106,107,109,58,58,58,58,56,77,102,103,104,105,106,107,108,109,47,47,1,2,4,6,9,10,12,13,18,19,20,22,24,25,26,27,28,29,36,37,38,41,42,43,44,45,47,48,49,50,51,52,53,54,56,69,71,76,77,79,80,82,83,88,89,90,91,92,93,94,95,96,97,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,1,2,4,6,9,10,12,13,14,15,16,18,19,20,22,24,25,26,27,28,29,36,37,38,41,42,43,44,45,47,48,49,50,51,52,53,54,56,69,71,76,77,79,80,83,88,89,90,91,92,93,94,95,96,97,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,102,103,18,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["bool",15]],["analytics",3]],[[["event",4],["time",3],["map",3]]],[[["path",3],["map",3]]],[[["tripid",3]],[["option",4],["duration",3]]],[[["analytics",3],["time",3]],["vec",3]],[[["tripid",3],["map",3]],[["vec",3],["tripphase",3]]],[[],[["btreemap",3],["tripid",3],["vec",3]]],[[["time",3]],["vec",3]],[[["usize",15],["time",3],["laneid",3]],["vec",3]],[[["usize",15],["time",3],["parkinglotid",3]],["vec",3]],[[["usize",15],["time",3]],["vec",3]],null,null,null,null,null,null,null,null,null,[[],["timeseriescount",3]],[[["usize",15],["agenttype",4],["time",3]]],[[],["usize",15]],[[["agenttype",4],["btreeset",3]],["usize",15]],[[["time",3]],["usize",15]],[[["btreeset",3]],["counter",3]],[[["time",3]],["vec",3]],[[["time",3]],["vec",3]],null,null,null,[[["duration",3]],["window",3]],[[["time",3]],["usize",15]],[[["time",3]],["usize",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["simoptions",3],["map",3]],["capsimstate",3]],[[["time",3],["carid",3],["intersectionsimstate",3],["map",3],["path",3]],["capresult",4]],[[["roadid",3]],["usize",15]],[[["time",3],["carid",3],["path",3],["map",3]],["bool",15]],[[["time",3],["map",3],["path",3],["intersectionsimstate",3]],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["map",3]],["string",3]],null,null,[[["xorshiftrng",3],["tripendpoint",4],["map",3]],[["result",6],["personspec",3]]],[[["xorshiftrng",3],["distance",3]],["tripmode",4]],[[["xorshiftrng",3],["time",3]],["time",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3],["map",3],["bool",15],["externalperson",3]],[["vec",3],["result",6]]],null,null,null,null,null,null,null,[[["map",3]],["mapborders",3]],[[["tripmode",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["xorshiftrng",3],["timer",3],["map",3]],["scenario",3]],[[["map",3]],["scenariogenerator",3]],[[["str",15]],["scenariogenerator",3]],[[["xorshiftrng",3],["map",3],["scenario",3]]],[[["xorshiftrng",3],["map",3],["tripmode",4],["scenario",3]]],[[["xorshiftrng",3],["time",3]],["time",3]],null,null,null,null,null,null,null,[[["cmdargs",3]],["simflags",3]],[[["str",15]],["simflags",3]],[[],["xorshiftrng",3]],[[["timer",3]]],null,null,null,null,null,null,null,null,null,[[["scenario",3],["map",3]],["scenario",3]],[[],["string",3]],[[["usize",15],["scenario",3]],["scenario",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["tripendpoint",4],["time",3],["trippurpose",4],["tripmode",4]],["individtrip",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["xorshiftrng",3],["timer",3],["sim",3],["map",3]]],[[["xorshiftrng",3],["timer",3],["sim",3],["map",3],["bool",15]]],[[]],[[["str",15],["map",3]],["scenario",3]],[[["xorshiftrng",3]],["vehiclespec",3]],[[["xorshiftrng",3]],["vehiclespec",3]],[[["xorshiftrng",3],["distance",3]],["distance",3]],[[["xorshiftrng",3],["speed",3]],["speed",3]],[[["xorshiftrng",3]],["speed",3]],[[],[["buildingid",3],["counter",3]]],[[],["scenario",3]],[[["xorshiftrng",3],["timer",3],["sim",3],["map",3],["vec",3]]],[[["buildingid",3],["btreemap",3],["map",3]],[["parkingspot",4],["option",4]]],[[],["result",6]],[[["xorshiftrng",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["map",3]]],[[["tripendpoint",4],["carid",3],["tripmode",4],["option",4],["bool",15],["map",3]],[["tripspec",4],["result",6]]],null,null,null,null,[[["tripmode",4],["tripendpoint",4],["map",3]],[["option",4],["pathrequest",3]]],[[["map",3]],[["result",6],["sidewalkspot",3]]],[[["map",3]],[["result",6],["sidewalkspot",3]]],[[["pathconstraints",4],["map",3]],[["result",6],["drivinggoal",4]]],[[["tripmode",4],["bool",15],["map",3]],[["position",3],["option",4]]],[[["map",3]],["pt2d",3]],[[["xorshiftrng",3]],["xorshiftrng",3]],null,null,null,null,null,null,null,null,null,null,null,[[["map",3],["time",3],["distance",3]],["carstate",4]],[[["map",3],["time",3],["distanceinterval",3]],["carstate",4]],[[["transitsimstate",3],["time",3],["map",3],["distance",3]],["drawcarinput",3]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,[[],["time",3]],[[["time",3]],["duration",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["simoptions",3],["map",3]],["drivingsimstate",3]],[[["createcar",3],["time",3],["ctx",3]],[["createcar",3],["option",4]]],[[["option",4],["personid",3],["carid",3],["position",3]]],[[["walkingsimstate",3],["time",3],["carid",3],["tripmanager",3],["ctx",3],["transitsimstate",3]]],[[["time",3],["car",3],["ctx",3],["transitsimstate",3]],["bool",15]],[[["usize",15],["walkingsimstate",3],["time",3],["car",3],["tripmanager",3],["ctx",3],["transitsimstate",3]],["bool",15]],[[["ctx",3],["time",3],["carid",3]],["vehicle",3]],[[["usize",15],["vec",3],["time",3],["car",3],["ctx",3]]],[[["ctx",3],["time",3],["carid",3]]],[[["usize",15],["time",3],["car",3],["ctx",3]]],[[],[["event",4],["vec",3]]],[[["map",3]]],[[["time",3],["map",3]],[["vec",3],["unzoomedagent",3]]],[[["carid",3]],["bool",15]],[[["transitsimstate",3],["time",3],["map",3]],[["vec",3],["drawcarinput",3]]],[[["time",3],["map",3],["carid",3],["transitsimstate",3]],[["option",4],["drawcarinput",3]]],[[["time",3],["map",3],["traversable",4],["transitsimstate",3]],[["vec",3],["drawcarinput",3]]],[[["carid",3]]],[[["carid",3]],["string",3]],[[["laneid",3]]],[[["time",3],["carid",3]],["agentproperties",3]],[[["carid",3]],[["path",3],["option",4]]],[[],[["path",3],["vec",3]]],[[["map",3],["time",3],["carid",3]],[["option",4],["polyline",3]]],[[["carid",3]],["f64",15]],[[["carid",3]],[["option",4],["personid",3]]],[[["laneid",3]]],[[["parkingspot",4],["btreeset",3]],["vec",3]],[[["hashset",3],["btreeset",3]],["vec",3]],[[["btreemap",3],["time",3]]],[[["laneid",3]],["option",4]],[[["intersectionsimstate",3],["time",3],["map",3]],[["agentid",4],["btreemap",3]]],[[["car",3],["time",3]],["distance",3]],[[["car",3]],[["option",4],["carid",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["simoptions",3],["scheduler",3],["map",3]],["intersectionsimstate",3]],[[["turnid",3],["time",3],["agentid",4],["scheduler",3],["map",3],["bool",15]]],[[["turnid",3],["agentid",4]]],[[["scheduler",3],["time",3],["intersectionid",3],["map",3]]],[[["carid",3]]],[[["turnid",3],["agentid",4]]],[[["scheduler",3],["time",3],["intersectionid",3],["map",3]]],[[["time",3],["map",3],["intersectionid",3],["scheduler",3]]],[[["turnid",3],["agentid",4],["time",3],["map",3],["scheduler",3],["speed",3],["option",4]],["bool",15]],[[],[["event",4],["vec",3]]],[[["scheduler",3],["time",3],["map",3]]],[[["map",3]]],[[["intersectionid",3],["laneid",3]],["bool",15]],[[["intersectionid",3],["map",3]]],[[["intersectionid",3]],["vec",3]],[[["intersectionid",3]],["vec",3]],[[["time",3],["duration",3]],["vec",3]],[[["time",3],["intersectionid",3]]],[[],[["vec",3],["string",3]]],[[["btreemap",3],["time",3],["map",3],["fixedmap",3],["hashmap",3]]],[[["map",3],["uberturn",3]],[["option",4],["agentid",4]]],[[["controlstopsign",3],["time",3],["map",3],["scheduler",3],["request",3]],["bool",15]],[[["option",4],["time",3],["map",3],["controltrafficsignal",3],["request",3],["speed",3],["scheduler",3]],["bool",15]],[[["option",4],["option",4],["map",3],["request",3]],["bool",15]],[[["carid",3]],[["option",4],["hashset",3]]],[[["intersectionid",3],["map",3],["time",3],["scheduler",3]],["signalstate",3]],[[["intersection",3]],["bool",15]],null,null,[[["map",3]]],[[["laneid",3]],[["parkingspot",4],["vec",3]]],[[["buildingid",3]],[["parkingspot",4],["vec",3]]],[[["parkinglotid",3]],[["parkingspot",4],["vec",3]]],[[["parkingspot",4],["carid",3]]],[[["carid",3]]],[[["parkedcar",3]]],[[["parkedcar",3]]],[[["map",3],["laneid",3]],[["vec",3],["drawcarinput",3]]],[[["map",3],["laneid",3]],[["vec",3],["drawcarinput",3]]],[[["map",3],["carid",3]],[["option",4],["drawcarinput",3]]],[[["map",3],["carid",3]],[["pt2d",3],["option",4]]],[[["map",3]],[["vec",3],["drawcarinput",3]]],[[["parkingspot",4]],["bool",15]],[[["parkingspot",4]],[["option",4],["parkedcar",3]]],[[["vehicle",3],["position",3],["buildingid",3],["map",3]],["vec",3]],[[["parkingspot",4],["map",3],["vehicle",3]],["position",3]],[[["parkingspot",4],["map",3]],["position",3]],[[["carid",3]],[["option",4],["personid",3]]],[[["carid",3]],[["option",4],["parkedcar",3]]],[[]],[[["vehicle",3],["buildingid",3],["map",3],["laneid",3]],["option",4]],[[],[["event",4],["vec",3]]],[[["map",3]],["vec",3]],[[["buildingid",3]],[["carid",3],["vec",3]]],null,null,null,[[["bool",15],["map",3]],["parkingsimstate",4]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,[[["map",3]],["normalparkingsimstate",3]],null,null,null,null,null,[[["lane",3],["map",3]],[["option",4],["parkinglane",3]]],[[["usize",15],["map",3],["vehicle",3]],["distance",3]],[[],[["parkingspot",4],["vec",3]]],null,null,null,null,null,null,null,null,[[["map",3]],["infiniteparkingsimstate",3]],[[["buildingid",3]],["parkingspot",4]],null,null,null,null,null,null,null,[[["traversable",4],["map",3]],["queue",3]],[[["hashmap",3],["time",3],["fixedmap",3]],["option",4]],[[["hashmap",3],["time",3],["fixedmap",3]],["vec",3]],[[["btreeset",3],["time",3],["fixedmap",3],["vec",3],["hashmap",3],["option",4]],["option",4]],[[["time",3],["fixedmap",3],["hashmap",3],["distance",3]],[["usize",15],["option",4]]],[[["bool",15],["car",3]],["bool",15]],[[],["bool",15]],[[["car",3]],["bool",15]],[[["car",3]]],[[]],[[["carid",3]],[["option",4],["carid",3]]],[[["traversable",4],["time",3],["fixedmap",3]]],[[["time",3],["traversable",4],["fixedmap",3]]],null,null,null,null,null,null,null,[[],["walkingsimstate",3]],[[["time",3],["map",3],["createpedestrian",3],["scheduler",3]]],[[["pedestrianid",3],["time",3],["map",3]],[["drawpedestrianinput",3],["option",4]]],[[["time",3],["map",3]],[["drawpedestrianinput",3],["vec",3]]],[[["time",3],["tripmanager",3],["pedestrianid",3],["ctx",3],["transitsimstate",3]]],[[["pedestrianid",3],["time",3]]],[[["pedestrianid",3],["ctx",3]]],[[["pedestrianid",3]]],[[["pedestrianid",3],["time",3],["map",3]],["agentproperties",3]],[[["pedestrianid",3],["time",3],["map",3]],[["option",4],["polyline",3]]],[[["pedestrianid",3]],[["path",3],["option",4]]],[[["time",3],["map",3]],[["vec",3],["unzoomedagent",3]]],[[["map",3],["time",3],["traversable",4]]],[[],[["event",4],["vec",3]]],[[["parkedcar",3],["vec",3]],["vec",3]],[[["btreemap",3],["time",3]]],[[["commutersvehiclescounts",3]]],null,null,null,null,null,null,null,null,null,null,null,[[["map",3],["time",3],["distance",3]],["pedstate",4]],[[["time",3],["map",3]],["distance",3]],[[["time",3],["map",3]],["drawpedestrianinput",3]],[[["vec",3],["time",3],["map",3],["scheduler",3],["multimap",3],["intersectionsimstate",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,[[],["time",3]],[[["time",3]],["duration",3]],[[["vec",3],["pedcrowdlocation",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["xorshiftrng",3]],["pandemicmodel",3]],[[["scheduler",3]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["event",4],["time",3],["scheduler",3]]],[[["scheduler",3],["time",3],["cmd",4]]],[[["personid",3]],[["option",4],["time",3]]],[[["personid",3]],["bool",15]],[[["personid",3]],["bool",15]],[[["personid",3]],["bool",15]],[[["personid",3]],["bool",15]],[[["personid",3]],["bool",15]],[[["personid",3]],[["option",4],["personid",3]]],[[["time",3],["personid",3],["scheduler",3],["vec",3]]],[[["scheduler",3],["time",3],["personid",3]]],[[["personid",3],["time",3],["duration",3],["scheduler",3]]],null,null,[[],["sharedspace",3]],[[["time",3],["personid",3]]],[[["time",3],["personid",3]],[["option",4],["vec",3]]],null,null,[[],["f64",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,[[["xorshiftrng",3],["anytime",3]],["state",4]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["f64",15]],[[],["f64",15]],[[["f64",15]]],[[["f64",15],["xorshiftrng",3]],["duration",3]],[[["f64",15],["xorshiftrng",3]],["duration",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4],["time",3]]],[[],[["anytime",3],["option",4]]],[[["xorshiftrng",3],["anytime",3]],["option",4]],[[["xorshiftrng",3],["anytime",3]],["option",4]],[[["xorshiftrng",3],["anytime",3],["duration",3]],["result",6]],null,null,null,null,null,[[["intersectionid",3],["btreeset",3]],["trafficrecorder",3]],[[["event",4],["time",3],["map",3],["drivingsimstate",3]]],[[],["usize",15]],[[["map",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["intersectionid",3],["carid",3],["path",3],["distance",3]],["router",3]],[[["position",3],["map",3],["carid",3]],["router",3]],[[["buildingid",3],["path",3],["carid",3]],["router",3]],[[["sidewalkspot",3],["path",3],["carid",3]],["router",3]],[[["path",3],["carid",3]],["router",3]],[[],["traversable",4]],[[],["traversable",4]],[[],[["traversable",4],["option",4]]],[[],["bool",15]],[[],["distance",3]],[[],["path",3]],[[["map",3],["vehicle",3],["option",4],["parkingsimstate",4],["vec",3]],["traversable",4]],[[["vec",3],["vehicle",3],["map",3],["option",4],["parkingsimstate",4],["distance",3]],[["option",4],["actionatend",4]]],[[["bool",15],["hashmap",3],["map",3]]],[[],["bool",15]],[[],[["option",4],["parkingspot",4]]],null,null,null,null,null,null,null,null,null,null,null,null,[[["agentid",4]],["command",4]],[[],["commandtype",4]],[[],["simplecommandtype",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["scheduler",3]],[[["time",3],["command",4]]],[[["time",3],["command",4]]],[[["command",4]]],[[],[["option",4],["time",3]]],[[],["time",3]],[[],[["option",4],["command",4]]],[[],[["vec",3],["string",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cmdargs",3],["u64",15]],["simoptions",3]],null,null,null,null,[[["str",15]],["simoptions",3]],[[["simoptions",3],["map",3]],["sim",3]],[[["map",3],["timer",3],["vec",3]]],[[["laneid",3]],[["parkingspot",4],["vec",3]]],[[["buildingid",3]],[["parkingspot",4],["vec",3]]],[[["parkinglotid",3]],[["parkingspot",4],["vec",3]]],[[]],[[["buildingid",3]],[["carid",3],["vec",3]]],[[["buildingid",3],["map",3]],[["option",4],["path",3]]],[[["vehiclespec",3],["option",4],["origpersonid",3],["speed",3],["vec",3]],["person",3]],[[["parkingspot",4],["vehicle",3]]],[[["busroute",3]]],[[["map",3],["busroute",3]]],[[["string",3]]],[[],["string",3]],[[["option",4],["duration",3],["map",3]],["bool",15]],[[["time",3],["command",4],["map",3],["option",4]],["bool",15]],[[["event",4],["vec",3],["map",3]]],[[["timer",3],["duration",3],["map",3],["option",4]]],[[["option",4],["map",3]]],[[["option",4],["duration",3],["map",3]]],[[]],[[],["string",3]],[[["time",3]],["string",3]],[[],["string",3]],[[["time",3]],[["string",3],["option",4]]],[[["time",3]],[["string",3],["option",4]]],[[["timer",3],["string",3]],[["sim",3],["result",6]]],[[["map",3]]],[[["map",3]]],[[["map",3]]],[[["map",3],["carid",3]]],[[],["vec",3]],null,[[["sim",3],["map",3]],["bool",15]],[[],["bool",15]],[[["box",3]],[["result",4],["box",3],["box",3]]],[[["rc",3]],[["rc",3],["result",4],["rc",3]]],[[],["option",4]],[[],["option",4]],[[["duration",3]]],[[]],[[["intersectionid",3],["btreeset",3]]],[[],[["usize",15],["option",4]]],[[["map",3]]],[[["btreeset",3],["personid",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["map",3]],["transitsimstate",3]],[[["map",3],["busroute",3]],["path",3]],[[["busrouteid",3],["carid",3]]],[[["time",3],["carid",3],["tripmanager",3],["ctx",3],["walkingsimstate",3]],["bool",15]],[[["map",3],["carid",3]],["router",3]],[[["time",3],["map",3],["option",4],["busstopid",3],["personid",3],["tripid",3],["pedestrianid",3],["busrouteid",3]],[["option",4],["carid",3]]],[[],[["event",4],["vec",3]]],[[["carid",3]],["vec",3]],[[["carid",3]],["busrouteid",3]],[[["busrouteid",3]],["vec",3]],[[]],[[["busstopid",3]],["vec",3]],[[["map",3],["time",3],["drivingsimstate",3]],[["vec",3],["unzoomedagent",3]]],null,null,null,null,null,null,null,null,[[],["tripmanager",3]],[[["vehiclespec",3],["option",4],["origpersonid",3],["speed",3],["vec",3]],["person",3]],[[],["usize",15]],[[["tripinfo",3],["personid",3]],["tripid",3]],[[["time",3],["tripid",3],["starttripargs",3],["ctx",3]]],[[],[["event",4],["vec",3]]],[[["tripid",3],["agentid",4]]],[[["time",3],["carid",3],["parkingspot",4],["duration",3],["ctx",3],["distance",3]]],[[["time",3],["duration",3],["parkingspot",4],["pedestrianid",3],["ctx",3],["distance",3]]],[[["ctx",3],["time",3],["duration",3],["pedestrianid",3],["sidewalkspot",3],["distance",3]]],[[["ctx",3],["time",3],["carid",3],["duration",3],["sidewalkspot",3],["distance",3]]],[[["time",3],["duration",3],["buildingid",3],["pedestrianid",3],["ctx",3],["distance",3]]],[[["busstopid",3],["transitsimstate",3],["time",3],["duration",3],["pedestrianid",3],["ctx",3],["distance",3]],[["option",4],["busrouteid",3]]],[[["time",3],["carid",3],["duration",3],["pedestrianid",3],["walkingsimstate",3]]],[[["time",3],["carid",3],["personid",3],["ctx",3]]],[[["time",3],["intersectionid",3],["duration",3],["pedestrianid",3],["ctx",3],["distance",3]]],[[["time",3],["carid",3],["personid",3],["ctx",3]]],[[["intersectionid",3],["time",3],["carid",3],["duration",3],["ctx",3],["distance",3]]],[[["tripid",3],["time",3],["ctx",3]]],[[["ctx",3],["time",3],["personid",3]]],[[["time",3],["tripid",3],["sidewalkspot",3],["ctx",3]]],[[["time",3],["carid",3],["tripid",3],["pathrequest",3],["ctx",3]],[["result",6],["path",3]]],[[["tripid",3],["string",3]]],[[["time",3],["string",3],["tripid",3],["option",4],["ctx",3],["vehicle",3]]],[[["tripid",3],["agentid",4]]],[[],[["vec",3],["agentid",4]]],[[],["btreemap",3]],[[],["usize",15]],[[["tripid",3]],[["tripresult",4],["agentid",4]]],[[["agentid",4]],[["tripid",3],["option",4]]],[[["agentid",4]]],[[]],[[["transitsimstate",3]],[["counter",3],["agenttype",4]]],[[["walkingsimstate",3],["transitsimstate",3]],["commutersvehiclescounts",3]],[[]],[[],["bool",15]],[[["tripid",3]],["tripinfo",3]],[[],["vec",3]],[[["tripid",3]],["option",4]],[[["tripid",3]],["duration",3]],[[["buildingid",3]],[["vec",3],["personid",3]]],[[["personid",3]],[["option",4],["person",3]]],[[],["vec",3]],[[["tripid",3]],[["option",4],["personid",3]]],[[["intersectionid",3]],["vec",3]],[[["string",3],["map",3]],["scenario",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["sidewalkspot",3]]],null,null,null,null,null,null,null,null,null,[[],[["tripmode",4],["vec",3]]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["pathconstraints",4]],[[["pathconstraints",4]],["tripmode",4]],null,null,null,null,null,null,null,[[],["option",4]],[[],["tripresult",4]],null,null,null,null,null,null,null,null,null,null,[[["carid",3]],["vehicle",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["xorshiftrng",3]],["xorshiftrng",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["sim",3],["map",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["carid",3]],[[],["agenttype",4]],[[],[["vehicletype",4],["option",4]]],[[["usize",15]],["bool",15]],null,null,null,null,null,null,null,[[],[["agenttype",4],["vec",3]]],[[],["str",15]],[[],["str",15]],[[],["str",15]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["pathconstraints",4]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,[[["option",4],["personid",3],["carid",3]],["vehicle",3]],null,null,null,null,null,null,null,null,null,null,null,[[["pathconstraints",4],["map",3]],[["position",3],["option",4]]],[[["map",3],["path",3],["carid",3]],["router",3]],null,null,null,null,null,null,null,null,null,null,null,[[],["sidewalkspot",3]],[[["parkingspot",4],["parkingsimstate",4],["map",3]],["sidewalkspot",3]],[[["buildingid",3],["map",3]],["sidewalkspot",3]],[[["buildingid",3],["map",3]],[["option",4],["sidewalkspot",3]]],[[["busstopid",3],["map",3]],["sidewalkspot",3]],[[["intersectionid",3],["map",3]],[["option",4],["sidewalkspot",3]]],[[["intersectionid",3],["map",3]],[["option",4],["sidewalkspot",3]]],[[["position",3],["map",3]],["sidewalkspot",3]],null,null,null,[[["time",3]],["timeinterval",3]],[[["time",3]],["f64",15]],[[["time",3]],["f64",15]],null,null,null,[[["distance",3]],["distanceinterval",3]],[[["distance",3]],["distanceinterval",3]],[[["f64",15]],["distance",3]],[[],["distance",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["personid",3],["router",3],["tripid",3],["vehicle",3]],["createcar",3]],[[["parkedcar",3],["router",3],["tripid",3],["personid",3]],["createcar",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[],["u64",15]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["arc",3],["any",8]]],[[["map",3]]],[[["laneid",3]],[["parkingspot",4],["vec",3]]],[[["buildingid",3]],[["parkingspot",4],["vec",3]]],[[["parkinglotid",3]],[["parkingspot",4],["vec",3]]],[[["parkingspot",4],["carid",3]]],[[["carid",3]]],[[["parkedcar",3]]],[[["parkedcar",3]]],[[["map",3],["laneid",3]],[["vec",3],["drawcarinput",3]]],[[["map",3],["laneid",3]],[["vec",3],["drawcarinput",3]]],[[["map",3],["carid",3]],[["option",4],["drawcarinput",3]]],[[["map",3],["carid",3]],[["pt2d",3],["option",4]]],[[["map",3]],[["vec",3],["drawcarinput",3]]],[[["parkingspot",4]],["bool",15]],[[["parkingspot",4]],[["option",4],["parkedcar",3]]],[[["vehicle",3],["position",3],["buildingid",3],["map",3]],["vec",3]],[[["parkingspot",4],["map",3],["vehicle",3]],["position",3]],[[["parkingspot",4],["map",3]],["position",3]],[[["carid",3]],[["option",4],["personid",3]]],[[["carid",3]],[["option",4],["parkedcar",3]]],[[]],[[["vehicle",3],["buildingid",3],["map",3],["laneid",3]],["option",4]],[[],[["event",4],["vec",3]]],[[["map",3]],["vec",3]],[[["buildingid",3]],[["carid",3],["vec",3]]],[[["map",3]]],[[["laneid",3]],[["parkingspot",4],["vec",3]]],[[["buildingid",3]],[["parkingspot",4],["vec",3]]],[[["parkinglotid",3]],[["parkingspot",4],["vec",3]]],[[["parkingspot",4],["carid",3]]],[[["carid",3]]],[[["parkedcar",3]]],[[["parkedcar",3]]],[[["map",3],["laneid",3]],[["vec",3],["drawcarinput",3]]],[[["map",3],["laneid",3]],[["vec",3],["drawcarinput",3]]],[[["map",3],["carid",3]],[["option",4],["drawcarinput",3]]],[[["map",3],["carid",3]],[["pt2d",3],["option",4]]],[[["map",3]],[["vec",3],["drawcarinput",3]]],[[["parkingspot",4]],["bool",15]],[[["parkingspot",4]],[["option",4],["parkedcar",3]]],[[["vehicle",3],["position",3],["buildingid",3],["map",3]],["vec",3]],[[["parkingspot",4],["map",3],["vehicle",3]],["position",3]],[[["parkingspot",4],["map",3]],["position",3]],[[["carid",3]],[["option",4],["personid",3]]],[[["carid",3]],[["option",4],["parkedcar",3]]],[[]],[[["vehicle",3],["buildingid",3],["map",3],["laneid",3]],["option",4]],[[],[["event",4],["vec",3]]],[[["map",3]],["vec",3]],[[["buildingid",3]],[["carid",3],["vec",3]]],[[["map",3]]],[[["laneid",3]],[["parkingspot",4],["vec",3]]],[[["buildingid",3]],[["parkingspot",4],["vec",3]]],[[["parkinglotid",3]],[["parkingspot",4],["vec",3]]],[[["parkingspot",4],["carid",3]]],[[["carid",3]]],[[["parkedcar",3]]],[[["parkedcar",3]]],[[["map",3],["laneid",3]],[["vec",3],["drawcarinput",3]]],[[["map",3],["laneid",3]],[["vec",3],["drawcarinput",3]]],[[["map",3],["carid",3]],[["option",4],["drawcarinput",3]]],[[["map",3],["carid",3]],[["pt2d",3],["option",4]]],[[["map",3]],[["vec",3],["drawcarinput",3]]],[[["parkingspot",4]],["bool",15]],[[["parkingspot",4]],[["option",4],["parkedcar",3]]],[[["vehicle",3],["position",3],["buildingid",3],["map",3]],["vec",3]],[[["parkingspot",4],["map",3],["vehicle",3]],["position",3]],[[["parkingspot",4],["map",3]],["position",3]],[[["carid",3]],[["option",4],["personid",3]]],[[["carid",3]],[["option",4],["parkedcar",3]]],[[]],[[["vehicle",3],["buildingid",3],["map",3],["laneid",3]],["option",4]],[[],[["event",4],["vec",3]]],[[["map",3]],["vec",3]],[[["buildingid",3]],[["carid",3],["vec",3]]],[[["normalparkingsimstate",3]],["parkingsimstate",4]],[[["infiniteparkingsimstate",3]],["parkingsimstate",4]],[[["time",3]],["anytime",3]],[[["f64",15]],["anytime",3]],[[],["analytics",3]],[[],["problem",4]],[[],["timeseriescount",3]],[[],["capsimstate",3]],[[],["zone",3]],[[],["event",4]],[[],["alertlocation",4]],[[],["tripphasetype",4]],[[],["mapborders",3]],[[],["scenariogenerator",3]],[[],["spawnovertime",3]],[[],["borderspawnovertime",3]],[[],["simflags",3]],[[],["scenariomodifier",4]],[[],["scenario",3]],[[],["personspec",3]],[[],["individtrip",3]],[[],["trippurpose",4]],[[],["starttripargs",3]],[[],["tripspec",4]],[[],["tripendpoint",4]],[[],["car",3]],[[],["carstate",4]],[[],["drivingsimstate",3]],[[],["intersectionsimstate",3]],[[],["state",3]],[[],["signalstate",3]],[[],["request",3]],[[],["parkingsimstate",4]],[[],["normalparkingsimstate",3]],[[],["parkinglane",3]],[[],["infiniteparkingsimstate",3]],[[],["queue",3]],[[],["walkingsimstate",3]],[[],["pedestrian",3]],[[],["pedstate",4]],[[],["pandemicmodel",3]],[[],["cmd",4]],[[],["sharedspace",3]],[[],["anytime",3]],[[],["stateevent",4]],[[],["event",3]],[[],["state",4]],[[],["trafficrecorder",3]],[[],["drawpedestrianinput",3]],[[],["pedcrowdlocation",4]],[[],["drawcarinput",3]],[[],["carstatus",4]],[[],["router",3]],[[],["goal",4]],[[],["command",4]],[[],["commandtype",4]],[[],["simplecommandtype",4]],[[],["item",3]],[[],["scheduler",3]],[[],["delaycause",4]],[[],["sim",3]],[[],["simoptions",3]],[[],["alerthandler",4]],[[],["stop",3]],[[],["route",3]],[[],["bus",3]],[[],["busstate",4]],[[],["transitsimstate",3]],[[],["tripmanager",3]],[[],["trip",3]],[[],["tripinfo",3]],[[],["tripleg",4]],[[],["tripmode",4]],[[],["person",3]],[[],["personstate",4]],[[],["carid",3]],[[],["pedestrianid",3]],[[],["agentid",4]],[[],["agenttype",4]],[[],["tripid",3]],[[],["personid",3]],[[],["origpersonid",3]],[[],["vehicletype",4]],[[],["vehicle",3]],[[],["vehiclespec",3]],[[],["parkingspot",4]],[[],["parkedcar",3]],[[],["drivinggoal",4]],[[],["sidewalkspot",3]],[[],["sidewalkpoi",4]],[[],["timeinterval",3]],[[],["distanceinterval",3]],[[],["createpedestrian",3]],[[],["createcar",3]],[[],["analytics",3]],[[],["simoptions",3]],[[],["alerthandler",4]],[[["scenariomodifier",4]],["ordering",4]],[[["tripendpoint",4]],["ordering",4]],[[["request",3]],["ordering",4]],[[["cmd",4]],["ordering",4]],[[["commandtype",4]],["ordering",4]],[[["simplecommandtype",4]],["ordering",4]],[[["item",3]],["ordering",4]],[[["delaycause",4]],["ordering",4]],[[["tripmode",4]],["ordering",4]],[[["carid",3]],["ordering",4]],[[["pedestrianid",3]],["ordering",4]],[[["agentid",4]],["ordering",4]],[[["agenttype",4]],["ordering",4]],[[["tripid",3]],["ordering",4]],[[["personid",3]],["ordering",4]],[[["origpersonid",3]],["ordering",4]],[[["vehicletype",4]],["ordering",4]],[[["parkingspot",4]],["ordering",4]],[[["sidewalkpoi",4]],["ordering",4]],[[["problem",4]],["bool",15]],[[["problem",4]],["bool",15]],[[["event",4]],["bool",15]],[[["event",4]],["bool",15]],[[["alertlocation",4]],["bool",15]],[[["alertlocation",4]],["bool",15]],[[["tripphasetype",4]],["bool",15]],[[["tripphasetype",4]],["bool",15]],[[["scenariomodifier",4]],["bool",15]],[[["scenariomodifier",4]],["bool",15]],[[["starttripargs",3]],["bool",15]],[[["starttripargs",3]],["bool",15]],[[["tripspec",4]],["bool",15]],[[["tripspec",4]],["bool",15]],[[["tripendpoint",4]],["bool",15]],[[["tripendpoint",4]],["bool",15]],[[["request",3]],["bool",15]],[[["request",3]],["bool",15]],[[["cmd",4]],["bool",15]],[[["cmd",4]],["bool",15]],[[["anytime",3]],["bool",15]],[[["anytime",3]],["bool",15]],[[["carstatus",4]],["bool",15]],[[["router",3]],["bool",15]],[[["router",3]],["bool",15]],[[["goal",4]],["bool",15]],[[["goal",4]],["bool",15]],[[["command",4]],["bool",15]],[[["command",4]],["bool",15]],[[["commandtype",4]],["bool",15]],[[["commandtype",4]],["bool",15]],[[["simplecommandtype",4]],["bool",15]],[[["item",3]],["bool",15]],[[["item",3]],["bool",15]],[[["delaycause",4]],["bool",15]],[[["delaycause",4]],["bool",15]],[[["tripleg",4]],["bool",15]],[[["tripleg",4]],["bool",15]],[[["tripmode",4]],["bool",15]],[[["personstate",4]],["bool",15]],[[["personstate",4]],["bool",15]],[[["carid",3]],["bool",15]],[[["carid",3]],["bool",15]],[[["pedestrianid",3]],["bool",15]],[[["pedestrianid",3]],["bool",15]],[[["agentid",4]],["bool",15]],[[["agentid",4]],["bool",15]],[[["agenttype",4]],["bool",15]],[[["tripid",3]],["bool",15]],[[["tripid",3]],["bool",15]],[[["personid",3]],["bool",15]],[[["personid",3]],["bool",15]],[[["origpersonid",3]],["bool",15]],[[["origpersonid",3]],["bool",15]],[[["vehicletype",4]],["bool",15]],[[["vehicle",3]],["bool",15]],[[["vehicle",3]],["bool",15]],[[["vehiclespec",3]],["bool",15]],[[["vehiclespec",3]],["bool",15]],[[["parkingspot",4]],["bool",15]],[[["parkingspot",4]],["bool",15]],[[["parkedcar",3]],["bool",15]],[[["parkedcar",3]],["bool",15]],[[["drivinggoal",4]],["bool",15]],[[["drivinggoal",4]],["bool",15]],[[["sidewalkspot",3]],["bool",15]],[[["sidewalkspot",3]],["bool",15]],[[["sidewalkpoi",4]],["bool",15]],[[["sidewalkpoi",4]],["bool",15]],[[["timeinterval",3]],["bool",15]],[[["timeinterval",3]],["bool",15]],[[["distanceinterval",3]],["bool",15]],[[["distanceinterval",3]],["bool",15]],[[["createpedestrian",3]],["bool",15]],[[["createpedestrian",3]],["bool",15]],[[["createcar",3]],["bool",15]],[[["createcar",3]],["bool",15]],[[["scenariomodifier",4]],[["ordering",4],["option",4]]],[[["tripendpoint",4]],[["ordering",4],["option",4]]],[[["request",3]],[["ordering",4],["option",4]]],[[["cmd",4]],[["ordering",4],["option",4]]],[[["anytime",3]],[["ordering",4],["option",4]]],[[["commandtype",4]],[["ordering",4],["option",4]]],[[["simplecommandtype",4]],[["ordering",4],["option",4]]],[[["item",3]],[["option",4],["ordering",4]]],[[["delaycause",4]],[["ordering",4],["option",4]]],[[["tripmode",4]],[["ordering",4],["option",4]]],[[["carid",3]],[["ordering",4],["option",4]]],[[["pedestrianid",3]],[["ordering",4],["option",4]]],[[["agentid",4]],[["ordering",4],["option",4]]],[[["agenttype",4]],[["ordering",4],["option",4]]],[[["tripid",3]],[["ordering",4],["option",4]]],[[["personid",3]],[["ordering",4],["option",4]]],[[["origpersonid",3]],[["ordering",4],["option",4]]],[[["vehicletype",4]],[["ordering",4],["option",4]]],[[["parkingspot",4]],[["ordering",4],["option",4]]],[[["sidewalkpoi",4]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["duration",3]],["anytime",3]],[[["anytime",3]],["duration",3]],[[["duration",3]],["anytime",3]],[[["duration",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4],["normalparkingsimstate",3]]],[[],[["infiniteparkingsimstate",3],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["usize",15]],[[],["usize",15]],[[["xorshiftrng",3],["timer",3],["map",3]],["scenario",3]],[[],["time",3]],[[],["bool",15]],[[],["bool",15]],[[]],[[],[["counter",3],["agenttype",4]]],[[],["commutersvehiclescounts",3]],[[]],[[["pedestrianid",3]]],[[["carid",3]]],[[["carid",3]],["string",3]],[[["intersectionid",3],["map",3]]],[[["laneid",3]]],[[["agentid",4],["map",3]],["agentproperties",3]],[[["carid",3]],["usize",15]],[[["carid",3]],[["option",4],["busrouteid",3]]],[[],[["vec",3],["agentid",4]]],[[],["usize",15]],[[["agentid",4]],[["tripid",3],["option",4]]],[[["tripid",3]],[["tripresult",4],["agentid",4]]],[[["tripid",3]],["tripinfo",3]],[[],["vec",3]],[[["tripid",3]],["option",4]],[[["tripid",3]],["duration",3]],[[["tripid",3]],[["option",4],["personid",3]]],[[["agentid",4]],[["option",4],["personid",3]]],[[["personid",3]],[["option",4],["agentid",4]]],[[["carid",3]],[["option",4],["personid",3]]],[[["carid",3]],[["option",4],["parkedcar",3]]],[[["map",3]],["vec",3]],[[["personid",3]],[["option",4],["person",3]]],[[["personid",3]],["person",3]],[[["origpersonid",3]],[["option",4],["personid",3]]],[[],["vec",3]],[[["usize",15]],[["option",4],["carid",3]]],[[["agentid",4]],[["path",3],["option",4]]],[[],[["path",3],["vec",3]]],[[["agentid",4],["map",3]],[["option",4],["polyline",3]]],[[["tripid",3],["map",3]],[["pt2d",3],["tripresult",4]]],[[["personid",3],["map",3]],[["pt2d",3],["option",4]]],[[["agentid",4],["map",3]],[["pt2d",3],["option",4]]],[[["intersectionid",3]],["vec",3]],[[["intersectionid",3]],["vec",3]],[[["map",3]],[["agentid",4],["btreemap",3]]],[[["map",3],["busrouteid",3]],["vec",3]],[[],["analytics",3]],[[["duration",3]],["vec",3]],[[["buildingid",3]],[["vec",3],["personid",3]]],[[],[["pandemicmodel",3],["option",4]]],[[],["time",3]],[[["intersectionid",3]]],[[["intersectionid",3]],["vec",3]],[[["lane",3]]],[[["busstopid",3]],["vec",3]],[[["string",3],["map",3]],["scenario",3]],[[["roadid",3]],["usize",15]],[[],["bool",15]],[[],[["btreemap",3],["personid",3],["duration",3]]],[[],[["vec",3],["string",3]]],[[["laneid",3]],["option",4]],[[["tripid",3],["map",3]],[["result",6],["duration",3]]],[[],["option",4]],[[],["usize",15]],[[["map",3],["carid",3]],[["option",4],["drawcarinput",3]]],[[["pedestrianid",3],["map",3]],[["drawpedestrianinput",3],["option",4]]],[[["traversable",4],["map",3]],[["vec",3],["drawcarinput",3]]],[[["traversable",4],["map",3]]],[[["map",3]],[["vec",3],["drawcarinput",3]]],[[["map",3]],[["drawpedestrianinput",3],["vec",3]]],[[["map",3]],[["vec",3],["unzoomedagent",3]]],[[["map",3]],[["vec",3],["unzoomedagent",3]]]],"p":[[3,"Analytics"],[4,"Problem"],[3,"TripPhase"],[3,"TimeSeriesCount"],[3,"Window"],[3,"CapSimState"],[4,"CapResult"],[13,"Cancel"],[3,"Zone"],[4,"Event"],[13,"TripFinished"],[4,"AlertLocation"],[4,"TripPhaseType"],[3,"ExternalPerson"],[3,"ExternalTrip"],[4,"ExternalTripEndpoint"],[3,"MapBorders"],[3,"ScenarioGenerator"],[3,"SpawnOverTime"],[3,"BorderSpawnOverTime"],[3,"SimFlags"],[4,"ScenarioModifier"],[13,"ChangeMode"],[3,"Scenario"],[3,"PersonSpec"],[3,"IndividTrip"],[4,"TripPurpose"],[3,"StartTripArgs"],[4,"TripSpec"],[13,"VehicleAppearing"],[13,"SpawningFailure"],[13,"UsingParkedCar"],[13,"JustWalking"],[13,"UsingBike"],[13,"UsingTransit"],[4,"TripEndpoint"],[3,"Car"],[4,"CarState"],[13,"Queued"],[13,"WaitingToAdvance"],[3,"DrivingSimState"],[3,"IntersectionSimState"],[3,"State"],[3,"SignalState"],[3,"Request"],[8,"ParkingSim"],[4,"ParkingSimState"],[3,"NormalParkingSimState"],[3,"ParkingLane"],[3,"InfiniteParkingSimState"],[3,"Queue"],[3,"WalkingSimState"],[3,"Pedestrian"],[4,"PedState"],[3,"PandemicModel"],[4,"Cmd"],[3,"SharedSpace"],[3,"AnyTime"],[4,"StateEvent"],[3,"Event"],[4,"State"],[3,"TrafficRecorder"],[3,"DrawPedestrianInput"],[3,"DrawPedCrowdInput"],[4,"PedCrowdLocation"],[3,"DrawCarInput"],[4,"CarStatus"],[3,"UnzoomedAgent"],[3,"Router"],[4,"ActionAtEnd"],[4,"Goal"],[13,"ParkNearBuilding"],[13,"EndAtBorder"],[13,"BikeThenStop"],[13,"FollowBusRoute"],[4,"Command"],[4,"CommandType"],[4,"SimpleCommandType"],[3,"Item"],[3,"Scheduler"],[3,"AgentProperties"],[4,"DelayCause"],[3,"Sim"],[3,"Ctx"],[3,"SimOptions"],[4,"AlertHandler"],[8,"SimCallback"],[3,"Stop"],[3,"Route"],[3,"Bus"],[4,"BusState"],[3,"TransitSimState"],[3,"TripManager"],[3,"Trip"],[3,"TripInfo"],[4,"TripLeg"],[4,"TripMode"],[4,"TripResult"],[3,"Person"],[4,"PersonState"],[3,"CommutersVehiclesCounts"],[3,"CarID"],[3,"PedestrianID"],[4,"AgentID"],[4,"AgentType"],[3,"TripID"],[3,"PersonID"],[3,"OrigPersonID"],[4,"VehicleType"],[3,"Vehicle"],[3,"VehicleSpec"],[4,"ParkingSpot"],[3,"ParkedCar"],[4,"DrivingGoal"],[3,"SidewalkSpot"],[4,"SidewalkPOI"],[3,"TimeInterval"],[3,"DistanceInterval"],[3,"CreatePedestrian"],[3,"CreateCar"]]},\
"sumo":{"doc":"This crate provides a Rust interface to different parts …","t":[0,0,3,12,12,12,12,12,3,12,12,11,3,12,3,12,3,12,3,12,3,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,4,13,13,4,13,13,13,3,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,11,3,12,12,12,12,12,12,11,11,4,13,13,13,13,13,13,13,5,5,5,5,5,5,5,5,5,5,5,3,12,12,12,12,12,12,4,13,13,13,13,13,13,13,3,12,3,12,3,12,3,12,3,12,12,12,12,12,3,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,3,12,12,3,12,12,12,12,12,12,3,12,12,12,12,12,12,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["normalize","raw","Network","location","types","edges","junctions","connections","Location","converted_boundary","orig_boundary","parse","EdgeID","0","NodeID","0","LaneID","0","InternalLaneID","0","Type","id","priority","speed","width","allow","disallow","Edge","id","name","from","to","priority","function","lanes","edge_type","spread_type","shape","Function","Normal","Internal","SpreadType","Right","Center","RoadCenter","Lane","id","index","speed","length","width","shape","allow","disallow","Junction","id","junction_type","x","y","incoming_lanes","internal_lanes","shape","pt","Connection","from","from_lane","to","to_lane","via","dir","from_lane","to_lane","Direction","Straight","Turn","Left","Right","PartiallyLeft","PartiallyRight","Invalid","parse_f64s","parse_bounds","parse_gps_bounds","parse_list_vehicles","parse_list_lanes","parse_list_internal_lanes","parse_pts","parse_pl","must_parse_pl","parse_polygon","parse_pt","Connection","from","from_lane","to","to_lane","via","dir","Direction","Straight","Turn","Left","Right","PartiallyLeft","PartiallyRight","Invalid","EdgeID","0","InternalLaneID","0","LaneID","0","NodeID","0","Network","location","normal_edges","internal_edges","junctions","connections","Edge","id","edge_type","name","from","to","priority","lanes","center_line","Lane","id","index","speed","length","width","center_line","allow","InternalEdge","id","lanes","InternalLane","id","index","speed","length","center_line","allow","Junction","id","junction_type","pt","incoming_lanes","internal_lanes","shape","VehicleClass","Pedestrian","Bicycle","RailUrban","Other","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","equivalent","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","clone","clone","clone","clone","default","default","cmp","cmp","cmp","cmp","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","load","from_raw","fix_coordinates"],"q":["sumo","","sumo::raw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sumo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sumo::raw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sumo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sumo::raw","","","","","","","","","","","","","","","","","","","sumo","","sumo::raw","","","","","","","","","","","","","","","","","","sumo","",""],"d":["Transforms a <code>raw::Network</code> into a <code>Network</code> that’s easier …","Parse SUMO networks from XML without making any …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This could be a LaneID or an InternalLaneID. It’ll be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A normalized form of a SUMO network. A <code>raw::Network</code> is a …","","","","","","","","","","","","","","","","","0 is the rightmost lane","","","","","","See …eads a .net.xml file and return the normalized SUMO …","","Normalize coordinates to map-space, with Y increasing …"],"i":[0,0,0,1,1,1,1,1,0,2,2,1,0,3,0,4,0,5,0,6,0,7,7,7,7,7,7,0,8,8,8,8,8,8,8,8,8,8,0,9,9,0,10,10,10,0,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,0,13,13,13,13,13,13,13,13,0,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,13,13,13,0,14,14,14,14,14,14,14,0,3,0,6,0,5,0,4,0,15,15,15,15,15,0,16,16,16,16,16,16,16,16,0,17,17,17,17,17,17,17,0,18,18,0,19,19,19,19,19,19,0,20,20,20,20,20,20,0,21,21,21,21,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,3,4,5,6,9,10,3,4,5,6,3,3,4,4,5,5,6,6,9,21,21,3,4,5,6,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,15,15],"f":[null,null,null,null,null,null,null,null,null,null,null,[[["timer",3],["str",15]],[["network",3],["result",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["pt2d",3]],null,null,null,null,null,null,null,[[],["laneid",3]],[[],["laneid",3]],null,null,null,null,null,null,null,null,[[["deserializer",8]],[["result",4],["vec",3]]],[[["deserializer",8]],[["result",4],["bounds",3]]],[[["deserializer",8]],[["gpsbounds",3],["result",4]]],[[["deserializer",8]],[["result",4],["vec",3]]],[[["deserializer",8]],[["vec",3],["result",4]]],[[["deserializer",8]],[["result",4],["vec",3]]],[[["deserializer",8]],[["result",4],["vec",3]]],[[["deserializer",8]],[["result",6],["result",4]]],[[["deserializer",8]],[["result",4],["option",4]]],[[["deserializer",8]],[["result",4],["option",4]]],[[["str",15]],[["result",6],["pt2d",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["edgeid",3]],[[],["nodeid",3]],[[],["laneid",3]],[[],["internallaneid",3]],[[],["function",4]],[[],["spreadtype",4]],[[["edgeid",3]],["ordering",4]],[[["nodeid",3]],["ordering",4]],[[["laneid",3]],["ordering",4]],[[["internallaneid",3]],["ordering",4]],[[["edgeid",3]],["bool",15]],[[["edgeid",3]],["bool",15]],[[["nodeid",3]],["bool",15]],[[["nodeid",3]],["bool",15]],[[["laneid",3]],["bool",15]],[[["laneid",3]],["bool",15]],[[["internallaneid",3]],["bool",15]],[[["internallaneid",3]],["bool",15]],[[["function",4]],["bool",15]],[[["vehicleclass",4]],["bool",15]],[[["vehicleclass",4]],["bool",15]],[[["edgeid",3]],[["ordering",4],["option",4]]],[[["nodeid",3]],[["ordering",4],["option",4]]],[[["laneid",3]],[["ordering",4],["option",4]]],[[["internallaneid",3]],[["ordering",4],["option",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["timer",3],["str",15]],[["network",3],["result",6]]],[[["network",3]],["network",3]],[[]]],"p":[[3,"Network"],[3,"Location"],[3,"EdgeID"],[3,"NodeID"],[3,"LaneID"],[3,"InternalLaneID"],[3,"Type"],[3,"Edge"],[4,"Function"],[4,"SpreadType"],[3,"Lane"],[3,"Junction"],[3,"Connection"],[4,"Direction"],[3,"Network"],[3,"Edge"],[3,"Lane"],[3,"InternalEdge"],[3,"InternalLane"],[3,"Junction"],[4,"VehicleClass"]]},\
"tests":{"doc":"Integration tests","t":[5,5,5,5,5,5,5,5],"n":["main","test_map_importer","import_map","dump_turn_goldenfile","smoke_test","dump_route_goldenfile","check_proposals","test_lane_changing"],"q":["tests","","","","","","",""],"d":["","Test the map pipeline by importing simple, handcrafted …","Run the contents of a .osm through the full map importer …","Verify what turns are generated by writing (from lane, to …","Simulate an hour on every map.","Describe all public transit routes and keep under version …","Verify all edits under version control can be correctly …","Verify lane-chaging behavior is overall reasonable, by …"],"i":[0,0,0,0,0,0,0,0],"f":[[[],["result",6]],[[],["result",6]],[[["string",3]],["map",3]],[[["map",3]],["result",6]],[[],["result",6]],[[["map",3]],["result",6]],[[],["result",6]],[[["map",3]],["result",6]]],"p":[]},\
"traffic_seitan":{"doc":"","t":[5,5,5,5],"n":["main","run","alter_turn_destinations","nuke_random_parking"],"q":["traffic_seitan","","",""],"d":["","","",""],"i":[0,0,0,0],"f":[[[]],[[["xorshiftrng",3],["map",3],["timer",3],["sim",3]]],[[["sim",3],["xorshiftrng",3],["map",3],["mapedits",3]]],[[["map",3],["xorshiftrng",3],["mapedits",3]]]],"p":[]},\
"traffic_signal_data":{"doc":"A representation of traffic signal configuration that …","t":[3,12,12,3,12,12,12,3,12,12,12,4,13,13,3,12,12,12,12,3,12,12,12,12,7,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["TrafficSignal","intersection_osm_node_id","plans","Plan","start_time_seconds","stages","offset_seconds","Stage","protected_turns","permitted_turns","stage_type","StageType","Fixed","Variable","Turn","from","to","intersection_osm_node_id","is_crosswalk","DirectedRoad","osm_way_id","osm_node1","osm_node2","is_forwards","DATA","load_all_data","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","clone","clone","clone","clone","clone","clone","cmp","cmp","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","serialize","serialize","serialize","serialize","serialize","serialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize"],"q":["traffic_signal_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","The ID of the OSM node representing the intersection with …","The traffic signal uses configuration from one plan at a …","A plan describes how a traffic signal is configured …","This plan takes effect at this local time, measured in …","The traffic signal repeatedly cycles through these …","Relative to a central clock, delay the first stage by …","A traffic signal is in one stage at any time. The stage …","During this stage, these turns can be performed with the …","During this stage, these turns can be performed after …","The stage lasts this long before moving to the next one.","How long a stage lasts before moving to the next one.","A fixed number of seconds.","Minimum, Delay, Additional Minimum is the minimum cycle …","A movement through an intersection.","The movement begins at the end of this road segment.","The movement ends at the beginning of this road segment.","The ID of the OSM node representing the intersection. …","True iff the movement is along a crosswalk. Note that …","A road segment connecting two intersections, and a …","The ID of the OSM way representing the road.","The ID of the OSM node at the start of this road segment.","The ID of the OSM node at the end of this road segment.","The direction along the road segment. See …","","Returns all traffic signal data compiled into this build, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,0,2,2,2,0,3,3,3,0,4,4,0,5,5,5,5,0,6,6,6,6,0,0,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,1,2,3,4,5,6,5,6,1,1,2,2,3,3,4,4,5,5,6,6,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["btreemap",3],["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["trafficsignal",3]],[[],["plan",3]],[[],["stage",3]],[[],["stagetype",4]],[[],["turn",3]],[[],["directedroad",3]],[[["turn",3]],["ordering",4]],[[["directedroad",3]],["ordering",4]],[[["trafficsignal",3]],["bool",15]],[[["trafficsignal",3]],["bool",15]],[[["plan",3]],["bool",15]],[[["plan",3]],["bool",15]],[[["stage",3]],["bool",15]],[[["stage",3]],["bool",15]],[[["stagetype",4]],["bool",15]],[[["stagetype",4]],["bool",15]],[[["turn",3]],["bool",15]],[[["turn",3]],["bool",15]],[[["directedroad",3]],["bool",15]],[[["directedroad",3]],["bool",15]],[[["turn",3]],[["ordering",4],["option",4]]],[[["directedroad",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]]],"p":[[3,"TrafficSignal"],[3,"Plan"],[3,"Stage"],[4,"StageType"],[3,"Turn"],[3,"DirectedRoad"]]},\
"updater":{"doc":"","t":[17,5,5,5,5,5,5,5,5,5,5,5],"n":["MD5_BUF_READ_SIZE","main","download_updates","just_compare","upload","incremental_upload","generate_manifest","md5sum","rm","download_file","remove_empty_directories","compress"],"q":["updater","","","","","","","","","","",""],"d":["","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,[[]],[[["bool",15],["string",3]]],[[]],[[["string",3]]],[[["string",3]]],[[["manifest",3]],["manifest",3]],[[["str",15]],["string",3]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]]],"p":[]},\
"widgetry":{"doc":"Widgets","t":[0,3,12,12,12,12,12,12,12,12,4,13,13,3,12,12,12,12,0,8,11,11,11,11,11,3,12,12,11,11,11,4,13,13,13,8,10,10,11,11,11,11,11,11,11,4,13,13,13,13,13,13,13,13,13,8,10,11,11,11,11,11,11,3,12,12,0,3,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,0,5,5,3,12,12,12,11,11,11,11,11,11,11,3,12,12,12,12,12,11,3,12,12,11,11,3,12,12,11,11,6,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,11,11,11,0,5,3,12,11,11,11,0,17,17,17,3,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,4,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,0,3,12,12,12,12,4,13,13,13,13,3,12,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,11,11,5,5,11,0,17,17,17,17,3,12,12,11,3,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,0,4,13,13,13,13,13,13,13,13,13,13,13,13,13,11,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,11,11,11,11,4,13,13,13,11,5,5,0,4,13,13,13,13,12,12,12,12,3,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,12,12,12,11,11,0,0,4,13,13,4,13,13,3,12,12,12,12,11,11,11,11,11,11,11,11,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,13,13,11,0,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,17,17,3,12,12,12,11,11,11,3,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,5,0,3,12,12,11,11,11,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,3,12,12,11,11,11,11,0,0,3,12,12,12,12,12,12,11,11,11,11,11,11,11,5,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,6,7,17,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,17,17,5,5,5,5,5,3,12,12,12,12,12,5,5,5,0,17,17,17,17,4,13,13,13,13,13,13,11,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,8,10,10,11,0,0,5,0,3,12,12,12,11,11,3,12,11,11,11,11,11,0,0,17,3,12,12,12,12,12,11,11,11,0,3,12,12,12,12,12,12,12,12,12,12,12,12,11,11,3,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,12,3,12,12,12,12,12,11,0,3,12,12,12,12,11,0,3,3,12,12,11,0,3,12,12,12,12,12,12,11,11,11,11,5,0,3,12,12,12,11,5,0,3,12,4,13,13,11,11,11,0,3,12,12,12,12,12,12,12,12,4,13,13,12,12,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,12,12,12,11,3,12,12,12,12,12,11,3,12,12,12,11,0,3,12,12,12,12,12,12,11,0,3,12,12,12,12,11,11,11,11,11,0,3,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,4,13,13,13,13,11,11,11,11,11,11,11,11,0,3,12,12,12,12,11,11,5,11,0,3,12,12,12,12,11,11,8,10,10,10,10,10,10,3,12,12,12,5,5,0,3,12,12,12,11,0,3,12,12,12,12,12,12,12,4,13,12,12,13,12,12,13,12,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,0,17,8,3,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,0,3,12,11,11,0,17,3,12,12,12,12,12,12,12,12,4,13,13,3,12,12,12,3,12,12,12,12,11,11,11,11,11,11,11,11,5,5,0,3,12,12,12,11,11,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,0,3,12,12,12,12,12,12,12,12,12,11,11,11,11,11,0,3,12,12,12,11,11,11,11,11,11,17,8,10,10,10,10,11,11,4,13,13,13,3,12,12,11,11,11,11,11,11,3,12,12,12,12,12,12,4,13,13,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,11,11,0,4,13,13,13,8,11,11,11,11,11,8,10,11,11,11,11,11,8,10,10,11,11,4,13,13,13,13,13,13,13,13,13,3,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,4,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,3,12,12,12,12,4,13,13,13,13,3,12,12,3,12,3,12,12,12,12,12,12,12,12,12,3,12,12,12,12,5,5,4,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,3,12,12,12,12,12,12,4,13,13,13,13,12,12,12,12,4,13,13,4,13,13,3,12,12,12,12,3,12,12,4,13,13,13,13,13,3,12,12,12,5,3,12,12,12,12,12,12,12,12,12,12,3,12,12,3,12,12,3,12,12,12,12,3,12,12,12,12,12,12,6,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,13,13,13,13,13,13,5,3,12,12,8,10,10,3,12,12,12,12,12,3,12,12,12,3,12,3,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,3,12,12,12,12,3,12,12,12,3,12,3,12,12,12,12,12,12,12,12,4,13,13,12,12,13,3,12,12,12,12,12,3,12,12,12,12,12,12,3,12,12,12,12,3,12,12,12,12,3,12,12,12,12,3,12,12,12,3,12,12,12,3,12,12,12,12,12,12,12,3,12,12,12,12,12,12,12,12,12,12,12,3,12,3,12,12,12,3,12,12,12,12,12,12,12,12,12,3,12,12,12,17,4,13,13,3,12,12,12,12,4,13,13,13,3,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,12,12,8,10,10,10,10,11,11,3,12,12,4,13,13,13,4,13,13,13,3,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["table","Table","id","data","label_per_row","columns","filter","sort_by","descending","skip","Col","Static","Sortable","Filter","state","to_controls","from_controls","apply","app_state","SharedAppState","before_event","draw_default","dump_before_abort","before_quit","free_memory","App","states","shared_app_state","event","draw","execute_transition","DrawBaselayer","DefaultDraw","Custom","PreviousState","State","event","draw","draw_baselayer","on_destroy","is","downcast","downcast_rc","downcast_ref","downcast_mut","Transition","Keep","KeepWithMouseover","Pop","ModifyState","ReplaceWithData","Push","Replace","Clear","Multi","SimpleState","on_click","panel_changed","on_mouseover","other_event","draw","draw_baselayer","new_state","SimpleStateWrapper","panel","inner","assets","Assets","default_line_height","text_cache","line_height_cache","svg_cache","font_to_id","extra_fonts","style","text_opts","read_svg","base_url","are_gzipped","new","base_url","are_gzipped","is_font_loaded","load_font","line_height","get_cached_text","cache_text","clear_text_cache","get_cached_svg","cache_svg","backend_glow","build_program","compile_shader","GfxCtxInnards","gl","program","current_clip","new","clear","redraw","enable_clipping","disable_clipping","take_clip","restore_clip","Drawable","vert_array","vert_buffer","elem_buffer","num_indices","gl","empty","VertexArray","id","was_destroyed","new","destroy","Buffer","id","was_destroyed","new","destroy","WindowAdapter","PrerenderInnards","gl","window_adapter","program","total_bytes_uploaded","new","actually_upload","window","request_redraw","set_cursor_icon","set_cursor_visible","draw_new_frame","window_resized","window_size","set_window_icon","monitor_scale_factor","draw_finished","screencap","SpriteTexture","texture_bytes","sprite_width","sprite_height","sprite_count","new","upload_webgl1","upload_gl2","backend_glow_native","setup","WindowAdapter","0","window","window_resized","draw_finished","canvas","DRAG_THRESHOLD","PAN_SPEED","PANNING_THRESHOLD","Canvas","cam_x","cam_y","cam_zoom","cursor","window_has_cursor","drag_canvas_from","drag_just_ended","window_width","window_height","map_dims","settings","covered_areas","keys_held","CanvasSettings","invert_scroll","touchpad_to_move","edge_auto_panning","keys_to_pan","gui_scroll_speed","canvas_scroll_speed","new","new","min_zoom","handle_event","zoom","start_drawing","mark_covered_area","get_cursor","get_cursor_in_screen_space","get_cursor_in_map_space","screen_to_map","center_to_screen_pt","center_to_map_pt","center_on_map_pt","map_to_screen","get_inner_bounds","get_window_dims","get_map_bounds","get_screen_bounds","align_window","INSET","HorizontalAlignment","Left","LeftInset","Center","Right","RightInset","Percent","Centered","VerticalAlignment","Top","TopInset","Center","Bottom","BottomInset","BottomAboveOSD","Percent","Above","Below","color","Color","r","g","b","a","Fill","Color","LinearGradient","Texture","ColoredTexture","Texture","0","NOOP","GRASS","STILL_WATER","RUNNING_WATER","CONCRETE","SAND","DIRT","SNOW","TREE","PINE_TREE","CACTUS","SHRUB","SNOW_PERSON","CLEAR","BLACK","WHITE","RED","GREEN","BLUE","CYAN","YELLOW","PURPLE","PINK","ORANGE","rgb","rgb_f","rgba","rgba_f","grey","alpha","hex","as_hex","lerp","shade","tint","dull","LinearGradient","line","stops","new_fill","interp","to_pct","lerp","shader_style","drawing","MAPSPACE_Z","SCREENSPACE_Z","MENU_Z","TOOLTIP_Z","Uniforms","transform","window","new","GfxCtx","inner","uniforms","screencap_mode","naming_hint","canvas","prerender","style","num_draw_calls","num_forks","new","fork","fork_screenspace","unfork","clear","draw_polygon","redraw","redraw_at","enable_clipping","disable_clipping","draw_mouse_tooltip","get_screen_bounds","screen_to_map","get_cursor_in_map_space","get_num_uploads","is_screencap","set_screencap_naming_hint","upload","default_line_height","style","is_key_down","Prerender","inner","assets","num_uploads","scale_factor","upload","upload_temporary","get_total_bytes_uploaded","actually_upload","request_redraw","get_scale_factor","window_size","window_resized","assets_base_url","assets_are_gzipped","event","Event","NoOp","LeftMouseButtonDown","LeftMouseButtonUp","RightMouseButtonDown","RightMouseButtonUp","KeyPress","KeyRelease","Update","MouseMovedTo","WindowLostCursor","WindowGainedCursor","MouseWheelScroll","WindowResized","from_winit_event","Key","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","Num1","Num2","Num3","Num4","Num5","Num6","Num7","Num8","Num9","Num0","LeftBracket","RightBracket","Space","Slash","Dot","Comma","Semicolon","Colon","Equals","SingleQuote","Escape","Enter","Tab","Backspace","LeftShift","LeftControl","LeftAlt","RightAlt","LeftArrow","RightArrow","UpArrow","DownArrow","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NUM_KEYS","to_char","describe","from_winit_key","txt","MultiKey","Normal","LCtrl","Any","describe","lctrl","hotkeys","event_ctx","UpdateType","InputOnly","Game","Pan","ScreenCaptureEverything","dir","zoom","dims","leaflet_naming","EventCtx","fake_mouseover","input","canvas","prerender","style","updates_requested","loading_screen","request_update","canvas_movement","no_op_event","redo_mouseover","normal_left_click","is_dragging","is_key_down","default_line_height","upload","cursor_clickable","style","set_style","make_loading_screen","is_font_loaded","load_font","hide_cursor","show_cursor","LoadingScreen","canvas","style","prerender","lines","max_capacity","last_drawn","title","new","redraw","geom","geom_batch_stack","Axis","Horizontal","Vertical","Alignment","Center","Top","GeomBatchStack","batches","axis","alignment","spacing","horizontal","vertical","push","append","set_axis","set_alignment","set_spacing","batch","GeomBatch","list","autocrop_dims","new","push","push_with_z","unshift","extend","append","consume","draw","upload","batch","into_widget","get_bounds","autocrop","unioned_polygon","is_empty","get_dims","load_svg","load_svg_bytes","load_svg_bytes_uncached","color","centered_on","translate","rotate","rotate_around_batch_center","scale","scale_xy","set_z_offset","into_geojson","RewriteColor","NoOp","Change","ChangeAll","ChangeAlpha","MakeGrayscale","apply","input","UserInput","event","event_consumed","lctrl_held","new","pressed","any_pressed","key_released","left_mouse_button_pressed","left_mouse_button_released","window_lost_cursor","get_moved_mouse","get_mouse_scroll","is_window_resized","nonblocking_is_update_event","use_update_event","consume_event","unconsume_event","has_been_consumed","runner","UPDATE_FREQUENCY","DEBUG_PERFORMANCE","State","app","canvas","style","event","draw","free_memory","Settings","window_title","assets_base_url","assets_are_gzipped","dump_raw_events","scale_factor","require_minimum_width","window_icon","loading_tips","read_svg","canvas_settings","new","dump_raw_events","scale_factor","require_minimum_width","window_icon","loading_tips","read_svg","assets_base_url","assets_are_gzipped","canvas_settings","run","screen_geom","ScreenPt","x","y","new","to_pt","translated","ScreenRectangle","x1","y1","x2","y2","top_left","placeholder","contains","pt_to_percent","percent_to_pt","width","height","dims","center","to_polygon","ScreenDims","width","height","new","square","pad","top_left_for_corner","style","button_style","ButtonStyle","fg","fg_disabled","outline","bg","bg_hover","bg_disabled","btn","text","icon","icon_bytes","icon_text","dropdown","popup","icon_button","Style","panel_bg","field_bg","dropdown_border","icon_fg","primary_fg","text_primary_color","text_secondary_color","text_tooltip_color","text_hotkey_color","text_destructive_color","loading_tips","section_bg","section_outline","btn_plain","btn_outline","btn_floating","btn_solid","btn_tab","btn_solid_destructive","btn_plain_destructive","btn_solid_primary","btn_plain_primary","OutlineStyle","DEFAULT_OUTLINE_THICKNESS","AB_ORANGE_1","solid_dark_fg","outline_dark_fg","plain_dark_fg","solid_light_fg","outline_light_fg","plain_light_fg","solid_primary","plain_primary","solid_destructive","plain_destructive","light_bg","pregame","dark_bg","hex","svg","HIGH_QUALITY","LOW_QUALITY","load_svg","load_svg_bytes","load_svg_from_bytes_uncached","add_svg_inner","point","PathConvIter","iter","prev","first","needs_end","deferred","convert_path","convert_stroke","convert_color","text","DEFAULT_FONT","DEFAULT_FONT_SIZE","BG_COLOR","SCALE_LINE_HEIGHT","Font","BungeeInlineRegular","BungeeRegular","OverpassBold","OverpassRegular","OverpassSemiBold","OverpassMonoBold","family","TextSpan","text","fg_color","size","font","underlined","fg","maybe_fg","fg_color_for_style","into_widget","batch","display_title","big_heading_styled","big_heading_plain","small_heading","body","bold_body","secondary","small","big_monospaced","small_monospaced","underlined","size","font","Line","Text","lines","bg_color","new","from_all","from_multiline","with_bg","bg","tooltip","change_fg","default_fg","add_line","highlight_last_line","append","add_appended","append_all","is_empty","extend","dims","render","inner_render","render_autocropped","hash_key","into_widget","batch","wrap_to_pct","inner_wrap_to_pct","render_line","TextExt","text_widget","batch_text","render_curvey","tools","screenshot","screenshot_everything","warper","Warper","started","line","cam_zoom","new","event","Cached","contents","new","key","value","update","clear","widgets","autocomplete","NUM_SEARCH_RESULTS","Autocomplete","choices","tb","menu","current_line","chosen_values","new_widget","final_value","recalc_menu","button","Button","action","draw_normal","draw_hovered","draw_disabled","hotkey","tooltip","disabled_tooltip","hitbox","hovering","is_disabled","top_left","dims","new","is_enabled","ButtonBuilder","padding","stack_spacing","hotkey","tooltip","stack_axis","is_label_before_image","corner_rounding","is_disabled","default_style","hover_style","disable_style","disabled_tooltip","ButtonStateStyle","image","label","outline","bg_color","custom_batch","new","padding","padding_top","padding_left","padding_bottom","padding_right","label_text","label_underlined_text","label_styled_text","label_color","font","font_size","image_path","image_bytes","image_batch","image_color","image_bg_color","image_dims","image_content_mode","image_corner_rounding","image_padding","bg_color","outline","custom_batch","hotkey","tooltip","no_tooltip","disabled_tooltip","vertical","horizontal","disabled","label_first","image_first","stack_spacing","corner_rounding","build","build_widget","build_def","style_mut","style","batch","Label","text","color","styled_text","font_size","font","MultiButton","draw","hitboxes","hovering","top_left","dims","new_widget","compare_times","CompareTimes","draw","max","top_left","dims","new_widget","containers","Nothing","Container","is_row","members","new","dropdown","Dropdown","current_idx","btn","menu","label","is_persisten_split","choices","new","current_value","current_value_label","open_menu","make_btn","fan_chart","FanChart","draw","top_left","dims","new_widget","slidey_window","filler","Filler","resize","ResizeRule","FixedSize","RatioWidthSquare","dims","square_width","fixed_dims","image","Image","source","tooltip","color","content_mode","corner_rounding","padding","bg_color","dims","ImageSource","Path","Bytes","bytes","cache_key","GeomBatch","load","empty","from_path","untinted","from_bytes","from_batch","source","source_path","source_bytes","source_batch","tooltip","merged_image_style","color","bg_color","dims","content_mode","corner_rounding","padding","build_batch","into_widget","just_draw","JustDraw","draw","top_left","dims","wrap","DrawWithTooltips","draw","tooltips","hover","top_left","dims","new_widget","DeferDraw","batch","top_left","dims","new_widget","line_plot","LinePlot","draw","max_x","max_y","closest","top_left","dims","new_widget","menu","Menu","choices","current_idx","top_left","dims","widget","new","take_current_choice","set_current","calculate_txt","panel","Panel","top_level","cached_flexbox","horiz","vert","dims","scrollable_x","scrollable_y","contents_dims","container_dims","clip_rect","new_builder","empty","update_container_dims_for_canvas_dims","recompute_scrollbar_layout","recompute_layout","invalidate_flexbox","compute_flexbox","recompute_layout_if_needed","scroll_offset","update_scroll_sliders","set_scroll_offset","event","draw","get_all_click_actions","restore","scroll_to_member","has_widget","slider","slider_mut","take_menu_choice","is_checked","maybe_is_checked","text_box","spinner","modify_spinner","dropdown_value","maybe_dropdown_value","persistent_split_value","autocomplete_done","stash","clone_stashed","is_button_enabled","maybe_find","find","find_mut","swap_inner_content","rect_of","center_of","center_of_panel","panel_dims","align","replace","take","clicked_outside","currently_hovering","PanelBuilder","top_level","horiz","vert","dims","Dims","MaxPercent","ExactPercent","ExactHeight","ExactSize","build","build_custom","aligned","aligned_pair","max_size","exact_size_percent","exact_height","exact_size","persistent_split","PersistentSplit","current_value","btn","spacer","dropdown","widget","new","button_builder","current_value","plots","PlotOptions","filterable","max_x","max_y","disabled","filterable","fixed","Axis","from_percent","to_percent","prettyprint","to_f64","from_f64","zero","Series","label","color","pts","make_legend","thick_lineseries","scatter_plot","ScatterPlot","draw","top_left","dims","new_widget","slider","Slider","current_percent","mouse_on_slider","dragging","style","draw","top_left","dims","Style","Horizontal","main_bg_len","dragger_len","Vertical","main_bg_len","dragger_len","Area","width","SCROLLBAR_BG_WIDTH","AREA_SLIDER_BG_WIDTH","padding","inner_dims","horizontal","vertical","area","new_widget","recalc","button_geom","pt_to_percent","get_percent","get_value","set_percent","inner_event","spinner","TEXT_WIDTH","SpinnerValue","Spinner","low","high","step_size","current","label","up","down","outline","drawable","top_left","dims","widget","new","modify","clamp","drawable","stash","Stash","value","new_widget","get_value","table","ROWS","Table","id","data","label_per_row","columns","filter","sort_by","descending","skip","Col","Static","Sortable","Column","name","render","col","Filter","state","to_controls","from_controls","apply","new","column","replace_render","render","clicked","panel_changed","empty","static_col","make_pagination","make_table","tabs","Tab","tab_id","bar_item","content","new","build_bar_item_widget","TabController","id","tabs","active_tab_idx","new","push_tab","build_widget","handle_action","active_tab_idx","active_content_id","bar_items_id","tab_id","pop_active_content","build_bar_items","activate_tab","text_box","TextBox","line","label","cursor_x","has_focus","hovering","autofocus","padding","top_left","dims","default_widget","widget","new","calculate_text","get_line","toggle","Toggle","enabled","btn","other_btn","new_widget","switch","checkbox","custom_checkbox","colored_checkbox","choice","DEFAULT_CORNER_RADIUS","WidgetImpl","get_dims","set_pos","event","draw","can_restore","restore","Outcome","Clicked","Changed","Nothing","WidgetOutput","redo_layout","outcome","new","is","downcast","downcast_rc","downcast_ref","downcast_mut","Widget","widget","layout","rect","bg","bg_batch","id","CornerRounding","CornerRadii","FullyRounded","LayoutStyle","bg_color","outline","corner_rounding","style","centered","centered_horiz","centered_vert","centered_cross","evenly_spaced","fill_width","fill_height","flex_wrap","flex_wrap_no_inner_spacing","force_width","force_width_window_pct","force_width_parent_pct","get_width_for_forcing","bg","outline","corner_rounding","container","section","tab_body","padding","padding_top","padding_left","padding_bottom","padding_right","margin","margin_above","margin_below","margin_left","margin_right","margin_horiz","margin_vert","align_left","align_right","align_bottom","align_vert_center","abs","named","new","dropdown","custom_row","row","evenly_spaced_row","custom_col","evenly_spaced_col","col","nothing","into_geom","horiz_separator","vert_separator","draw","get_flexbox","apply_flexbox","get_all_click_actions","currently_hovering","restore","consume_geometry","is_btn","find","find_mut","take","take_just_draw","EdgeInsets","top","left","bottom","right","zero","uniform","backend","DrawBaselayer","DefaultDraw","Custom","PreviousState","SharedAppState","before_event","draw_default","dump_before_abort","before_quit","free_memory","SimpleState","on_click","panel_changed","on_mouseover","other_event","draw","draw_baselayer","State","event","draw","draw_baselayer","on_destroy","Transition","Keep","KeepWithMouseover","Pop","ModifyState","ReplaceWithData","Push","Replace","Clear","Multi","Drawable","vert_array","vert_buffer","elem_buffer","num_indices","gl","Canvas","cam_x","cam_y","cam_zoom","cursor","window_has_cursor","drag_canvas_from","drag_just_ended","window_width","window_height","map_dims","settings","covered_areas","keys_held","CanvasSettings","invert_scroll","touchpad_to_move","edge_auto_panning","keys_to_pan","gui_scroll_speed","canvas_scroll_speed","HorizontalAlignment","Left","LeftInset","Center","Right","RightInset","Percent","Centered","VerticalAlignment","Top","TopInset","Center","Bottom","BottomInset","BottomAboveOSD","Percent","Above","Below","Color","r","g","b","a","Fill","Color","LinearGradient","Texture","ColoredTexture","LinearGradient","line","stops","Texture","0","GfxCtx","inner","uniforms","screencap_mode","naming_hint","canvas","prerender","style","num_draw_calls","num_forks","Prerender","inner","assets","num_uploads","scale_factor","hotkeys","lctrl","Event","NoOp","LeftMouseButtonDown","LeftMouseButtonUp","RightMouseButtonDown","RightMouseButtonUp","KeyPress","KeyRelease","Update","MouseMovedTo","WindowLostCursor","WindowGainedCursor","MouseWheelScroll","WindowResized","Key","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","Num1","Num2","Num3","Num4","Num5","Num6","Num7","Num8","Num9","Num0","LeftBracket","RightBracket","Space","Slash","Dot","Comma","Semicolon","Colon","Equals","SingleQuote","Escape","Enter","Tab","Backspace","LeftShift","LeftControl","LeftAlt","RightAlt","LeftArrow","RightArrow","UpArrow","DownArrow","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","MultiKey","Normal","LCtrl","Any","EventCtx","fake_mouseover","input","canvas","prerender","style","updates_requested","UpdateType","InputOnly","Game","Pan","ScreenCaptureEverything","dir","zoom","dims","leaflet_naming","StackAlignment","Center","Top","StackAxis","Horizontal","Vertical","GeomBatchStack","batches","axis","alignment","spacing","GeomBatch","list","autocrop_dims","RewriteColor","NoOp","Change","ChangeAll","ChangeAlpha","MakeGrayscale","UserInput","event","event_consumed","lctrl_held","run","Settings","window_title","assets_base_url","assets_are_gzipped","dump_raw_events","scale_factor","require_minimum_width","window_icon","loading_tips","read_svg","canvas_settings","ScreenDims","width","height","ScreenPt","x","y","ScreenRectangle","x1","y1","x2","y2","ButtonStyle","fg","fg_disabled","outline","bg","bg_hover","bg_disabled","OutlineStyle","Style","panel_bg","field_bg","dropdown_border","icon_fg","primary_fg","text_primary_color","text_secondary_color","text_tooltip_color","text_hotkey_color","text_destructive_color","loading_tips","section_bg","section_outline","btn_plain","btn_outline","btn_floating","btn_solid","btn_tab","btn_solid_destructive","btn_plain_destructive","btn_solid_primary","btn_plain_primary","Font","BungeeInlineRegular","BungeeRegular","OverpassBold","OverpassRegular","OverpassSemiBold","OverpassMonoBold","Line","Text","lines","bg_color","TextExt","text_widget","batch_text","TextSpan","text","fg_color","size","font","underlined","Warper","started","line","cam_zoom","Cached","contents","Autocomplete","choices","tb","menu","current_line","chosen_values","ButtonBuilder","padding","stack_spacing","hotkey","tooltip","stack_axis","is_label_before_image","corner_rounding","is_disabled","default_style","hover_style","disable_style","disabled_tooltip","MultiButton","draw","hitboxes","hovering","top_left","dims","CompareTimes","draw","max","top_left","dims","FanChart","draw","top_left","dims","Filler","resize","Image","source","tooltip","color","content_mode","corner_rounding","padding","bg_color","dims","ImageSource","Path","Bytes","bytes","cache_key","GeomBatch","DrawWithTooltips","draw","tooltips","hover","top_left","dims","LinePlot","draw","max_x","max_y","closest","top_left","dims","Menu","choices","current_idx","top_left","dims","PersistentSplit","current_value","btn","spacer","dropdown","PlotOptions","filterable","max_x","max_y","disabled","Series","label","color","pts","ScatterPlot","draw","top_left","dims","Slider","current_percent","mouse_on_slider","dragging","style","draw","top_left","dims","Spinner","low","high","step_size","current","label","up","down","outline","drawable","top_left","dims","Stash","value","TabController","id","tabs","active_tab_idx","TextBox","line","label","cursor_x","has_focus","hovering","autofocus","padding","top_left","dims","Toggle","enabled","btn","other_btn","DEFAULT_CORNER_RADIUS","CornerRounding","CornerRadii","FullyRounded","EdgeInsets","top","left","bottom","right","Outcome","Clicked","Changed","Nothing","Panel","top_level","cached_flexbox","horiz","vert","dims","scrollable_x","scrollable_y","contents_dims","container_dims","clip_rect","Widget","widget","layout","rect","bg","bg_batch","id","WidgetImpl","get_dims","set_pos","event","draw","can_restore","restore","WidgetOutput","redo_layout","outcome","ControlState","Default","Hovered","Disabled","ContentMode","ScaleToFill","ScaleAspectFit","ScaleAspectFill","Choice","label","data","hotkey","active","tooltip","fg","new","from","key","multikey","active","tooltip","fg","with_value","string","strings","include_labeled_bytes","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","get_hash","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","get_hash","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","get_hash","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","is_default","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","event","draw","draw_baselayer","get_dims","set_pos","event","draw","get_dims","set_pos","event","draw","get_dims","set_pos","event","draw","get_dims","set_pos","event","draw","get_dims","set_pos","event","draw","get_dims","set_pos","event","draw","get_dims","set_pos","event","draw","can_restore","restore","get_dims","set_pos","event","draw","get_dims","set_pos","event","draw","get_dims","set_pos","event","draw","get_dims","set_pos","event","draw","get_dims","set_pos","event","draw","get_dims","set_pos","event","draw","get_dims","set_pos","event","draw","get_dims","set_pos","event","draw","get_dims","set_pos","event","draw","get_dims","set_pos","event","draw","get_dims","set_pos","event","draw","get_dims","set_pos","event","draw","get_dims","set_pos","event","draw","get_dims","set_pos","event","draw","drop","drop","drop","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","next","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","cmp","cmp","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","deserialize","deserialize","deserialize","deserialize","serialize","serialize","serialize","serialize","println","reprintln","btn_back","btn_next","btn_prev","btn_close","btn_close_widget","btn_popup_icon_text"],"q":["widgetry","widgetry::table","","","","","","","","","","","","","","","","","widgetry","widgetry::app_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry","widgetry::assets","","","","","","","","","","","","","","","","","","","","","","","widgetry","widgetry::backend_glow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry","widgetry::backend_glow_native","","","","","","widgetry","widgetry::canvas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry","widgetry::color","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry","widgetry::drawing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry","widgetry::event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry","widgetry::event_ctx","","","","","widgetry::event_ctx::UpdateType","","","","widgetry::event_ctx","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry","widgetry::geom","widgetry::geom::geom_batch_stack","","","","","","","","","","","","","","","","","","","widgetry::geom","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry","widgetry::input","","","","","","","","","","","","","","","","","","","widgetry","widgetry::runner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry","widgetry::screen_geom","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry","widgetry::style","widgetry::style::button_style","","","","","","","","","","","","","","","widgetry::style","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::style::button_style","","","","","","","","","","widgetry::style","","","","widgetry","widgetry::svg","","","","","","","","","","","","","","","","widgetry","widgetry::text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry","widgetry::tools","widgetry::tools::screenshot","widgetry::tools","widgetry::tools::warper","","","","","","widgetry::tools","","","","","","","widgetry","widgetry::widgets","widgetry::widgets::autocomplete","","","","","","","","","","widgetry::widgets","widgetry::widgets::button","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets","widgetry::widgets::compare_times","","","","","","widgetry::widgets","widgetry::widgets::containers","","","","","widgetry::widgets","widgetry::widgets::dropdown","","","","","","","","","","","","widgetry::widgets","widgetry::widgets::fan_chart","","","","","","widgetry::widgets","widgetry::widgets::filler","","","","","","","","widgetry::widgets","widgetry::widgets::image","","","","","","","","","","","","widgetry::widgets::image::ImageSource","","widgetry::widgets::image","","","","","","","","","","","","","","","","","","","","","widgetry::widgets","widgetry::widgets::just_draw","","","","","","","","","","","","","","","","","widgetry::widgets","widgetry::widgets::line_plot","","","","","","","","widgetry::widgets","widgetry::widgets::menu","","","","","","","","","","widgetry::widgets","widgetry::widgets::panel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets","widgetry::widgets::persistent_split","","","","","","","","","widgetry::widgets","widgetry::widgets::plots","","","","","","","","","","","","","","","","","","","","widgetry::widgets","widgetry::widgets::scatter_plot","","","","","widgetry::widgets","widgetry::widgets::slider","","","","","","","","","","widgetry::widgets::slider::Style","","widgetry::widgets::slider","widgetry::widgets::slider::Style","","widgetry::widgets::slider","widgetry::widgets::slider::Style","widgetry::widgets::slider","","","","","","","","","","","","","","","widgetry::widgets","widgetry::widgets::spinner","","","","","","","","","","","","","","","","","","","widgetry::widgets","widgetry::widgets::stash","","","","widgetry::widgets","widgetry::widgets::table","","","","","","","","","","","","","","","","","","","","","","widgetry::table","","","","","","","","widgetry::widgets::table","","widgetry::widgets","widgetry::widgets::tabs","","","","","","","","","","","","","","","","","","","","","widgetry::widgets","widgetry::widgets::text_box","","","","","","","","","","","","","","","widgetry::widgets","widgetry::widgets::toggle","","","","","","","","","","widgetry::widgets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry","","","","","","widgetry::app_state","","","","","widgetry","","widgetry::app_state","","","","","widgetry","","","widgetry::app_state","","widgetry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::UpdateType","","","","widgetry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::ImageSource","","widgetry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets","","widgetry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::app_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::assets","","","","","","","","","","","widgetry::backend_glow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::backend_glow_native","","","","","","","","","","","widgetry::canvas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::color","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::drawing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::event_ctx","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::geom::geom_batch_stack","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::geom","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::input","","","","","","","","","","","","widgetry::runner","","","","","","","","","","","","","","","","","","","","","","widgetry::screen_geom","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::style::button_style","","","","","","","","","","","","","","widgetry::style","","","","","","","","","","","","","","widgetry::svg","","","","","","","","","","","","","widgetry::text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::tools::warper","","","","","","","","","","","","widgetry::tools","","","","","","","","","","","","widgetry::widgets::autocomplete","","","","","","","","","","","","widgetry::widgets::button","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::compare_times","","","","","","","","","","","","widgetry::widgets::containers","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::dropdown","","","","","","","","","","","widgetry::widgets::fan_chart","","","","","","","","","","","","widgetry::widgets::filler","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::image","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::just_draw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::line_plot","","","","","","","","","","","widgetry::widgets::menu","","","","","","","","","","","","widgetry::widgets::panel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::persistent_split","","","","","","","","","","","widgetry::widgets::plots","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::scatter_plot","","","","","","","","","","","","widgetry::widgets::slider","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::spinner","","","","","","","","","","","widgetry::widgets::stash","","","","","","","","","","","widgetry::widgets::table","","","","","","","","","","","widgetry::widgets::tabs","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::text_box","","","","","","","","","","","","widgetry::widgets::toggle","","","","","","","","","","","","widgetry::widgets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::app_state","","","widgetry::widgets::autocomplete","","","","widgetry::widgets::button","","","","","","","","widgetry::widgets::compare_times","","","","widgetry::widgets::containers","","","","","","","","widgetry::widgets::dropdown","","","","","","widgetry::widgets::fan_chart","","","","widgetry::widgets::filler","","","","widgetry::widgets::just_draw","","","","","","","","","","","","widgetry::widgets::line_plot","","","","widgetry::widgets::menu","","","","widgetry::widgets::persistent_split","","","","widgetry::widgets::scatter_plot","","","","widgetry::widgets::slider","","","","widgetry::widgets::spinner","","","","widgetry::widgets::stash","","","","widgetry::widgets::text_box","","","","widgetry::widgets::toggle","","","","widgetry::backend_glow","","","widgetry::drawing","widgetry::event_ctx","widgetry::drawing","widgetry::assets","widgetry::drawing","widgetry::event_ctx","widgetry::drawing","widgetry::color","","widgetry::event","widgetry::geom","","widgetry::screen_geom","","","","widgetry::text","","","widgetry::widgets","","","","widgetry::svg","widgetry::canvas","","","widgetry::color","","","","widgetry::event","","","widgetry::event_ctx","widgetry::geom::geom_batch_stack","","widgetry::geom","","widgetry::screen_geom","","","widgetry::style::button_style","widgetry::style","widgetry::text","","","widgetry::widgets::button","","","widgetry::widgets::image","","widgetry::widgets","","widgetry","","widgetry::geom::geom_batch_stack","widgetry::tools","widgetry::widgets::button","","","widgetry::widgets::image","widgetry::widgets","","widgetry","widgetry::event","","widgetry::canvas","","","","widgetry::color","","","","","","","","widgetry::event","","","","","widgetry::event_ctx","","widgetry::geom::geom_batch_stack","","widgetry::geom","","widgetry::screen_geom","","","","widgetry::text","widgetry::widgets","","","","widgetry::event","","widgetry::canvas","","widgetry::color","","","","widgetry::drawing","widgetry::event","","","widgetry::event_ctx","widgetry::geom::geom_batch_stack","","","widgetry::geom","","widgetry::screen_geom","","","widgetry::text","","","widgetry::widgets::button","","","widgetry::widgets::image","","widgetry::widgets","","","widgetry","","widgetry::color","widgetry::event","","widgetry::text","widgetry::canvas","widgetry::color","widgetry::geom","widgetry::screen_geom","widgetry::canvas","widgetry::color","widgetry::geom","widgetry::screen_geom","widgetry::event_ctx","","widgetry::style","","","","",""],"d":["","","","","","","","","","","","","","","","","","","A widgetry application splits its state into two pieces: …","Any data that should last the entire lifetime of the …","Before <code>State::event</code> is called, call this.","When DrawBaselayer::DefaultDraw is called, run this.","Will be called if <code>State::event</code> or <code>State::draw</code> panics.","Called before a normal exit, like window close","If widgetry determines the video card is low on memory, …","","A stack of states","","","","If true, then the top-most state on the stack needs to be …","Before <code>State::draw</code> is called, draw something else.","Call <code>SharedAppState::draw_default</code>.","Don’t draw anything.","Call the previous state’s <code>draw</code>. This won’t recurse, …","A temporary state of an application. There’s a stack of …","Respond to a UI event, such as input or time passing.","Draw","Specifies what to draw before draw()","Before this state is popped or replaced, call this.","Returns true if the trait object wraps an object of type …","Returns a boxed object from a boxed trait object if the …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Returns a mutable reference to the object within the …","When a state responds to an event, it can specify some …","Don’t do anything, keep the current state as the active …","Keep the current state as the active one, but immediately …","Destroy the current state, and resume from the previous …","If a state needs to pass data back to its parent, use …","","Push a new active state on the top of the stack.","Replace the current state with a new one. Equivalent to …","Replace the entire stack of states with this stack.","Execute a sequence of transitions in order.","Many states fit a pattern of managing a single panel, …","Called when something on the panel has been clicked. …","Called when something on the panel has changed. If a …","Called when the mouse has moved.","If a panel <code>on_click</code> event didn’t occur and <code>panel_changed</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Geometry that’s been uploaded to the GPU once and can …","","","","","","This has no effect when drawn.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Uploads a sprite sheet of textures to the GPU so they can …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Once uploaded, textures are addressed by their id, …","The <code>color</code> parameter is multiplied by any color baked into …f true, name files in a simple scheme intended for …","","","","","","","","","","Allow panning and zooming on the canvas. Exactly which …","","","","","","","","","","","","Checks if an extra font has previously been loaded with …","Loads an extra font, used only for automatic fallback of …","","","","","","","","","","","","","","","","","","","","","Similar to [<code>Widget::row</code>]/[<code>Widget::column</code>], but for […","","","","","","","","","","","","","A mutable builder for a group of colored polygons.","","","Creates an empty batch.","Adds a single polygon, painted according to <code>Fill</code>","Offset z value to render above/below other polygons. z …","Adds a single polygon to the front of the batch, painted …","Applies one Fill to many polygons.","Appends all colored polygons from another batch to the …","Returns the colored polygons in this batch, destroying …","Draws the batch, consuming it. Only use this for drawing …","Upload the batch of polygons to the GPU, returning …","Wrap in a Widget for layouting, so this batch can become …","Wrap in a Widget, so the batch can be drawn as part of a …","Compute the bounds of all polygons in this batch.","Sets the top-left to 0, 0. Not sure exactly when this …","Builds a single polygon covering everything in this …","True when the batch is empty.","Returns the width and height of all geometry contained in …","Returns a batch containing an SVG from a file.","Returns a GeomBatch from the bytes of a utf8 encoded SVG …","Returns a GeomBatch from the bytes of a utf8 encoded SVG …","Transforms all colors in a batch.","Translates the batch to be centered on some point.","Translates the batch by some offset.","Rotates each polygon in the batch relative to the center …","Rotates each polygon in the batch relative to the center …","Scales the batch by some factor.","","Overrides the Z-ordering offset for the batch. Must be in …","Exports the batch to a list of GeoJSON features, labeling …","A way to transform all colors in a GeomBatch.","Don’t do anything","Change every instance of the first color to the second","Change all colors to the specified value. For this to be …","Change the alpha value of all colors to this value.","Convert all colors to greyscale.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns naming hint. Logically consumes the number of …","","Customize how widgetry works. Most of these settings can…","","","","","","","","","","","Specify the title of the window to open.","Log every raw winit event to the DEBUG level.","Override the initial HiDPI scale factor from whatever …","If the screen width using the monitor’s detected scale …","Sets the window icon. This should be a 32x32 image.","Sets the text that’ll appear during long …","When calling <code>Widget::draw_svg</code>, <code>ButtonBuilder::image_path</code>, …","","","","","","ScreenPt is in units of logical pixels, as opposed to …","","","","","","ScreenRectangle is in units of logical pixels, as opposed …","","","","","","","","","","","","","","","ScreenDims is in units of logical pixels, as opposed to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Render the text, without any autocropping. You can pass …","","Render the text, autocropping blank space out of the …","","","","","","","","","","","","","Take a screenshot of the entire canvas, tiling it based …","","","","","","","","Store a cached key/value pair, only recalculating when …","","","Get the current key.","Get the current value.","Update the value if the key has changed.","","","","","","","","","","","","","","","","When a button is clicked, <code>Outcome::Clicked</code> with this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extra spacing around a button’s items (label and/or …","Extra spacing around a button’s items (label and/or …","Extra spacing around a button’s items (label and/or …","Extra spacing around a button’s items (label and/or …","Extra spacing around a button’s items (label and/or …","Set the text of the button’s label.","Set the text of the button’s label. The text will be …","Assign a pre-styled <code>Text</code> instance if your button need …","Set the color of the button’s label.","Set the font used by the button’s label.","Set the size of the font of the button’s label.","Set the image for the button. If not set, the button will …","Set the image for the button. If not set, the button will …","Set the image for the button. If not set, the button will …","Rewrite the color of the button’s image.","Set a background color for the image, other than the …","Scale the bounds containing the image. If <code>image_dims</code> are …","If a custom <code>image_dims</code> was set, control how the image …","Set independent rounding for each of the button’s image…","Set padding for the image","Set a background color for the button based on the button…","Set an outline for the button based on the button’s […","Set a pre-rendered [GeomBatch] to use for the button …","Set a hotkey for the button","Set a non-default tooltip [<code>Text</code>] to appear when hovering …","If a <code>tooltip</code> is not specified, a default tooltip will be …","Set a tooltip [<code>Text</code>] to appear when hovering over the …","The button’s items will be rendered in a vertical column","The button’s items will be rendered in a horizontal row","The button cannot be clicked and will be styled as […","Display the button’s label before the button’s image.","Display the button’s image before the button’s label.","Spacing between the image and text of a button. Has no …","Set independent rounding for each of the button’s …","Build a button.","Shorthand method to build a Button wrapped in a Widget","Shorthand method to build a default widget whose <code>action</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Doesn’t do anything by itself, just used for …","","","","","","Creates a square filler, always some percentage of the …","","","A stylable UI component builder which presents vector …","","","","","","","","","The visual","Path to an SVG file","UTF-8 encoded bytes of an SVG","","","Previously rendered graphics, in the form of a [<code>GeomBatch</code>]…","Process <code>self</code> into a [<code>GeomBatch</code>].","An <code>Image</code> with no renderable content. Useful for starting …","Create an SVG <code>Image</code>, read from <code>filename</code>, which is colored …","Create an SVG <code>Image</code>, read from <code>filename</code>.","Create a new SVG <code>Image</code> from bytes.","Create a new <code>Image</code> from a [<code>GeomBatch</code>].","Set a new source for the <code>Image</code>’s data.","Set the path to an SVG file for the image.","Set the bytes for the image.","Set the GeomBatch for the button.","Add a tooltip to appear when hovering over the image.","Create a new <code>Image</code> based on <code>self</code>, but overriding with any …","Rewrite the color of the image.","Set a background color for the image.","Scale the bounds containing the image. If <code>image_dims</code> are …","If a custom <code>dims</code> was set, control how the image should be …","Set independent rounding for each of the image’s corners","Set padding for the image","Render the <code>Image</code> and any styling (padding, background, …","","","","","","","","","","","","","","<code>batch</code>: the <code>GeomBatch</code> to draw <code>tooltips</code>: (hitbox, text) …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an empty panel. <code>event</code> and <code>draw</code> will have no …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Grab a stashed value, with the ability to pass it around …","Grab a stashed value and clone it.","","","","","Swap the inner content of a <code>container</code> widget with …","","","","","","All margins/padding/etc from the previous widget are …","Removes a widget from the panel. Does not recalculate …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An invisible widget that stores some arbitrary data on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add a new tab.","A widget containing the tab bar and a content pane with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new widget by implementing this trait. You can …","What width and height does the widget occupy? If this …","Your widget’s top left corner should be here. Handle …","Your chance to react to an event. Any side effects …","Draw the widget. Be sure to draw relative to the top-left …","If a new Panel is being created to replace an older one, …","Restore state from the previous version of this widget, …","The result of a Panel handling an event","An action was done","A dropdown, checkbox, spinner, etc changed values. The …","Nothing happened","","This widget changed dimensions, so recalculate layout.","This widget produced an Outcome, and event handling …","","Returns true if the trait object wraps an object of type …","Returns a boxed object from a boxed trait object if the …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Returns a mutable reference to the object within the …","","","","","","","","","","","","","","","","","","","","","","","This one is really weird. percent_width should be LESS …","Like flex_wrap, but doesn’t horizontally space out …","Only for rows/columns. Used to force table columns to …","","","Needed for force_width.","","Callers have to adjust padding too, probably","","Things like padding don’t work on many widgets, so just …","","","","","","","","","","","","","","","","","","This doesn’t count against the entire container","","","","","Creates a row with the specified widgets. No margins or …","Creates a row with the specified widgets. Every member …","Creates a row with the specified widgets, with a <code>spacing</code> …","Creates a column with the specified widgets. No margins …","Creates a column with the specified widgets, with a …","Creates a column with the specified widgets. Every member …","","","","","","","","","","","","","","","","","","","","","","","","","Before <code>State::draw</code> is called, draw something else.","Call <code>SharedAppState::draw_default</code>.","Don’t draw anything.","Call the previous state’s <code>draw</code>. This won’t recurse, …","Any data that should last the entire lifetime of the …","Before <code>State::event</code> is called, call this.","When DrawBaselayer::DefaultDraw is called, run this.","Will be called if <code>State::event</code> or <code>State::draw</code> panics.","Called before a normal exit, like window close","If widgetry determines the video card is low on memory, …","Many states fit a pattern of managing a single panel, …","Called when something on the panel has been clicked. …","Called when something on the panel has changed. If a …","Called when the mouse has moved.","If a panel <code>on_click</code> event didn’t occur and <code>panel_changed</code>…","","","A temporary state of an application. There’s a stack of …","Respond to a UI event, such as input or time passing.","Draw","Specifies what to draw before draw()","Before this state is popped or replaced, call this.","When a state responds to an event, it can specify some …","Don’t do anything, keep the current state as the active …","Keep the current state as the active one, but immediately …","Destroy the current state, and resume from the previous …","If a state needs to pass data back to its parent, use …","","Push a new active state on the top of the stack.","Replace the current state with a new one. Equivalent to …","Replace the entire stack of states with this stack.","Execute a sequence of transitions in order.","Geometry that’s been uploaded to the GPU once and can …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Once uploaded, textures are addressed by their id, …","The <code>color</code> parameter is multiplied by any color baked into …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If true, name files in a simple scheme intended for …","","","","","","","Similar to [<code>Widget::row</code>]/[<code>Widget::column</code>], but for […","","","","","A mutable builder for a group of colored polygons.","","","A way to transform all colors in a GeomBatch.","Don’t do anything","Change every instance of the first color to the second","Change all colors to the specified value. For this to be …","Change the alpha value of all colors to this value.","Convert all colors to greyscale.","","","","","","Customize how widgetry works. Most of these settings can…","","","","","","","","","","","ScreenDims is in units of logical pixels, as opposed to …","","","ScreenPt is in units of logical pixels, as opposed to …","","","ScreenRectangle is in units of logical pixels, as opposed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Store a cached key/value pair, only recalculating when …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Doesn’t do anything by itself, just used for …","","A stylable UI component builder which presents vector …","","","","","","","","","The visual","Path to an SVG file","UTF-8 encoded bytes of an SVG","","","Previously rendered graphics, in the form of a [<code>GeomBatch</code>]…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An invisible widget that stores some arbitrary data on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The result of a Panel handling an event","An action was done","A dropdown, checkbox, spinner, etc changed values. The …","Nothing happened","","","","","","","","","","","","","","","","","","","Create a new widget by implementing this trait. You can …","What width and height does the widget occupy? If this …","Your widget’s top left corner should be here. Handle …","Your chance to react to an event. Any side effects …","Draw the widget. Be sure to draw relative to the top-left …","If a new Panel is being created to replace an older one, …","Restore state from the previous version of this widget, …","","This widget changed dimensions, so recalculate layout.","This widget produced an Outcome, and event handling …","","","","","Rules for how content should stretch to fill its bounds","Stretches content to fit its bounds exactly, breaking …","Maintaining aspect ratio, content grows until it touches …","Maintaining aspect ratio, content grows until both bounds …","","","","","","","","","","","","","","","","","","Like [<code>std::include_bytes!</code>], but also returns its …reates a batch of filled polygons.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","title: name of previous screen, which you’ll return to","A right facing caret, like “>”, suitable for paging …","A left facing caret, like “<”, suitable for paging to …","An “X” button to close the current state. Bound to …","An “X” button to close the current state. Bound to …",""],"i":[0,0,1,1,1,1,1,1,1,1,0,2,2,0,3,3,3,3,0,0,4,4,4,4,4,0,5,5,5,5,5,0,6,6,6,0,7,7,7,7,7,7,7,7,7,0,8,8,8,8,8,8,8,8,8,0,9,9,9,9,9,9,9,0,10,10,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,12,12,12,12,12,12,12,12,12,12,0,13,13,13,13,13,13,0,14,14,14,14,0,15,15,15,15,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,17,17,17,17,17,17,17,0,0,0,18,18,18,18,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,0,20,20,20,20,20,20,20,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,21,21,21,21,21,21,21,0,22,22,22,22,22,22,22,22,22,0,0,23,23,23,23,0,24,24,24,24,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,26,26,26,26,0,0,24,0,0,0,0,0,0,27,27,27,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,32,32,32,32,0,0,0,0,33,33,33,33,34,34,34,34,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,36,36,36,36,36,36,36,36,36,0,0,0,37,37,0,38,38,0,39,39,39,39,39,39,39,39,39,39,39,39,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,41,41,41,41,41,41,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,0,43,43,43,43,43,43,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,45,45,45,45,45,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,47,47,47,47,47,47,0,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,48,48,48,48,48,48,48,48,48,48,49,49,49,0,0,0,0,0,0,0,0,0,0,50,50,50,50,50,0,0,0,0,0,0,0,0,0,51,51,51,51,51,51,51,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,54,54,52,0,0,0,0,0,55,55,55,55,55,0,56,56,56,56,56,56,0,0,0,0,57,57,57,57,57,57,57,57,0,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,59,59,59,59,59,59,59,59,59,59,59,59,0,60,60,60,60,60,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,61,61,61,61,61,0,62,62,62,62,62,62,0,0,63,63,63,63,63,0,0,0,64,64,64,0,0,65,65,65,65,65,65,65,65,65,65,0,0,0,66,66,66,66,0,0,0,67,0,68,68,68,67,67,0,0,69,69,69,69,69,69,69,69,0,70,70,71,71,70,70,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,0,0,72,72,72,72,0,73,73,73,73,73,73,0,74,74,74,74,0,0,75,75,75,75,75,75,75,0,0,76,76,76,76,76,76,76,76,76,0,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,78,78,78,78,0,79,79,79,79,78,78,78,78,78,78,78,78,0,0,80,80,80,80,80,80,0,80,0,0,81,81,81,81,81,81,0,82,82,82,82,82,82,0,83,83,83,0,0,0,0,84,84,84,84,0,0,85,85,85,85,85,85,85,0,86,87,87,86,88,88,86,89,0,0,86,86,85,85,85,85,85,85,85,85,85,85,85,0,0,0,0,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,0,0,91,91,91,0,0,0,1,1,1,1,1,1,1,1,0,2,2,0,92,92,92,0,3,3,3,3,1,1,1,1,1,1,3,1,0,0,0,0,93,93,93,93,93,0,94,94,94,94,94,94,94,94,94,94,94,94,94,94,0,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,0,0,96,96,96,96,96,96,96,96,96,0,0,97,97,97,97,97,97,0,98,98,98,0,99,99,99,97,97,97,97,97,0,100,100,100,100,100,100,0,101,101,0,102,102,102,102,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,0,103,103,103,103,103,103,0,0,6,6,6,0,4,4,4,4,4,0,9,9,9,9,9,9,0,7,7,7,7,0,8,8,8,8,8,8,8,8,8,0,13,13,13,13,13,0,19,19,19,19,19,19,19,19,19,19,19,19,19,0,20,20,20,20,20,20,0,21,21,21,21,21,21,21,0,22,22,22,22,22,22,22,22,22,0,23,23,23,23,0,24,24,24,24,0,26,26,0,25,0,28,28,28,28,28,28,28,28,28,0,29,29,29,29,0,0,0,30,30,30,30,30,30,30,30,30,30,30,30,30,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,32,32,32,0,35,35,35,35,35,35,0,33,33,33,33,34,34,34,34,0,38,38,0,37,37,0,39,39,39,39,0,40,40,0,41,41,41,41,41,0,42,42,42,0,0,44,44,44,44,44,44,44,44,44,44,0,47,47,0,45,45,0,46,46,46,46,0,48,48,48,48,48,48,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,51,51,51,51,51,51,0,0,53,53,0,54,54,0,52,52,52,52,52,0,55,55,55,0,56,0,57,57,57,57,57,0,59,59,59,59,59,59,59,59,59,59,59,59,0,62,62,62,62,62,0,63,63,63,63,0,66,66,66,0,67,0,69,69,69,69,69,69,69,69,0,70,70,71,71,70,0,73,73,73,73,73,0,75,75,75,75,75,75,0,76,76,76,76,0,80,80,80,80,0,81,81,81,81,0,83,83,83,0,84,84,84,0,85,85,85,85,85,85,85,0,90,90,90,90,90,90,90,90,90,90,90,0,91,0,94,94,94,0,95,95,95,95,95,95,95,95,95,0,96,96,96,0,0,101,101,0,103,103,103,103,0,98,98,98,0,77,77,77,77,77,77,77,77,77,77,0,100,100,100,100,100,100,0,97,97,97,97,97,97,0,99,99,0,104,104,104,0,105,105,105,0,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,0,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,8,8,8,8,8,8,8,8,8,8,8,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,33,33,33,35,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,53,53,53,53,53,55,55,55,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,63,63,63,63,107,107,107,107,107,107,107,107,107,107,107,107,64,64,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,65,65,66,66,66,66,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,67,67,67,67,67,68,68,68,68,68,68,68,68,68,68,68,68,69,69,69,69,69,69,69,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,70,70,70,70,70,72,72,72,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,73,73,73,74,74,74,74,74,74,74,74,74,74,74,74,75,75,75,75,75,75,75,75,75,75,75,76,76,76,76,76,76,76,76,76,76,76,76,77,77,77,77,77,77,77,77,77,77,77,78,78,78,78,78,78,78,78,78,78,78,79,79,79,79,79,79,79,79,79,79,79,79,80,80,80,80,80,80,80,80,80,80,80,81,81,81,81,81,81,81,81,81,81,81,81,83,83,83,83,83,83,83,83,83,83,83,83,84,84,84,84,84,84,84,84,84,84,84,84,85,85,85,85,85,85,85,85,85,85,85,85,86,86,86,86,86,86,86,86,86,86,86,86,90,90,90,90,90,90,90,90,90,90,90,91,91,91,91,91,91,91,91,91,91,91,92,92,92,92,92,92,92,92,92,92,92,93,93,93,93,93,93,93,93,93,93,93,94,94,94,94,94,94,94,94,94,94,94,95,95,95,95,95,95,95,95,95,95,95,95,96,96,96,96,96,96,96,96,96,96,96,96,98,98,98,98,98,98,98,98,98,98,98,98,99,99,99,99,99,99,99,99,99,99,99,99,100,100,100,100,100,100,100,100,100,100,100,101,101,101,101,101,101,101,101,101,101,101,101,101,101,102,102,102,102,102,102,102,102,102,102,102,102,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,104,104,104,104,104,104,104,104,104,104,104,104,104,104,105,105,105,105,105,105,105,105,105,105,105,105,105,105,106,106,106,106,106,106,106,106,106,106,106,106,10,10,10,57,57,57,57,58,58,58,58,62,62,62,62,63,63,63,63,107,107,107,107,64,64,64,64,65,65,65,65,65,65,66,66,66,66,67,67,67,67,72,72,72,72,73,73,73,73,74,74,74,74,75,75,75,75,76,76,76,76,80,80,80,80,84,84,84,84,85,85,85,85,90,90,90,90,91,91,91,91,95,95,95,95,96,96,96,96,13,14,15,28,35,29,11,28,35,29,24,24,32,40,41,45,47,47,47,52,53,53,101,101,103,103,50,20,21,22,23,24,25,26,30,31,32,33,37,38,40,41,45,46,47,48,49,51,52,53,59,60,61,69,70,101,103,104,105,39,56,59,60,61,69,101,103,105,31,32,21,21,22,22,23,23,24,24,25,25,26,26,30,30,31,32,32,33,33,37,38,41,41,45,45,47,47,51,98,98,103,103,31,32,21,22,23,24,25,26,27,30,31,32,33,37,38,39,40,41,45,46,47,51,52,53,59,60,61,69,70,98,101,103,104,105,23,31,32,51,20,23,41,47,20,23,41,47,36,36,49,49,49,49,49,49],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["gfxctx",3]]],[[["canvas",3]]],[[["canvas",3]]],[[]],null,null,null,[[["eventctx",3]]],[[["gfxctx",3]]],[[["eventctx",3],["transition",4]],["bool",15]],null,null,null,null,null,[[["eventctx",3]],["transition",4]],[[["gfxctx",3]]],[[],["drawbaselayer",4]],[[["eventctx",3]]],[[],["bool",15]],[[["box",3]],[["result",4],["box",3],["box",3]]],[[["rc",3]],[["rc",3],["rc",3],["result",4]]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,null,[[["panel",3],["eventctx",3],["str",15]],["transition",4]],[[["panel",3],["eventctx",3]],[["option",4],["transition",4]]],[[["eventctx",3]]],[[["eventctx",3]],["transition",4]],[[["gfxctx",3]]],[[],["drawbaselayer",4]],[[["simplestate",8],["box",3],["panel",3]],[["box",3],["state",8]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["box",3],["style",3],["option",4],["string",3],["bool",15],["fn",8]],["assets",3]],[[],[["option",4],["str",15]]],[[],["bool",15]],[[["str",15]],["bool",15]],[[["vec",3],["u8",15],["str",15]]],[[["usize",15],["font",4]],["f64",15]],[[["string",3]],[["geombatch",3],["option",4]]],[[["string",3],["geombatch",3]]],[[]],[[["str",15]],["option",4]],[[["string",3],["geombatch",3],["bounds",3]]],null,[[["context",3],["str",15]],[["program",6],["result",6]]],[[["u32",15],["context",3],["str",15]],[["shader",6],["result",6]]],null,null,null,null,[[["context",3]]],[[["color",3]]],[[["uniforms",3],["drawable",3],["prerenderinnards",3]]],[[["f64",15],["screenrectangle",3],["canvas",3]]],[[["f64",15],["canvas",3]]],[[["f64",15],["canvas",3]],["option",4]],[[["option",4]]],null,null,null,null,null,null,[[["eventctx",3]],["drawable",3]],null,null,null,[[["context",3]],["vertexarray",3]],[[["context",3]]],null,null,null,[[["context",3]],["buffer",3]],[[["context",3]]],null,null,null,null,null,null,[[["windowadapter",3],["context",3]],["prerenderinnards",3]],[[["bool",15],["geombatch",3]],["drawable",3]],[[],["window",3]],[[]],[[["cursoricon",4]]],[[["bool",15]]],[[],["gfxctxinnards",3]],[[["f64",15],["screendims",3]]],[[["f64",15]],["screendims",3]],[[["icon",3]]],[[],["f64",15]],[[["gfxctxinnards",3]]],[[["string",3],["screendims",3]],["result",6]],null,null,null,null,null,[[["u32",15],["u8",15],["vec",3]],["result",6]],[[["context",3]],["result",6]],[[["context",3]],["result",6]],null,[[["timer",3],["settings",3]]],null,null,[[],["window",3]],[[["f64",15],["screendims",3]]],[[["gfxctxinnards",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["canvassettings",3]],[[["screendims",3],["canvassettings",3]],["canvas",3]],[[],["f64",15]],[[["userinput",3]],[["updatetype",4],["option",4]]],[[["f64",15],["screenpt",3]]],[[]],[[["screenrectangle",3]]],[[],["screenpt",3]],[[],[["option",4],["screenpt",3]]],[[],[["option",4],["pt2d",3]]],[[["screenpt",3]],["pt2d",3]],[[],["screenpt",3]],[[],["pt2d",3]],[[["pt2d",3]]],[[["pt2d",3]],["screenpt",3]],[[],["bounds",3]],[[],["screendims",3]],[[],["bounds",3]],[[],["bounds",3]],[[["horizontalalignment",4],["screendims",3],["verticalalignment",4]],["screenpt",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15]],["color",3]],[[["f32",15]],["color",3]],[[["usize",15],["f32",15]],["color",3]],[[["f32",15]],["color",3]],[[["f32",15]],["color",3]],[[["f32",15]],["color",3]],[[["str",15]],["color",3]],[[],["string",3]],[[["color",3],["f64",15]],["color",3]],[[["f64",15]],["color",3]],[[["f64",15]],["color",3]],[[["f64",15]],["color",3]],null,null,null,[[["lineargradient",3]],["fill",4]],[[["pt2d",3]],["color",3]],[[["f64",15]],["f64",15]],[[["f64",15]],["f32",15]],[[["pt2d",3]]],null,null,null,null,null,null,null,null,[[["canvas",3]],["uniforms",3]],null,null,null,null,null,null,null,null,null,null,[[["canvas",3],["style",3],["prerender",3],["bool",15]],["gfxctx",3]],[[["f64",15],["f32",15],["option",4],["pt2d",3],["screenpt",3]]],[[]],[[]],[[["color",3]]],[[["color",3],["polygon",3]]],[[["drawable",3]]],[[["screenpt",3],["drawable",3]]],[[["screenrectangle",3]]],[[]],[[["text",3]]],[[],["bounds",3]],[[["screenpt",3]],["pt2d",3]],[[],[["option",4],["pt2d",3]]],[[],["usize",15]],[[],["bool",15]],[[["string",3]]],[[["geombatch",3]],["drawable",3]],[[],["f64",15]],[[],["style",3]],[[["key",4]],["bool",15]],null,null,null,null,null,[[["geombatch",3]],["drawable",3]],[[["geombatch",3]],["drawable",3]],[[],["usize",15]],[[["bool",15],["geombatch",3]],["drawable",3]],[[]],[[],["f64",15]],[[],["screendims",3]],[[["screendims",3]]],[[],[["option",4],["str",15]]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["f64",15],["windowevent",4]],[["option",4],["event",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["bool",15]],[["char",15],["option",4]]],[[],["string",3]],[[["keyboardinput",3]],[["option",4],["key",4]]],[[["eventctx",3]],["textspan",3]],null,null,null,null,[[],["string",3]],[[["key",4]],["multikey",4]],[[["vec",3],["key",4]],["multikey",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["string",3],["into",8],["fnonce",8]]],[[["updatetype",4]]],[[],["bool",15]],[[["bool",15],["fnmut",8]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["key",4]],["bool",15]],[[],["f64",15]],[[["geombatch",3]],["drawable",3]],[[]],[[],["style",3]],[[["style",3]]],[[["text",3]],["panel",3]],[[["str",15]],["bool",15]],[[["vec",3],["u8",15],["str",15]]],[[]],[[]],null,null,null,null,null,null,null,null,[[["screendims",3],["style",3],["string",3],["prerender",3]],["loadingscreen",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["geombatch",3],["vec",3]]],[[["geombatch",3],["vec",3]]],[[["geombatch",3]]],[[["vec",3]]],[[["axis",4]]],[[["alignment",4]]],[[]],[[],["geombatch",3]],null,null,null,[[],["geombatch",3]],[[["into",8],["polygon",3],["fill",4]]],[[["f64",15],["polygon",3],["into",8],["fill",4]]],[[["into",8],["polygon",3],["fill",4]]],[[["polygon",3],["into",8],["vec",3],["fill",4]]],[[["geombatch",3]]],[[],["vec",3]],[[["gfxctx",3]]],[[["eventctx",3]],["drawable",3]],[[],["widget",3]],[[["eventctx",3]],["widget",3]],[[],["bounds",3]],[[],["geombatch",3]],[[],["polygon",3]],[[],["bool",15]],[[],["screendims",3]],[[["str",15],["asref",8]],["geombatch",3]],[[],["geombatch",3]],[[],["geombatch",3]],[[["rewritecolor",4]],["geombatch",3]],[[["pt2d",3]],["geombatch",3]],[[["f64",15]],["geombatch",3]],[[["angle",3]],["geombatch",3]],[[["angle",3]],["geombatch",3]],[[["f64",15]],["geombatch",3]],[[["f64",15]],["geombatch",3]],[[["f64",15]],["geombatch",3]],[[["option",4],["gpsbounds",3]],[["vec",3],["feature",3]]],null,null,null,null,null,null,[[["color",3]],["color",3]],null,null,null,null,null,[[["canvas",3],["event",4]],["userinput",3]],[[["into",8],["option",4]],["bool",15]],[[],[["option",4],["key",4]]],[[["key",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4],["screenpt",3]]],[[],["option",4]],[[],["bool",15]],[[],[["option",4],["duration",3]]],[[]],[[]],[[]],[[],["bool",15]],null,null,null,null,null,null,null,[[["prerender",3],["event",4]]],[[["prerender",3],["bool",15]],[["option",4],["string",3]]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],["settings",3]],[[]],[[["f64",15]]],[[["f64",15]]],[[["string",3]]],[[["text",3]]],[[["box",3],["fn",8]]],[[["string",3]]],[[["bool",15]]],[[["canvassettings",3]]],[[["fnonce",8],["settings",3]]],null,null,null,null,[[["f64",15]],["screenpt",3]],[[],["pt2d",3]],[[["f64",15]]],null,null,null,null,null,[[["screenpt",3],["screendims",3]],["screenrectangle",3]],[[],["screenrectangle",3]],[[["screenpt",3]],["bool",15]],[[["screenpt",3]],["option",4]],[[["f64",15]],["screenpt",3]],[[],["f64",15]],[[],["f64",15]],[[],["screendims",3]],[[],["screenpt",3]],[[],["polygon",3]],null,null,null,[[["f64",15]],["screendims",3]],[[["f64",15]]],[[["edgeinsets",3]]],[[["canvas",3],["screenpt",3]],["screenpt",3]],null,null,null,null,null,null,null,null,null,[[],["buttonbuilder",3]],[[["string",3],["into",8]],["buttonbuilder",3]],[[["str",15]],["buttonbuilder",3]],[[],["buttonbuilder",3]],[[["string",3],["str",15],["into",8]],["buttonbuilder",3]],[[],["buttonbuilder",3]],[[["str",15]],["buttonbuilder",3]],[[["buttonbuilder",3]],["buttonbuilder",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["buttonstyle",3]],[[],["style",3]],[[],["style",3]],[[],["style",3]],[[["str",15]],["color",3]],null,null,null,[[["prerender",3],["str",15]]],[[["prerender",3],["str",15]],["result",6]],[[],["result",6]],[[["geombatch",3],["tree",3],["f32",15]],[["result",4],["string",3],["bounds",3]]],[[["f64",15]],["point",6]],null,null,null,null,null,null,[[["path",3]],["pathconviter",3]],[[["stroke",3],["f32",15],["tree",3]]],[[["f64",15],["paint",4],["tree",3]],["fill",4]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],null,null,null,null,null,null,[[["color",3]],["textspan",3]],[[["color",3],["option",4]],["textspan",3]],[[["style",3]],["color",3]],[[["eventctx",3]],["widget",3]],[[["eventctx",3]],["widget",3]],[[],["textspan",3]],[[],["textspan",3]],[[],["textspan",3]],[[],["textspan",3]],[[],["textspan",3]],[[],["textspan",3]],[[],["textspan",3]],[[],["textspan",3]],[[],["textspan",3]],[[],["textspan",3]],[[],["textspan",3]],[[["usize",15]],["textspan",3]],[[["font",4]],["textspan",3]],[[["string",3],["into",8]],["textspan",3]],null,null,null,[[],["text",3]],[[["textspan",3],["vec",3]],["text",3]],[[["vec",3]],["text",3]],[[],["text",3]],[[["color",3]],["text",3]],[[["eventctx",3],["into",8],["option",4],["str",15]],["text",3]],[[["color",3]],["text",3]],[[["color",3]],["text",3]],[[]],[[["color",3]]],[[["textspan",3]]],[[["textspan",3],["vec",3]]],[[["textspan",3],["vec",3]]],[[],["bool",15]],[[["text",3]]],[[["assets",3]],["screendims",3]],[[],["geombatch",3]],[[["assets",3],["f32",15]],["geombatch",3]],[[],["geombatch",3]],[[],["string",3]],[[["eventctx",3]],["widget",3]],[[["eventctx",3]],["widget",3]],[[["eventctx",3],["usize",15]],["text",3]],[[["f64",15],["assets",3]],["text",3]],[[["vec",3],["f32",15],["textspan",3],["assets",3]],["geombatch",3]],null,[[["eventctx",3]],["widget",3]],[[["eventctx",3]],["widget",3]],[[["f64",15],["polyline",3]],["geombatch",3]],null,null,[[["prerender",3],["f64",15],["screendims",3],["bool",15],["state",3],["str",15]],["result",6]],null,null,null,null,null,[[["eventctx",3],["f64",15],["pt2d",3],["option",4]],["warper",3]],[[["eventctx",3]],["bool",15]],null,null,[[],["cached",3]],[[],["option",4]],[[],["option",4]],[[["option",4],["fnmut",8]]],[[]],null,null,null,null,null,null,null,null,null,[[["eventctx",3],["vec",3]],["widget",3]],[[],[["vec",3],["option",4]]],[[["eventctx",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3],["polygon",3],["option",4],["bool",15],["str",15],["geombatch",3],["multikey",4],["text",3],["option",4]],["button",3]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["edgeinsets",3],["into",8]]],[[["f64",15]]],[[["f64",15]]],[[["f64",15]]],[[["f64",15]]],[[["string",3],["into",8]]],[[["str",15]]],[[["text",3],["controlstate",4]]],[[["color",3],["controlstate",4]]],[[["font",4]]],[[["usize",15]]],[[["str",15]]],[[]],[[["geombatch",3],["bounds",3]]],[[["rewritecolor",4],["controlstate",4],["into",8]]],[[["color",3],["controlstate",4]]],[[["into",8],["screendims",3]]],[[["contentmode",4]]],[[["cornerrounding",4],["into",8]]],[[["edgeinsets",3],["into",8]]],[[["color",3],["controlstate",4]]],[[["outlinestyle",6],["controlstate",4]]],[[["geombatch",3],["controlstate",4]]],[[["into",8],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[["bool",15]]],[[]],[[]],[[["f64",15]]],[[["cornerrounding",4],["into",8]]],[[["eventctx",3],["str",15]],["button",3]],[[["eventctx",3],["str",15],["asref",8]],["widget",3]],[[["eventctx",3]],["widget",3]],[[["controlstate",4]],["buttonstatestyle",3]],[[["controlstate",4]],["buttonstatestyle",3]],[[["eventctx",3],["controlstate",4]],["geombatch",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3],["geombatch",3],["vec",3]],["widget",3]],null,null,null,null,null,null,[[["eventctx",3],["asref",8],["vec",3],["str",15]],["widget",3]],null,null,null,null,null,[[["bool",15],["vec",3],["widget",3]],["container",3]],null,null,null,null,null,null,null,null,[[["eventctx",3],["vec",3],["bool",15],["choice",3],["str",15]],["dropdown",3]],[[]],[[],["str",15]],[[["eventctx",3]]],[[["eventctx",3],["bool",15],["str",15]],["button",3]],null,null,null,null,null,[[["eventctx",3],["vec",3],["axis",8],["series",3],["plotoptions",3],["hgramvalue",8],["time",3]],["widget",3]],[[["vec",3],["duration",3]]],null,null,null,null,null,null,[[],["screendims",3]],[[["eventctx",3],["f64",15]],["widget",3]],[[["screendims",3]],["widget",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["prerender",3]]],[[]],[[["str",15]]],[[["str",15]]],[[]],[[["geombatch",3],["bounds",3]]],[[["imagesource",4]]],[[["str",15]]],[[]],[[["geombatch",3],["bounds",3]]],[[]],[[]],[[["rewritecolor",4],["into",8]]],[[["color",3]]],[[["into",8],["screendims",3]]],[[["contentmode",4]]],[[["cornerrounding",4],["into",8]]],[[["edgeinsets",3],["into",8]]],[[["eventctx",3]],["option",4]],[[["eventctx",3]],["widget",3]],null,null,null,null,null,[[["eventctx",3],["geombatch",3]],["widget",3]],null,null,null,null,null,null,[[["eventctx",3],["geombatch",3],["fn",8],["vec",3],["box",3]],["widget",3]],null,null,null,null,[[["geombatch",3]],["widget",3]],null,null,null,null,null,null,null,null,[[["eventctx",3],["plotoptions",3],["series",3],["vec",3]],["widget",3]],null,null,null,null,null,null,[[["eventctx",3],["choice",3],["vec",3]],["widget",3]],[[["eventctx",3],["choice",3],["vec",3]]],[[]],[[["usize",15]]],[[["style",3]],["text",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["widget",3]],["panelbuilder",3]],[[["eventctx",3]],["panel",3]],[[["screendims",3]]],[[["eventctx",3]]],[[["eventctx",3],["bool",15]]],[[]],[[]],[[["eventctx",3],["bool",15]]],[[]],[[["eventctx",3]],["bool",15]],[[["eventctx",3]]],[[["eventctx",3]],["outcome",4]],[[["gfxctx",3]]],[[],[["string",3],["hashset",3]]],[[["eventctx",3],["panel",3]]],[[["eventctx",3],["string",3]]],[[["str",15]],["bool",15]],[[["str",15]],["slider",3]],[[["str",15]],["slider",3]],[[["str",15]]],[[["str",15]],["bool",15]],[[["str",15]],[["bool",15],["option",4]]],[[["str",15]],["string",3]],[[["str",15]],["spinnervalue",8]],[[["eventctx",3],["spinnervalue",8],["str",15]]],[[["str",15],["asref",8]],[["clone",8],["partialeq",8]]],[[["str",15],["asref",8]],[["partialeq",8],["clone",8],["option",4]]],[[["str",15]],[["clone",8],["partialeq",8]]],[[["str",15]],[["vec",3],["option",4]]],[[["str",15]],[["rc",3],["refcell",3]]],[[["str",15]],["clone",8]],[[["str",15]],["bool",15]],[[["str",15]],[["option",4],["widget",3]]],[[["str",15]]],[[["str",15]]],[[["eventctx",3],["widget",3],["str",15]]],[[["str",15]],["screenrectangle",3]],[[["str",15]],["screenpt",3]],[[],["screenpt",3]],[[],["screendims",3]],[[["horizontalalignment",4],["verticalalignment",4]]],[[["widget",3],["eventctx",3],["str",15]]],[[["str",15]],["widget",3]],[[["eventctx",3]],["bool",15]],[[],[["option",4],["string",3]]],null,null,null,null,null,null,null,null,null,null,[[["eventctx",3]],["panel",3]],[[["eventctx",3]],["panel",3]],[[["horizontalalignment",4],["verticalalignment",4]],["panelbuilder",3]],[[],["panelbuilder",3]],[[["percent",3]],["panelbuilder",3]],[[["usize",15]],["panelbuilder",3]],[[["f64",15]],["panelbuilder",3]],[[["screendims",3]],["panelbuilder",3]],null,null,null,null,null,null,[[["eventctx",3],["into",8],["option",4],["vec",3],["choice",3],["str",15]],["widget",3]],[[["eventctx",3],["into",8],["option",4],["vec",3],["choice",3],["str",15]],["persistentsplit",3]],[[["eventctx",3]],["buttonbuilder",3]],[[]],null,null,null,null,null,null,[[],["plotoptions",3]],[[],["plotoptions",3]],null,[[["f64",15]]],[[],["f64",15]],[[],["string",3]],[[],["f64",15]],[[["f64",15]]],[[]],null,null,null,null,[[["eventctx",3],["plotoptions",3]],["widget",3]],[[["vec",3],["pt2d",3],["distance",3]],["polygon",3]],null,null,null,null,null,[[["eventctx",3],["addassign",8],["div",8],["plotoptions",3],["time",3],["f64",15],["vec",3],["series",3],["axis",8]],["widget",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["edgeinsets",3]],[[],["screendims",3]],[[["eventctx",3],["f64",15]],["widget",3]],[[["eventctx",3],["f64",15]],["widget",3]],[[["eventctx",3],["f64",15]],["widget",3]],[[["eventctx",3],["f64",15],["style",4]],["widget",3]],[[["eventctx",3]]],[[],["polygon",3]],[[["screenpt",3]],["f64",15]],[[],["f64",15]],[[["usize",15]],["usize",15]],[[["eventctx",3],["f64",15]]],[[["eventctx",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3]],["widget",3]],[[["eventctx",3],["string",3]]],[[["eventctx",3]]],[[]],[[["prerender",3],["style",3]],["drawable",3]],null,null,null,[[["str",15]],["widget",3]],[[],[["rc",3],["refcell",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3],["box",3],["fn",8],["filter",3],["str",15]],["table",3]],[[["fn",8],["box",3],["col",4],["str",15]]],[[["panel",3],["eventctx",3]]],[[["eventctx",3]],["widget",3]],[[["str",15]],["bool",15]],[[["panel",3]]],[[],["filter",3]],[[["box",3],["fn",8],["str",15]]],[[["usize",15],["eventctx",3]],["widget",3]],[[["f64",15],["vec",3],["eventctx",3],["widget",3],["vec",3]],["widget",3]],null,null,null,null,null,[[["string",3],["buttonbuilder",3],["widget",3]]],[[["eventctx",3],["bool",15]],["widget",3]],null,null,null,null,[[]],[[["buttonbuilder",3],["widget",3]]],[[["eventctx",3]],["widget",3]],[[["eventctx",3],["panel",3],["str",15]],["bool",15]],[[],["usize",15]],[[],["string",3]],[[],["string",3]],[[["usize",15]],["string",3]],[[],["widget",3]],[[["eventctx",3]],["widget",3]],[[["eventctx",3],["usize",15],["panel",3]]],null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3],["into",8],["string",3]],["widget",3]],[[["eventctx",3],["into",8],["usize",15],["string",3],["bool",15]],["widget",3]],[[["eventctx",3],["usize",15],["string",3],["bool",15]],["textbox",3]],[[["style",3]],["text",3]],[[],["string",3]],null,null,null,null,null,[[["bool",15],["button",3]],["widget",3]],[[["eventctx",3],["into",8],["option",4],["bool",15],["str",15]],["widget",3]],[[["eventctx",3],["into",8],["option",4],["bool",15],["str",15]],["widget",3]],[[["eventctx",3],["into",8],["vec",3],["option",4],["textspan",3],["bool",15],["str",15]],["widget",3]],[[["eventctx",3],["color",3],["bool",15],["str",15]],["widget",3]],[[["eventctx",3],["into",8],["option",4],["bool",15],["str",15]],["widget",3]],null,null,[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["bool",15]],[[["widgetimpl",8],["eventctx",3]]],null,null,null,null,null,null,null,[[],["widgetoutput",3]],[[],["bool",15]],[[["box",3]],[["result",4],["box",3],["box",3]]],[[["rc",3]],[["rc",3],["rc",3],["result",4]]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["widget",3]],[[],["widget",3]],[[],["widget",3]],[[],["widget",3]],[[],["widget",3]],[[],["widget",3]],[[],["widget",3]],[[["eventctx",3],["percent",3]],["widget",3]],[[["eventctx",3],["percent",3]],["widget",3]],[[["f64",15]],["widget",3]],[[["eventctx",3],["percent",3]],["widget",3]],[[["f64",15]],["widget",3]],[[],["f64",15]],[[["color",3]],["widget",3]],[[["outlinestyle",6]],["widget",3]],[[["cornerrounding",4],["into",8]],["widget",3]],[[],["widget",3]],[[["eventctx",3]],["widget",3]],[[["eventctx",3]],["widget",3]],[[["edgeinsets",3],["into",8]],["widget",3]],[[["usize",15]],["widget",3]],[[["usize",15]],["widget",3]],[[["usize",15]],["widget",3]],[[["usize",15]],["widget",3]],[[["edgeinsets",3],["into",8]],["widget",3]],[[["usize",15]],["widget",3]],[[["usize",15]],["widget",3]],[[["usize",15]],["widget",3]],[[["usize",15]],["widget",3]],[[["usize",15]],["widget",3]],[[["usize",15]],["widget",3]],[[],["widget",3]],[[],["widget",3]],[[],["widget",3]],[[],["widget",3]],[[["f64",15]],["widget",3]],[[["string",3],["into",8]],["widget",3]],[[["widgetimpl",8],["box",3]],["widget",3]],[[["eventctx",3],["asref",8],["str",15],["partialeq",8],["vec",3],["clone",8],["choice",3],["debug",8]],["widget",3]],[[["vec",3],["widget",3]],["widget",3]],[[["vec",3],["widget",3]],["widget",3]],[[["usize",15],["vec",3],["widget",3]],["widget",3]],[[["vec",3],["widget",3]],["widget",3]],[[["usize",15],["vec",3],["widget",3]],["widget",3]],[[["vec",3],["widget",3]],["widget",3]],[[],["widget",3]],[[["eventctx",3],["f64",15],["option",4]]],[[["f64",15],["eventctx",3]],["widget",3]],[[["f64",15],["eventctx",3]],["widget",3]],[[["gfxctx",3]]],[[["stretch",3],["vec",3],["node",3]]],[[["f64",15],["stretch",3],["eventctx",3],["bool",15],["vec",3]]],[[["hashset",3]]],[[],[["option",4],["string",3]]],[[["eventctx",3],["panel",3]]],[[["geombatch",3]]],[[["str",15]],["bool",15]],[[["str",15]],[["option",4],["widget",3]]],[[["str",15]],[["widget",3],["option",4]]],[[["str",15]],[["option",4],["widget",3]]],[[],["justdraw",3]],null,null,null,null,null,[[]],[[["f64",15]]],null,null,null,null,null,null,[[]],[[["gfxctx",3]]],[[["canvas",3]]],[[["canvas",3]]],[[]],null,[[["panel",3],["eventctx",3],["str",15]],["transition",4]],[[["panel",3],["eventctx",3]],[["option",4],["transition",4]]],[[["eventctx",3]]],[[["eventctx",3]],["transition",4]],[[["gfxctx",3]]],[[],["drawbaselayer",4]],null,[[["eventctx",3]],["transition",4]],[[["gfxctx",3]]],[[],["drawbaselayer",4]],[[["eventctx",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3],["key",4]],["multikey",4]],[[["key",4]],["multikey",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["fnonce",8],["settings",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["string",3],["into",8]],["textspan",3]],null,null,null,null,[[["eventctx",3]],["widget",3]],[[["eventctx",3]],["widget",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["bool",15]],[[["widgetimpl",8],["eventctx",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["string",3],["into",8]],["choice",3]],[[["vec",3]],[["choice",3],["vec",3]]],[[["key",4]],["choice",3]],[[["multikey",4]],["choice",3]],[[["bool",15]],["choice",3]],[[["string",3],["into",8]],["choice",3]],[[["color",3]],["choice",3]],[[],["choice",3]],[[["str",15]],[["string",3],["choice",3]]],[[["vec",3],["into",8],["string",3]],[["choice",3],["vec",3]]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["u64",15]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["u64",15]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["u64",15]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[["eventctx",3]],["transition",4]],[[["gfxctx",3]]],[[],["drawbaselayer",4]],[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["bool",15]],[[["widgetimpl",8],["eventctx",3]]],[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[],["screendims",3]],[[["screenpt",3]]],[[["widgetoutput",3],["eventctx",3]]],[[["gfxctx",3]]],[[]],[[]],[[]],[[],["assets",3]],[[],["assets",3]],[[],["assets",3]],[[],["assets",3]],[[],["prerender",3]],[[],["prerender",3]],[[],["prerender",3]],[[["color",3]],["fill",4]],[[["texture",3]],["fill",4]],[[["key",4]],["multikey",4]],[[["vec",3]],["geombatch",3]],[[["color",3]],["rewritecolor",4]],[[["f64",15],["logicalposition",3]],["screenpt",3]],[[["logicalsize",3],["f64",15]],["screendims",3]],[[["f64",15]],["screendims",3]],[[],["screendims",3]],[[]],[[["textspan",3]],["text",3]],[[],["text",3]],[[["f64",15]]],[[["cornerradii",3]]],[[["usize",15]],["edgeinsets",3]],[[["f64",15]],["edgeinsets",3]],[[],[["option",4],["pathevent",6]]],[[],["canvassettings",3]],[[],["horizontalalignment",4]],[[],["verticalalignment",4]],[[],["color",3]],[[],["fill",4]],[[],["texture",3]],[[],["lineargradient",3]],[[],["event",4]],[[],["key",4]],[[],["multikey",4]],[[],["updatetype",4]],[[],["axis",4]],[[],["alignment",4]],[[],["geombatch",3]],[[],["rewritecolor",4]],[[],["screenpt",3]],[[],["screenrectangle",3]],[[],["screendims",3]],[[],["buttonstyle",3]],[[],["style",3]],[[],["font",4]],[[],["textspan",3]],[[],["text",3]],[[],["buttonbuilder",3]],[[],["buttonstatestyle",3]],[[],["label",3]],[[],["image",3]],[[],["imagesource",4]],[[],["cornerrounding",4]],[[],["edgeinsets",3]],[[],["controlstate",4]],[[],["contentmode",4]],[[]],[[]],[[],["buttonbuilder",3]],[[],["buttonstatestyle",3]],[[],["label",3]],[[],["image",3]],[[]],[[],["edgeinsets",3]],[[]],[[["key",4]],["ordering",4]],[[["multikey",4]],["ordering",4]],[[["horizontalalignment",4]],["bool",15]],[[["horizontalalignment",4]],["bool",15]],[[["verticalalignment",4]],["bool",15]],[[["verticalalignment",4]],["bool",15]],[[["color",3]],["bool",15]],[[["color",3]],["bool",15]],[[["fill",4]],["bool",15]],[[["fill",4]],["bool",15]],[[["texture",3]],["bool",15]],[[["texture",3]],["bool",15]],[[["lineargradient",3]],["bool",15]],[[["lineargradient",3]],["bool",15]],[[["event",4]],["bool",15]],[[["event",4]],["bool",15]],[[["key",4]],["bool",15]],[[["multikey",4]],["bool",15]],[[["multikey",4]],["bool",15]],[[["updatetype",4]],["bool",15]],[[["updatetype",4]],["bool",15]],[[["axis",4]],["bool",15]],[[["alignment",4]],["bool",15]],[[["rewritecolor",4]],["bool",15]],[[["rewritecolor",4]],["bool",15]],[[["screenpt",3]],["bool",15]],[[["screenpt",3]],["bool",15]],[[["screendims",3]],["bool",15]],[[["screendims",3]],["bool",15]],[[["font",4]],["bool",15]],[[["outcome",4]],["bool",15]],[[["outcome",4]],["bool",15]],[[["edgeinsets",3]],["bool",15]],[[["edgeinsets",3]],["bool",15]],[[["key",4]],[["ordering",4],["option",4]]],[[["multikey",4]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["string",3]]],[[["string",3]]],[[["str",15]],["buttonbuilder",3]],[[],["buttonbuilder",3]],[[],["buttonbuilder",3]],[[],["buttonbuilder",3]],[[["eventctx",3]],["widget",3]],[[["str",15]],["buttonbuilder",3]]],"p":[[3,"Table"],[4,"Col"],[3,"Filter"],[8,"SharedAppState"],[3,"App"],[4,"DrawBaselayer"],[8,"State"],[4,"Transition"],[8,"SimpleState"],[3,"SimpleStateWrapper"],[3,"Assets"],[3,"GfxCtxInnards"],[3,"Drawable"],[3,"VertexArray"],[3,"Buffer"],[3,"PrerenderInnards"],[3,"SpriteTexture"],[3,"WindowAdapter"],[3,"Canvas"],[3,"CanvasSettings"],[4,"HorizontalAlignment"],[4,"VerticalAlignment"],[3,"Color"],[4,"Fill"],[3,"Texture"],[3,"LinearGradient"],[3,"Uniforms"],[3,"GfxCtx"],[3,"Prerender"],[4,"Event"],[4,"Key"],[4,"MultiKey"],[4,"UpdateType"],[13,"ScreenCaptureEverything"],[3,"EventCtx"],[3,"LoadingScreen"],[4,"Axis"],[4,"Alignment"],[3,"GeomBatchStack"],[3,"GeomBatch"],[4,"RewriteColor"],[3,"UserInput"],[3,"State"],[3,"Settings"],[3,"ScreenPt"],[3,"ScreenRectangle"],[3,"ScreenDims"],[3,"ButtonStyle"],[3,"Style"],[3,"PathConvIter"],[4,"Font"],[3,"TextSpan"],[3,"Text"],[8,"TextExt"],[3,"Warper"],[3,"Cached"],[3,"Autocomplete"],[3,"Button"],[3,"ButtonBuilder"],[3,"ButtonStateStyle"],[3,"Label"],[3,"MultiButton"],[3,"CompareTimes"],[3,"Container"],[3,"Dropdown"],[3,"FanChart"],[3,"Filler"],[4,"ResizeRule"],[3,"Image"],[4,"ImageSource"],[13,"Bytes"],[3,"JustDraw"],[3,"DrawWithTooltips"],[3,"DeferDraw"],[3,"LinePlot"],[3,"Menu"],[3,"Panel"],[3,"PanelBuilder"],[4,"Dims"],[3,"PersistentSplit"],[3,"PlotOptions"],[8,"Axis"],[3,"Series"],[3,"ScatterPlot"],[3,"Slider"],[4,"Style"],[13,"Horizontal"],[13,"Vertical"],[13,"Area"],[3,"Spinner"],[3,"Stash"],[3,"Column"],[3,"Tab"],[3,"TabController"],[3,"TextBox"],[3,"Toggle"],[8,"WidgetImpl"],[4,"Outcome"],[3,"WidgetOutput"],[3,"Widget"],[4,"CornerRounding"],[3,"LayoutStyle"],[3,"EdgeInsets"],[4,"ControlState"],[4,"ContentMode"],[3,"Choice"],[3,"Nothing"]]},\
"widgetry_demo":{"doc":"","t":[5,5,3,3,12,12,12,12,12,12,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["main","run","App","Demo","controls","timeseries_panel","scrollable_canvas","texture_demo","elapsed","tabs","new","make_timeseries_panel","redraw_stopwatch","setup_texture_demo","setup_scrollable_canvas","make_tabs","make_controls","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","into_any_arc","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","into_any","into_any_rc","as_any","as_any_mut","event","draw"],"q":["widgetry_demo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[[[]],[[["settings",3]]],null,null,null,null,null,null,null,null,[[["eventctx",3]]],[[["eventctx",3]],["panel",3]],[[["eventctx",3]]],[[["eventctx",3],["texture",3]],["drawable",3]],[[["eventctx",3]],["drawable",3]],[[["eventctx",3]],["tabcontroller",3]],[[["eventctx",3],["tabcontroller",3]],["panel",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["arc",3]],[["any",8],["arc",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[],["any",8]],[[],["any",8]],[[["eventctx",3],["app",3]],[["transition",4],["app",3]]],[[["gfxctx",3],["app",3]]]],"p":[[3,"Demo"],[3,"App"]]}\
}');
initSearch(searchIndex);