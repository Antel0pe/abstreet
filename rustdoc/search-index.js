var searchIndex = JSON.parse('{\
"abstio":{"doc":"A/B Street organizes data files in a particular way. This …","i":[[0,"io_native","abstio","Normal file IO using the filesystem",null,null],[5,"file_exists","abstio::io_native","",null,[[["asref",8],["str",15]],["bool",15]]],[5,"list_dir","","Returns full paths",null,[[["string",3]],[["vec",3],["string",3]]]],[5,"slurp_file","","",null,[[["asref",8],["str",15]],[["result",6],["vec",3]]]],[5,"inner_slurp_file","","",null,[[["str",15]],[["result",6],["vec",3]]]],[5,"maybe_read_binary","","",null,[[["timer",3],["string",3]],[["result",6],["deserializeowned",8]]]],[5,"maybe_write_json","","",null,[[["str",15]],["result",6]]],[5,"write_json","","",null,[[["string",3]]]],[5,"maybe_write_binary","","",null,[[["str",15]],["result",6]]],[5,"write_binary","","",null,[[["string",3]]]],[5,"delete_file","","Idempotent",null,[[["asref",8],["str",15]]]],[3,"FileWithProgress","","",null,null],[12,"inner","","",0,null],[12,"path","","",0,null],[12,"processed_bytes","","",0,null],[12,"total_bytes","","",0,null],[12,"started_at","","",0,null],[12,"last_printed_at","","",0,null],[11,"new","","Also hands back a callback that\'ll add the final result …",0,[[["str",15]],["result",6]]],[0,"download","abstio","",null,null],[5,"download_bytes","abstio::download","Downloads bytes from a URL, printing progress to STDOUT. …",null,[[["asref",8],["str",15]]]],[5,"download_to_file","","Downloads a file, printing progress to STDOUT. This must …",null,[[["asref",8],["str",15]]]],[0,"abst_data","abstio","",null,null],[3,"Manifest","abstio::abst_data","A list of all canonical data files for A/B Street that\'re …",null,null],[12,"entries","","Keyed by path, starting with \\\"data/\\\"",1,null],[3,"Entry","","A single file",null,null],[12,"checksum","","md5sum of the file",2,null],[12,"uncompressed_size_bytes","","Uncompressed size in bytes. Because we have some massive …",2,null],[12,"compressed_size_bytes","","Compressed size in bytes",2,null],[11,"load","","",1,[[],["manifest",3]]],[11,"filter","","Removes entries from the Manifest to match the DataPacks …",1,[[["datapacks",3]],["manifest",3]]],[11,"is_file_part_of_huge_seattle","","Because there are so many Seattle maps and they\'re …",1,[[["str",15]],["bool",15]]],[3,"DataPacks","","Player-chosen groups of files to opt into downloading",null,null],[12,"runtime","","A list of cities to download for using in A/B Street. …",3,null],[12,"input","","A list of cities to download for running the map importer.",3,null],[11,"load_or_create","","Load the player\'s config for what files to download, or …",3,[[],["datapacks",3]]],[11,"save","","Saves the player\'s config for what files to download.",3,[[]]],[0,"abst_paths","abstio","Generate paths for different A/B Street files",null,null],[3,"ROOT_DIR","abstio::abst_paths","",null,null],[12,"__private_field","","",4,null],[3,"ROOT_PLAYER_DIR","","",null,null],[12,"__private_field","","",5,null],[5,"path","","",null,[[["asref",8],["str",15]],["string",3]]],[3,"CityName","","A single city is identified using this.",null,null],[12,"country","","A two letter lowercase country code, from …",6,null],[12,"city","","The name of the city, in filename-friendly form -- for …",6,null],[11,"new","","Create a CityName from a country code and city.",6,[[["str",15]],["cityname",3]]],[11,"seattle","","Convenient constructor for the main city of the game.",6,[[],["cityname",3]]],[11,"list_all_cities_from_system_data","","Returns all city names based on system data.",6,[[],[["cityname",3],["vec",3]]]],[11,"list_all_cities_from_importer_config","","Returns all city names based on importer config.",6,[[],[["cityname",3],["vec",3]]]],[11,"parse","","Parses a CityName from something like \\\"gb/london\\\"; the …",6,[[["str",15]],[["result",6],["cityname",3]]]],[11,"to_path","","Expresses the city as a path, like \\\"gb/london\\\"; the …",6,[[],["string",3]]],[11,"describe","","Stringify the city name for debug messages. Don\'t …",6,[[],["string",3]]],[11,"input_path","","Constructs the path to some city-scoped data/input.",6,[[["asref",8],["str",15]],["string",3]]],[3,"MapName","","A single map is identified using this.",null,null],[12,"city","","",7,null],[12,"map","","The name of the map within the city, in filename-friendly …",7,null],[11,"new","","Create a MapName from a country code, city, and map name.",7,[[["str",15]],["mapname",3]]],[11,"from_city","","Create a MapName from a city and map within that city.",7,[[["str",15],["cityname",3]],["mapname",3]]],[11,"seattle","","Convenient constructor for the main city of the game.",7,[[["str",15]],["mapname",3]]],[11,"describe","","Stringify the map name for debug messages. Don\'t …",7,[[],["string",3]]],[11,"as_filename","","Stringify the map name for filenames.",7,[[],["string",3]]],[11,"from_path","","Transforms a path to a map back to a MapName. Returns <code>None</code>…",7,[[["str",15]],[["mapname",3],["option",4]]]],[11,"path","","Returns the filesystem path to this map.",7,[[],["string",3]]],[11,"list_all_maps_in_city","","Returns all maps from one city.",7,[[["cityname",3]],[["vec",3],["mapname",3]]]],[11,"list_all_maps","","Returns all maps from all cities, using system data.",7,[[],[["vec",3],["mapname",3]]]],[11,"to_data_pack_name","","Returns the string to opt into runtime or input files for …",7,[[],["string",3]]],[5,"path_prebaked_results","","",null,[[["mapname",3],["str",15]],["string",3]]],[5,"path_scenario","","",null,[[["mapname",3],["str",15]],["string",3]]],[5,"path_all_scenarios","","",null,[[["mapname",3]],["string",3]]],[5,"parse_scenario_path","","Extract the map and scenario name from a path. Crashes if …",null,[[["str",15]]]],[5,"path_player","","",null,[[["asref",8],["str",15]],["string",3]]],[5,"path_camera_state","","",null,[[["mapname",3]],["string",3]]],[5,"path_edits","","",null,[[["mapname",3],["str",15]],["string",3]]],[5,"path_all_edits","","",null,[[["mapname",3]],["string",3]]],[5,"path_save","","",null,[[["string",3],["mapname",3],["str",15]],["string",3]]],[5,"path_all_saves","","",null,[[["mapname",3],["str",15]],["string",3]]],[5,"path_popdat","","",null,[[],["string",3]]],[5,"path_raw_map","","",null,[[["mapname",3]],["string",3]]],[5,"path_shared_input","","",null,[[["asref",8],["str",15]],["string",3]]],[0,"io","abstio","",null,null],[5,"maybe_read_json","abstio::io","",null,[[["timer",3],["string",3]],[["result",6],["deserializeowned",8]]]],[5,"read_json","","",null,[[["timer",3],["string",3]],["deserializeowned",8]]],[5,"read_binary","","",null,[[["timer",3],["string",3]],["deserializeowned",8]]],[5,"read_object","","May be a JSON or binary file",null,[[["timer",3],["string",3]],[["result",6],["deserializeowned",8]]]],[5,"must_read_object","","May be a JSON or binary file. Panics on failure.",null,[[["timer",3],["string",3]],["deserializeowned",8]]],[5,"find_prev_file","","Keeps file extensions",null,[[["string",3]],[["option",4],["string",3]]]],[5,"find_next_file","","",null,[[["string",3]],[["option",4],["string",3]]]],[5,"load_all_objects","","Load all serialized things from a directory, return …",null,[[["string",3]],["vec",3]]],[5,"list_all_objects","","Just list all things from a directory, return sorted by …",null,[[["string",3]],[["vec",3],["string",3]]]],[5,"maybe_read_json","abstio","",null,[[["timer",3],["string",3]],[["result",6],["deserializeowned",8]]]],[5,"read_json","","",null,[[["timer",3],["string",3]],["deserializeowned",8]]],[5,"read_binary","","",null,[[["timer",3],["string",3]],["deserializeowned",8]]],[5,"read_object","","May be a JSON or binary file",null,[[["timer",3],["string",3]],[["result",6],["deserializeowned",8]]]],[5,"must_read_object","","May be a JSON or binary file. Panics on failure.",null,[[["timer",3],["string",3]],["deserializeowned",8]]],[5,"find_prev_file","","Keeps file extensions",null,[[["string",3]],[["option",4],["string",3]]]],[5,"find_next_file","","",null,[[["string",3]],[["option",4],["string",3]]]],[5,"load_all_objects","","Load all serialized things from a directory, return …",null,[[["string",3]],["vec",3]]],[5,"list_all_objects","","Just list all things from a directory, return sorted by …",null,[[["string",3]],[["vec",3],["string",3]]]],[5,"file_exists","","",null,[[["asref",8],["str",15]],["bool",15]]],[5,"list_dir","","Returns full paths",null,[[["string",3]],[["vec",3],["string",3]]]],[5,"slurp_file","","",null,[[["asref",8],["str",15]],[["result",6],["vec",3]]]],[5,"maybe_read_binary","","",null,[[["timer",3],["string",3]],[["result",6],["deserializeowned",8]]]],[5,"write_json","","",null,[[["string",3]]]],[5,"write_binary","","",null,[[["string",3]]]],[5,"delete_file","","Idempotent",null,[[["asref",8],["str",15]]]],[3,"FileWithProgress","","",null,null],[12,"inner","","",0,null],[12,"path","","",0,null],[12,"processed_bytes","","",0,null],[12,"total_bytes","","",0,null],[12,"started_at","","",0,null],[12,"last_printed_at","","",0,null],[5,"download_bytes","","Downloads bytes from a URL, printing progress to STDOUT. …",null,[[["asref",8],["str",15]]]],[5,"download_to_file","","Downloads a file, printing progress to STDOUT. This must …",null,[[["asref",8],["str",15]]]],[3,"Manifest","","A list of all canonical data files for A/B Street that\'re …",null,null],[12,"entries","","Keyed by path, starting with \\\"data/\\\"",1,null],[3,"Entry","","A single file",null,null],[12,"checksum","","md5sum of the file",2,null],[12,"uncompressed_size_bytes","","Uncompressed size in bytes. Because we have some massive …",2,null],[12,"compressed_size_bytes","","Compressed size in bytes",2,null],[3,"DataPacks","","Player-chosen groups of files to opt into downloading",null,null],[12,"runtime","","A list of cities to download for using in A/B Street. …",3,null],[12,"input","","A list of cities to download for running the map importer.",3,null],[5,"path","","",null,[[["asref",8],["str",15]],["string",3]]],[3,"CityName","","A single city is identified using this.",null,null],[12,"country","","A two letter lowercase country code, from …",6,null],[12,"city","","The name of the city, in filename-friendly form -- for …",6,null],[3,"MapName","","A single map is identified using this.",null,null],[12,"city","","",7,null],[12,"map","","The name of the map within the city, in filename-friendly …",7,null],[5,"path_prebaked_results","","",null,[[["mapname",3],["str",15]],["string",3]]],[5,"path_scenario","","",null,[[["mapname",3],["str",15]],["string",3]]],[5,"path_all_scenarios","","",null,[[["mapname",3]],["string",3]]],[5,"parse_scenario_path","","Extract the map and scenario name from a path. Crashes if …",null,[[["str",15]]]],[5,"path_player","","",null,[[["asref",8],["str",15]],["string",3]]],[5,"path_camera_state","","",null,[[["mapname",3]],["string",3]]],[5,"path_edits","","",null,[[["mapname",3],["str",15]],["string",3]]],[5,"path_all_edits","","",null,[[["mapname",3]],["string",3]]],[5,"path_save","","",null,[[["string",3],["mapname",3],["str",15]],["string",3]]],[5,"path_all_saves","","",null,[[["mapname",3],["str",15]],["string",3]]],[5,"path_popdat","","",null,[[],["string",3]]],[5,"path_raw_map","","",null,[[["mapname",3]],["string",3]]],[5,"path_shared_input","","",null,[[["asref",8],["str",15]],["string",3]]],[5,"slurp_bytes","","An adapter for widgetry::Settings::read_svg to read SVGs …",null,[[["str",15]],[["vec",3],["u8",15]]]],[11,"from","abstio::io_native","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"events","","",0,[[],["events",3]]],[11,"keys","","",0,[[],["keys",3]]],[11,"read_line","","",0,[[],[["option",4],["error",3],["result",4]]]],[11,"events_and_raw","","",0,[[],["eventsandraw",3]]],[11,"from","abstio::abst_data","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","abstio::abst_paths","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"equivalent","","",6,[[],["bool",15]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"equivalent","","",7,[[],["bool",15]]],[11,"clone","","",6,[[],["cityname",3]]],[11,"clone","","",7,[[],["mapname",3]]],[11,"cmp","","",6,[[["cityname",3]],["ordering",4]]],[11,"cmp","","",7,[[["mapname",3]],["ordering",4]]],[11,"eq","","",6,[[["cityname",3]],["bool",15]]],[11,"ne","","",6,[[["cityname",3]],["bool",15]]],[11,"eq","","",7,[[["mapname",3]],["bool",15]]],[11,"ne","","",7,[[["mapname",3]],["bool",15]]],[11,"partial_cmp","","",6,[[["cityname",3]],[["option",4],["ordering",4]]]],[11,"lt","","",6,[[["cityname",3]],["bool",15]]],[11,"le","","",6,[[["cityname",3]],["bool",15]]],[11,"gt","","",6,[[["cityname",3]],["bool",15]]],[11,"ge","","",6,[[["cityname",3]],["bool",15]]],[11,"partial_cmp","","",7,[[["mapname",3]],[["option",4],["ordering",4]]]],[11,"lt","","",7,[[["mapname",3]],["bool",15]]],[11,"le","","",7,[[["mapname",3]],["bool",15]]],[11,"gt","","",7,[[["mapname",3]],["bool",15]]],[11,"ge","","",7,[[["mapname",3]],["bool",15]]],[11,"deref","","",4,[[],["string",3]]],[11,"deref","","",5,[[],["string",3]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"read","abstio::io_native","",0,[[],[["usize",15],["error",3],["result",6]]]],[11,"serialize","abstio::abst_data","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","abstio::abst_paths","",6,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"deserialize","abstio::abst_data","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","abstio::abst_paths","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"initialize","","",4,[[]]],[11,"initialize","","",5,[[]]]],"p":[[3,"FileWithProgress"],[3,"Manifest"],[3,"Entry"],[3,"DataPacks"],[3,"ROOT_DIR"],[3,"ROOT_PLAYER_DIR"],[3,"CityName"],[3,"MapName"]]},\
"abstutil":{"doc":"The contents of this crate need to be organized better:","i":[[0,"cli","abstutil","",null,null],[3,"CmdArgs","abstutil::cli","Yet another barebones command-line flag parsing library.",null,null],[12,"kv","","",0,null],[12,"bits","","",0,null],[12,"free","","",0,null],[12,"used","","",0,null],[11,"new","","On native, initialize with real flags. On web, transform …",0,[[],["cmdargs",3]]],[11,"from_args","","",0,[[["vec",3],["string",3]],["cmdargs",3]]],[11,"required","","",0,[[["str",15]],["string",3]]],[11,"optional","","",0,[[["str",15]],[["string",3],["option",4]]]],[11,"optional_parse","","",0,[[["fn",8],["str",15]],["option",4]]],[11,"true_false","","",0,[[["str",15]],["bool",15]]],[11,"enabled","","",0,[[["str",15]],["bool",15]]],[11,"required_free","","",0,[[],["string",3]]],[11,"optional_free","","",0,[[],[["string",3],["option",4]]]],[11,"done","","",0,[[]]],[5,"parse_args","","",null,[[],[["result",6],["vec",3]]]],[0,"collections","abstutil","",null,null],[3,"MultiMap","abstutil::collections","",null,null],[12,"map","","",1,null],[12,"empty","","",1,null],[11,"new","","",1,[[],["multimap",3]]],[11,"insert","","",1,[[]]],[11,"remove","","",1,[[]]],[11,"get","","",1,[[],["btreeset",3]]],[11,"set","","",1,[[["btreeset",3]]]],[11,"len","","",1,[[],["usize",15]]],[11,"borrow","","",1,[[],["btreemap",3]]],[11,"consume","","",1,[[],[["btreeset",3],["btreemap",3]]]],[3,"Counter","","",null,null],[12,"map","","",2,null],[12,"sum","","",2,null],[11,"new","","",2,[[],["counter",3]]],[11,"add","","",2,[[["usize",15]],["usize",15]]],[11,"inc","","",2,[[],["usize",15]]],[11,"get","","",2,[[],["usize",15]]],[11,"sorted_asc","","Values with the same count are grouped together",2,[[],[["vec",3],["vec",3]]]],[11,"highest_n","","",2,[[["usize",15]],["vec",3]]],[11,"max","","",2,[[],["usize",15]]],[11,"sum","","",2,[[],["usize",15]]],[11,"compare","","",2,[[["counter",3]],["vec",3]]],[11,"borrow","","",2,[[],["btreemap",3]]],[11,"consume","","",2,[[],[["usize",15],["btreemap",3]]]],[5,"wraparound_get","","",null,[[["isize",15],["vec",3]]]],[5,"retain_btreemap","","",null,[[["btreemap",3],["fnmut",8]]]],[5,"retain_btreeset","","",null,[[["btreeset",3],["fnmut",8]]]],[5,"contains_duplicates","","",null,[[["vec",3]],["bool",15]]],[3,"VecMap","","Use when your key is just PartialEq, not Ord or Hash.",null,null],[12,"inner","","",3,null],[11,"new","","",3,[[],["vecmap",3]]],[11,"consume","","",3,[[],["vec",3]]],[11,"mut_or_insert","","",3,[[["fn",8]]]],[3,"Tags","","Convenience functions around a string->string map",null,null],[12,"0","","",4,null],[11,"new","","",4,[[["string",3],["btreemap",3]],["tags",3]]],[11,"empty","","",4,[[],["tags",3]]],[11,"get","","",4,[[["str",15]],[["string",3],["option",4]]]],[11,"contains_key","","",4,[[["str",15]],["bool",15]]],[11,"is","","",4,[[["str",15]],["bool",15]]],[11,"is_any","","",4,[[["vec",3],["str",15]],["bool",15]]],[11,"insert","","",4,[[["into",8],["string",3]]]],[11,"remove","","",4,[[["str",15]],[["string",3],["option",4]]]],[11,"is_empty","","",4,[[],["bool",15]]],[11,"inner","","",4,[[],["btreemap",3]]],[8,"IndexableKey","","Use with <code>FixedMap</code>. From a particular key, extract a <code>usize</code>…",null,null],[10,"index","","",5,[[],["usize",15]]],[3,"FixedMap","","A drop-in replacement for <code>BTreeMap</code>, where the keys have …",null,null],[12,"inner","","",6,null],[12,"key_type","","",6,null],[11,"new","","",6,[[],["fixedmap",3]]],[11,"insert","","",6,[[]]],[11,"get","","",6,[[],["option",4]]],[11,"get_mut","","",6,[[],["option",4]]],[11,"contains_key","","",6,[[],["bool",15]]],[11,"remove","","",6,[[],["option",4]]],[11,"values","","",6,[[],[["flatten",3],["iter",3]]]],[0,"logger","abstutil","",null,null],[5,"setup","abstutil::logger","On native: uses env_logYou can adjust the log level …",null,[[]]],[0,"process","abstutil","",null,null],[5,"must_run_cmd","abstutil::process","Runs a command, asserts success. STDOUT and STDERR aren\'t …",null,[[["command",3]]]],[0,"serde","abstutil","",null,null],[5,"to_json","abstutil::serde","Stringifies an object to nicely formatted JSON.",null,[[],["string",3]]],[5,"to_json_terse","","Stringifies an object to terse JSON.",null,[[],["string",3]]],[5,"from_json","","Deserializes an object from a JSON string.",null,[[["vec",3]],[["deserializeowned",8],["result",6]]]],[5,"from_json_reader","","Deserializes an object from JSON, from a reader.",null,[[["read",8]],[["deserializeowned",8],["result",6]]]],[5,"from_binary","","Deserializes an object from the bincode format.",null,[[["vec",3]],[["deserializeowned",8],["result",6]]]],[5,"from_binary_reader","","Deserializes an object from the bincode format, from a …",null,[[["read",8]],[["deserializeowned",8],["result",6]]]],[5,"serialized_size_bytes","","The number of bytes for an object serialized to bincode.",null,[[],["usize",15]]],[5,"serialize_btreemap","","Serializes a BTreeMap as a list of tuples. Necessary when …",null,[[["btreemap",3],["serializer",8]],["result",6]]],[5,"deserialize_btreemap","","Deserializes a BTreeMap from a list of tuples. Necessary …",null,[[["deserializer",8]],[["btreemap",3],["result",6]]]],[5,"serialize_hashmap","","Serializes a HashMap as a list of tuples, first sorting …",null,[[["hashmap",3],["serializer",8]],["result",6]]],[5,"deserialize_hashmap","","Deserializes a HashMap from a list of tuples.",null,[[["deserializer",8]],[["result",6],["hashmap",3]]]],[5,"serialize_multimap","","Serializes a MultiMap.",null,[[["multimap",3],["serializer",8]],["result",6]]],[5,"deserialize_multimap","","Deserializes a MultiMap.",null,[[["deserializer",8]],[["result",6],["multimap",3]]]],[5,"serialize_usize","","Serializes a <code>usize</code> as a <code>u32</code> to save space. Useful when …",null,[[["usize",15],["serializer",8]],["result",6]]],[5,"deserialize_usize","","Deserializes a <code>usize</code> from a <code>u32</code>.",null,[[["deserializer",8]],[["result",6],["usize",15]]]],[0,"time","abstutil","",null,null],[5,"elapsed_seconds","abstutil::time","",null,[[["instant",6]],["f64",15]]],[3,"Progress","","",null,null],[12,"label","","",7,null],[12,"processed_items","","",7,null],[12,"total_items","","",7,null],[12,"started_at","","",7,null],[12,"last_printed_at","","",7,null],[12,"first_update","","",7,null],[11,"new","","",7,[[["usize",15],["string",3]],["progress",3]]],[11,"next","","",7,[[["option",4]],["option",4]]],[11,"cancel_iter_early","","",7,[[],["f64",15]]],[4,"StackEntry","","",null,null],[13,"TimerSpan","","",8,null],[13,"Progress","","",8,null],[13,"File","","",8,null],[8,"TimerSink","","",null,null],[10,"println","","",9,[[["string",3]]]],[10,"reprintln","","",9,[[["string",3]]]],[3,"Timer","","Hierarchial magic",null,null],[12,"results","","",10,null],[12,"stack","","",10,null],[12,"outermost_name","","",10,null],[12,"sink","","",10,null],[3,"TimerSpan","","",null,null],[12,"name","","",11,null],[12,"started_at","","",11,null],[12,"nested_results","","",11,null],[12,"nested_time","","",11,null],[4,"Parallelism","","",null,null],[13,"Fastest","","Use all CPUs",12,null],[13,"Polite","","Use half of CPUs",12,null],[11,"new","","",10,[[["into",8],["string",3]],["timer",3]]],[11,"new_with_sink","","",10,[[["timersink",8],["box",3],["str",15]],["timer",3]]],[11,"throwaway","","",10,[[],["timer",3]]],[11,"println","","",10,[[["string",3]]]],[11,"selfless_println","","",10,[[["string",3],["option",4]]]],[11,"done","","Used to end the scope of a timer early.",10,[[]]],[11,"start","","",10,[[["into",8],["string",3]]]],[11,"stop","","",10,[[["into",8],["string",3]]]],[11,"start_iter","","",10,[[["into",8],["string",3],["usize",15]]]],[11,"next","","",10,[[]]],[11,"cancel_iter_early","","",10,[[]]],[11,"add_result","","",10,[[["f64",15],["string",3]]]],[11,"parallelize","","The order of the result is deterministic / matches the …",10,[[["parallelism",4],["vec",3],["fn",8],["str",15]],["vec",3]]],[11,"read_file","","Then the caller passes this in as a reader",10,[[["str",15]],["result",6]]],[5,"prettyprint_time","","",null,[[["f64",15]],["string",3]]],[5,"clear_current_line","","",null,[[]]],[3,"TimedFileReader","","",null,null],[12,"inner","","",13,null],[12,"path","","",13,null],[12,"processed_bytes","","",13,null],[12,"total_bytes","","",13,null],[12,"started_at","","",13,null],[12,"last_printed_at","","",13,null],[11,"new","","",13,[[["str",15]],[["result",6],["timedfilereader",3]]]],[0,"utils","abstutil","",null,null],[5,"plain_list_names","abstutil::utils","",null,[[["btreeset",3],["string",3]],["string",3]]],[5,"prettyprint_usize","","",null,[[["usize",15]],["string",3]]],[5,"basename","","",null,[[["asref",8],["str",15]],["string",3]]],[5,"parent_path","","",null,[[["str",15]],["string",3]]],[5,"to_json","abstutil","Stringifies an object to nicely formatted JSON.",null,[[],["string",3]]],[5,"to_json_terse","","Stringifies an object to terse JSON.",null,[[],["string",3]]],[5,"from_json","","Deserializes an object from a JSON string.",null,[[["vec",3]],[["deserializeowned",8],["result",6]]]],[5,"from_json_reader","","Deserializes an object from JSON, from a reader.",null,[[["read",8]],[["deserializeowned",8],["result",6]]]],[5,"from_binary","","Deserializes an object from the bincode format.",null,[[["vec",3]],[["deserializeowned",8],["result",6]]]],[5,"from_binary_reader","","Deserializes an object from the bincode format, from a …",null,[[["read",8]],[["deserializeowned",8],["result",6]]]],[5,"serialized_size_bytes","","The number of bytes for an object serialized to bincode.",null,[[],["usize",15]]],[5,"serialize_btreemap","","Serializes a BTreeMap as a list of tuples. Necessary when …",null,[[["btreemap",3],["serializer",8]],["result",6]]],[5,"deserialize_btreemap","","Deserializes a BTreeMap from a list of tuples. Necessary …",null,[[["deserializer",8]],[["btreemap",3],["result",6]]]],[5,"serialize_hashmap","","Serializes a HashMap as a list of tuples, first sorting …",null,[[["hashmap",3],["serializer",8]],["result",6]]],[5,"deserialize_hashmap","","Deserializes a HashMap from a list of tuples.",null,[[["deserializer",8]],[["result",6],["hashmap",3]]]],[5,"serialize_multimap","","Serializes a MultiMap.",null,[[["multimap",3],["serializer",8]],["result",6]]],[5,"deserialize_multimap","","Deserializes a MultiMap.",null,[[["deserializer",8]],[["result",6],["multimap",3]]]],[5,"serialize_usize","","Serializes a <code>usize</code> as a <code>u32</code> to save space. Useful when …",null,[[["usize",15],["serializer",8]],["result",6]]],[5,"deserialize_usize","","Deserializes a <code>usize</code> from a <code>u32</code>.",null,[[["deserializer",8]],[["result",6],["usize",15]]]],[3,"CmdArgs","","Yet another barebones command-line flag parsing library.",null,null],[12,"kv","","",0,null],[12,"bits","","",0,null],[12,"free","","",0,null],[12,"used","","",0,null],[3,"MultiMap","","",null,null],[12,"map","","",1,null],[12,"empty","","",1,null],[3,"Counter","","",null,null],[12,"map","","",2,null],[12,"sum","","",2,null],[5,"wraparound_get","","",null,[[["isize",15],["vec",3]]]],[5,"retain_btreemap","","",null,[[["btreemap",3],["fnmut",8]]]],[5,"retain_btreeset","","",null,[[["btreeset",3],["fnmut",8]]]],[5,"contains_duplicates","","",null,[[["vec",3]],["bool",15]]],[3,"VecMap","","Use when your key is just PartialEq, not Ord or Hash.",null,null],[12,"inner","","",3,null],[3,"Tags","","Convenience functions around a string->string map",null,null],[12,"0","","",4,null],[8,"IndexableKey","","Use with <code>FixedMap</code>. From a particular key, extract a <code>usize</code>…",null,null],[10,"index","","",5,[[],["usize",15]]],[3,"FixedMap","","A drop-in replacement for <code>BTreeMap</code>, where the keys have …",null,null],[12,"inner","","",6,null],[12,"key_type","","",6,null],[5,"setup","","On native: uses env_logYou can adjust the log level …",null,[[]]],[5,"must_run_cmd","","Runs a command, asserts success. STDOUT and STDERR aren\'t …",null,[[["command",3]]]],[5,"plain_list_names","","",null,[[["btreeset",3],["string",3]],["string",3]]],[5,"prettyprint_usize","","",null,[[["usize",15]],["string",3]]],[5,"basename","","",null,[[["asref",8],["str",15]],["string",3]]],[5,"parent_path","","",null,[[["str",15]],["string",3]]],[17,"PROGRESS_FREQUENCY_SECONDS","","",null,null],[11,"from","abstutil::cli","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","abstutil::collections","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","abstutil::time","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"events","","",10,[[],["events",3]]],[11,"keys","","",10,[[],["keys",3]]],[11,"read_line","","",10,[[],[["error",3],["result",4],["option",4]]]],[11,"events_and_raw","","",10,[[],["eventsandraw",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"drop","","",10,[[]]],[11,"clone","abstutil::collections","",1,[[],["multimap",3]]],[11,"clone","","",2,[[],["counter",3]]],[11,"clone","","",4,[[],["tags",3]]],[11,"clone","","",6,[[],["fixedmap",3]]],[11,"default","","",1,[[],["multimap",3]]],[11,"default","","",2,[[],["counter",3]]],[11,"eq","","",1,[[["multimap",3]],["bool",15]]],[11,"ne","","",1,[[["multimap",3]],["bool",15]]],[11,"eq","","",4,[[["tags",3]],["bool",15]]],[11,"ne","","",4,[[["tags",3]],["bool",15]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","abstutil::time","",7,[[["formatter",3]],["result",6]]],[11,"index","abstutil::collections","",6,[[]]],[11,"read","abstutil::time","",10,[[],[["usize",15],["error",3],["result",6]]]],[11,"serialize","abstutil::collections","",4,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]]],"p":[[3,"CmdArgs"],[3,"MultiMap"],[3,"Counter"],[3,"VecMap"],[3,"Tags"],[8,"IndexableKey"],[3,"FixedMap"],[3,"Progress"],[4,"StackEntry"],[8,"TimerSink"],[3,"Timer"],[3,"TimerSpan"],[4,"Parallelism"],[3,"TimedFileReader"]]},\
"augment_scenario":{"doc":"A tool to modify each person\'s schedule from an existing …","i":[[5,"main","augment_scenario","",null,[[]]],[5,"add_return_trips","","",null,[[["xorshiftrng",3],["scenario",3]]]],[5,"rand_duration","","",null,[[["xorshiftrng",3],["duration",3]],["duration",3]]],[5,"add_lunch_trips","","",null,[[["map",3],["timer",3],["xorshiftrng",3],["scenario",3]]]],[5,"pick_lunch_spot","","",null,[[["map",3],["buildingid",3],["bool",15],["findclosest",3],["xorshiftrng",3]],["option",4]]]],"p":[]},\
"clip_osm":{"doc":"","i":[[5,"main","clip_osm","Clips an .osm.pbf specified by <code>--pbf</code> using the Osmosis …",null,[[],["result",6]]],[5,"clip","","",null,[[["polygon",3],["str",15]],["result",6]]],[5,"to_pt","","",null,[[],[["f64",15],["point",3]]]]],"p":[]},\
"collisions":{"doc":"A simple data format to list collisions that\'ve occurred …","i":[[3,"CollisionDataset","collisions","A single dataset describing some collisions that happened.",null,null],[12,"source_url","","A URL pointing to the original data source.",0,null],[12,"collisions","","The collisions imported from the data source.",0,null],[3,"Collision","","A single collision that occurred in the real world.",null,null],[12,"location","","A single point describing where the collision occurred.",1,null],[12,"time","","The local time the collision occurred.",1,null],[12,"severity","","The severity reported in the original data source.",1,null],[4,"Severity","","A simple ranking for how severe the collision was. …",null,null],[13,"Slight","","",2,null],[13,"Serious","","",2,null],[13,"Fatal","","",2,null],[5,"import_stats19","","Import data from the UK STATS19 dataset. See …",null,[[["extrashapes",3],["str",15]],["collisiondataset",3]]],[5,"import_seattle","","Import data from Seattle GeoData …",null,[[["extrashapes",3],["str",15]],["collisiondataset",3]]],[5,"parse_incdttm","","",null,[[["str",15]],[["option",4],["duration",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"equivalent","","",2,[[],["bool",15]]],[11,"clone","","",2,[[],["severity",4]]],[11,"eq","","",2,[[["severity",4]],["bool",15]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]]],"p":[[3,"CollisionDataset"],[3,"Collision"],[4,"Severity"]]},\
"convert_osm":{"doc":"","i":[[0,"clip","convert_osm","",null,null],[5,"clip_map","convert_osm::clip","",null,[[["rawmap",3],["timer",3]]]],[0,"elevation","convert_osm","",null,null],[5,"add_data","convert_osm::elevation","",null,[[["rawmap",3],["timer",3]],["result",6]]],[5,"generate_input","","",null,[[["rawmap",3]],[["vec",3],["result",6]]]],[5,"scrape_output","","",null,[[["vec",3],["rawmap",3],["originalroad",3]],["result",6]]],[0,"extract","convert_osm","",null,null],[3,"OsmExtract","convert_osm::extract","",null,null],[12,"roads","","Unsplit roads",0,null],[12,"traffic_signals","","Traffic signals to the direction they apply",0,null],[12,"osm_node_ids","","",0,null],[12,"simple_turn_restrictions","","(ID, restriction type, from way ID, via node ID, to way …",0,null],[12,"complicated_turn_restrictions","","(relation ID, from way ID, via way ID, to way ID)",0,null],[12,"amenities","","(location, amenity)",0,null],[5,"extract_osm","","",null,[[["options",3],["rawmap",3],["timer",3]],["osmextract",3]]],[5,"is_road","","",null,[[["options",3],["tags",3]],["bool",15]]],[5,"is_bldg","","",null,[[["tags",3]],["bool",15]]],[5,"get_bldg_amenities","","",null,[[["tags",3]],[["amenity",3],["vec",3]]]],[5,"get_area_type","","",null,[[["tags",3]],[["areatype",4],["option",4]]]],[5,"find_parking_aisles","","",null,[[["rawmap",3],["vec",3]]]],[5,"service_road_crosses_parking_lot","","",null,[[["usize",15],["vec",3],["rawroad",3],["rawmap",3]],["bool",15]]],[0,"osm_geom","convert_osm","Utilities for extracting concrete geometry from OSM …",null,null],[5,"get_multipolygon_members","convert_osm::osm_geom","",null,[[["relation",3],["relationid",3],["document",3]],["vec",3]]],[5,"glue_multipolygon","","Take a bunch of partial PolyLines and attempt to glue …",null,[[["vec",3],["relationid",3],["ring",3],["option",4]],[["polygon",3],["vec",3]]]],[5,"glue_to_boundary","","",null,[[["polyline",3],["ring",3]],[["option",4],["polygon",3]]]],[5,"multipoly_geometry","","",null,[[["relation",3],["relationid",3],["document",3]],[["result",6],["polygon",3]]]],[0,"parking","convert_osm","",null,null],[17,"DIRECTED_ROAD_THICKNESS","convert_osm::parking","",null,null],[5,"apply_parking","","",null,[[["options",3],["rawmap",3],["timer",3]]]],[5,"use_parking_hints","","",null,[[["rawmap",3],["string",3],["timer",3]]]],[5,"use_offstreet_parking","","",null,[[["rawmap",3],["string",3],["timer",3]]]],[5,"apply_private_offstreet_parking","","",null,[[["privateoffstreetparking",4],["rawmap",3]]]],[0,"reader","convert_osm","",null,null],[3,"Document","convert_osm::reader","",null,null],[12,"gps_bounds","","",1,null],[12,"nodes","","",1,null],[12,"ways","","",1,null],[12,"relations","","",1,null],[3,"Node","","",null,null],[12,"pt","","",2,null],[12,"tags","","",2,null],[3,"Way","","",null,null],[12,"nodes","","",3,null],[12,"pts","","",3,null],[12,"tags","","",3,null],[3,"Relation","","",null,null],[12,"tags","","",4,null],[12,"members","","Role, member",4,null],[5,"read","","",null,[[["gpsbounds",3],["timer",3],["str",15]],[["document",3],["result",6]]]],[5,"read_tags","","",null,[[["node",3]],["tags",3]]],[5,"scrape_bounds","","",null,[[["document",3]],["gpsbounds",3]]],[0,"snappy","convert_osm","",null,null],[5,"snap_cycleways","convert_osm::snappy","Attempt to snap separately mapped cycleways to main …",null,[[["timer",3],["rawmap",3]]]],[5,"dump_output","","",null,[[["multimap",3],["btreemap",3],["hashmap",3],["wayid",3],["rawmap",3]]]],[5,"v1","","",null,[[["hashmap",3],["btreemap",3],["rawmap",3]],[["wayid",3],["multimap",3]]]],[0,"split_ways","convert_osm","",null,null],[5,"split_up_roads","convert_osm::split_ways","Returns amenities and a mapping of all points to split …",null,[[["rawmap",3],["osmextract",3],["timer",3]]]],[5,"dedupe_angles","","",null,[[["pt2d",3],["vec",3]],[["pt2d",3],["vec",3]]]],[5,"should_collapse_roundabout","","Many \\\"roundabouts\\\" like …",null,[[["rawroad",3]],["bool",15]]],[0,"transit","convert_osm","",null,null],[5,"extract_route","convert_osm::transit","",null,[[["document",3],["relationid",3],["polygon",3],["relation",3]],[["option",4],["rawbusroute",3]]]],[5,"glue_route","","",null,[[["vec",3],["document",3],["wayid",3]],[["vec",3],["result",6]]]],[5,"snap_bus_stops","","",null,[[["rawbusroute",3],["rawmap",3],["hashmap",3]],[["result",6],["rawbusroute",3]]]],[3,"Options","convert_osm","",null,null],[12,"osm_input","","",5,null],[12,"name","","",5,null],[12,"clip","","The path to an osmosis boundary polygon. Highly …",5,null],[12,"map_config","","",5,null],[12,"onstreet_parking","","",5,null],[12,"public_offstreet_parking","","",5,null],[12,"private_offstreet_parking","","",5,null],[12,"include_railroads","","OSM railway=rail will be included as light rail if so. …",5,null],[12,"extra_buildings","","If provided, read polygons from this GeoJSON file and add …",5,null],[4,"OnstreetParking","","What roads will have on-street parking lanes? Data from …",null,null],[13,"JustOSM","","If not tagged, there won\'t be parking.",6,null],[13,"Blockface","","If OSM data is missing, then try to match data from …",6,null],[13,"SomeAdditionalWhereNoData","","If OSM data is missing, then infer parking lanes on some …",6,null],[12,"pct","convert_osm::OnstreetParking","[0, 100]",7,null],[4,"PublicOffstreetParking","convert_osm","How many spots are available in public parking garages?",null,null],[13,"None","","",8,null],[13,"GIS","","Pull data from …",8,null],[4,"PrivateOffstreetParking","","If a building doesn\'t have anything from …",null,null],[13,"FixedPerBldg","","",9,null],[5,"convert","","",null,[[["timer",3],["options",3]],["rawmap",3]]],[5,"use_amenities","","",null,[[["vec",3],["rawmap",3],["timer",3]]]],[5,"add_extra_buildings","","",null,[[["rawmap",3],["str",15]],["result",6]]],[11,"from","convert_osm::extract","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","convert_osm::reader","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","convert_osm","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"clone","","",6,[[],["onstreetparking",4]]],[11,"clone","","",8,[[],["publicoffstreetparking",4]]],[11,"clone","","",9,[[],["privateoffstreetparking",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]]],"p":[[3,"OsmExtract"],[3,"Document"],[3,"Node"],[3,"Way"],[3,"Relation"],[3,"Options"],[4,"OnstreetParking"],[13,"SomeAdditionalWhereNoData"],[4,"PublicOffstreetParking"],[4,"PrivateOffstreetParking"]]},\
"dump_map":{"doc":"","i":[[5,"main","dump_map","",null,[[]]]],"p":[]},\
"dump_scenario":{"doc":"","i":[[5,"main","dump_scenario","",null,[[]]]],"p":[]},\
"extract_cities":{"doc":"Extracts all cities from a large .osm file.","i":[[5,"main","extract_cities","",null,[[]]]],"p":[]},\
"fifteen_min":{"doc":"","i":[[0,"find_home","fifteen_min","",null,null],[3,"FindHome","fifteen_min::find_home","Ask what types of amenities are necessary to be within a …",null,null],[12,"options","","",0,null],[11,"new","","",0,[[["eventctx",3],["options",4]],[["box",3],["state",8]]]],[5,"score_houses","","For every house in the map, return the percent of …",null,[[["vec",3],["simpleapp",3],["amenitytype",4],["timer",3],["options",4]],[["percent",3],["hashmap",3],["buildingid",3]]]],[3,"Results","","",null,null],[12,"draw_houses","","",1,null],[11,"new","","",1,[[["vec",3],["simpleapp",3],["eventctx",3],["percent",3],["hashmap",3],["buildingid",3],["amenitytype",4]],[["box",3],["state",8]]]],[0,"isochrone","fifteen_min","",null,null],[3,"Isochrone","fifteen_min::isochrone","Represents the area reachable from a single building.",null,null],[12,"start","","The center of the isochrone",2,null],[12,"options","","The options used to generate this isochrone",2,null],[12,"draw","","Colored polygon contours, uploaded to the GPU and ready …",2,null],[12,"time_to_reach_building","","How far away is each building from the start?",2,null],[12,"amenities_reachable","","Per category of amenity, what buildings have that?",2,null],[12,"population","","How many people live in the returned area, according to …",2,null],[12,"onstreet_parking_spots","","How many sreet parking spots are on the same road as any …",2,null],[4,"Options","","The constraints on how we\'re moving.",null,null],[13,"Walking","","",3,null],[13,"Biking","","",3,null],[11,"time_to_reach_building","","",3,[[["map",3],["buildingid",3]],[["duration",3],["hashmap",3],["buildingid",3]]]],[11,"new","","",2,[[["simpleapp",3],["eventctx",3],["buildingid",3],["options",4]],["isochrone",3]]],[11,"path_to","","",2,[[["map",3],["buildingid",3]],[["option",4],["path",3]]]],[11,"draw_isochrone","","",2,[[["simpleapp",3]],["geombatch",3]]],[0,"viewer","fifteen_min","This is a tool to experiment with the concept of …",null,null],[3,"Viewer","fifteen_min::viewer","This is the UI state for exploring the isochrone/walkshed …",null,null],[12,"panel","","",4,null],[12,"highlight_start","","",4,null],[12,"isochrone","","",4,null],[12,"hovering_on_bldg","","",4,null],[12,"hovering_on_category","","",4,null],[12,"draw_unwalkable_roads","","",4,null],[11,"random_start","","Start with a random building",4,[[["simpleapp",3],["eventctx",3]],[["box",3],["state",8]]]],[11,"new","","",4,[[["simpleapp",3],["eventctx",3],["buildingid",3]],[["box",3],["state",8]]]],[5,"options_to_controls","","",null,[[["options",4],["eventctx",3]],["widget",3]]],[5,"options_from_controls","","",null,[[["panel",3]],["options",4]]],[5,"draw_star","","",null,[[["building",3],["eventctx",3]],["geombatch",3]]],[5,"build_panel","","",null,[[["building",3],["simpleapp",3],["eventctx",3],["isochrone",3]],["panel",3]]],[3,"HoverOnBuilding","","",null,null],[12,"tooltip","","",5,null],[12,"drawn_route","","",5,null],[6,"HoverKey","","(building, scale factor)",null,null],[11,"key","","",5,[[["eventctx",3],["simpleapp",3]],["option",4]]],[11,"value","","",5,[[["simpleapp",3],["eventctx",3],["isochrone",3]],["hoveronbuilding",3]]],[3,"ExploreAmenities","","",null,null],[12,"table","","",6,null],[12,"panel","","",6,null],[12,"draw","","",6,null],[3,"Entry","","",null,null],[12,"bldg","","",7,null],[12,"amenity_idx","","",7,null],[12,"name","","",7,null],[12,"amenity_type","","",7,null],[12,"address","","",7,null],[12,"duration_away","","",7,null],[11,"new","","",6,[[["amenitytype",4],["simpleapp",3],["eventctx",3],["isochrone",3]],[["box",3],["state",8]]]],[5,"draw_unwalkable_roads","","",null,[[["simpleapp",3],["eventctx",3],["options",4]],["drawable",3]]],[6,"App","fifteen_min","",null,null],[5,"main","","",null,[[]]],[5,"run","","",null,[[["settings",3]]]],[11,"from","fifteen_min::find_home","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any","","",0,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_any","","",1,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",1,[[]]],[11,"from","fifteen_min::isochrone","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_any","","",2,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any_arc","","",2,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_any","","",3,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"into_any_arc","","",3,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",3,[[]]],[11,"from","fifteen_min::viewer","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_any","","",4,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_any","","",5,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"into_any_arc","","",5,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_any","","",6,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_any","","",7,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"into_any_arc","","",7,[[["arc",3]],[["arc",3],["any",8]]]],[11,"vzip","","",7,[[]]],[11,"clone","fifteen_min::isochrone","",3,[[],["options",4]]],[11,"event","fifteen_min::viewer","",4,[[["eventctx",3],["simpleapp",3]],[["transition",4],["simpleapp",3]]]],[11,"draw","","",4,[[["simpleapp",3],["gfxctx",3]]]],[11,"event","","",6,[[["eventctx",3],["simpleapp",3]],[["transition",4],["simpleapp",3]]]],[11,"draw","","",6,[[["simpleapp",3],["gfxctx",3]]]],[11,"on_click","fifteen_min::find_home","",0,[[["simpleapp",3],["eventctx",3],["panel",3],["str",15]],[["transition",4],["simpleapp",3]]]],[11,"on_click","","",1,[[["simpleapp",3],["eventctx",3],["panel",3],["str",15]],[["transition",4],["simpleapp",3]]]],[11,"other_event","","",1,[[["eventctx",3],["simpleapp",3]],[["transition",4],["simpleapp",3]]]],[11,"draw","","",1,[[["simpleapp",3],["gfxctx",3]]]]],"p":[[3,"FindHome"],[3,"Results"],[3,"Isochrone"],[4,"Options"],[3,"Viewer"],[3,"HoverOnBuilding"],[3,"ExploreAmenities"],[3,"Entry"]]},\
"game":{"doc":"","i":[[0,"app","game","",null,null],[6,"Transition","game::app","",null,null],[3,"App","","The top-level data that lasts through the entire game, no …",null,null],[12,"primary","","",0,null],[12,"cs","","",0,null],[12,"opts","","",0,null],[12,"per_obj","","",0,null],[12,"session","","Static data that lasts the entire session. Use sparingly.",0,null],[11,"has_prebaked","","",0,[[],["option",4]]],[11,"prebaked","","",0,[[],["analytics",3]]],[11,"set_prebaked","","",0,[[["option",4]]]],[11,"draw","","",0,[[["showobject",8],["gfxctx",3],["drawoptions",3]]]],[11,"recalculate_current_selection","","Assumes some defaults.",0,[[["eventctx",3]]]],[11,"mouseover_unzoomed_roads_and_intersections","","",0,[[["eventctx",3]],[["id",4],["option",4]]]],[11,"mouseover_unzoomed_intersections","","",0,[[["eventctx",3]],[["id",4],["option",4]]]],[11,"mouseover_unzoomed_buildings","","",0,[[["eventctx",3]],[["id",4],["option",4]]]],[11,"mouseover_unzoomed_everything","","",0,[[["eventctx",3]],[["id",4],["option",4]]]],[11,"mouseover_debug_mode","","",0,[[["eventctx",3],["showobject",8]],[["id",4],["option",4]]]],[11,"calculate_current_selection","","",0,[[["eventctx",3],["bool",15],["showobject",8]],[["id",4],["option",4]]]],[11,"get_renderables_back_to_front","","",0,[[["agentcache",3],["bounds",3],["showobject",8],["prerender",3]],[["vec",3],["renderable",8]]]],[11,"clear_everything","","Ensure the map edits are blank, reset the simulation, and …",0,[[["eventctx",3]]]],[11,"click_on_intersection","","If an intersection was clicked, return its ID.",0,[[["eventctx",3],["into",8],["string",3]],[["intersectionid",3],["option",4]]]],[11,"click_on_lane","","If a lane was clicked, return its ID.",0,[[["eventctx",3],["into",8],["string",3]],[["option",4],["laneid",3]]]],[3,"ShowLayers","","",null,null],[12,"show_buildings","","",1,null],[12,"show_parking_lots","","",1,null],[12,"show_intersections","","",1,null],[12,"show_lanes","","",1,null],[12,"show_areas","","",1,null],[12,"show_labels","","",1,null],[11,"new","","",1,[[],["showlayers",3]]],[8,"ShowObject","","",null,null],[10,"show","","",2,[[["id",4]],["bool",15]]],[10,"layers","","",2,[[],["showlayers",3]]],[3,"ShowEverything","","",null,null],[12,"layers","","",3,null],[11,"new","","",3,[[],["showeverything",3]]],[3,"Flags","","",null,null],[12,"sim_flags","","",4,null],[12,"live_map_edits","","If true, all map edits immediately apply to the live …",4,null],[12,"study_area","","Display an extra area with this name on the map. This …",4,null],[3,"PerMap","","All of the state that\'s bound to a specific map.",null,null],[12,"map","","",5,null],[12,"draw_map","","",5,null],[12,"sim","","",5,null],[12,"agents","","",5,null],[12,"current_selection","","",5,null],[12,"current_flags","","",5,null],[12,"last_warped_from","","",5,null],[12,"sim_cb","","",5,null],[12,"dirty_from_edits","","If we ever left edit mode and resumed without restarting …",5,null],[12,"has_modified_trips","","Any ScenarioModifiers in effect?",5,null],[12,"unedited_map","","Sometimes we need the map before any edits have been …",5,null],[12,"layer","","",5,null],[12,"suspended_sim","","Only filled out in edit mode. Stored here once to avoid …",5,null],[12,"prebaked","","Only exists in some gameplay modes. Must be carefully …",5,null],[12,"scenario","","The most recent Scenario loaded from a file. Don\'t depend …",5,null],[11,"map_loaded","","",5,[[["colorscheme",3],["map",3],["timer",3],["flags",3],["options",3],["eventctx",3],["sim",3]],["permap",3]]],[11,"init_camera_for_loaded_map","","",5,[[["eventctx",3],["bool",15]]]],[11,"clear_sim","","Returns whatever was there",5,[[],["sim",3]]],[11,"calculate_unedited_map","","If needed, makes sure the unedited_map is populated. …",5,[[["eventctx",3]],[["transition",4],["option",4]]]],[11,"canonical_point","","",5,[[["id",4]],[["option",4],["pt2d",3]]]],[3,"SessionState","","",null,null],[12,"tutorial","","",6,null],[12,"high_scores","","",6,null],[12,"info_panel_tab","","",6,null],[11,"empty","","",6,[[],["sessionstate",3]]],[3,"PerObjectActions","","",null,null],[12,"click_action","","",7,null],[11,"new","","",7,[[],["perobjectactions",3]]],[11,"reset","","",7,[[]]],[11,"left_click","","",7,[[["eventctx",3],["into",8],["string",3]],["bool",15]]],[3,"FindDelayedIntersections","","",null,null],[12,"halt_limit","","",8,null],[12,"report_limit","","",8,null],[12,"currently_delayed","","",8,null],[5,"add_study_area","","Load an extra GeoJSON file, and add the area to the map …",null,[[["map",3],["str",15]],["result",6]]],[0,"challenges","game","",null,null],[0,"cutscene","game::challenges","",null,null],[3,"CutsceneBuilder","game::challenges::cutscene","",null,null],[12,"name","","",9,null],[12,"scenes","","",9,null],[4,"Layout","","",null,null],[13,"PlayerSpeaking","","",10,null],[13,"BossSpeaking","","",10,null],[13,"Extra","","",10,null],[3,"Scene","","",null,null],[12,"layout","","",11,null],[12,"msg","","",11,null],[11,"new","","",9,[[["str",15]],["cutscenebuilder",3]]],[11,"fg_color","","",9,[[],["color",3]]],[11,"player","","",9,[[["into",8],["string",3]],["cutscenebuilder",3]]],[11,"boss","","",9,[[["into",8],["string",3]],["cutscenebuilder",3]]],[11,"extra","","",9,[[["f64",15],["into",8],["str",15],["string",3]],["cutscenebuilder",3]]],[11,"build","","",9,[[["eventctx",3],["fn",8],["box",3]],[["state",8],["box",3]]]],[3,"CutscenePlayer","","",null,null],[12,"name","","",12,null],[12,"scenes","","",12,null],[12,"idx","","",12,null],[12,"panel","","",12,null],[12,"make_task","","",12,null],[5,"make_panel","","",null,[[["vec",3],["usize",15],["eventctx",3],["box",3],["str",15]],["panel",3]]],[3,"FYI","","",null,null],[12,"panel","","",13,null],[11,"new","","",13,[[["eventctx",3],["widget",3],["color",3]],[["state",8],["box",3]]]],[0,"prebake","game::challenges","",null,null],[5,"prebake_all","game::challenges::prebake","Simulate a curated list of scenarios to completion, and …",null,[[]]],[5,"prebake","","",null,[[["timer",3],["scenario",3],["map",3],["option",4],["simoptions",3]]]],[3,"Challenge","game::challenges","",null,null],[12,"title","","",14,null],[12,"description","","",14,null],[12,"alias","","",14,null],[12,"gameplay","","",14,null],[12,"cutscene","","",14,null],[3,"HighScore","","",null,null],[12,"goal","","",15,null],[12,"score","","",15,null],[12,"edits_name","","",15,null],[11,"record","","",15,[[["app",3],["gameplaymode",4]]]],[11,"all","","",14,[[],[["string",3],["vec",3],["btreemap",3]]]],[11,"find","","",14,[[["gameplaymode",4]]]],[3,"ChallengesPicker","","",null,null],[12,"panel","","",16,null],[12,"links","","",16,null],[12,"challenge","","",16,null],[11,"new","","",16,[[["eventctx",3],["app",3]],[["state",8],["box",3]]]],[11,"make","","",16,[[["eventctx",3],["app",3],["option",4]],[["state",8],["box",3]]]],[0,"common","game","",null,null],[0,"warp","game::common","",null,null],[17,"WARP_TO_CAM_ZOOM","game::common::warp","",null,null],[3,"Warping","","",null,null],[12,"warper","","",17,null],[12,"id","","",17,null],[11,"new","","",17,[[["f64",15],["eventctx",3],["option",4],["option",4],["permap",3],["id",4],["pt2d",3]],[["state",8],["box",3]]]],[3,"DebugWarp","","",null,null],[12,"panel","","",18,null],[11,"new","","",18,[[["eventctx",3]],[["state",8],["box",3]]]],[5,"warp_to_id","","",null,[[["eventctx",3],["app",3],["str",15]],[["transition",4],["app",3]]]],[5,"inner_warp_to_id","","",null,[[["eventctx",3],["app",3],["str",15]],[["transition",4],["option",4]]]],[3,"CommonState","game::common","",null,null],[12,"info_panel","","",19,null],[12,"cached_actions","","",19,null],[11,"new","","",19,[[],["commonstate",3]]],[11,"event","","",19,[[["eventctx",3],["app",3],["contextualactions",8]],[["transition",4],["option",4]]]],[11,"draw","","",19,[[["app",3],["gfxctx",3]]]],[11,"osd_for","","",19,[[["app",3],["id",4]],["text",3]]],[11,"draw_osd","","",19,[[["app",3],["gfxctx",3]]]],[11,"draw_custom_osd","","",19,[[["app",3],["gfxctx",3],["text",3]]]],[11,"launch_info_panel","","",19,[[["app",3],["tab",4],["eventctx",3],["contextualactions",8]]]],[11,"info_panel_open","","",19,[[["app",3]],[["id",4],["option",4]]]],[5,"tool_panel","","",null,[[["eventctx",3]],["panel",3]]],[5,"list_names","","",null,[[["fn",8],["text",3],["string",3],["btreeset",3]]]],[5,"cmp_duration_shorter","","",null,[[["app",3],["duration",3]],[["textspan",3],["vec",3]]]],[5,"color_for_mode","","",null,[[["app",3],["tripmode",4]],["color",3]]],[5,"color_for_agent_type","","",null,[[["app",3],["agenttype",4]],["color",3]]],[5,"color_for_trip_phase","","",null,[[["app",3],["tripphasetype",4]],["color",3]]],[5,"intersections_from_roads","","",null,[[["btreeset",3],["map",3]],[["intersectionid",3],["btreeset",3]]]],[5,"checkbox_per_mode","","",null,[[["eventctx",3],["app",3],["btreeset",3]],["widget",3]]],[5,"jump_to_time_upon_startup","","If you want a simulation to start after midnight, pass …",null,[[["duration",3]],[["fnonce",8],["box",3]]]],[0,"debug","game","",null,null],[0,"blocked_by","game::debug","",null,null],[3,"Viewer","game::debug::blocked_by","Visualize the graph of what agents are blocked by others.",null,null],[12,"panel","","",20,null],[12,"graph","","",20,null],[12,"agent_positions","","",20,null],[12,"arrows","","",20,null],[12,"root_cause","","",20,null],[11,"new","","",20,[[["eventctx",3],["app",3]],[["state",8],["box",3]]]],[11,"arrow_for","","",20,[[["app",3],["agentid",4]],["option",4]]],[11,"trace_root_cause","","Figure out why some agent is blocked. Draws an arrow for …",20,[[["app",3],["agentid",4]]]],[11,"find_worst_problems","","Trace the root cause for everyone, find the most common …",20,[[["app",3],["eventctx",3]]]],[11,"simple_root_cause","","",20,[[["agentid",4]],["delaycause",4]]],[0,"floodfill","game::debug","",null,null],[3,"Floodfiller","game::debug::floodfill","",null,null],[12,"panel","","",21,null],[12,"unzoomed","","",21,null],[12,"zoomed","","",21,null],[12,"source","","",21,null],[11,"floodfill","","",21,[[["eventctx",3],["app",3],["laneid",3]],[["state",8],["box",3]]]],[11,"scc","","",21,[[["eventctx",3],["app",3],["laneid",3]],[["state",8],["box",3]]]],[11,"new","","",21,[[["app",3],["pathconstraints",4],["eventctx",3],["source",4]],[["state",8],["box",3]]]],[4,"Source","","",null,null],[13,"Floodfill","","",22,null],[13,"SCC","","",22,null],[11,"calculate","","",22,[[["map",3],["pathconstraints",4]]]],[0,"objects","game::debug","",null,null],[3,"ObjectDebugger","game::debug::objects","",null,null],[11,"draw","","",23,[[["app",3],["gfxctx",3]]]],[11,"dump_debug","","",23,[[["id",4],["map",3],["sim",3]]]],[0,"path_counter","game::debug","",null,null],[3,"PathCounter","game::debug::path_counter","A state to count the number of trips that will cross …",null,null],[12,"panel","","",24,null],[12,"unzoomed","","",24,null],[12,"zoomed","","",24,null],[12,"cnt","","",24,null],[12,"tooltip","","",24,null],[11,"demand_across_intersection","","",24,[[["eventctx",3],["app",3],["intersectionid",3]],[["state",8],["box",3]]]],[0,"polygons","game::debug","",null,null],[3,"PolygonDebugger","game::debug::polygons","",null,null],[12,"panel","","",25,null],[12,"noun","","",25,null],[12,"items","","",25,null],[12,"idx","","",25,null],[12,"center","","",25,null],[4,"Item","","",null,null],[13,"Point","","",26,null],[13,"Triangle","","",26,null],[13,"Polygon","","",26,null],[11,"new","","",25,[[["item",4],["pt2d",3],["option",4],["eventctx",3],["vec",3],["str",15]],[["state",8],["box",3]]]],[0,"routes","game::debug","",null,null],[3,"RouteExplorer","game::debug::routes","See how live-tuned routing parameters affect a single …",null,null],[12,"panel","","",27,null],[12,"start","","",27,null],[12,"goal","","",27,null],[11,"new","","",27,[[["eventctx",3],["app",3],["tripendpoint",4]],[["state",8],["box",3]]]],[11,"recalc_paths","","",27,[[["eventctx",3],["app",3]]]],[5,"params_to_controls","","",null,[[["eventctx",3],["routingparams",3],["tripmode",4]],["widget",3]]],[5,"controls_to_params","","",null,[[["panel",3]]]],[3,"AllRoutesExplorer","","See how live-tuned routing parameters affect all requests …",null,null],[12,"panel","","",28,null],[12,"requests","","",28,null],[12,"baseline_counts","","",28,null],[12,"current_counts","","",28,null],[12,"unzoomed","","",28,null],[12,"zoomed","","",28,null],[12,"tooltip","","",28,null],[11,"new","","",28,[[["eventctx",3],["app",3]],[["state",8],["box",3]]]],[5,"calculate_demand","","",null,[[["app",3],["timer",3],["vec",3]],[["counter",3],["roadid",3]]]],[5,"cmp_count","","",null,[[["usize",15]],[["textspan",3],["vec",3]]]],[3,"PathCostDebugger","","Evaluate why an alternative path wasn\'t chosen, by …",null,null],[12,"draw_path","","",29,null],[12,"costs","","",29,null],[12,"tooltip","","",29,null],[12,"panel","","",29,null],[11,"maybe_new","","",29,[[["app",3],["pathrequest",3],["eventctx",3],["polygon",3]],[["option",4],["box",3]]]],[0,"shared_row","game::debug","",null,null],[5,"export","game::debug::shared_row","Exports to https://github.com/d-wasserman/shared-row/, …",null,[[["roadid",3],["intersectionid",3],["map",3],["vec",3],["vec",3]],["string",3]]],[5,"road","","",null,[[["roadid",3],["map",3]],["feature",3]]],[5,"lane","","",null,[[["lane",3]],[["map",3],["option",4]]]],[5,"intersection","","",null,[[["intersectionid",3],["map",3]],["feature",3]]],[0,"streetmix","game::debug","",null,null],[5,"export","game::debug::streetmix","Exports a single road to Streetmix\'s format, returns the …",null,[[["roadid",3],["map",3]],["string",3]]],[5,"road","","",null,[[["roadid",3],["map",3]],[["map",3],["string",3],["value",4]]]],[5,"lane","","",null,[[["lane",3],["direction",4]],[["map",3],["string",3],["value",4]]]],[0,"uber_turns","game::debug","",null,null],[3,"UberTurnPicker","game::debug::uber_turns","",null,null],[12,"members","","",30,null],[11,"new","","",30,[[["eventctx",3],["app",3],["intersectionid",3]],[["state",8],["box",3]]]],[3,"UberTurnViewer","","",null,null],[12,"draw","","",31,null],[12,"ic","","",31,null],[12,"idx","","",31,null],[12,"legal_turns","","",31,null],[11,"new","","",31,[[["usize",15],["intersectionid",3],["app",3],["btreeset",3],["eventctx",3],["bool",15]],[["state",8],["box",3]]]],[3,"DebugMode","game::debug","",null,null],[12,"panel","","",32,null],[12,"common","","",32,null],[12,"tool_panel","","",32,null],[12,"objects","","",32,null],[12,"hidden","","",32,null],[12,"layers","","",32,null],[12,"search_results","","",32,null],[12,"all_routes","","",32,null],[12,"highlighted_agents","","",32,null],[11,"new","","",32,[[["eventctx",3]],[["state",8],["box",3]]]],[11,"reset_info","","",32,[[["eventctx",3]]]],[5,"search_osm","","",null,[[["eventctx",3],["string",3],["app",3]],[["transition",4],["app",3]]]],[3,"SearchResults","","",null,null],[12,"query","","",33,null],[12,"num_matches","","",33,null],[12,"draw","","",33,null],[5,"calc_all_routes","","",null,[[["eventctx",3],["app",3]]]],[3,"Actions","","",null,null],[5,"find_bad_signals","","",null,[[["app",3]]]],[5,"find_degenerate_roads","","",null,[[["app",3]]]],[5,"diff_tags","","",null,[[["tags",3]]]],[5,"find_large_intersections","","",null,[[["app",3]]]],[3,"ScreenshotTest","","",null,null],[12,"todo_maps","","",34,null],[12,"screenshot_done","","",34,null],[11,"new","","",34,[[["app",3],["mapname",3],["eventctx",3],["vec",3]],[["state",8],["box",3]]]],[5,"export_for_leaflet","","",null,[[["eventctx",3],["app",3]]]],[5,"draw_banned_turns","","",null,[[["eventctx",3],["app",3]],["drawable",3]]],[0,"devtools","game","This directory contains extra/experimental tools not …",null,null],[0,"collisions","game::devtools","",null,null],[3,"CollisionsViewer","game::devtools::collisions","",null,null],[12,"data","","",35,null],[12,"dataviz","","",35,null],[12,"tooltips","","",35,null],[12,"panel","","",35,null],[11,"new","","",35,[[["eventctx",3],["app",3]],[["state",8],["box",3]]]],[3,"Filters","","",null,null],[12,"show_individual","","",36,null],[12,"time_range","","",36,null],[12,"severity","","",36,null],[11,"new","","",36,[[],["filters",3]]],[11,"apply","","Returns the indices of all matching collisions",36,[[["collisiondataset",3]],[["usize",15],["vec",3]]]],[11,"to_controls","","",36,[[["eventctx",3]],["widget",3]]],[11,"from_controls","","",36,[[["panel",3]],["filters",3]]],[4,"Dataviz","","",null,null],[13,"Individual","","",37,null],[12,"draw_all_circles","game::devtools::collisions::Dataviz","",38,null],[13,"Aggregated","game::devtools::collisions","",37,null],[12,"unzoomed","game::devtools::collisions::Dataviz","",39,null],[12,"zoomed","","",39,null],[11,"aggregated","game::devtools::collisions","",37,[[["app",3],["usize",15],["collisiondataset",3],["eventctx",3],["vec",3]]]],[11,"individual","","",37,[[["app",3],["usize",15],["collisiondataset",3],["eventctx",3],["vec",3]]]],[3,"MapspaceTooltips","","",null,null],[12,"tooltips","","",40,null],[12,"hover","","",40,null],[12,"selected","","",40,null],[11,"new","","",40,[[["fn",8],["box",3],["vec",3]],["mapspacetooltips",3]]],[11,"event","","",40,[[["eventctx",3]]]],[11,"draw","","",40,[[["gfxctx",3]]]],[0,"destinations","game::devtools","",null,null],[3,"PopularDestinations","game::devtools::destinations","",null,null],[12,"per_bldg","","",41,null],[12,"panel","","",41,null],[12,"draw","","",41,null],[11,"new","","",41,[[["eventctx",3],["app",3],["scenario",3]],[["state",8],["box",3]]]],[11,"make","","",41,[[["app",3],["counter",3],["option",4],["eventctx",3],["heatmapoptions",3],["buildingid",3]],[["state",8],["box",3]]]],[0,"kml","game::devtools","",null,null],[3,"ViewKML","game::devtools::kml","",null,null],[12,"panel","","",42,null],[12,"objects","","",42,null],[12,"draw","","",42,null],[12,"selected","","",42,null],[12,"quadtree","","",42,null],[12,"draw_query","","",42,null],[3,"Object","","",null,null],[12,"polygon","","",43,null],[12,"color","","",43,null],[12,"attribs","","",43,null],[12,"osm_bldg","","",43,null],[17,"RADIUS","","",null,null],[17,"THICKNESS","","",null,null],[11,"new","","",42,[[["app",3],["eventctx",3],["string",3],["option",4]],[["state",8],["box",3]]]],[5,"load_objects","","Loads and clips objects to the current map. Also returns …",null,[[["app",3],["timer",3],["bool",15],["string",3],["option",4]]]],[5,"make_object","","",null,[[["usize",15],["vec",3],["colorscheme",3],["str",15],["hashmap",3],["string",3],["btreemap",3],["pt2d",3]],["object",3]]],[5,"make_query","","",null,[[["app",3],["str",15],["vec",3]]]],[0,"polygon","game::devtools","",null,null],[17,"POINT_RADIUS","game::devtools::polygon","",null,null],[17,"POINT_COLOR","","",null,null],[17,"POLYGON_COLOR","","",null,null],[17,"POINT_TO_MOVE","","",null,null],[17,"LAST_PLACED_POINT","","",null,null],[3,"PolygonEditor","","",null,null],[12,"panel","","",44,null],[12,"name","","",44,null],[12,"points","","",44,null],[12,"mouseover_pt","","",44,null],[12,"moving_pt","","",44,null],[11,"new","","",44,[[["lonlat",3],["eventctx",3],["string",3],["vec",3]],[["state",8],["box",3]]]],[0,"scenario","game::devtools","",null,null],[3,"ScenarioManager","game::devtools::scenario","",null,null],[12,"panel","","",45,null],[12,"scenario","","",45,null],[12,"unzoomed","","",45,null],[12,"zoomed","","",45,null],[11,"new","","",45,[[["eventctx",3],["scenario",3],["app",3]],[["state",8],["box",3]]]],[0,"story","game::devtools","",null,null],[3,"StoryMapEditor","game::devtools::story","",null,null],[12,"panel","","",46,null],[12,"story","","",46,null],[12,"mode","","",46,null],[12,"dirty","","",46,null],[12,"hovering","","",46,null],[4,"Mode","","",null,null],[13,"View","","",47,null],[13,"PlacingMarker","","",47,null],[13,"Dragging","","",47,null],[13,"Editing","","",47,null],[13,"Freehand","","",47,null],[11,"new","","",46,[[["eventctx",3]],[["state",8],["box",3]]]],[11,"redo_panel","","",46,[[["eventctx",3]]]],[5,"make_panel","","",null,[[["storymap",3],["eventctx",3],["bool",15],["mode",4]],["panel",3]]],[3,"RecordedStoryMap","","",null,null],[12,"name","","",48,null],[12,"markers","","",48,null],[3,"StoryMap","","",null,null],[12,"name","","",49,null],[12,"markers","","",49,null],[3,"Marker","","",null,null],[12,"pts","","",50,null],[12,"event","","",50,null],[12,"hitbox","","",50,null],[12,"draw","","",50,null],[11,"new","","",49,[[],["storymap",3]]],[11,"load","","",49,[[["eventctx",3],["app",3],["recordedstorymap",3]],[["storymap",3],["option",4]]]],[11,"save","","",49,[[["app",3]]]],[11,"new","","",50,[[["pt2d",3],["eventctx",3],["string",3],["vec",3]],["marker",3]]],[11,"draw_hovered","","",50,[[["gfxctx",3]]]],[11,"make_editor","","",50,[[["eventctx",3]],["panel",3]]],[3,"Lasso","","",null,null],[12,"pl","","",51,null],[11,"new","","",51,[[["pt2d",3]],["lasso",3]]],[11,"event","","",51,[[["eventctx",3]],[["option",4],["ring",3]]]],[11,"draw","","",51,[[["gfxctx",3]]]],[5,"simplify","","",null,[[["vec",3],["pt2d",3]],["ring",3]]],[3,"DevToolsMode","game::devtools","",null,null],[12,"panel","","",52,null],[11,"new","","",52,[[["eventctx",3],["app",3]],[["state",8],["box",3]]]],[0,"edit","game","",null,null],[0,"bulk","game::edit","",null,null],[3,"BulkSelect","game::edit::bulk","",null,null],[12,"panel","","",53,null],[12,"selector","","",53,null],[11,"new","","",53,[[["eventctx",3],["roadid",3],["app",3]],[["state",8],["box",3]]]],[5,"make_select_panel","","",null,[[["eventctx",3],["roadselector",3]],["panel",3]]],[3,"BulkEdit","","",null,null],[12,"panel","","",54,null],[12,"roads","","",54,null],[12,"preview","","",54,null],[11,"new","","",54,[[["app",3],["roadid",3],["drawable",3],["eventctx",3],["vec",3]],[["state",8],["box",3]]]],[5,"get_lt_transformations","","",null,[[["panel",3]],["vec",3]]],[5,"make_lt_switcher","","",null,[[["eventctx",3],["vec",3]],["widget",3]]],[5,"make_bulk_edits","","",null,[[["vec",3],["app",3],["vec",3],["eventctx",3],["option",4],["speed",3]],[["state",8],["box",3]]]],[0,"lanes","game::edit","",null,null],[3,"LaneEditor","game::edit::lanes","",null,null],[12,"l","","",55,null],[12,"mode","","",55,null],[11,"new","","",55,[[["app",3],["eventctx",3],["laneid",3],["gameplaymode",4]],[["state",8],["box",3]]]],[5,"reverse_lane","","",null,[[["laneid",3],["map",3]],["editcmd",4]]],[0,"routes","game::edit","",null,null],[3,"RouteEditor","game::edit::routes","",null,null],[12,"panel","","",56,null],[12,"route","","",56,null],[11,"new","","",56,[[["eventctx",3],["busrouteid",3],["app",3]],[["state",8],["box",3]]]],[0,"select","game::edit","",null,null],[3,"RoadSelector","game::edit::select","A tool for selecting multiple roads.",null,null],[12,"roads","","",57,null],[12,"intersections","","Intersections can\'t be selected directly. If all roads …",57,null],[12,"preview","","",57,null],[12,"mode","","",57,null],[12,"dragging","","",57,null],[4,"Mode","","",null,null],[13,"Pan","","No selecting, just normal click-and-drag controls.",58,null],[13,"Route","","The user is choosing two intersections, to select the …",58,null],[12,"i1","game::edit::select::Mode","",59,null],[12,"preview_path","","",59,null],[13,"Paint","game::edit::select","Click and drag to select roads",58,null],[13,"Erase","","Click and drag to unselect roads",58,null],[11,"new","","",57,[[["roadid",3],["btreeset",3],["app",3],["eventctx",3]],["roadselector",3]]],[11,"make_controls","","",57,[[["eventctx",3]],["widget",3]]],[11,"roads_changed","","",57,[[["eventctx",3],["app",3]]]],[11,"event","","",57,[[["app",3],["eventctx",3],["option",4],["str",15]],["bool",15]]],[11,"draw","","",57,[[["app",3],["bool",15],["gfxctx",3]]]],[0,"stop_signs","game::edit","",null,null],[3,"StopSignEditor","game::edit::stop_signs","",null,null],[12,"id","","",60,null],[12,"mode","","",60,null],[12,"geom","","",60,null],[12,"selected_sign","","",60,null],[11,"new","","",60,[[["intersectionid",3],["app",3],["eventctx",3],["gameplaymode",4]],[["state",8],["box",3]]]],[0,"traffic_signals","game::edit","",null,null],[0,"edits","game::edit::traffic_signals","",null,null],[3,"ChangeDuration","game::edit::traffic_signals::edits","",null,null],[12,"idx","","",61,null],[11,"new","","",61,[[["app",3],["controltrafficsignal",3],["usize",15],["eventctx",3]],[["state",8],["box",3]]]],[5,"edit_entire_signal","","",null,[[["app",3],["intersectionid",3],["eventctx",3],["gameplaymode",4],["bundleedits",3]],[["state",8],["box",3]]]],[0,"offsets","game::edit::traffic_signals","",null,null],[3,"ShowAbsolute","game::edit::traffic_signals::offsets","",null,null],[12,"members","","",62,null],[12,"labels","","",62,null],[11,"new","","",62,[[["app",3],["intersectionid",3],["btreeset",3],["eventctx",3]],[["state",8],["box",3]]]],[3,"ShowRelative","","",null,null],[12,"base","","",63,null],[12,"members","","",63,null],[12,"labels","","",63,null],[11,"new","","",63,[[["app",3],["intersectionid",3],["btreeset",3],["eventctx",3]],[["state",8],["box",3]]]],[3,"TuneRelative","","",null,null],[12,"i1","","",64,null],[12,"i2","","",64,null],[12,"members","","",64,null],[12,"labels","","",64,null],[11,"new","","",64,[[["app",3],["intersectionid",3],["btreeset",3],["eventctx",3]],[["state",8],["box",3]]]],[0,"picker","game::edit::traffic_signals","",null,null],[3,"SignalPicker","game::edit::traffic_signals::picker","",null,null],[12,"members","","",65,null],[12,"panel","","",65,null],[12,"mode","","",65,null],[11,"new","","",65,[[["intersectionid",3],["btreeset",3],["eventctx",3],["gameplaymode",4]],[["state",8],["box",3]]]],[5,"make_btn","","",null,[[["eventctx",3],["usize",15]],["widget",3]]],[0,"preview","game::edit::traffic_signals","",null,null],[3,"PreviewTrafficSignal","game::edit::traffic_signals::preview","",null,null],[12,"panel","","",66,null],[12,"time_panel","","",66,null],[11,"new","","",66,[[["eventctx",3],["app",3]],[["state",8],["box",3]]]],[5,"make_previewer","","",null,[[["app",3],["intersectionid",3],["btreeset",3],["usize",15],["eventctx",3]],[["state",8],["box",3]]]],[3,"TrafficSignalEditor","game::edit::traffic_signals","",null,null],[12,"side_panel","","",67,null],[12,"top_panel","","",67,null],[12,"mode","","",67,null],[12,"members","","",67,null],[12,"current_stage","","",67,null],[12,"movements","","",67,null],[12,"movement_selected","","",67,null],[12,"draw_current","","",67,null],[12,"command_stack","","",67,null],[12,"redo_stack","","",67,null],[12,"original","","",67,null],[12,"warn_changed","","",67,null],[12,"fade_irrelevant","","",67,null],[3,"BundleEdits","","",null,null],[12,"signals","","",68,null],[11,"new","","",67,[[["intersectionid",3],["app",3],["btreeset",3],["eventctx",3],["gameplaymode",4]],[["state",8],["box",3]]]],[11,"change_stage","","",67,[[["eventctx",3],["app",3],["usize",15]]]],[11,"add_new_edit","","",67,[[["usize",15],["app",3],["eventctx",3],["fn",8]]]],[11,"recalc_draw_current","","",67,[[["eventctx",3],["app",3]]]],[5,"make_top_panel","","",null,[[["app",3],["eventctx",3],["bool",15]],["panel",3]]],[5,"make_side_panel","","",null,[[["app",3],["btreeset",3],["usize",15],["eventctx",3]],["panel",3]]],[11,"apply","","",68,[[["app",3]]]],[11,"commit","","",68,[[["eventctx",3],["app",3]]]],[11,"get_current","","",68,[[["app",3],["btreeset",3]],["bundleedits",3]]],[11,"synchronize","","",68,[[["app",3],["btreeset",3]],["bundleedits",3]]],[5,"check_for_missing_turns","","",null,[[["app",3],["btreeset",3]],[["option",4],["bundleedits",3]]]],[5,"draw_multiple_signals","","",null,[[["app",3],["btreeset",3],["usize",15],["vec",3],["eventctx",3]],["widget",3]]],[5,"squish_polygons_together","","",null,[[["polygon",3],["vec",3]],["vec",3]]],[5,"fade_irrelevant","","",null,[[["app",3],["btreeset",3]],["geombatch",3]]],[0,"validate","game::edit","",null,null],[5,"check_sidewalk_connectivity","game::edit::validate","",null,[[["eventctx",3],["app",3],["editcmd",4]],[["option",4],["box",3]]]],[5,"check_blackholes","","",null,[[["eventctx",3],["app",3],["editcmd",4]],[["option",4],["box",3]]]],[5,"try_change_lt","","",null,[[["map",3],["lanetype",4],["eventctx",3],["laneid",3]],[["result",4],["editcmd",4],["box",3]]]],[0,"zones","game::edit","",null,null],[3,"ZoneEditor","game::edit::zones","",null,null],[12,"panel","","",69,null],[12,"selector","","",69,null],[12,"allow_through_traffic","","",69,null],[12,"unzoomed","","",69,null],[12,"zoomed","","",69,null],[12,"orig_members","","",69,null],[11,"new","","",69,[[["eventctx",3],["roadid",3],["app",3]],[["state",8],["box",3]]]],[5,"draw_zone","","",null,[[["eventctx",3],["app",3],["btreeset",3]]]],[5,"make_instructions","","",null,[[["eventctx",3],["btreeset",3]],["widget",3]]],[3,"EditMode","game::edit","",null,null],[12,"tool_panel","","",70,null],[12,"top_center","","",70,null],[12,"changelist","","",70,null],[12,"orig_edits","","",70,null],[12,"orig_dirty","","",70,null],[12,"mode","","",70,null],[12,"changelist_key","","",70,null],[12,"unzoomed","","",70,null],[12,"zoomed","","",70,null],[11,"new","","",70,[[["eventctx",3],["app",3],["gameplaymode",4]],[["state",8],["box",3]]]],[11,"quit","","",70,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[3,"SaveEdits","","",null,null],[12,"panel","","",71,null],[12,"current_name","","",71,null],[12,"cancel","","",71,null],[12,"on_success","","",71,null],[12,"reset","","",71,null],[11,"new","","",71,[[["app",3],["bool",15],["option",4],["box",3],["fn",8],["eventctx",3],["transition",4],["into",8],["string",3]],[["state",8],["box",3]]]],[11,"recalc_btn","","",71,[[["eventctx",3],["app",3]]]],[3,"LoadEdits","","",null,null],[12,"panel","","",72,null],[12,"mode","","",72,null],[11,"new","","",72,[[["eventctx",3],["app",3],["gameplaymode",4]],[["state",8],["box",3]]]],[5,"make_topcenter","","",null,[[["eventctx",3],["app",3]],["panel",3]]],[5,"apply_map_edits","","",null,[[["eventctx",3],["mapedits",3],["app",3]]]],[5,"can_edit_lane","","",null,[[["app",3],["laneid",3],["gameplaymode",4]],["bool",15]]],[5,"speed_limit_choices","","",null,[[["app",3]],[["choice",3],["vec",3]]]],[5,"maybe_edit_intersection","","",null,[[["intersectionid",3],["app",3],["gameplaymode",4],["eventctx",3]],[["option",4],["box",3]]]],[5,"make_changelist","","",null,[[["eventctx",3],["app",3]],["panel",3]]],[5,"cmd_to_id","","",null,[[["editcmd",4]],[["id",4],["option",4]]]],[3,"ConfirmDiscard","","",null,null],[12,"panel","","",73,null],[12,"discard","","",73,null],[11,"new","","",73,[[["eventctx",3],["box",3],["fn",8]],[["state",8],["box",3]]]],[0,"info","game","",null,null],[0,"building","game::info","",null,null],[5,"info","game::info::building","",null,[[["app",3],["eventctx",3],["details",3],["buildingid",3]],["widget",3]]],[5,"info_body","","",null,[[["app",3],["eventctx",3],["details",3],["buildingid",3]],["widget",3]]],[5,"people","","",null,[[["app",3],["eventctx",3],["details",3],["buildingid",3]],["widget",3]]],[5,"people_body","","",null,[[["app",3],["eventctx",3],["details",3],["buildingid",3]],["widget",3]]],[5,"header","","",null,[[["app",3],["eventctx",3],["tab",4],["details",3],["buildingid",3]],["widget",3]]],[5,"draw_occupants","","",null,[[["app",3],["option",4],["personid",3],["details",3],["buildingid",3]]]],[0,"bus","game::info","",null,null],[5,"stop","game::info::bus","",null,[[["app",3],["busstopid",3],["eventctx",3],["details",3]],["widget",3]]],[5,"stop_body","","",null,[[["app",3],["busstopid",3],["eventctx",3],["details",3]],["widget",3]]],[5,"bus_status","","",null,[[["app",3],["carid",3],["eventctx",3],["details",3]],["widget",3]]],[5,"bus_status_body","","",null,[[["app",3],["carid",3],["eventctx",3],["details",3]],["widget",3]]],[5,"bus_header","","",null,[[["app",3],["carid",3],["eventctx",3],["tab",4],["details",3]],["widget",3]]],[5,"route","","",null,[[["app",3],["eventctx",3],["busrouteid",3],["details",3]],["widget",3]]],[5,"route_body","","",null,[[["app",3],["eventctx",3],["busrouteid",3],["details",3]],["widget",3]]],[5,"describe_schedule","","",null,[[["busroute",3]],["text",3]]],[0,"debug","game::info","",null,null],[5,"area","game::info::debug","",null,[[["app",3],["eventctx",3],["areaid",3],["details",3]],["widget",3]]],[5,"area_body","","",null,[[["app",3],["eventctx",3],["areaid",3]],["widget",3]]],[0,"intersection","game::info","",null,null],[5,"info","game::info::intersection","",null,[[["app",3],["eventctx",3],["intersectionid",3],["details",3]],["widget",3]]],[5,"info_body","","",null,[[["app",3],["eventctx",3],["intersectionid",3]],["widget",3]]],[5,"traffic","","",null,[[["app",3],["intersectionid",3],["eventctx",3],["dataoptions",3],["details",3]],["widget",3]]],[5,"traffic_body","","",null,[[["app",3],["intersectionid",3],["eventctx",3],["dataoptions",3]],["widget",3]]],[5,"delay","","",null,[[["app",3],["intersectionid",3],["eventctx",3],["dataoptions",3],["details",3],["bool",15]],["widget",3]]],[5,"delay_body","","",null,[[["app",3],["intersectionid",3],["eventctx",3],["dataoptions",3],["bool",15]],["widget",3]]],[5,"current_demand","","",null,[[["app",3],["intersectionid",3],["eventctx",3],["details",3]],["widget",3]]],[5,"current_demand_body","","",null,[[["eventctx",3],["app",3],["intersectionid",3]],["widget",3]]],[5,"arrivals","","",null,[[["app",3],["intersectionid",3],["eventctx",3],["dataoptions",3],["details",3]],["widget",3]]],[5,"traffic_signal","","",null,[[["app",3],["intersectionid",3],["eventctx",3],["details",3]],["widget",3]]],[5,"traffic_signal_body","","",null,[[["eventctx",3],["app",3],["intersectionid",3]],["widget",3]]],[5,"delay_plot","","",null,[[["app",3],["eventctx",3],["intersectionid",3],["dataoptions",3],["bool",15]],["widget",3]]],[5,"header","","",null,[[["app",3],["eventctx",3],["intersectionid",3],["tab",4],["details",3]],["widget",3]]],[0,"lane","game::info","",null,null],[5,"info","game::info::lane","",null,[[["app",3],["eventctx",3],["laneid",3],["details",3]],["widget",3]]],[5,"info_body","","",null,[[["app",3],["eventctx",3],["laneid",3]],["widget",3]]],[5,"debug","","",null,[[["app",3],["eventctx",3],["laneid",3],["details",3]],["widget",3]]],[5,"debug_body","","",null,[[["app",3],["eventctx",3],["laneid",3]],["widget",3]]],[5,"traffic","","",null,[[["app",3],["eventctx",3],["laneid",3],["details",3],["dataoptions",3]],["widget",3]]],[5,"traffic_body","","",null,[[["app",3],["eventctx",3],["laneid",3],["dataoptions",3]],["widget",3]]],[5,"header","","",null,[[["app",3],["eventctx",3],["tab",4],["laneid",3],["details",3]],["widget",3]]],[0,"parking_lot","game::info","",null,null],[5,"info","game::info::parking_lot","",null,[[["app",3],["eventctx",3],["parkinglotid",3],["details",3]],["widget",3]]],[5,"info_body","","",null,[[["eventctx",3],["app",3],["parkinglotid",3]],["widget",3]]],[5,"header","","",null,[[["eventctx",3],["tab",4],["parkinglotid",3],["details",3]],["widget",3]]],[0,"person","game::info","",null,null],[5,"trips","game::info::person","",null,[[["app",3],["btreemap",3],["eventctx",3],["bool",15],["details",3],["personid",3]],["widget",3]]],[5,"trips_body","","",null,[[["app",3],["btreemap",3],["eventctx",3],["details",3],["personid",3]],["widget",3]]],[5,"bio","","",null,[[["app",3],["eventctx",3],["bool",15],["details",3],["personid",3]],["widget",3]]],[5,"bio_body","","",null,[[["app",3],["eventctx",3],["details",3],["personid",3]],["widget",3]]],[5,"schedule","","",null,[[["app",3],["eventctx",3],["bool",15],["details",3],["personid",3]],["widget",3]]],[5,"schedule_body","","",null,[[["eventctx",3],["app",3],["personid",3]],["widget",3]]],[5,"crowd","","",null,[[["app",3],["eventctx",3],["vec",3],["details",3]],["widget",3]]],[5,"crowd_body","","",null,[[["app",3],["eventctx",3],["vec",3],["details",3]],["widget",3]]],[5,"parked_car","","",null,[[["app",3],["carid",3],["eventctx",3],["bool",15],["details",3]],["widget",3]]],[5,"parked_car_body","","",null,[[["app",3],["carid",3],["eventctx",3],["details",3]],["widget",3]]],[5,"header","","",null,[[["app",3],["tab",4],["eventctx",3],["bool",15],["details",3],["personid",3]],["widget",3]]],[5,"current_status","","",null,[[["person",3],["eventctx",3],["map",3]],["widget",3]]],[5,"cmp_duration_shorter","","",null,[[["duration",3]],["textspan",3]]],[0,"trip","game::info","",null,null],[3,"OpenTrip","game::info::trip","",null,null],[12,"show_after","","",74,null],[12,"cached_routes","","",74,null],[11,"single","","",74,[[["tripid",3]],[["tripid",3],["opentrip",3],["btreemap",3]]]],[11,"new","","",74,[[],["opentrip",3]]],[5,"ongoing","","",null,[[["app",3],["tripid",3],["eventctx",3],["agentid",4],["opentrip",3],["details",3]],["widget",3]]],[5,"future","","",null,[[["app",3],["tripid",3],["eventctx",3],["opentrip",3],["details",3]],["widget",3]]],[5,"finished","","",null,[[["app",3],["details",3],["tripid",3],["eventctx",3],["btreemap",3],["personid",3]],["widget",3]]],[5,"cancelled","","",null,[[["app",3],["tripid",3],["eventctx",3],["opentrip",3],["details",3]],["widget",3]]],[5,"highlight_slow_intersections","","Highlights intersections which were \\\"slow\\\" on the map",null,[[["app",3],["eventctx",3],["tripid",3],["details",3]]]],[5,"highlight_slow_lanes","","Highlights lanes which were \\\"slow\\\" on the map",null,[[["app",3],["eventctx",3],["tripid",3],["details",3]]]],[5,"make_timeline","","Draws the timeline for a single trip, with tooltips",null,[[["app",3],["vec",3],["f64",15],["tripid",3],["eventctx",3],["option",4]],["widget",3]]],[5,"make_trip_details","","Creates the timeline, location warp, and time warp …",null,[[["app",3],["option",4],["tripphase",3],["opentrip",3],["vec",3],["f64",15],["map",3],["tripid",3],["eventctx",3],["details",3]],["widget",3]]],[5,"make_elevation","","",null,[[["eventctx",3],["path",3],["map",3],["bool",15],["color",3]],["widget",3]]],[5,"endpoint","","",null,[[["app",3],["tripendpoint",4]]]],[3,"InfoPanel","game::info","",null,null],[12,"tab","","",75,null],[12,"time","","",75,null],[12,"is_paused","","",75,null],[12,"panel","","",75,null],[12,"unzoomed","","",75,null],[12,"zoomed","","",75,null],[12,"hyperlinks","","",75,null],[12,"warpers","","",75,null],[12,"time_warpers","","",75,null],[12,"cached_actions","","",75,null],[4,"Tab","","",null,null],[13,"PersonTrips","","",76,null],[13,"PersonBio","","",76,null],[13,"PersonSchedule","","",76,null],[13,"BusStatus","","",76,null],[13,"BusStop","","",76,null],[13,"BusRoute","","",76,null],[13,"ParkedCar","","",76,null],[13,"BldgInfo","","",76,null],[13,"BldgPeople","","",76,null],[13,"ParkingLot","","",76,null],[13,"Crowd","","",76,null],[13,"Area","","",76,null],[13,"IntersectionInfo","","",76,null],[13,"IntersectionTraffic","","",76,null],[13,"IntersectionDelay","","",76,null],[13,"IntersectionDemand","","",76,null],[13,"IntersectionArrivals","","",76,null],[13,"IntersectionTrafficSignal","","",76,null],[13,"LaneInfo","","",76,null],[13,"LaneDebug","","",76,null],[13,"LaneTraffic","","",76,null],[11,"from_id","","",76,[[["app",3],["id",4]],["tab",4]]],[11,"to_id","","",76,[[["app",3]],[["id",4],["option",4]]]],[11,"changed_settings","","",76,[[["panel",3]],[["option",4],["tab",4]]]],[11,"variant","","",76,[[]]],[3,"Details","","",null,null],[12,"unzoomed","","",77,null],[12,"zoomed","","",77,null],[12,"hyperlinks","","",77,null],[12,"warpers","","",77,null],[12,"time_warpers","","",77,null],[12,"can_jump_to_time","","",77,null],[12,"stop_immediately","","If this gets filled out, immediately execute this …",77,null],[11,"new","","Also returns <code>Details::stop_immediately</code>, which can only be …",75,[[["app",3],["tab",4],["eventctx",3],["contextualactions",8]]]],[11,"event","","",75,[[["eventctx",3],["app",3],["contextualactions",8]]]],[11,"draw","","",75,[[["app",3],["gfxctx",3]]]],[11,"active_keys","","",75,[[],["vec",3]]],[11,"active_id","","",75,[[["app",3]],[["id",4],["option",4]]]],[5,"make_table","","",null,[[["vec",3],["eventctx",3]],[["vec",3],["widget",3]]]],[5,"throughput","","",null,[[["app",3],["eventctx",3],["fn",8],["dataoptions",3],["str",15]],["widget",3]]],[5,"make_tabs","","",null,[[["eventctx",3],["tab",4],["hashmap",3],["vec",3]],["widget",3]]],[5,"header_btns","","",null,[[["eventctx",3]],["widget",3]]],[8,"ContextualActions","","",null,null],[10,"actions","","",78,[[["app",3],["id",4]],["vec",3]]],[10,"execute","","",78,[[["app",3],["eventctx",3],["id",4],["string",3],["bool",15]],[["transition",4],["app",3]]]],[10,"is_paused","","",78,[[],["bool",15]]],[10,"gameplay_mode","","",78,[[],["gameplaymode",4]]],[3,"DataOptions","","",null,null],[12,"show_before","","",79,null],[12,"show_end_of_day","","",79,null],[12,"disabled_types","","",79,null],[11,"new","","",79,[[],["dataoptions",3]]],[11,"to_controls","","",79,[[["eventctx",3],["app",3]],["widget",3]]],[11,"from_controls","","",79,[[["panel",3]],["dataoptions",3]]],[11,"disabled_series","","",79,[[],[["hashset",3],["string",3]]]],[0,"layer","game","",null,null],[0,"elevation","game::layer","",null,null],[3,"SteepStreets","game::layer::elevation","",null,null],[12,"tooltip","","",80,null],[12,"unzoomed","","",80,null],[12,"zoomed","","",80,null],[12,"panel","","",80,null],[11,"new","","",80,[[["eventctx",3],["app",3]],["steepstreets",3]]],[17,"INTERSECTION_SEARCH_RADIUS","","",null,null],[17,"CONTOUR_STEP_SIZE","","",null,null],[3,"ElevationContours","","",null,null],[12,"tooltip","","",81,null],[12,"closest_elevation","","",81,null],[12,"unzoomed","","",81,null],[12,"panel","","",81,null],[11,"new","","",81,[[["eventctx",3],["app",3]],["elevationcontours",3]]],[5,"make_contours","","",null,[[["app",3],["eventctx",3],["distance",3]]]],[0,"favorites","game::layer","",null,null],[3,"Favorites","game::layer::favorites","A set of buildings that the player has starred, persisted …",null,null],[12,"buildings","","",82,null],[11,"load","","",82,[[["app",3]],["favorites",3]]],[11,"path","","",82,[[["app",3]],["string",3]]],[11,"contains","","",82,[[["app",3],["buildingid",3]],["bool",15]]],[11,"add","","",82,[[["app",3],["buildingid",3]]]],[11,"remove","","",82,[[["app",3],["buildingid",3]]]],[3,"ShowFavorites","","",null,null],[12,"panel","","",83,null],[12,"draw","","",83,null],[11,"new","","",83,[[["eventctx",3],["app",3]],["showfavorites",3]]],[0,"map","game::layer","",null,null],[3,"BikeActivity","game::layer::map","",null,null],[12,"panel","","",84,null],[12,"time","","",84,null],[12,"unzoomed","","",84,null],[12,"zoomed","","",84,null],[12,"tooltip","","",84,null],[11,"new","","",84,[[["eventctx",3],["app",3]],["bikeactivity",3]]],[3,"Static","","",null,null],[12,"panel","","",85,null],[12,"unzoomed","","",85,null],[12,"zoomed","","",85,null],[12,"name","","",85,null],[11,"new","","",85,[[["colordiscrete",3],["eventctx",3],["str",15],["string",3],["widget",3]],["static",3]]],[11,"edits","","",85,[[["eventctx",3],["app",3]],["static",3]]],[11,"amenities","","",85,[[["eventctx",3],["app",3]],["static",3]]],[11,"no_sidewalks","","",85,[[["eventctx",3],["app",3]],["static",3]]],[11,"blackholes","","",85,[[["eventctx",3],["app",3]],["static",3]]],[3,"CongestionCaps","","",null,null],[12,"panel","","",86,null],[12,"time","","",86,null],[12,"unzoomed","","",86,null],[12,"zoomed","","",86,null],[12,"tooltip","","",86,null],[11,"new","","",86,[[["eventctx",3],["app",3]],["congestioncaps",3]]],[0,"pandemic","game::layer","",null,null],[3,"Pandemic","game::layer::pandemic","",null,null],[12,"time","","",87,null],[12,"opts","","",87,null],[12,"draw","","",87,null],[12,"panel","","",87,null],[11,"new","","",87,[[["eventctx",3],["app",3],["options",3]],["pandemic",3]]],[11,"options","","",87,[[],["options",3]]],[4,"SEIR","","",null,null],[13,"Sane","","",88,null],[13,"Exposed","","",88,null],[13,"Infected","","",88,null],[13,"Recovered","","",88,null],[13,"Dead","","",88,null],[3,"Options","","",null,null],[12,"heatmap","","",89,null],[12,"state","","",89,null],[5,"make_controls","","",null,[[["app",3],["option",4],["options",3],["eventctx",3],["widget",3]],["panel",3]]],[0,"parking","game::layer","",null,null],[3,"Occupancy","game::layer::parking","",null,null],[12,"time","","",90,null],[12,"onstreet","","",90,null],[12,"garages","","",90,null],[12,"lots","","",90,null],[12,"private_bldgs","","",90,null],[12,"looking_for_parking","","",90,null],[12,"unzoomed","","",90,null],[12,"zoomed","","",90,null],[12,"panel","","",90,null],[11,"new","","",90,[[["app",3],["eventctx",3],["bool",15]],["occupancy",3]]],[4,"Loc","","",null,null],[13,"Road","","",91,null],[13,"Bldg","","",91,null],[13,"Lot","","",91,null],[11,"new","","",91,[[["parkingspot",4],["map",3]],["loc",4]]],[3,"Efficiency","","",null,null],[12,"time","","",92,null],[12,"unzoomed","","",92,null],[12,"zoomed","","",92,null],[12,"panel","","",92,null],[11,"new","","",92,[[["eventctx",3],["app",3]],["efficiency",3]]],[0,"population","game::layer","",null,null],[3,"PopulationMap","game::layer::population","",null,null],[12,"time","","",93,null],[12,"opts","","",93,null],[12,"draw","","",93,null],[12,"panel","","",93,null],[11,"new","","",93,[[["eventctx",3],["app",3],["options",3]],["populationmap",3]]],[11,"options","","",93,[[],["options",3]]],[3,"Options","","",null,null],[12,"heatmap","","",94,null],[5,"make_controls","","",null,[[["app",3],["option",4],["eventctx",3],["options",3],["widget",3]],["panel",3]]],[0,"traffic","game::layer","",null,null],[3,"Backpressure","game::layer::traffic","",null,null],[12,"time","","",95,null],[12,"unzoomed","","",95,null],[12,"zoomed","","",95,null],[12,"panel","","",95,null],[11,"new","","",95,[[["eventctx",3],["app",3]],["backpressure",3]]],[3,"Throughput","","",null,null],[12,"time","","",96,null],[12,"agent_types","","",96,null],[12,"tooltip","","",96,null],[12,"unzoomed","","",96,null],[12,"zoomed","","",96,null],[12,"panel","","",96,null],[11,"new","","",96,[[["app",3],["btreeset",3],["eventctx",3],["agenttype",4]],["throughput",3]]],[3,"CompareThroughput","","",null,null],[12,"time","","",97,null],[12,"tooltip","","",97,null],[12,"unzoomed","","",97,null],[12,"zoomed","","",97,null],[12,"panel","","",97,null],[11,"new","","",97,[[["eventctx",3],["app",3]],["comparethroughput",3]]],[3,"TrafficJams","","",null,null],[12,"time","","",98,null],[12,"unzoomed","","",98,null],[12,"zoomed","","",98,null],[12,"panel","","",98,null],[11,"new","","",98,[[["eventctx",3],["app",3]],["trafficjams",3]]],[3,"Jam","","",null,null],[12,"epicenter","","",99,null],[12,"members","","",99,null],[5,"cluster_jams","","",null,[[["vec",3],["map",3]],["vec",3]]],[11,"adjacent_to","","",99,[[["intersectionid",3],["map",3]],["bool",15]]],[11,"all_polygons","","",99,[[["map",3]],[["polygon",3],["vec",3]]]],[3,"Delay","","",null,null],[12,"time","","",100,null],[12,"unzoomed","","",100,null],[12,"panel","","",100,null],[11,"new","","",100,[[["eventctx",3],["app",3]],["delay",3]]],[0,"transit","game::layer","",null,null],[3,"TransitNetwork","game::layer::transit","",null,null],[12,"panel","","",101,null],[12,"unzoomed","","",101,null],[12,"zoomed","","",101,null],[11,"new","","",101,[[["app",3],["eventctx",3],["bool",15]],["transitnetwork",3]]],[8,"Layer","game::layer","",null,null],[10,"name","","",102,[[],[["str",15],["option",4]]]],[10,"event","","",102,[[["eventctx",3],["app",3]],[["layeroutcome",4],["option",4]]]],[10,"draw","","",102,[[["app",3],["gfxctx",3]]]],[10,"draw_minimap","","",102,[[["gfxctx",3]]]],[11,"simple_event","","",102,[[["eventctx",3],["panel",3]],[["layeroutcome",4],["option",4]]]],[4,"LayerOutcome","","",null,null],[13,"Close","","",103,null],[13,"Replace","","",103,null],[3,"PickLayer","","",null,null],[12,"panel","","",104,null],[11,"update","","",104,[[["eventctx",3],["app",3]],[["transition",4],["option",4]]]],[11,"pick","","",104,[[["eventctx",3],["app",3]],[["state",8],["box",3]]]],[5,"header","","Creates the top row for any layer panel.",null,[[["eventctx",3],["str",15]],["widget",3]]],[17,"PANEL_PLACEMENT","","",null,null],[0,"pregame","game","",null,null],[0,"proposals","game::pregame","",null,null],[3,"Proposals","game::pregame::proposals","",null,null],[12,"panel","","",105,null],[12,"proposals","","",105,null],[12,"current","","",105,null],[11,"new","","",105,[[["app",3],["eventctx",3],["string",3],["option",4]],[["state",8],["box",3]]]],[5,"launch","","",null,[[["eventctx",3],["app",3],["permanentmapedits",3]],[["transition",4],["app",3]]]],[0,"built_info","game::pregame","",null,null],[17,"CI_PLATFORM","game::pregame::built_info","The Continuous Integration platform detected during …",null,null],[17,"PKG_VERSION","","The full version.",null,null],[17,"PKG_VERSION_MAJOR","","The major version.",null,null],[17,"PKG_VERSION_MINOR","","The minor version.",null,null],[17,"PKG_VERSION_PATCH","","The patch version.",null,null],[17,"PKG_VERSION_PRE","","The pre-release version.",null,null],[17,"PKG_AUTHORS","","A colon-separated list of authors.",null,null],[17,"PKG_NAME","","The name of the package.",null,null],[17,"PKG_DESCRIPTION","","The description.",null,null],[17,"PKG_HOMEPAGE","","The homepage.",null,null],[17,"PKG_LICENSE","","The license.",null,null],[17,"PKG_REPOSITORY","","The source repository as advertised in Cargo.toml.",null,null],[17,"TARGET","","The target triple that was being compiled for.",null,null],[17,"HOST","","The host triple of the rust compiler.",null,null],[17,"PROFILE","","<code>release</code> for release builds, <code>debug</code> for other builds.",null,null],[17,"RUSTC","","The compiler that cargo resolved to use.",null,null],[17,"RUSTDOC","","The documentation generator that cargo resolved to use.",null,null],[17,"OPT_LEVEL","","Value of OPT_LEVEL for the profile used during …",null,null],[17,"NUM_JOBS","","The parallelism that was specified during compilation.",null,null],[17,"DEBUG","","Value of DEBUG for the profile used during compilation.",null,null],[17,"FEATURES","","The features that were enabled during compilation.",null,null],[17,"FEATURES_STR","","The features as a comma-separated string.",null,null],[17,"RUSTC_VERSION","","The output of <code>rustc -V</code>",null,null],[17,"RUSTDOC_VERSION","","The output of <code>rustdoc -V</code>",null,null],[17,"BUILT_TIME_UTC","","The built-time in RFC2822, UTC",null,null],[17,"CFG_TARGET_ARCH","","The target architecture, given by <code>cfg!(target_arch)</code>.",null,null],[17,"CFG_ENDIAN","","The endianness, given by <code>cfg!(target_endian)</code>.",null,null],[17,"CFG_ENV","","The toolchain-environment, given by <code>cfg!(target_env)</code>.",null,null],[17,"CFG_FAMILY","","The OS-family, given by <code>cfg!(target_family)</code>.",null,null],[17,"CFG_OS","","The operating system, given by <code>cfg!(target_os)</code>.",null,null],[17,"CFG_POINTER_WIDTH","","The pointer width, given by <code>cfg!(target_pointer_width)</code>.",null,null],[5,"time","","",null,[[],["text",3]]],[3,"TitleScreen","game::pregame","",null,null],[12,"panel","","",106,null],[12,"screensaver","","",106,null],[12,"rng","","",106,null],[11,"new","","",106,[[["eventctx",3],["app",3]],["titlescreen",3]]],[3,"MainMenu","","",null,null],[12,"panel","","",107,null],[11,"new","","",107,[[["eventctx",3]],[["state",8],["box",3]]]],[3,"About","","",null,null],[12,"panel","","",108,null],[11,"new","","",108,[[["eventctx",3],["app",3]],[["state",8],["box",3]]]],[3,"Screensaver","","",null,null],[12,"line","","",109,null],[12,"started","","",109,null],[11,"bounce","","",109,[[["eventctx",3],["app",3],["xorshiftrng",3]],["screensaver",3]]],[11,"update","","",109,[[["eventctx",3],["app",3],["xorshiftrng",3]]]],[0,"sandbox","game","",null,null],[0,"dashboards","game::sandbox","",null,null],[0,"commuter","game::sandbox::dashboards","",null,null],[3,"CommuterPatterns","game::sandbox::dashboards::commuter","",null,null],[12,"bldg_to_block","","",110,null],[12,"border_to_block","","",110,null],[12,"blocks","","",110,null],[12,"current_block","","",110,null],[12,"filter","","",110,null],[12,"trips_from_block","","",110,null],[12,"trips_to_block","","",110,null],[12,"panel","","",110,null],[12,"draw_all_blocks","","",110,null],[4,"BlockSelection","","",null,null],[13,"NothingSelected","","",111,null],[13,"Unlocked","","",111,null],[13,"Locked","","",111,null],[12,"base","game::sandbox::dashboards::commuter::BlockSelection","",112,null],[12,"compare_to","","",112,null],[3,"PanelState","game::sandbox::dashboards::commuter","",null,null],[12,"building_counts","","",113,null],[12,"max_count","","",113,null],[12,"total_trips","","",113,null],[3,"Block","","",null,null],[12,"id","","",114,null],[12,"bldgs","","",114,null],[12,"borders","","",114,null],[12,"shape","","",114,null],[3,"Filter","","",null,null],[12,"from_block","","",115,null],[12,"include_borders","","",115,null],[12,"depart_from","","",115,null],[12,"depart_until","","",115,null],[12,"modes","","",115,null],[6,"BlockID","","",null,null],[11,"new","","",110,[[["eventctx",3],["app",3]],[["state",8],["box",3]]]],[11,"count_per_block","","",110,[[["block",3]],["vec",3]]],[11,"build_block_drawable","","",110,[[["app",3],["blockselection",4],["eventctx",3]]]],[11,"redraw_panel","","",110,[[["app",3],["eventctx",3],["option",4],["panelstate",3]]]],[5,"group_bldgs","","",null,[[["app",3]]]],[4,"BorderType","","",null,null],[13,"Incoming","","",116,null],[13,"Outgoing","","",116,null],[13,"Both","","",116,null],[5,"build_shape_for_border","","",null,[[["bordertype",4],["intersection",3],["map",3]],["polygon",3]]],[3,"Loop","","",null,null],[12,"bldgs","","",117,null],[12,"proper","","",117,null],[12,"roads","","",117,null],[5,"partition_sidewalk_loops","","",null,[[["app",3]],[["vec",3],["loop",3]]]],[5,"make_panel","","",null,[[["eventctx",3],["app",3]],["panel",3]]],[0,"generic_trip_table","game::sandbox::dashboards","",null,null],[5,"open_trip_transition","game::sandbox::dashboards::generic_trip_table","",null,[[["app",3],["usize",15]],[["transition",4],["app",3]]]],[5,"preview_trip","","",null,[[["app",3],["gfxctx",3],["panel",3],["geombatch",3]]]],[5,"preview_route","","",null,[[["app",3],["gfxctx",3],["tripid",3],["geombatch",3]]]],[0,"misc","game::sandbox::dashboards","",null,null],[3,"ActiveTraffic","game::sandbox::dashboards::misc","",null,null],[12,"panel","","",118,null],[11,"new","","",118,[[["eventctx",3],["app",3]],[["state",8],["box",3]]]],[5,"downsample","","",null,[[["vec",3]],["vec",3]]],[3,"TransitRoutes","","",null,null],[12,"panel","","",119,null],[11,"new","","",119,[[["eventctx",3],["app",3]],[["state",8],["box",3]]]],[0,"parking_overhead","game::sandbox::dashboards","",null,null],[3,"ParkingOverhead","game::sandbox::dashboards::parking_overhead","",null,null],[12,"tab","","",120,null],[12,"table","","",120,null],[12,"panel","","",120,null],[11,"new","","",120,[[["eventctx",3],["app",3]],[["state",8],["box",3]]]],[3,"Entry","","",null,null],[12,"trip","","",121,null],[12,"total_duration","","",121,null],[12,"driving_duration","","",121,null],[12,"parking_duration","","",121,null],[12,"walking_duration","","",121,null],[12,"percent_overhead","","",121,null],[12,"starts_off_map","","",121,null],[12,"ends_off_map","","",121,null],[3,"Filters","","",null,null],[12,"starts_off_map","","",122,null],[12,"ends_off_map","","",122,null],[5,"produce_raw_data","","",null,[[["app",3]],[["vec",3],["entry",3]]]],[5,"make_table","","",null,[[["app",3]],[["table",3],["app",3],["entry",3],["filters",3]]]],[0,"selector","game::sandbox::dashboards","",null,null],[3,"RectangularSelector","game::sandbox::dashboards::selector","",null,null],[12,"panel","","",123,null],[12,"region","","",123,null],[12,"corners","","",123,null],[11,"new","","",123,[[["eventctx",3],["refcell",3],["rc",3]],[["state",8],["box",3]]]],[0,"summaries","game::sandbox::dashboards","",null,null],[3,"TripSummaries","game::sandbox::dashboards::summaries","",null,null],[12,"panel","","",124,null],[11,"new","","",124,[[["eventctx",3],["app",3],["filter",3]],[["state",8],["box",3]]]],[5,"summary_boxes","","",null,[[["eventctx",3],["app",3],["filter",3]],["widget",3]]],[5,"scatter_plot","","",null,[[["eventctx",3],["app",3],["filter",3]],["widget",3]]],[5,"contingency_table","","",null,[[["eventctx",3],["app",3],["filter",3]],["widget",3]]],[3,"Filter","","",null,null],[12,"changes_pct","","",125,null],[12,"modes","","",125,null],[11,"new","","",125,[[],["filter",3]]],[11,"get_trips","","",125,[[["app",3]],["vec",3]]],[5,"pct_diff","","",null,[[["duration",3]],["f64",15]]],[5,"export_times","","",null,[[["app",3]],[["result",6],["string",3]]]],[0,"traffic_signals","game::sandbox::dashboards","",null,null],[3,"TrafficSignalDemand","game::sandbox::dashboards::traffic_signals","",null,null],[12,"panel","","",126,null],[12,"all_demand","","",126,null],[12,"hour","","",126,null],[12,"draw_all","","",126,null],[12,"selected","","",126,null],[11,"new","","",126,[[["eventctx",3],["app",3]],[["state",8],["box",3]]]],[3,"Demand","","",null,null],[12,"raw","","",127,null],[11,"all_demand","","",127,[[["app",3],["timer",3]],[["intersectionid",3],["hashmap",3],["demand",3]]]],[11,"count","","",127,[[["time",3]],[["movementid",3],["counter",3]]]],[11,"make_arrows","","",127,[[["controltrafficsignal",3],["time",3]],["vec",3]]],[11,"draw_demand","","",127,[[["app",3],["time",3],["hashmap",3],["eventctx",3]],["drawable",3]]],[0,"trip_table","game::sandbox::dashboards","",null,null],[3,"TripTable","game::sandbox::dashboards::trip_table","",null,null],[12,"tab","","",128,null],[12,"table_tabs","","",128,null],[12,"panel","","",128,null],[12,"finished_trips_table","","",128,null],[12,"cancelled_trips_table","","",128,null],[12,"unfinished_trips_table","","",128,null],[12,"recompute_filters","","",128,null],[11,"new","","",128,[[["eventctx",3],["app",3]]]],[3,"FinishedTrip","","",null,null],[12,"id","","",129,null],[12,"mode","","",129,null],[12,"modified","","",129,null],[12,"capped","","",129,null],[12,"start","","",129,null],[12,"end","","",129,null],[12,"departure","","",129,null],[12,"duration_after","","",129,null],[12,"duration_before","","",129,null],[12,"waiting","","",129,null],[12,"percent_waiting","","",129,null],[3,"CancelledTrip","","",null,null],[12,"id","","",130,null],[12,"mode","","",130,null],[12,"departure","","",130,null],[12,"start","","",130,null],[12,"end","","",130,null],[12,"duration_before","","",130,null],[12,"reason","","",130,null],[3,"UnfinishedTrip","","",null,null],[12,"id","","",131,null],[12,"mode","","",131,null],[12,"departure","","",131,null],[12,"duration_before","","",131,null],[3,"Filters","","",null,null],[12,"modes","","",132,null],[12,"off_map_starts","","",132,null],[12,"off_map_ends","","",132,null],[12,"starts_in","","",132,null],[12,"ends_in","","",132,null],[12,"unmodified_trips","","",132,null],[12,"modified_trips","","",132,null],[12,"uncapped_trips","","",132,null],[12,"capped_trips","","",132,null],[5,"produce_raw_data","","",null,[[["app",3]]]],[5,"make_table_finished_trips","","",null,[[["app",3]],[["app",3],["filters",3],["finishedtrip",3],["table",3]]]],[5,"make_table_cancelled_trips","","",null,[[["app",3]],[["app",3],["filters",3],["cancelledtrip",3],["table",3]]]],[5,"make_table_unfinished_trips","","",null,[[["app",3]],[["app",3],["table",3],["filters",3],["unfinishedtrip",3]]]],[4,"DashTab","game::sandbox::dashboards","",null,null],[13,"TripTable","","",133,null],[13,"TripSummaries","","",133,null],[13,"ParkingOverhead","","",133,null],[13,"ActiveTraffic","","",133,null],[13,"TransitRoutes","","",133,null],[13,"CommuterPatterns","","",133,null],[13,"TrafficSignals","","",133,null],[11,"picker","","",133,[[["app",3],["eventctx",3]],["widget",3]]],[11,"transition","","",133,[[["eventctx",3],["app",3],["panel",3]],[["transition",4],["option",4]]]],[0,"gameplay","game::sandbox","",null,null],[0,"actdev","game::sandbox::gameplay","",null,null],[3,"Actdev","game::sandbox::gameplay::actdev","A gameplay mode with specific controls for integration …",null,null],[12,"top_right","","",134,null],[12,"scenario_name","","",134,null],[12,"bg_traffic","","",134,null],[12,"once","","",134,null],[11,"new","","",134,[[["eventctx",3],["string",3],["bool",15]],[["box",3],["gameplaystate",8]]]],[3,"About","","",null,null],[5,"find_active_trip","","",null,[[["app",3]],["option",4]]],[0,"commute","game::sandbox::gameplay","",null,null],[3,"OptimizeCommute","game::sandbox::gameplay::commute","",null,null],[12,"top_right","","",135,null],[12,"person","","",135,null],[12,"mode","","",135,null],[12,"goal","","",135,null],[12,"time","","",135,null],[12,"done","","",135,null],[12,"trips","","",135,null],[12,"once","","",135,null],[11,"new","","",135,[[["app",3],["eventctx",3],["origpersonid",3],["duration",3]],[["box",3],["gameplaystate",8]]]],[11,"cutscene_pt1","","",135,[[["eventctx",3],["app",3],["gameplaymode",4]],[["state",8],["box",3]]]],[11,"cutscene_pt2","","",135,[[["eventctx",3],["app",3],["gameplaymode",4]],[["state",8],["box",3]]]],[5,"get_score","","",null,[[["app",3],["vec",3]]]],[5,"final_score","","",null,[[["app",3],["eventctx",3],["duration",3],["gameplaymode",4]],[["state",8],["box",3]]]],[5,"cutscene_task","","",null,[[["gameplaymode",4]],[["fn",8],["box",3]]]],[0,"fix_traffic_signals","game::sandbox::gameplay","",null,null],[17,"THRESHOLD","game::sandbox::gameplay::fix_traffic_signals","",null,null],[3,"FixTrafficSignals","","",null,null],[12,"top_right","","",136,null],[12,"time","","",136,null],[12,"worst","","",136,null],[12,"done_at","","",136,null],[12,"mode","","",136,null],[11,"new","","",136,[[["eventctx",3]],[["box",3],["gameplaystate",8]]]],[11,"cutscene_pt1","","",136,[[["eventctx",3],["app",3],["gameplaymode",4]],[["state",8],["box",3]]]],[5,"final_score","","",null,[[["app",3],["eventctx",3],["bool",15],["gameplaymode",4]],[["state",8],["box",3]]]],[5,"cutscene_pt1_task","","",null,[[["eventctx",3]],["widget",3]]],[0,"freeform","game::sandbox::gameplay","",null,null],[0,"spawner","game::sandbox::gameplay::freeform","",null,null],[3,"AgentSpawner","game::sandbox::gameplay::freeform::spawner","",null,null],[12,"panel","","",137,null],[12,"start","","",137,null],[12,"goal","","",137,null],[12,"confirmed","","",137,null],[11,"new","","",137,[[["app",3],["option",4],["eventctx",3],["buildingid",3]],[["state",8],["box",3]]]],[3,"Freeform","game::sandbox::gameplay::freeform","",null,null],[12,"top_right","","",138,null],[11,"new","","",138,[[["eventctx",3],["app",3]],[["box",3],["gameplaystate",8]]]],[3,"ChangeScenario","","",null,null],[11,"new","","",139,[[["eventctx",3],["app",3],["str",15]],[["state",8],["box",3]]]],[5,"spawn_agents_around","","",null,[[["intersectionid",3],["app",3]]]],[5,"actions","","",null,[[["app",3],["id",4]],["vec",3]]],[5,"execute","","",null,[[["app",3],["eventctx",3],["id",4],["str",15]],[["transition",4],["app",3]]]],[0,"play_scenario","game::sandbox::gameplay","",null,null],[3,"PlayScenario","game::sandbox::gameplay::play_scenario","",null,null],[12,"top_right","","",140,null],[12,"scenario_name","","",140,null],[12,"modifiers","","",140,null],[11,"new","","",140,[[["app",3],["eventctx",3],["string",3],["vec",3],["scenariomodifier",4]],[["box",3],["gameplaystate",8]]]],[3,"EditScenarioModifiers","","",null,null],[12,"scenario_name","","",141,null],[12,"modifiers","","",141,null],[12,"panel","","",141,null],[11,"new","","",141,[[["eventctx",3],["string",3],["vec",3],["scenariomodifier",4]],[["state",8],["box",3]]]],[3,"ChangeMode","","",null,null],[12,"panel","","",142,null],[12,"scenario_name","","",142,null],[12,"modifiers","","",142,null],[11,"new","","",142,[[["app",3],["eventctx",3],["string",3],["vec",3],["scenariomodifier",4]],[["state",8],["box",3]]]],[0,"tutorial","game::sandbox::gameplay","",null,null],[17,"ESCORT","game::sandbox::gameplay::tutorial","",null,null],[17,"CAR_BIKE_CONTENTION_GOAL","","",null,null],[3,"Tutorial","","",null,null],[12,"top_right","","",143,null],[12,"last_finished_task","","",143,null],[12,"msg_panel","","",143,null],[12,"warped","","",143,null],[3,"TutorialPointer","","",null,null],[12,"stage","","",144,null],[12,"part","","",144,null],[11,"new","","",144,[[["usize",15]],["tutorialpointer",3]]],[11,"start","","Launches the tutorial gameplay along with its cutscene",143,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"initialize","","Idempotent. This must be called before <code>make_gameplay</code> or …",143,[[["eventctx",3],["app",3]]]],[11,"make_gameplay","","",143,[[["eventctx",3],["app",3],["tutorialpointer",3]],[["box",3],["gameplaystate",8]]]],[11,"scenario","","",143,[[["app",3],["tutorialpointer",3]],[["scenariogenerator",3],["option",4]]]],[11,"inner_event","","",143,[[["app",3],["eventctx",3],["sandboxcontrols",3],["tutorialstate",3]],[["transition",4],["option",4]]]],[4,"Task","","",null,null],[13,"Nil","","",145,null],[13,"Camera","","",145,null],[13,"InspectObjects","","",145,null],[13,"TimeControls","","",145,null],[13,"PauseResume","","",145,null],[13,"Escort","","",145,null],[13,"LowParking","","",145,null],[13,"WatchBikes","","",145,null],[13,"FixBikes","","",145,null],[13,"Done","","",145,null],[11,"top_txt","","",145,[[["tutorialstate",3]],["text",3]]],[11,"label","","",145,[[],["str",15]]],[3,"Stage","","",null,null],[12,"messages","","",146,null],[12,"task","","",146,null],[12,"warp_to","","",146,null],[12,"custom_spawn","","",146,null],[12,"make_scenario","","",146,null],[5,"arrow","","",null,[[["screenpt",3]],[["option",4],["box",3]]]],[11,"new","","",146,[[["task",4]],["stage",3]]],[11,"msg","","",146,[[["box",3],["into",8],["vec",3],["string",3],["option",4]],["stage",3]]],[11,"left_aligned_msg","","",146,[[["box",3],["into",8],["vec",3],["string",3],["option",4]],["stage",3]]],[11,"warp_to","","",146,[[["f64",15],["id",4],["option",4]],["stage",3]]],[11,"custom_spawn","","",146,[[["box",3],["fn",8]],["stage",3]]],[11,"scenario","","",146,[[["scenariogenerator",3]],["stage",3]]],[3,"TutorialState","","",null,null],[12,"stages","","",147,null],[12,"current","","",147,null],[12,"window_dims","","",147,null],[12,"inspected_bike_lane","","",147,null],[12,"inspected_building","","",147,null],[12,"inspected_stop_sign","","",147,null],[12,"inspected_border","","",147,null],[12,"was_paused","","",147,null],[12,"num_pauses","","",147,null],[12,"following_car","","",147,null],[12,"car_parked","","",147,null],[12,"prank_done","","",147,null],[12,"parking_found","","",147,null],[12,"score_delivered","","",147,null],[12,"fire_station","","",147,null],[5,"make_bike_lane_scenario","","",null,[[["map",3]],["scenariogenerator",3]]],[5,"transition","","",null,[[["app",3],["tutorialstate",3]],[["transition",4],["app",3]]]],[11,"reset_state","","",147,[[]]],[11,"stage","","",147,[[],["stage",3]]],[11,"interaction","","",147,[[],["task",4]]],[11,"lines","","",147,[[],["option",4]]],[11,"next","","",147,[[]]],[11,"prev","","",147,[[]]],[11,"make_top_right","","",147,[[["eventctx",3],["bool",15]],["panel",3]]],[11,"make_state","","",147,[[["eventctx",3],["app",3]],[["box",3],["gameplaystate",8]]]],[11,"new","","",147,[[["eventctx",3],["app",3]],["tutorialstate",3]]],[11,"scenarios_to_prebake","","",147,[[["map",3]],[["vec",3],["scenariogenerator",3]]]],[5,"actions","","",null,[[["app",3],["id",4]],["vec",3]]],[5,"execute","","",null,[[["app",3],["eventctx",3],["id",4],["str",15]],[["transition",4],["app",3]]]],[5,"intro_story","","",null,[[["eventctx",3]],[["state",8],["box",3]]]],[5,"bldg","","",null,[[["i64",15]],["osmid",4]]],[4,"GameplayMode","game::sandbox::gameplay","",null,null],[13,"Freeform","","",148,null],[13,"PlayScenario","","",148,null],[13,"FixTrafficSignals","","",148,null],[13,"OptimizeCommute","","",148,null],[13,"Actdev","","",148,null],[13,"Tutorial","","",148,null],[8,"GameplayState","","",null,null],[10,"event","","",149,[[["app",3],["actions",3],["eventctx",3],["sandboxcontrols",3]],[["transition",4],["option",4]]]],[10,"draw","","",149,[[["app",3],["gfxctx",3]]]],[11,"on_destroy","","",149,[[["app",3]]]],[10,"recreate_panels","","",149,[[["eventctx",3],["app",3]]]],[11,"can_move_canvas","","",149,[[],["bool",15]]],[11,"can_examine_objects","","",149,[[],["bool",15]]],[11,"has_common","","",149,[[],["bool",15]]],[11,"has_tool_panel","","",149,[[],["bool",15]]],[11,"has_time_panel","","",149,[[],["bool",15]]],[11,"has_minimap","","",149,[[],["bool",15]]],[11,"is","","Returns true if the trait object wraps an object of type …",149,[[],["bool",15]]],[11,"downcast","","Returns a boxed object from a boxed trait object if the …",149,[[["box",3]],[["box",3],["box",3],["result",4]]]],[11,"downcast_rc","","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …",149,[[["rc",3]],[["rc",3],["rc",3],["result",4]]]],[11,"downcast_ref","","Returns a reference to the object within the trait object …",149,[[],["option",4]]],[11,"downcast_mut","","Returns a mutable reference to the object within the …",149,[[],["option",4]]],[4,"LoadScenario","","",null,null],[13,"Nothing","","",150,null],[13,"Path","","",150,null],[13,"Scenario","","",150,null],[13,"Future","","",150,null],[11,"map_name","","",148,[[],["mapname",3]]],[11,"scenario","","",148,[[["app",3],["xorshiftrng",3],["timer",3]],["loadscenario",4]]],[11,"can_edit_lanes","","",148,[[],["bool",15]]],[11,"can_edit_stop_signs","","",148,[[],["bool",15]]],[11,"can_jump_to_time","","",148,[[],["bool",15]]],[11,"allows","","",148,[[["mapedits",3]],["bool",15]]],[11,"initialize","","Must be called after the scenario has been setup. The …",148,[[["eventctx",3],["app",3]],[["box",3],["gameplaystate",8]]]],[5,"challenge_header","","",null,[[["eventctx",3],["str",15]],["widget",3]]],[3,"FinalScore","","",null,null],[12,"panel","","",151,null],[12,"retry","","",151,null],[12,"next_mode","","",151,null],[12,"chose_next","","",151,null],[12,"chose_back_to_challenges","","",151,null],[11,"new","","",151,[[["app",3],["eventctx",3],["string",3],["gameplaymode",4],["option",4]],[["state",8],["box",3]]]],[0,"minimap","game::sandbox","",null,null],[3,"MinimapController","game::sandbox::minimap","",null,null],[5,"make_agent_toggles","","<code>is_enabled</code>: are (car, bike, bus, pedestrian) toggles …",null,[[["eventctx",3],["app",3]],[["vec",3],["widget",3]]]],[5,"make_tool_panel","","",null,[[["eventctx",3],["app",3]],["widget",3]]],[0,"misc_tools","game::sandbox","",null,null],[3,"RoutePreview","game::sandbox::misc_tools","Draws a preview of the path for the agent under the mouse …",null,null],[12,"preview","","",152,null],[11,"new","","",152,[[],["routepreview",3]]],[11,"event","","",152,[[["eventctx",3],["app",3]],[["transition",4],["option",4]]]],[11,"draw","","",152,[[["gfxctx",3]]]],[3,"TrafficRecorder","","",null,null],[12,"members","","",153,null],[12,"panel","","",153,null],[11,"new","","",153,[[["eventctx",3],["intersectionid",3],["btreeset",3]],[["state",8],["box",3]]]],[5,"make_btn","","",null,[[["eventctx",3],["usize",15]],["widget",3]]],[0,"speed","game::sandbox","",null,null],[3,"TimePanel","game::sandbox::speed","",null,null],[12,"panel","","",154,null],[12,"override_height","","",154,null],[12,"time","","",154,null],[12,"paused","","",154,null],[12,"setting","","",154,null],[12,"baseline_finished_trips","","",154,null],[4,"SpeedSetting","","",null,null],[13,"Realtime","","1 sim second per real second",155,null],[13,"Fast","","5 sim seconds per real second",155,null],[13,"Faster","","30 sim seconds per real second",155,null],[13,"Fastest","","1 sim hour per real second",155,null],[11,"new","","",154,[[["eventctx",3],["app",3]],["timepanel",3]]],[11,"recreate_panel","","",154,[[["eventctx",3],["app",3]]]],[11,"trips_completion_bar","","",154,[[["app",3],["eventctx",3]],["widget",3]]],[11,"create_time_panel","","",154,[[["app",3],["eventctx",3]],["widget",3]]],[11,"event","","",154,[[["app",3],["gameplaymode",4],["eventctx",3],["option",4]],[["transition",4],["option",4]]]],[11,"draw","","",154,[[["gfxctx",3]]]],[11,"pause","","",154,[[["eventctx",3],["app",3]]]],[11,"resume","","",154,[[["eventctx",3],["app",3],["speedsetting",4]]]],[11,"is_paused","","",154,[[],["bool",15]]],[0,"time_warp","game::sandbox","",null,null],[3,"JumpToTime","game::sandbox::time_warp","",null,null],[12,"panel","","",156,null],[12,"target","","",156,null],[12,"maybe_mode","","",156,null],[12,"tabs","","",156,null],[11,"new","","",156,[[["app",3],["eventctx",3],["gameplaymode",4],["option",4]],[["state",8],["box",3]]]],[3,"TimeWarpScreen","","",null,null],[12,"target","","",157,null],[12,"wall_time_started","","",157,null],[12,"sim_time_started","","",157,null],[12,"halt_upon_delay","","",157,null],[12,"panel","","",157,null],[11,"new","","",157,[[["app",3],["time",3],["eventctx",3],["duration",3],["option",4]],[["state",8],["box",3]]]],[5,"area_under_curve","","",null,[[["vec",3],["f64",15]],["polygon",3]]],[5,"compare_count","","",null,[[["usize",15]],["string",3]]],[5,"build_jump_to_time_btn","","",null,[[["eventctx",3],["time",3]],["widget",3]]],[5,"build_jump_to_delay_button","","",null,[[["duration",3],["eventctx",3]],["widget",3]]],[3,"SandboxMode","game::sandbox","",null,null],[12,"gameplay","","",158,null],[12,"gameplay_mode","","",158,null],[12,"controls","","",158,null],[12,"recalc_unzoomed_agent","","",158,null],[12,"last_cs","","",158,null],[3,"SandboxControls","","",null,null],[12,"common","","",159,null],[12,"route_preview","","",159,null],[12,"tool_panel","","",159,null],[12,"time_panel","","",159,null],[12,"minimap","","",159,null],[11,"simple_new","","If you don\'t need to chain any transitions after the …",158,[[["app",3],["gameplaymode",4]],[["state",8],["box",3]]]],[11,"async_new","","This does not immediately initialize anything (like …",158,[[["fnonce",8],["app",3],["box",3],["gameplaymode",4]],[["state",8],["box",3]]]],[11,"contextual_actions","","",158,[[],["actions",3]]],[5,"maybe_exit_sandbox","","",null,[[["eventctx",3]],[["transition",4],["app",3]]]],[3,"BackToMainMenu","","",null,null],[3,"Actions","","",null,null],[12,"is_paused","","",160,null],[12,"can_interact","","",160,null],[12,"gameplay","","",160,null],[4,"LoadStage","","",null,null],[13,"LoadingMap","","",161,null],[13,"LoadingScenario","","",161,null],[13,"GotScenario","","",161,null],[13,"LoadingPrebaked","","",161,null],[13,"GotPrebaked","","",161,null],[13,"Finalizing","","",161,null],[3,"SandboxLoader","","",null,null],[12,"stage","","",162,null],[12,"mode","","",162,null],[12,"finalize","","",162,null],[5,"mouseover_unzoomed_agent_circle","","",null,[[["eventctx",3],["app",3]]]],[5,"is_daytime","","",null,[[["app",3]],["bool",15]]],[11,"new","","",159,[[["eventctx",3],["app",3],["box",3]],["sandboxcontrols",3]]],[11,"recreate_panels","","",159,[[["eventctx",3],["app",3]]]],[5,"main","game","",null,[[]]],[5,"run","","",null,[[["settings",3]]]],[5,"setup_app","","",null,[[["duration",3],["option",4],["flags",3],["bool",15],["gameplaymode",4],["options",3],["eventctx",3],["string",3],["option",4],["option",4]]]],[5,"finish_app_setup","","",null,[[["duration",3],["option",4],["bool",15],["gameplaymode",4],["app",3],["eventctx",3],["string",3],["option",4],["option",4]],[["vec",3],["box",3]]]],[11,"from","game::app","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_any","","",0,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"into_any","","",1,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"into_any","","",3,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"into_any_arc","","",3,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"into_any","","",4,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"into_any_arc","","",4,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"into_any","","",5,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"into_any","","",6,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"into_any","","",7,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"into_any_arc","","",7,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"into_any","","",8,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"into_any_arc","","",8,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::challenges::cutscene","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"into_any","","",9,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"into_any_arc","","",9,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"into_any","","",10,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"into_any_arc","","",10,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"into_any","","",11,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"into_any_arc","","",11,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"into_any","","",12,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",12,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"into_any","","",13,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"from","game::challenges","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"into_any","","",14,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"into_any_arc","","",14,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"into_any","","",15,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",15,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",15,[[],["any",8]]],[11,"as_any_mut","","",15,[[],["any",8]]],[11,"into_any_arc","","",15,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"into_any","","",16,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",16,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"from","game::common::warp","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"into_any","","",17,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",17,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",17,[[],["any",8]]],[11,"as_any_mut","","",17,[[],["any",8]]],[11,"into_any_arc","","",17,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"into_any","","",18,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",18,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"from","game::common","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"into_any","","",19,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",19,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",19,[[],["any",8]]],[11,"as_any_mut","","",19,[[],["any",8]]],[11,"from","game::debug::blocked_by","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"into_any","","",20,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",20,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",20,[[],["any",8]]],[11,"as_any_mut","","",20,[[],["any",8]]],[11,"from","game::debug::floodfill","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"into_any","","",21,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",21,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",21,[[],["any",8]]],[11,"as_any_mut","","",21,[[],["any",8]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"into_any","","",22,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",22,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",22,[[],["any",8]]],[11,"as_any_mut","","",22,[[],["any",8]]],[11,"into_any_arc","","",22,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::debug::objects","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"into_any","","",23,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",23,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",23,[[],["any",8]]],[11,"as_any_mut","","",23,[[],["any",8]]],[11,"into_any_arc","","",23,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::debug::path_counter","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"into_any","","",24,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",24,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",24,[[],["any",8]]],[11,"as_any_mut","","",24,[[],["any",8]]],[11,"from","game::debug::polygons","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"into_any","","",25,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",25,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",25,[[],["any",8]]],[11,"as_any_mut","","",25,[[],["any",8]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"into_any","","",26,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",26,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",26,[[],["any",8]]],[11,"as_any_mut","","",26,[[],["any",8]]],[11,"into_any_arc","","",26,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::debug::routes","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"into_any","","",27,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",27,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",27,[[],["any",8]]],[11,"as_any_mut","","",27,[[],["any",8]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"into_any","","",28,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",28,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",28,[[],["any",8]]],[11,"as_any_mut","","",28,[[],["any",8]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"into_any","","",29,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",29,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",29,[[],["any",8]]],[11,"as_any_mut","","",29,[[],["any",8]]],[11,"from","game::debug::uber_turns","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"into_any","","",30,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",30,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",30,[[],["any",8]]],[11,"as_any_mut","","",30,[[],["any",8]]],[11,"into_any_arc","","",30,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"into_any","","",31,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",31,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",31,[[],["any",8]]],[11,"as_any_mut","","",31,[[],["any",8]]],[11,"into_any_arc","","",31,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::debug","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"into_any","","",32,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",32,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",32,[[],["any",8]]],[11,"as_any_mut","","",32,[[],["any",8]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"into_any","","",33,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",33,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",33,[[],["any",8]]],[11,"as_any_mut","","",33,[[],["any",8]]],[11,"into_any_arc","","",33,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"vzip","","",163,[[]]],[11,"into_any","","",163,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",163,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",163,[[],["any",8]]],[11,"as_any_mut","","",163,[[],["any",8]]],[11,"into_any_arc","","",163,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"into_any","","",34,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",34,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",34,[[],["any",8]]],[11,"as_any_mut","","",34,[[],["any",8]]],[11,"into_any_arc","","",34,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::devtools::collisions","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"into_any","","",35,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",35,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",35,[[],["any",8]]],[11,"as_any_mut","","",35,[[],["any",8]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"into_any","","",36,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",36,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",36,[[],["any",8]]],[11,"as_any_mut","","",36,[[],["any",8]]],[11,"into_any_arc","","",36,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"into_any","","",37,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",37,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",37,[[],["any",8]]],[11,"as_any_mut","","",37,[[],["any",8]]],[11,"into_any_arc","","",37,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"into_any","","",40,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",40,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",40,[[],["any",8]]],[11,"as_any_mut","","",40,[[],["any",8]]],[11,"from","game::devtools::destinations","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"into_any","","",41,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",41,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",41,[[],["any",8]]],[11,"as_any_mut","","",41,[[],["any",8]]],[11,"from","game::devtools::kml","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"into_any","","",42,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",42,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",42,[[],["any",8]]],[11,"as_any_mut","","",42,[[],["any",8]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"into_any","","",43,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",43,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",43,[[],["any",8]]],[11,"as_any_mut","","",43,[[],["any",8]]],[11,"into_any_arc","","",43,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::devtools::polygon","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"into_any","","",44,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",44,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",44,[[],["any",8]]],[11,"as_any_mut","","",44,[[],["any",8]]],[11,"from","game::devtools::scenario","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"into_any","","",45,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",45,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",45,[[],["any",8]]],[11,"as_any_mut","","",45,[[],["any",8]]],[11,"from","game::devtools::story","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"into_any","","",46,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",46,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",46,[[],["any",8]]],[11,"as_any_mut","","",46,[[],["any",8]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"into_any","","",47,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",47,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",47,[[],["any",8]]],[11,"as_any_mut","","",47,[[],["any",8]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"into_any","","",48,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",48,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",48,[[],["any",8]]],[11,"as_any_mut","","",48,[[],["any",8]]],[11,"into_any_arc","","",48,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"into_any","","",49,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",49,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",49,[[],["any",8]]],[11,"as_any_mut","","",49,[[],["any",8]]],[11,"into_any_arc","","",49,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"into_any","","",50,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",50,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",50,[[],["any",8]]],[11,"as_any_mut","","",50,[[],["any",8]]],[11,"into_any_arc","","",50,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"into_any","","",51,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",51,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",51,[[],["any",8]]],[11,"as_any_mut","","",51,[[],["any",8]]],[11,"into_any_arc","","",51,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::devtools","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"into_any","","",52,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",52,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",52,[[],["any",8]]],[11,"as_any_mut","","",52,[[],["any",8]]],[11,"from","game::edit::bulk","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"into_any","","",53,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",53,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",53,[[],["any",8]]],[11,"as_any_mut","","",53,[[],["any",8]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"into_any","","",54,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",54,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",54,[[],["any",8]]],[11,"as_any_mut","","",54,[[],["any",8]]],[11,"from","game::edit::lanes","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"into_any","","",55,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",55,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",55,[[],["any",8]]],[11,"as_any_mut","","",55,[[],["any",8]]],[11,"into_any_arc","","",55,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::edit::routes","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"into_any","","",56,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",56,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",56,[[],["any",8]]],[11,"as_any_mut","","",56,[[],["any",8]]],[11,"from","game::edit::select","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"into_any","","",57,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",57,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",57,[[],["any",8]]],[11,"as_any_mut","","",57,[[],["any",8]]],[11,"into_any_arc","","",57,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"into_any","","",58,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",58,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",58,[[],["any",8]]],[11,"as_any_mut","","",58,[[],["any",8]]],[11,"into_any_arc","","",58,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::edit::stop_signs","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"into_any","","",60,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",60,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",60,[[],["any",8]]],[11,"as_any_mut","","",60,[[],["any",8]]],[11,"into_any_arc","","",60,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::edit::traffic_signals::edits","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"into_any","","",61,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",61,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",61,[[],["any",8]]],[11,"as_any_mut","","",61,[[],["any",8]]],[11,"into_any_arc","","",61,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::edit::traffic_signals::offsets","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"into_any","","",62,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",62,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",62,[[],["any",8]]],[11,"as_any_mut","","",62,[[],["any",8]]],[11,"into_any_arc","","",62,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"into_any","","",63,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",63,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",63,[[],["any",8]]],[11,"as_any_mut","","",63,[[],["any",8]]],[11,"into_any_arc","","",63,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"into_any","","",64,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",64,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",64,[[],["any",8]]],[11,"as_any_mut","","",64,[[],["any",8]]],[11,"into_any_arc","","",64,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::edit::traffic_signals::picker","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"into_any","","",65,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",65,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",65,[[],["any",8]]],[11,"as_any_mut","","",65,[[],["any",8]]],[11,"from","game::edit::traffic_signals::preview","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"into_any","","",66,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",66,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",66,[[],["any",8]]],[11,"as_any_mut","","",66,[[],["any",8]]],[11,"from","game::edit::traffic_signals","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"into_any","","",67,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",67,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",67,[[],["any",8]]],[11,"as_any_mut","","",67,[[],["any",8]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"into_any","","",68,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",68,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",68,[[],["any",8]]],[11,"as_any_mut","","",68,[[],["any",8]]],[11,"into_any_arc","","",68,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::edit::zones","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"into_any","","",69,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",69,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",69,[[],["any",8]]],[11,"as_any_mut","","",69,[[],["any",8]]],[11,"from","game::edit","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"into_any","","",70,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",70,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",70,[[],["any",8]]],[11,"as_any_mut","","",70,[[],["any",8]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"into_any","","",71,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",71,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",71,[[],["any",8]]],[11,"as_any_mut","","",71,[[],["any",8]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"into_any","","",72,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",72,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",72,[[],["any",8]]],[11,"as_any_mut","","",72,[[],["any",8]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"into_any","","",73,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",73,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",73,[[],["any",8]]],[11,"as_any_mut","","",73,[[],["any",8]]],[11,"from","game::info::trip","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"into_any","","",74,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",74,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",74,[[],["any",8]]],[11,"as_any_mut","","",74,[[],["any",8]]],[11,"into_any_arc","","",74,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::info","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"into_any","","",75,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",75,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",75,[[],["any",8]]],[11,"as_any_mut","","",75,[[],["any",8]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"into_any","","",76,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",76,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",76,[[],["any",8]]],[11,"as_any_mut","","",76,[[],["any",8]]],[11,"into_any_arc","","",76,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"into_any","","",77,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",77,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",77,[[],["any",8]]],[11,"as_any_mut","","",77,[[],["any",8]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"into_any","","",79,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",79,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",79,[[],["any",8]]],[11,"as_any_mut","","",79,[[],["any",8]]],[11,"into_any_arc","","",79,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::layer::elevation","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"into_any","","",80,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",80,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",80,[[],["any",8]]],[11,"as_any_mut","","",80,[[],["any",8]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"into_any","","",81,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",81,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",81,[[],["any",8]]],[11,"as_any_mut","","",81,[[],["any",8]]],[11,"from","game::layer::favorites","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"into_any","","",82,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",82,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",82,[[],["any",8]]],[11,"as_any_mut","","",82,[[],["any",8]]],[11,"into_any_arc","","",82,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"into_any","","",83,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",83,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",83,[[],["any",8]]],[11,"as_any_mut","","",83,[[],["any",8]]],[11,"from","game::layer::map","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"into_any","","",84,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",84,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",84,[[],["any",8]]],[11,"as_any_mut","","",84,[[],["any",8]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"into_any","","",85,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",85,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",85,[[],["any",8]]],[11,"as_any_mut","","",85,[[],["any",8]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"into_any","","",86,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",86,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",86,[[],["any",8]]],[11,"as_any_mut","","",86,[[],["any",8]]],[11,"from","game::layer::pandemic","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"into_any","","",87,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",87,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",87,[[],["any",8]]],[11,"as_any_mut","","",87,[[],["any",8]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"into_any","","",88,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",88,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",88,[[],["any",8]]],[11,"as_any_mut","","",88,[[],["any",8]]],[11,"into_any_arc","","",88,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"into_any","","",89,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",89,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",89,[[],["any",8]]],[11,"as_any_mut","","",89,[[],["any",8]]],[11,"into_any_arc","","",89,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::layer::parking","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"into_any","","",90,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",90,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",90,[[],["any",8]]],[11,"as_any_mut","","",90,[[],["any",8]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"equivalent","","",91,[[],["bool",15]]],[11,"vzip","","",91,[[]]],[11,"into_any","","",91,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",91,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",91,[[],["any",8]]],[11,"as_any_mut","","",91,[[],["any",8]]],[11,"into_any_arc","","",91,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"into_any","","",92,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",92,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",92,[[],["any",8]]],[11,"as_any_mut","","",92,[[],["any",8]]],[11,"from","game::layer::population","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"into_any","","",93,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",93,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",93,[[],["any",8]]],[11,"as_any_mut","","",93,[[],["any",8]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"into_any","","",94,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",94,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",94,[[],["any",8]]],[11,"as_any_mut","","",94,[[],["any",8]]],[11,"into_any_arc","","",94,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::layer::traffic","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"into_any","","",95,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",95,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",95,[[],["any",8]]],[11,"as_any_mut","","",95,[[],["any",8]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"into_any","","",96,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",96,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",96,[[],["any",8]]],[11,"as_any_mut","","",96,[[],["any",8]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"into_any","","",97,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",97,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",97,[[],["any",8]]],[11,"as_any_mut","","",97,[[],["any",8]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"into_any","","",98,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",98,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",98,[[],["any",8]]],[11,"as_any_mut","","",98,[[],["any",8]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"into_any","","",99,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",99,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",99,[[],["any",8]]],[11,"as_any_mut","","",99,[[],["any",8]]],[11,"into_any_arc","","",99,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"into_any","","",100,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",100,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",100,[[],["any",8]]],[11,"as_any_mut","","",100,[[],["any",8]]],[11,"from","game::layer::transit","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"vzip","","",101,[[]]],[11,"into_any","","",101,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",101,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",101,[[],["any",8]]],[11,"as_any_mut","","",101,[[],["any",8]]],[11,"from","game::layer","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"into_any","","",103,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",103,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",103,[[],["any",8]]],[11,"as_any_mut","","",103,[[],["any",8]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"into_any","","",104,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",104,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",104,[[],["any",8]]],[11,"as_any_mut","","",104,[[],["any",8]]],[11,"from","game::pregame::proposals","",105,[[]]],[11,"into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"vzip","","",105,[[]]],[11,"into_any","","",105,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",105,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",105,[[],["any",8]]],[11,"as_any_mut","","",105,[[],["any",8]]],[11,"from","game::pregame","",106,[[]]],[11,"into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"vzip","","",106,[[]]],[11,"into_any","","",106,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",106,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",106,[[],["any",8]]],[11,"as_any_mut","","",106,[[],["any",8]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"into_any","","",107,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",107,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",107,[[],["any",8]]],[11,"as_any_mut","","",107,[[],["any",8]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"vzip","","",108,[[]]],[11,"into_any","","",108,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",108,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",108,[[],["any",8]]],[11,"as_any_mut","","",108,[[],["any",8]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"vzip","","",109,[[]]],[11,"into_any","","",109,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",109,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",109,[[],["any",8]]],[11,"as_any_mut","","",109,[[],["any",8]]],[11,"into_any_arc","","",109,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::sandbox::dashboards::commuter","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"vzip","","",110,[[]]],[11,"into_any","","",110,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",110,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",110,[[],["any",8]]],[11,"as_any_mut","","",110,[[],["any",8]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"vzip","","",111,[[]]],[11,"into_any","","",111,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",111,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",111,[[],["any",8]]],[11,"as_any_mut","","",111,[[],["any",8]]],[11,"into_any_arc","","",111,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"vzip","","",113,[[]]],[11,"into_any","","",113,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",113,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",113,[[],["any",8]]],[11,"as_any_mut","","",113,[[],["any",8]]],[11,"into_any_arc","","",113,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"vzip","","",114,[[]]],[11,"into_any","","",114,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",114,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",114,[[],["any",8]]],[11,"as_any_mut","","",114,[[],["any",8]]],[11,"into_any_arc","","",114,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"vzip","","",115,[[]]],[11,"into_any","","",115,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",115,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",115,[[],["any",8]]],[11,"as_any_mut","","",115,[[],["any",8]]],[11,"into_any_arc","","",115,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"vzip","","",116,[[]]],[11,"into_any","","",116,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",116,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",116,[[],["any",8]]],[11,"as_any_mut","","",116,[[],["any",8]]],[11,"into_any_arc","","",116,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"vzip","","",117,[[]]],[11,"into_any","","",117,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",117,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",117,[[],["any",8]]],[11,"as_any_mut","","",117,[[],["any",8]]],[11,"into_any_arc","","",117,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::sandbox::dashboards::misc","",118,[[]]],[11,"into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"vzip","","",118,[[]]],[11,"into_any","","",118,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",118,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",118,[[],["any",8]]],[11,"as_any_mut","","",118,[[],["any",8]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"vzip","","",119,[[]]],[11,"into_any","","",119,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",119,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",119,[[],["any",8]]],[11,"as_any_mut","","",119,[[],["any",8]]],[11,"from","game::sandbox::dashboards::parking_overhead","",120,[[]]],[11,"into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"vzip","","",120,[[]]],[11,"into_any","","",120,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",120,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",120,[[],["any",8]]],[11,"as_any_mut","","",120,[[],["any",8]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"vzip","","",121,[[]]],[11,"into_any","","",121,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",121,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",121,[[],["any",8]]],[11,"as_any_mut","","",121,[[],["any",8]]],[11,"into_any_arc","","",121,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"vzip","","",122,[[]]],[11,"into_any","","",122,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",122,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",122,[[],["any",8]]],[11,"as_any_mut","","",122,[[],["any",8]]],[11,"into_any_arc","","",122,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::sandbox::dashboards::selector","",123,[[]]],[11,"into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"vzip","","",123,[[]]],[11,"into_any","","",123,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",123,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",123,[[],["any",8]]],[11,"as_any_mut","","",123,[[],["any",8]]],[11,"from","game::sandbox::dashboards::summaries","",124,[[]]],[11,"into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"vzip","","",124,[[]]],[11,"into_any","","",124,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",124,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",124,[[],["any",8]]],[11,"as_any_mut","","",124,[[],["any",8]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"vzip","","",125,[[]]],[11,"into_any","","",125,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",125,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",125,[[],["any",8]]],[11,"as_any_mut","","",125,[[],["any",8]]],[11,"into_any_arc","","",125,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::sandbox::dashboards::traffic_signals","",126,[[]]],[11,"into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"vzip","","",126,[[]]],[11,"into_any","","",126,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",126,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",126,[[],["any",8]]],[11,"as_any_mut","","",126,[[],["any",8]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"vzip","","",127,[[]]],[11,"into_any","","",127,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",127,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",127,[[],["any",8]]],[11,"as_any_mut","","",127,[[],["any",8]]],[11,"into_any_arc","","",127,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::sandbox::dashboards::trip_table","",128,[[]]],[11,"into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"vzip","","",128,[[]]],[11,"into_any","","",128,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",128,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",128,[[],["any",8]]],[11,"as_any_mut","","",128,[[],["any",8]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"vzip","","",129,[[]]],[11,"into_any","","",129,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",129,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",129,[[],["any",8]]],[11,"as_any_mut","","",129,[[],["any",8]]],[11,"into_any_arc","","",129,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"vzip","","",130,[[]]],[11,"into_any","","",130,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",130,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",130,[[],["any",8]]],[11,"as_any_mut","","",130,[[],["any",8]]],[11,"into_any_arc","","",130,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"vzip","","",131,[[]]],[11,"into_any","","",131,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",131,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",131,[[],["any",8]]],[11,"as_any_mut","","",131,[[],["any",8]]],[11,"into_any_arc","","",131,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"vzip","","",132,[[]]],[11,"into_any","","",132,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",132,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",132,[[],["any",8]]],[11,"as_any_mut","","",132,[[],["any",8]]],[11,"into_any_arc","","",132,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::sandbox::dashboards","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"vzip","","",133,[[]]],[11,"into_any","","",133,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",133,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",133,[[],["any",8]]],[11,"as_any_mut","","",133,[[],["any",8]]],[11,"into_any_arc","","",133,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::sandbox::gameplay::actdev","",134,[[]]],[11,"into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"vzip","","",134,[[]]],[11,"into_any","","",134,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",134,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",134,[[],["any",8]]],[11,"as_any_mut","","",134,[[],["any",8]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"vzip","","",164,[[]]],[11,"into_any","","",164,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",164,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",164,[[],["any",8]]],[11,"as_any_mut","","",164,[[],["any",8]]],[11,"into_any_arc","","",164,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::sandbox::gameplay::commute","",135,[[]]],[11,"into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"vzip","","",135,[[]]],[11,"into_any","","",135,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",135,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",135,[[],["any",8]]],[11,"as_any_mut","","",135,[[],["any",8]]],[11,"from","game::sandbox::gameplay::fix_traffic_signals","",136,[[]]],[11,"into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"vzip","","",136,[[]]],[11,"into_any","","",136,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",136,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",136,[[],["any",8]]],[11,"as_any_mut","","",136,[[],["any",8]]],[11,"from","game::sandbox::gameplay::freeform::spawner","",137,[[]]],[11,"into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"vzip","","",137,[[]]],[11,"into_any","","",137,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",137,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",137,[[],["any",8]]],[11,"as_any_mut","","",137,[[],["any",8]]],[11,"from","game::sandbox::gameplay::freeform","",138,[[]]],[11,"into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"vzip","","",138,[[]]],[11,"into_any","","",138,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",138,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",138,[[],["any",8]]],[11,"as_any_mut","","",138,[[],["any",8]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"vzip","","",139,[[]]],[11,"into_any","","",139,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",139,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",139,[[],["any",8]]],[11,"as_any_mut","","",139,[[],["any",8]]],[11,"into_any_arc","","",139,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::sandbox::gameplay::play_scenario","",140,[[]]],[11,"into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"vzip","","",140,[[]]],[11,"into_any","","",140,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",140,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",140,[[],["any",8]]],[11,"as_any_mut","","",140,[[],["any",8]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"vzip","","",141,[[]]],[11,"into_any","","",141,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",141,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",141,[[],["any",8]]],[11,"as_any_mut","","",141,[[],["any",8]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"vzip","","",142,[[]]],[11,"into_any","","",142,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",142,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",142,[[],["any",8]]],[11,"as_any_mut","","",142,[[],["any",8]]],[11,"from","game::sandbox::gameplay::tutorial","",143,[[]]],[11,"into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"vzip","","",143,[[]]],[11,"into_any","","",143,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",143,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",143,[[],["any",8]]],[11,"as_any_mut","","",143,[[],["any",8]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"equivalent","","",144,[[],["bool",15]]],[11,"vzip","","",144,[[]]],[11,"into_any","","",144,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",144,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",144,[[],["any",8]]],[11,"as_any_mut","","",144,[[],["any",8]]],[11,"into_any_arc","","",144,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"vzip","","",145,[[]]],[11,"into_any","","",145,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",145,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",145,[[],["any",8]]],[11,"as_any_mut","","",145,[[],["any",8]]],[11,"into_any_arc","","",145,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"vzip","","",146,[[]]],[11,"into_any","","",146,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",146,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",146,[[],["any",8]]],[11,"as_any_mut","","",146,[[],["any",8]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"vzip","","",147,[[]]],[11,"into_any","","",147,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",147,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",147,[[],["any",8]]],[11,"as_any_mut","","",147,[[],["any",8]]],[11,"from","game::sandbox::gameplay","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"equivalent","","",148,[[],["bool",15]]],[11,"vzip","","",148,[[]]],[11,"into_any","","",148,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",148,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",148,[[],["any",8]]],[11,"as_any_mut","","",148,[[],["any",8]]],[11,"into_any_arc","","",148,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"vzip","","",150,[[]]],[11,"into_any","","",150,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",150,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",150,[[],["any",8]]],[11,"as_any_mut","","",150,[[],["any",8]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"vzip","","",151,[[]]],[11,"into_any","","",151,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",151,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",151,[[],["any",8]]],[11,"as_any_mut","","",151,[[],["any",8]]],[11,"from","game::sandbox::minimap","",165,[[]]],[11,"into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"vzip","","",165,[[]]],[11,"into_any","","",165,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",165,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",165,[[],["any",8]]],[11,"as_any_mut","","",165,[[],["any",8]]],[11,"into_any_arc","","",165,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::sandbox::misc_tools","",152,[[]]],[11,"into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"vzip","","",152,[[]]],[11,"into_any","","",152,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",152,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",152,[[],["any",8]]],[11,"as_any_mut","","",152,[[],["any",8]]],[11,"into_any_arc","","",152,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"vzip","","",153,[[]]],[11,"into_any","","",153,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",153,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",153,[[],["any",8]]],[11,"as_any_mut","","",153,[[],["any",8]]],[11,"from","game::sandbox::speed","",154,[[]]],[11,"into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"vzip","","",154,[[]]],[11,"into_any","","",154,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",154,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",154,[[],["any",8]]],[11,"as_any_mut","","",154,[[],["any",8]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"vzip","","",155,[[]]],[11,"into_any","","",155,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",155,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",155,[[],["any",8]]],[11,"as_any_mut","","",155,[[],["any",8]]],[11,"into_any_arc","","",155,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","game::sandbox::time_warp","",156,[[]]],[11,"into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"vzip","","",156,[[]]],[11,"into_any","","",156,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",156,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",156,[[],["any",8]]],[11,"as_any_mut","","",156,[[],["any",8]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"vzip","","",157,[[]]],[11,"into_any","","",157,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",157,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",157,[[],["any",8]]],[11,"as_any_mut","","",157,[[],["any",8]]],[11,"from","game::sandbox","",158,[[]]],[11,"into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"vzip","","",158,[[]]],[11,"into_any","","",158,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",158,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",158,[[],["any",8]]],[11,"as_any_mut","","",158,[[],["any",8]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"vzip","","",159,[[]]],[11,"into_any","","",159,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",159,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",159,[[],["any",8]]],[11,"as_any_mut","","",159,[[],["any",8]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"vzip","","",166,[[]]],[11,"into_any","","",166,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",166,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",166,[[],["any",8]]],[11,"as_any_mut","","",166,[[],["any",8]]],[11,"into_any_arc","","",166,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"vzip","","",160,[[]]],[11,"into_any","","",160,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",160,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",160,[[],["any",8]]],[11,"as_any_mut","","",160,[[],["any",8]]],[11,"into_any_arc","","",160,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"vzip","","",161,[[]]],[11,"into_any","","",161,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",161,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",161,[[],["any",8]]],[11,"as_any_mut","","",161,[[],["any",8]]],[11,"into_any_arc","","",161,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"vzip","","",162,[[]]],[11,"into_any","","",162,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",162,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",162,[[],["any",8]]],[11,"as_any_mut","","",162,[[],["any",8]]],[11,"show","game::app","",3,[[["id",4]],["bool",15]]],[11,"layers","","",3,[[],["showlayers",3]]],[11,"show","game::debug","",32,[[["id",4]],["bool",15]]],[11,"layers","","",32,[[],["showlayers",3]]],[11,"actions","","",163,[[["app",3],["id",4]],["vec",3]]],[11,"execute","","",163,[[["app",3],["eventctx",3],["id",4],["string",3],["bool",15]],[["transition",4],["app",3]]]],[11,"is_paused","","",163,[[],["bool",15]]],[11,"gameplay_mode","","",163,[[],["gameplaymode",4]]],[11,"actions","game::sandbox","",160,[[["app",3],["id",4]],["vec",3]]],[11,"execute","","",160,[[["app",3],["eventctx",3],["id",4],["string",3],["bool",15]],[["transition",4],["app",3]]]],[11,"is_paused","","",160,[[],["bool",15]]],[11,"gameplay_mode","","",160,[[],["gameplaymode",4]]],[11,"name","game::layer::elevation","",80,[[],[["str",15],["option",4]]]],[11,"event","","",80,[[["eventctx",3],["app",3]],[["layeroutcome",4],["option",4]]]],[11,"draw","","",80,[[["app",3],["gfxctx",3]]]],[11,"draw_minimap","","",80,[[["gfxctx",3]]]],[11,"name","","",81,[[],[["str",15],["option",4]]]],[11,"event","","",81,[[["eventctx",3],["app",3]],[["layeroutcome",4],["option",4]]]],[11,"draw","","",81,[[["app",3],["gfxctx",3]]]],[11,"draw_minimap","","",81,[[["gfxctx",3]]]],[11,"name","game::layer::favorites","",83,[[],[["str",15],["option",4]]]],[11,"event","","",83,[[["eventctx",3],["app",3]],[["layeroutcome",4],["option",4]]]],[11,"draw","","",83,[[["app",3],["gfxctx",3]]]],[11,"draw_minimap","","",83,[[["gfxctx",3]]]],[11,"name","game::layer::map","",84,[[],[["str",15],["option",4]]]],[11,"event","","",84,[[["eventctx",3],["app",3]],[["layeroutcome",4],["option",4]]]],[11,"draw","","",84,[[["app",3],["gfxctx",3]]]],[11,"draw_minimap","","",84,[[["gfxctx",3]]]],[11,"name","","",85,[[],[["str",15],["option",4]]]],[11,"event","","",85,[[["eventctx",3],["app",3]],[["layeroutcome",4],["option",4]]]],[11,"draw","","",85,[[["app",3],["gfxctx",3]]]],[11,"draw_minimap","","",85,[[["gfxctx",3]]]],[11,"name","","",86,[[],[["str",15],["option",4]]]],[11,"event","","",86,[[["eventctx",3],["app",3]],[["layeroutcome",4],["option",4]]]],[11,"draw","","",86,[[["app",3],["gfxctx",3]]]],[11,"draw_minimap","","",86,[[["gfxctx",3]]]],[11,"name","game::layer::pandemic","",87,[[],[["str",15],["option",4]]]],[11,"event","","",87,[[["eventctx",3],["app",3]],[["layeroutcome",4],["option",4]]]],[11,"draw","","",87,[[["app",3],["gfxctx",3]]]],[11,"draw_minimap","","",87,[[["gfxctx",3]]]],[11,"name","game::layer::parking","",90,[[],[["str",15],["option",4]]]],[11,"event","","",90,[[["eventctx",3],["app",3]],[["layeroutcome",4],["option",4]]]],[11,"draw","","",90,[[["app",3],["gfxctx",3]]]],[11,"draw_minimap","","",90,[[["gfxctx",3]]]],[11,"name","","",92,[[],[["str",15],["option",4]]]],[11,"event","","",92,[[["eventctx",3],["app",3]],[["layeroutcome",4],["option",4]]]],[11,"draw","","",92,[[["app",3],["gfxctx",3]]]],[11,"draw_minimap","","",92,[[["gfxctx",3]]]],[11,"name","game::layer::population","",93,[[],[["str",15],["option",4]]]],[11,"event","","",93,[[["eventctx",3],["app",3]],[["layeroutcome",4],["option",4]]]],[11,"draw","","",93,[[["app",3],["gfxctx",3]]]],[11,"draw_minimap","","",93,[[["gfxctx",3]]]],[11,"name","game::layer::traffic","",95,[[],[["str",15],["option",4]]]],[11,"event","","",95,[[["eventctx",3],["app",3]],[["layeroutcome",4],["option",4]]]],[11,"draw","","",95,[[["app",3],["gfxctx",3]]]],[11,"draw_minimap","","",95,[[["gfxctx",3]]]],[11,"name","","",96,[[],[["str",15],["option",4]]]],[11,"event","","",96,[[["eventctx",3],["app",3]],[["layeroutcome",4],["option",4]]]],[11,"draw","","",96,[[["app",3],["gfxctx",3]]]],[11,"draw_minimap","","",96,[[["gfxctx",3]]]],[11,"name","","",97,[[],[["str",15],["option",4]]]],[11,"event","","",97,[[["eventctx",3],["app",3]],[["layeroutcome",4],["option",4]]]],[11,"draw","","",97,[[["app",3],["gfxctx",3]]]],[11,"draw_minimap","","",97,[[["gfxctx",3]]]],[11,"name","","",98,[[],[["str",15],["option",4]]]],[11,"event","","",98,[[["eventctx",3],["app",3]],[["layeroutcome",4],["option",4]]]],[11,"draw","","",98,[[["app",3],["gfxctx",3]]]],[11,"draw_minimap","","",98,[[["gfxctx",3]]]],[11,"name","","",100,[[],[["str",15],["option",4]]]],[11,"event","","",100,[[["eventctx",3],["app",3]],[["layeroutcome",4],["option",4]]]],[11,"draw","","",100,[[["app",3],["gfxctx",3]]]],[11,"draw_minimap","","",100,[[["gfxctx",3]]]],[11,"name","game::layer::transit","",101,[[],[["str",15],["option",4]]]],[11,"event","","",101,[[["eventctx",3],["app",3]],[["layeroutcome",4],["option",4]]]],[11,"draw","","",101,[[["app",3],["gfxctx",3]]]],[11,"draw_minimap","","",101,[[["gfxctx",3]]]],[11,"event","game::sandbox::gameplay::actdev","",134,[[["app",3],["actions",3],["eventctx",3],["sandboxcontrols",3]],[["transition",4],["option",4]]]],[11,"draw","","",134,[[["app",3],["gfxctx",3]]]],[11,"recreate_panels","","",134,[[["eventctx",3],["app",3]]]],[11,"has_tool_panel","","",134,[[],["bool",15]]],[11,"event","game::sandbox::gameplay::commute","",135,[[["app",3],["actions",3],["eventctx",3],["sandboxcontrols",3]],[["transition",4],["option",4]]]],[11,"draw","","",135,[[["app",3],["gfxctx",3]]]],[11,"recreate_panels","","",135,[[["eventctx",3],["app",3]]]],[11,"event","game::sandbox::gameplay::fix_traffic_signals","",136,[[["app",3],["actions",3],["eventctx",3],["sandboxcontrols",3]],[["transition",4],["option",4]]]],[11,"draw","","",136,[[["app",3],["gfxctx",3]]]],[11,"recreate_panels","","",136,[[["eventctx",3],["app",3]]]],[11,"on_destroy","","",136,[[["app",3]]]],[11,"event","game::sandbox::gameplay::freeform","",138,[[["app",3],["actions",3],["eventctx",3],["sandboxcontrols",3]],[["transition",4],["option",4]]]],[11,"draw","","",138,[[["app",3],["gfxctx",3]]]],[11,"recreate_panels","","",138,[[["eventctx",3],["app",3]]]],[11,"event","game::sandbox::gameplay::play_scenario","",140,[[["app",3],["actions",3],["eventctx",3],["sandboxcontrols",3]],[["transition",4],["option",4]]]],[11,"draw","","",140,[[["app",3],["gfxctx",3]]]],[11,"on_destroy","","",140,[[["app",3]]]],[11,"recreate_panels","","",140,[[["eventctx",3],["app",3]]]],[11,"event","game::sandbox::gameplay::tutorial","",143,[[["app",3],["actions",3],["eventctx",3],["sandboxcontrols",3]],[["transition",4],["option",4]]]],[11,"draw","","",143,[[["app",3],["gfxctx",3]]]],[11,"recreate_panels","","",143,[[["eventctx",3],["app",3]]]],[11,"can_move_canvas","","",143,[[],["bool",15]]],[11,"can_examine_objects","","",143,[[],["bool",15]]],[11,"has_common","","",143,[[],["bool",15]]],[11,"has_tool_panel","","",143,[[],["bool",15]]],[11,"has_time_panel","","",143,[[],["bool",15]]],[11,"has_minimap","","",143,[[],["bool",15]]],[11,"clone","game::app","",4,[[],["flags",3]]],[11,"clone","game::debug::floodfill","",22,[[],["source",4]]],[11,"clone","game::devtools::story","",48,[[],["recordedstorymap",3]]],[11,"clone","game::edit::traffic_signals","",68,[[],["bundleedits",3]]],[11,"clone","game::info::trip","",74,[[],["opentrip",3]]],[11,"clone","game::info","",76,[[],["tab",4]]],[11,"clone","","",79,[[],["dataoptions",3]]],[11,"clone","game::layer::pandemic","",88,[[],["seir",4]]],[11,"clone","","",89,[[],["options",3]]],[11,"clone","game::layer::parking","",91,[[],["loc",4]]],[11,"clone","game::layer::population","",94,[[],["options",3]]],[11,"clone","game::sandbox::dashboards::commuter","",111,[[],["blockselection",4]]],[11,"clone","game::sandbox::dashboards","",133,[[],["dashtab",4]]],[11,"clone","game::sandbox::gameplay::tutorial","",144,[[],["tutorialpointer",3]]],[11,"clone","","",145,[[],["task",4]]],[11,"clone","game::sandbox::gameplay","",148,[[],["gameplaymode",4]]],[11,"clone","game::sandbox::speed","",155,[[],["speedsetting",4]]],[11,"cmp","game::layer::parking","",91,[[["loc",4]],["ordering",4]]],[11,"cmp","game::sandbox::gameplay::tutorial","",144,[[["tutorialpointer",3]],["ordering",4]]],[11,"cmp","game::sandbox::gameplay","",148,[[["gameplaymode",4]],["ordering",4]]],[11,"eq","game::devtools::collisions","",36,[[["filters",3]],["bool",15]]],[11,"ne","","",36,[[["filters",3]],["bool",15]]],[11,"eq","game::edit::traffic_signals","",68,[[["bundleedits",3]],["bool",15]]],[11,"ne","","",68,[[["bundleedits",3]],["bool",15]]],[11,"eq","game::info::trip","",74,[[["opentrip",3]],["bool",15]]],[11,"eq","game::info","",79,[[["dataoptions",3]],["bool",15]]],[11,"ne","","",79,[[["dataoptions",3]],["bool",15]]],[11,"eq","game::layer::pandemic","",88,[[["seir",4]],["bool",15]]],[11,"eq","","",89,[[["options",3]],["bool",15]]],[11,"ne","","",89,[[["options",3]],["bool",15]]],[11,"eq","game::layer::parking","",91,[[["loc",4]],["bool",15]]],[11,"ne","","",91,[[["loc",4]],["bool",15]]],[11,"eq","game::layer::population","",94,[[["options",3]],["bool",15]]],[11,"ne","","",94,[[["options",3]],["bool",15]]],[11,"eq","game::sandbox::dashboards::commuter","",111,[[["blockselection",4]],["bool",15]]],[11,"ne","","",111,[[["blockselection",4]],["bool",15]]],[11,"eq","","",115,[[["filter",3]],["bool",15]]],[11,"ne","","",115,[[["filter",3]],["bool",15]]],[11,"eq","game::sandbox::dashboards","",133,[[["dashtab",4]],["bool",15]]],[11,"eq","game::sandbox::gameplay::tutorial","",144,[[["tutorialpointer",3]],["bool",15]]],[11,"ne","","",144,[[["tutorialpointer",3]],["bool",15]]],[11,"eq","","",145,[[["task",4]],["bool",15]]],[11,"eq","game::sandbox::gameplay","",148,[[["gameplaymode",4]],["bool",15]]],[11,"ne","","",148,[[["gameplaymode",4]],["bool",15]]],[11,"eq","game::sandbox::speed","",155,[[["speedsetting",4]],["bool",15]]],[11,"partial_cmp","game::layer::parking","",91,[[["loc",4]],[["option",4],["ordering",4]]]],[11,"lt","","",91,[[["loc",4]],["bool",15]]],[11,"le","","",91,[[["loc",4]],["bool",15]]],[11,"gt","","",91,[[["loc",4]],["bool",15]]],[11,"ge","","",91,[[["loc",4]],["bool",15]]],[11,"partial_cmp","game::sandbox::gameplay::tutorial","",144,[[["tutorialpointer",3]],[["option",4],["ordering",4]]]],[11,"lt","","",144,[[["tutorialpointer",3]],["bool",15]]],[11,"le","","",144,[[["tutorialpointer",3]],["bool",15]]],[11,"gt","","",144,[[["tutorialpointer",3]],["bool",15]]],[11,"ge","","",144,[[["tutorialpointer",3]],["bool",15]]],[11,"partial_cmp","","",145,[[["task",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","game::sandbox::gameplay","",148,[[["gameplaymode",4]],[["option",4],["ordering",4]]]],[11,"lt","","",148,[[["gameplaymode",4]],["bool",15]]],[11,"le","","",148,[[["gameplaymode",4]],["bool",15]]],[11,"gt","","",148,[[["gameplaymode",4]],["bool",15]]],[11,"ge","","",148,[[["gameplaymode",4]],["bool",15]]],[11,"partial_cmp","game::sandbox::speed","",155,[[["speedsetting",4]],[["option",4],["ordering",4]]]],[11,"fmt","game::layer::pandemic","",88,[[["formatter",3]],["result",6]]],[11,"fmt","game::sandbox::dashboards","",133,[[["formatter",3]],["result",6]]],[11,"serialize","game::devtools::story","",48,[[],["result",4]]],[11,"serialize","game::layer::favorites","",82,[[],["result",4]]],[11,"deserialize","game::devtools::story","",48,[[],["result",4]]],[11,"deserialize","game::layer::favorites","",82,[[],["result",4]]],[11,"event","game::challenges::cutscene","",12,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw_baselayer","","",12,[[],["drawbaselayer",4]]],[11,"draw","","",12,[[["app",3],["gfxctx",3]]]],[11,"event","","",13,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",13,[[["app",3],["gfxctx",3]]]],[11,"event","game::challenges","",16,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw_baselayer","","",16,[[],["drawbaselayer",4]]],[11,"draw","","",16,[[["app",3],["gfxctx",3]]]],[11,"event","game::common::warp","",17,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",17,[[["app",3],["gfxctx",3]]]],[11,"event","","",18,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",18,[[["app",3],["gfxctx",3]]]],[11,"event","game::debug::blocked_by","",20,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",20,[[["app",3],["gfxctx",3]]]],[11,"event","game::debug::floodfill","",21,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",21,[[["app",3],["gfxctx",3]]]],[11,"event","game::debug::path_counter","",24,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",24,[[["app",3],["gfxctx",3]]]],[11,"event","game::debug::polygons","",25,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",25,[[["app",3],["gfxctx",3]]]],[11,"event","game::debug::routes","",27,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",27,[[["app",3],["gfxctx",3]]]],[11,"event","","",28,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",28,[[["app",3],["gfxctx",3]]]],[11,"event","","",29,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",29,[[["app",3],["gfxctx",3]]]],[11,"event","game::debug","",32,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw_baselayer","","",32,[[],["drawbaselayer",4]]],[11,"draw","","",32,[[["app",3],["gfxctx",3]]]],[11,"event","","",34,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",34,[[["app",3],["gfxctx",3]]]],[11,"event","game::devtools::collisions","",35,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",35,[[["app",3],["gfxctx",3]]]],[11,"event","game::devtools::destinations","",41,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",41,[[["app",3],["gfxctx",3]]]],[11,"event","game::devtools::kml","",42,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",42,[[["app",3],["gfxctx",3]]]],[11,"event","game::devtools::polygon","",44,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",44,[[["app",3],["gfxctx",3]]]],[11,"event","game::devtools::scenario","",45,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",45,[[["app",3],["gfxctx",3]]]],[11,"event","game::devtools::story","",46,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw_baselayer","","",46,[[],["drawbaselayer",4]]],[11,"draw","","",46,[[["app",3],["gfxctx",3]]]],[11,"event","game::devtools","",52,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw_baselayer","","",52,[[],["drawbaselayer",4]]],[11,"draw","","",52,[[["app",3],["gfxctx",3]]]],[11,"event","game::edit::bulk","",53,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",53,[[["app",3],["gfxctx",3]]]],[11,"event","","",54,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",54,[[["app",3],["gfxctx",3]]]],[11,"event","game::edit::routes","",56,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",56,[[["app",3],["gfxctx",3]]]],[11,"event","game::edit::traffic_signals::picker","",65,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",65,[[["app",3],["gfxctx",3]]]],[11,"event","game::edit::traffic_signals::preview","",66,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",66,[[["app",3],["gfxctx",3]]]],[11,"event","game::edit::traffic_signals","",67,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw_baselayer","","",67,[[],["drawbaselayer",4]]],[11,"draw","","",67,[[["app",3],["gfxctx",3]]]],[11,"event","game::edit::zones","",69,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",69,[[["app",3],["gfxctx",3]]]],[11,"event","game::edit","",70,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",70,[[["app",3],["gfxctx",3]]]],[11,"event","","",71,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",71,[[["app",3],["gfxctx",3]]]],[11,"event","","",72,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",72,[[["app",3],["gfxctx",3]]]],[11,"event","","",73,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",73,[[["app",3],["gfxctx",3]]]],[11,"event","game::layer","",104,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw_baselayer","","",104,[[],["drawbaselayer",4]]],[11,"draw","","",104,[[["app",3],["gfxctx",3]]]],[11,"event","game::pregame::proposals","",105,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw_baselayer","","",105,[[],["drawbaselayer",4]]],[11,"draw","","",105,[[["app",3],["gfxctx",3]]]],[11,"event","game::pregame","",106,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",106,[[["app",3],["gfxctx",3]]]],[11,"event","","",107,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw_baselayer","","",107,[[],["drawbaselayer",4]]],[11,"draw","","",107,[[["app",3],["gfxctx",3]]]],[11,"event","","",108,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw_baselayer","","",108,[[],["drawbaselayer",4]]],[11,"draw","","",108,[[["app",3],["gfxctx",3]]]],[11,"event","game::sandbox::dashboards::commuter","",110,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",110,[[["app",3],["gfxctx",3]]]],[11,"event","game::sandbox::dashboards::misc","",118,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",118,[[["app",3],["gfxctx",3]]]],[11,"event","","",119,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",119,[[["app",3],["gfxctx",3]]]],[11,"event","game::sandbox::dashboards::parking_overhead","",120,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",120,[[["app",3],["gfxctx",3]]]],[11,"event","game::sandbox::dashboards::selector","",123,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",123,[[["app",3],["gfxctx",3]]]],[11,"event","game::sandbox::dashboards::summaries","",124,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",124,[[["app",3],["gfxctx",3]]]],[11,"event","game::sandbox::dashboards::traffic_signals","",126,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw_baselayer","","",126,[[],["drawbaselayer",4]]],[11,"draw","","",126,[[["app",3],["gfxctx",3]]]],[11,"event","game::sandbox::dashboards::trip_table","",128,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",128,[[["app",3],["gfxctx",3]]]],[11,"event","game::sandbox::gameplay::freeform::spawner","",137,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",137,[[["app",3],["gfxctx",3]]]],[11,"event","game::sandbox::gameplay::play_scenario","",141,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",141,[[["app",3],["gfxctx",3]]]],[11,"event","","",142,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",142,[[["app",3],["gfxctx",3]]]],[11,"event","game::sandbox::gameplay","",151,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",151,[[["app",3],["gfxctx",3]]]],[11,"event","game::sandbox::misc_tools","",153,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",153,[[["app",3],["gfxctx",3]]]],[11,"event","game::sandbox::time_warp","",156,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",156,[[["app",3],["gfxctx",3]]]],[11,"event","","",157,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw_baselayer","","",157,[[],["drawbaselayer",4]]],[11,"draw","","",157,[[["app",3],["gfxctx",3]]]],[11,"on_destroy","","",157,[[["eventctx",3],["app",3]]]],[11,"event","game::sandbox","",158,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",158,[[["app",3],["gfxctx",3]]]],[11,"on_destroy","","",158,[[["eventctx",3],["app",3]]]],[11,"event","","",166,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",166,[[["app",3],["gfxctx",3]]]],[11,"event","","",162,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",162,[[["app",3],["gfxctx",3]]]],[11,"map","game::app","",0,[[],["map",3]]],[11,"sim","","",0,[[],["sim",3]]],[11,"cs","","",0,[[],["colorscheme",3]]],[11,"mut_cs","","",0,[[],["colorscheme",3]]],[11,"draw_map","","",0,[[],["drawmap",3]]],[11,"mut_draw_map","","",0,[[],["drawmap",3]]],[11,"opts","","",0,[[],["options",3]]],[11,"mut_opts","","",0,[[],["options",3]]],[11,"map_switched","","",0,[[["eventctx",3],["map",3],["timer",3]]]],[11,"draw_with_opts","","",0,[[["gfxctx",3],["drawoptions",3]]]],[11,"make_warper","","",0,[[["f64",15],["eventctx",3],["option",4],["option",4],["id",4],["pt2d",3]],[["state",8],["box",3]]]],[11,"before_event","","",0,[[]]],[11,"draw_default","","",0,[[["gfxctx",3]]]],[11,"dump_before_abort","","",0,[[["canvas",3]]]],[11,"before_quit","","",0,[[["canvas",3]]]],[11,"has_zorder","game::sandbox::minimap","",165,[[["app",3]],["bool",15]]],[11,"has_layer","","",165,[[["app",3]],["bool",15]]],[11,"draw_extra","","",165,[[["app",3],["gfxctx",3]]]],[11,"make_unzoomed_panel","","",165,[[["eventctx",3],["app",3]],["panel",3]]],[11,"make_legend","","",165,[[["eventctx",3],["app",3]],["widget",3]]],[11,"make_zoomed_side_panel","","",165,[[["eventctx",3],["app",3]],["widget",3]]],[11,"panel_clicked","","",165,[[["eventctx",3],["app",3],["str",15]],[["transition",4],["option",4]]]],[11,"panel_changed","","",165,[[["eventctx",3],["app",3],["panel",3]]]],[11,"run","game::app","",8,[[["map",3],["sim",3]],["bool",15]]],[11,"on_click","game::debug::uber_turns","",30,[[["app",3],["panel",3],["eventctx",3],["str",15]],[["transition",4],["app",3]]]],[11,"on_mouseover","","",30,[[["eventctx",3],["app",3]]]],[11,"other_event","","",30,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",30,[[["app",3],["gfxctx",3]]]],[11,"on_click","","",31,[[["app",3],["panel",3],["eventctx",3],["str",15]],[["transition",4],["app",3]]]],[11,"panel_changed","","",31,[[["eventctx",3],["app",3],["panel",3]],[["transition",4],["option",4]]]],[11,"other_event","","",31,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw_baselayer","","",31,[[],["drawbaselayer",4]]],[11,"draw","","",31,[[["app",3],["gfxctx",3]]]],[11,"on_click","game::edit::lanes","",55,[[["app",3],["panel",3],["eventctx",3],["str",15]],[["transition",4],["app",3]]]],[11,"panel_changed","","",55,[[["eventctx",3],["app",3],["panel",3]],[["transition",4],["option",4]]]],[11,"on_mouseover","","",55,[[["eventctx",3],["app",3]]]],[11,"other_event","","",55,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",55,[[["app",3],["gfxctx",3]]]],[11,"on_click","game::edit::stop_signs","",60,[[["app",3],["panel",3],["eventctx",3],["str",15]],[["transition",4],["app",3]]]],[11,"on_mouseover","","",60,[[["eventctx",3],["app",3]]]],[11,"other_event","","",60,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",60,[[["app",3],["gfxctx",3]]]],[11,"on_click","game::edit::traffic_signals::edits","",61,[[["app",3],["panel",3],["eventctx",3],["str",15]],[["transition",4],["app",3]]]],[11,"panel_changed","","",61,[[["eventctx",3],["app",3],["panel",3]],[["transition",4],["option",4]]]],[11,"other_event","","",61,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw_baselayer","","",61,[[],["drawbaselayer",4]]],[11,"on_click","game::edit::traffic_signals::offsets","",62,[[["app",3],["panel",3],["eventctx",3],["str",15]],[["transition",4],["app",3]]]],[11,"on_mouseover","","",62,[[["eventctx",3],["app",3]]]],[11,"other_event","","",62,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",62,[[["app",3],["gfxctx",3]]]],[11,"on_click","","",63,[[["app",3],["panel",3],["eventctx",3],["str",15]],[["transition",4],["app",3]]]],[11,"on_mouseover","","",63,[[["eventctx",3],["app",3]]]],[11,"other_event","","",63,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",63,[[["app",3],["gfxctx",3]]]],[11,"on_click","","",64,[[["app",3],["panel",3],["eventctx",3],["str",15]],[["transition",4],["app",3]]]],[11,"other_event","","",64,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",64,[[["app",3],["gfxctx",3]]]],[11,"on_click","game::sandbox::gameplay::actdev","",164,[[["app",3],["panel",3],["eventctx",3],["str",15]],[["transition",4],["app",3]]]],[11,"draw","","",164,[[["app",3],["gfxctx",3]]]],[11,"on_click","game::sandbox::gameplay::freeform","",139,[[["app",3],["panel",3],["eventctx",3],["str",15]],[["transition",4],["app",3]]]],[11,"draw","","",139,[[["app",3],["gfxctx",3]]]]],"p":[[3,"App"],[3,"ShowLayers"],[8,"ShowObject"],[3,"ShowEverything"],[3,"Flags"],[3,"PerMap"],[3,"SessionState"],[3,"PerObjectActions"],[3,"FindDelayedIntersections"],[3,"CutsceneBuilder"],[4,"Layout"],[3,"Scene"],[3,"CutscenePlayer"],[3,"FYI"],[3,"Challenge"],[3,"HighScore"],[3,"ChallengesPicker"],[3,"Warping"],[3,"DebugWarp"],[3,"CommonState"],[3,"Viewer"],[3,"Floodfiller"],[4,"Source"],[3,"ObjectDebugger"],[3,"PathCounter"],[3,"PolygonDebugger"],[4,"Item"],[3,"RouteExplorer"],[3,"AllRoutesExplorer"],[3,"PathCostDebugger"],[3,"UberTurnPicker"],[3,"UberTurnViewer"],[3,"DebugMode"],[3,"SearchResults"],[3,"ScreenshotTest"],[3,"CollisionsViewer"],[3,"Filters"],[4,"Dataviz"],[13,"Individual"],[13,"Aggregated"],[3,"MapspaceTooltips"],[3,"PopularDestinations"],[3,"ViewKML"],[3,"Object"],[3,"PolygonEditor"],[3,"ScenarioManager"],[3,"StoryMapEditor"],[4,"Mode"],[3,"RecordedStoryMap"],[3,"StoryMap"],[3,"Marker"],[3,"Lasso"],[3,"DevToolsMode"],[3,"BulkSelect"],[3,"BulkEdit"],[3,"LaneEditor"],[3,"RouteEditor"],[3,"RoadSelector"],[4,"Mode"],[13,"Route"],[3,"StopSignEditor"],[3,"ChangeDuration"],[3,"ShowAbsolute"],[3,"ShowRelative"],[3,"TuneRelative"],[3,"SignalPicker"],[3,"PreviewTrafficSignal"],[3,"TrafficSignalEditor"],[3,"BundleEdits"],[3,"ZoneEditor"],[3,"EditMode"],[3,"SaveEdits"],[3,"LoadEdits"],[3,"ConfirmDiscard"],[3,"OpenTrip"],[3,"InfoPanel"],[4,"Tab"],[3,"Details"],[8,"ContextualActions"],[3,"DataOptions"],[3,"SteepStreets"],[3,"ElevationContours"],[3,"Favorites"],[3,"ShowFavorites"],[3,"BikeActivity"],[3,"Static"],[3,"CongestionCaps"],[3,"Pandemic"],[4,"SEIR"],[3,"Options"],[3,"Occupancy"],[4,"Loc"],[3,"Efficiency"],[3,"PopulationMap"],[3,"Options"],[3,"Backpressure"],[3,"Throughput"],[3,"CompareThroughput"],[3,"TrafficJams"],[3,"Jam"],[3,"Delay"],[3,"TransitNetwork"],[8,"Layer"],[4,"LayerOutcome"],[3,"PickLayer"],[3,"Proposals"],[3,"TitleScreen"],[3,"MainMenu"],[3,"About"],[3,"Screensaver"],[3,"CommuterPatterns"],[4,"BlockSelection"],[13,"Locked"],[3,"PanelState"],[3,"Block"],[3,"Filter"],[4,"BorderType"],[3,"Loop"],[3,"ActiveTraffic"],[3,"TransitRoutes"],[3,"ParkingOverhead"],[3,"Entry"],[3,"Filters"],[3,"RectangularSelector"],[3,"TripSummaries"],[3,"Filter"],[3,"TrafficSignalDemand"],[3,"Demand"],[3,"TripTable"],[3,"FinishedTrip"],[3,"CancelledTrip"],[3,"UnfinishedTrip"],[3,"Filters"],[4,"DashTab"],[3,"Actdev"],[3,"OptimizeCommute"],[3,"FixTrafficSignals"],[3,"AgentSpawner"],[3,"Freeform"],[3,"ChangeScenario"],[3,"PlayScenario"],[3,"EditScenarioModifiers"],[3,"ChangeMode"],[3,"Tutorial"],[3,"TutorialPointer"],[4,"Task"],[3,"Stage"],[3,"TutorialState"],[4,"GameplayMode"],[8,"GameplayState"],[4,"LoadScenario"],[3,"FinalScore"],[3,"RoutePreview"],[3,"TrafficRecorder"],[3,"TimePanel"],[4,"SpeedSetting"],[3,"JumpToTime"],[3,"TimeWarpScreen"],[3,"SandboxMode"],[3,"SandboxControls"],[3,"Actions"],[4,"LoadStage"],[3,"SandboxLoader"],[3,"Actions"],[3,"About"],[3,"MinimapController"],[3,"BackToMainMenu"]]},\
"generate_houses":{"doc":"Procedurally generates houses along empty residential …","i":[[5,"main","generate_houses","",null,[[]]],[5,"generate_buildings_on_empty_residential_roads","","",null,[[["map",3],["xorshiftrng",3],["timer",3]],[["vec",3],["polygon",3]]]],[5,"rand_dist","","",null,[[["f64",15],["xorshiftrng",3]],["distance",3]]]],"p":[]},\
"geojson_to_osmosis":{"doc":"","i":[[5,"main","geojson_to_osmosis","Reads GeoJSON input from STDIN, extracts a polygon from …",null,[[],["result",6]]],[5,"extract_boundaries","","",null,[[["geojson",4]],[["vec",3],["result",6]]]]],"p":[]},\
"geom":{"doc":"","i":[[0,"angle","geom","",null,null],[3,"Angle","geom::angle","An angle, stored in radians.",null,null],[12,"0","","",0,null],[18,"ZERO","","",0,null],[11,"new_rads","","Create an angle in radians.",0,[[["f64",15]],["angle",3]]],[11,"degrees","","Create an angle in degrees.",0,[[["f64",15]],["angle",3]]],[11,"opposite","","Invert the direction of this angle.",0,[[],["angle",3]]],[11,"invert_y","","",0,[[],["angle",3]]],[11,"rotate_degs","","Rotates this angle by some degrees.",0,[[["f64",15]],["angle",3]]],[11,"normalized_radians","","Returns [0, 2pi)",0,[[],["f64",15]]],[11,"normalized_degrees","","Returns [0, 360)",0,[[],["f64",15]]],[11,"simple_shortest_rotation_towards","","Returns [-180, 180]",0,[[["angle",3]],["f64",15]]],[11,"shortest_rotation_towards","","Logically this returns [-180, 180], but keep in mind when …",0,[[["angle",3]],["angle",3]]],[11,"approx_eq","","True if this angle is within some degrees of another, …",0,[[["f64",15],["angle",3]],["bool",15]]],[11,"reorient","","I don\'t know how to describe what this does. Use for …",0,[[],["angle",3]]],[0,"bounds","geom","",null,null],[3,"Bounds","geom::bounds","Represents a rectangular boundary of <code>Pt2D</code> points.",null,null],[12,"min_x","","",1,null],[12,"min_y","","",1,null],[12,"max_x","","",1,null],[12,"max_y","","",1,null],[11,"new","","A boundary including no points.",1,[[],["bounds",3]]],[11,"zero","","",1,[[]]],[11,"from","","Create a boundary covering some points.",1,[[["vec",3]],["bounds",3]]],[11,"update","","Update the boundary to include this point.",1,[[["pt2d",3]]]],[11,"union","","Unions two boundaries.",1,[[["bounds",3]]]],[11,"add_buffer","","Expand the existing boundary by some distance evenly on …",1,[[["distance",3]]]],[11,"contains","","True if the point is within the boundary.",1,[[["pt2d",3]],["bool",15]]],[11,"as_bbox","","Converts the boundary to the format used by <code>aabb_quadtree</code>.",1,[[],["rect",3]]],[11,"get_rectangle","","Creates a rectangle covering this boundary.",1,[[],["polygon",3]]],[11,"width","","The width of this boundary.",1,[[],["f64",15]]],[11,"height","","The height of this boundary.",1,[[],["f64",15]]],[11,"center","","The center point of this boundary.",1,[[],["pt2d",3]]],[3,"GPSBounds","","Represents a rectangular boundary of <code>LonLat</code> points. After …",null,null],[12,"min_lon","","",2,null],[12,"min_lat","","",2,null],[12,"max_lon","","",2,null],[12,"max_lat","","",2,null],[11,"new","","A boundary including no points.",2,[[],["gpsbounds",3]]],[11,"from","","Create a boundary covering some points.",2,[[["vec",3],["lonlat",3]],["gpsbounds",3]]],[11,"update","","Update the boundary to include this point.",2,[[["lonlat",3]]]],[11,"contains","","True if the point is within the boundary.",2,[[["lonlat",3]],["bool",15]]],[11,"get_max_world_pt","","The bottom-right corner of the boundary, in map-space.",2,[[],["pt2d",3]]],[11,"to_bounds","","Converts the boundary to map-space.",2,[[],["bounds",3]]],[11,"try_convert","","Convert all points to map-space, failing if any points …",2,[[["vec",3]],[["option",4],["vec",3]]]],[11,"convert","","Convert all points to map-space. The points may be …",2,[[["vec",3]],[["pt2d",3],["vec",3]]]],[11,"convert_back","","Convert map-space points back to <code>LonLat</code>s. This is only …",2,[[["vec",3]],[["vec",3],["lonlat",3]]]],[0,"circle","geom","",null,null],[17,"TRIANGLES_PER_CIRCLE","geom::circle","",null,null],[3,"Circle","","A circle, defined by a center and radius.",null,null],[12,"center","","",3,null],[12,"radius","","",3,null],[11,"new","","Creates a circle.",3,[[["distance",3],["pt2d",3]],["circle",3]]],[11,"contains_pt","","True if the point is inside the circle.",3,[[["pt2d",3]],["bool",15]]],[11,"get_bounds","","Get the boundary containing this circle.",3,[[],["bounds",3]]],[11,"to_polygon","","Renders the circle as a polygon.",3,[[],["polygon",3]]],[11,"to_partial_polygon","","Renders some percent, between [0, 1], of the circle as a …",3,[[["f64",15]],["polygon",3]]],[11,"to_ring","","Returns the ring around the circle.",3,[[],["ring",3]]],[11,"to_outline","","Creates an outline around the circle, strictly contained …",3,[[["distance",3]],[["polygon",3],["result",6]]]],[0,"distance","geom","",null,null],[3,"Distance","geom::distance","A distance, in meters. Can be negative.",null,null],[12,"0","","",4,null],[18,"ZERO","","",4,null],[11,"meters","","Creates a distance in meters.",4,[[["f64",15]],["distance",3]]],[11,"const_meters","","",4,[[["f64",15]],["distance",3]]],[11,"inches","","Creates a distance in inches.",4,[[["f64",15]],["distance",3]]],[11,"miles","","Creates a distance in miles.",4,[[["f64",15]],["distance",3]]],[11,"centimeters","","Creates a distance in centimeters.",4,[[["usize",15]],["distance",3]]],[11,"abs","","Returns the absolute value of this distance.",4,[[],["distance",3]]],[11,"sqrt","","Returns the square root of this distance.",4,[[],["distance",3]]],[11,"inner_meters","","Returns the distance in meters. Prefer to work with …",4,[[],["f64",15]]],[11,"to_feet","","Returns the distance in feet.",4,[[],["f64",15]]],[11,"to_string","","Describes the distance according to formatting rules.",4,[[["unitfmt",3]],["string",3]]],[0,"duration","geom","",null,null],[3,"Duration","geom::duration","A duration, in seconds. Can be negative.",null,null],[12,"0","","",5,null],[18,"ZERO","","",5,null],[18,"EPSILON","","",5,null],[11,"seconds","","Creates a duration in seconds.",5,[[["f64",15]],["duration",3]]],[11,"minutes","","Creates a duration in minutes.",5,[[["usize",15]],["duration",3]]],[11,"hours","","Creates a duration in hours.",5,[[["usize",15]],["duration",3]]],[11,"f64_minutes","","Creates a duration in minutes.",5,[[["f64",15]],["duration",3]]],[11,"const_seconds","","",5,[[["f64",15]],["duration",3]]],[11,"to_u64","","",5,[[],["u64",15]]],[11,"from_u64","","",5,[[["u64",15]],["duration",3]]],[11,"inner_seconds","","Returns the duration in seconds. Prefer working in …",5,[[],["f64",15]]],[11,"get_parts","","Splits the duration into (hours, minutes, seconds, …",5,[[]]],[11,"parse","","Parses a duration such as \\\"3:00\\\" to <code>Duration::minutes(3)</code>.",5,[[["str",15]],[["result",6],["duration",3]]]],[11,"epsilon_eq","","If two durations are within this amount, they\'ll print as …",5,[[["duration",3]],["bool",15]]],[11,"realtime_elapsed","","Returns the duration elapsed from this moment in real …",5,[[["instant",6]],["duration",3]]],[11,"round_up","","Rounds a duration up to the nearest whole number multiple.",5,[[["duration",3]],["duration",3]]],[11,"num_minutes_rounded_up","","Returns the duration as a number of minutes, rounded up.",5,[[],["usize",15]]],[11,"make_intervals_for_max","","Returns (rounded max, the boundaries in number of minutes)",5,[[["usize",15]]]],[11,"to_string","","Describes the duration according to formatting rules.",5,[[["unitfmt",3]],["string",3]]],[0,"find_closest","geom","",null,null],[3,"FindClosest","geom::find_closest","A quad-tree to quickly find the closest points to some …",null,null],[12,"geometries","","",6,null],[12,"quadtree","","",6,null],[11,"new","","Creates the quad-tree, limited to points contained in the …",6,[[["bounds",3]],["findclosest",3]]],[11,"add","","Add an object to the quadtree, remembering some key …",6,[[["vec",3]]]],[11,"all_close_pts","","For every object within some distance of a query point, …",6,[[["distance",3],["pt2d",3]],["vec",3]]],[11,"closest_pt","","Finds the closest point on the existing geometry to the …",6,[[["distance",3],["pt2d",3]],["option",4]]],[5,"pts_to_line_string","","",null,[[["vec",3]],[["f64",15],["linestring",3]]]],[0,"gps","geom","",null,null],[3,"LonLat","geom::gps","Represents a (longitude, latitude) point.",null,null],[12,"longitude","","",7,null],[12,"latitude","","",7,null],[11,"new","","Note the order of arguments!",7,[[["f64",15]],["lonlat",3]]],[11,"x","","Returns the longitude of this point.",7,[[],["f64",15]]],[11,"y","","Returns the latitude of this point.",7,[[],["f64",15]]],[11,"to_pt","","Transform this to a world-space point. Can go out of …",7,[[["gpsbounds",3]],["pt2d",3]]],[11,"gps_dist","","Returns the Haversine distance to another point.",7,[[["lonlat",3]],["distance",3]]],[11,"fast_dist","","Pretty meaningless units, for comparing distances very …",7,[[["lonlat",3]],[["f64",15],["notnan",3]]]],[11,"read_osmosis_polygon","","Parses a file in the …",7,[[["str",15]],[["result",6],["vec",3]]]],[11,"write_osmosis_polygon","","Writes a set of points to a file in the …",7,[[["vec",3],["str",15]],["result",6]]],[11,"center","","Finds the average of a set of coordinates.",7,[[["vec",3]],["lonlat",3]]],[0,"line","geom","",null,null],[3,"Line","geom::line","A line segment.",null,null],[12,"0","","",8,null],[12,"1","","",8,null],[11,"new","","Creates a line segment between two points. None if the …",8,[[["pt2d",3]],[["line",3],["option",4]]]],[11,"must_new","","Equivalent to <code>Line::new(pt1, pt2).unwrap()</code>. Use this to …",8,[[["pt2d",3]],["line",3]]],[11,"infinite","","Returns an infinite line passing through this line\'s two …",8,[[],["infiniteline",3]]],[11,"pt1","","Returns the first point in this line segment.",8,[[],["pt2d",3]]],[11,"pt2","","Returns the second point in this line segment.",8,[[],["pt2d",3]]],[11,"points","","Returns the two points in this line segment.",8,[[],[["pt2d",3],["vec",3]]]],[11,"to_polyline","","Returns a polyline containing these two points.",8,[[],["polyline",3]]],[11,"make_polygons","","Returns a thick line segment.",8,[[["distance",3]],["polygon",3]]],[11,"length","","Length of the line segment",8,[[],["distance",3]]],[11,"intersection","","If two line segments intersect -- including endpoints -- …",8,[[["line",3]],[["pt2d",3],["option",4]]]],[11,"crosses","","Determine if two line segments intersect, but more so …",8,[[["line",3]],["bool",15]]],[11,"intersection_infinite","","If the line segment intersects with an infinite line -- …",8,[[["infiniteline",3]],[["pt2d",3],["option",4]]]],[11,"shift_right","","Perpendicularly shifts the line over to the right. Width …",8,[[["distance",3]],["line",3]]],[11,"shift_left","","Perpendicularly shifts the line over to the left. Width …",8,[[["distance",3]],["line",3]]],[11,"shift_either_direction","","Perpendicularly shifts the line to the right if positive …",8,[[["distance",3]],["line",3]]],[11,"reverse","","Returns a reversed line segment",8,[[],["line",3]]],[11,"angle","","The angle of the line segment, from the first to the …",8,[[],["angle",3]]],[11,"dist_along","","Returns a point along the line segment, unless the …",8,[[["distance",3]],[["pt2d",3],["option",4]]]],[11,"must_dist_along","","Equivalent to <code>self.dist_along(dist).unwrap()</code>. Use this to …",8,[[["distance",3]],["pt2d",3]]],[11,"unbounded_dist_along","","",8,[[["distance",3]],["pt2d",3]]],[11,"unbounded_percent_along","","",8,[[["f64",15]],["pt2d",3]]],[11,"percent_along","","",8,[[["f64",15]],[["pt2d",3],["option",4]]]],[11,"slice","","",8,[[["distance",3]],[["line",3],["option",4]]]],[11,"middle","","",8,[[],[["pt2d",3],["option",4]]]],[11,"contains_pt","","",8,[[["pt2d",3]],["bool",15]]],[11,"dist_along_of_point","","",8,[[["pt2d",3]],[["option",4],["distance",3]]]],[11,"percent_along_of_point","","",8,[[["pt2d",3]],[["f64",15],["option",4]]]],[5,"is_counter_clockwise","","",null,[[["pt2d",3]],["bool",15]]],[3,"InfiniteLine","","",null,null],[12,"0","","",9,null],[12,"1","","",9,null],[11,"intersection","","Fails for parallel lines.",9,[[["infiniteline",3]],[["pt2d",3],["option",4]]]],[0,"percent","geom","",null,null],[3,"Percent","geom::percent","Most of the time, [0, 1]. But some callers may go outside …",null,null],[12,"0","","",10,null],[11,"inner","","",10,[[],["f64",15]]],[11,"int","","",10,[[["usize",15]],["percent",3]]],[11,"of","","",10,[[["usize",15]],["percent",3]]],[0,"polygon","geom","",null,null],[3,"Polygon","geom::polygon","",null,null],[12,"points","","",11,null],[12,"indices","","Groups of three indices make up the triangles",11,null],[12,"rings","","If the polygon has holes, explicitly store all the rings …",11,null],[11,"buggy_new","","",11,[[["pt2d",3],["vec",3]],["polygon",3]]],[11,"with_holes","","",11,[[["vec",3],["ring",3]],["polygon",3]]],[11,"from_rings","","",11,[[["vec",3],["ring",3]],["polygon",3]]],[11,"from_geojson","","",11,[[["vec",3]],[["polygon",3],["result",6]]]],[11,"precomputed","","",11,[[["usize",15],["vec",3],["pt2d",3],["vec",3]],["polygon",3]]],[11,"from_triangle","","",11,[[["triangle",3]],["polygon",3]]],[11,"triangles","","",11,[[],[["vec",3],["triangle",3]]]],[11,"raw_for_rendering","","",11,[[]]],[11,"contains_pt","","",11,[[["pt2d",3]],["bool",15]]],[11,"get_bounds","","",11,[[],["bounds",3]]],[11,"transform","","",11,[[["fn",8]],["polygon",3]]],[11,"translate","","",11,[[["f64",15]],["polygon",3]]],[11,"scale","","",11,[[["f64",15]],["polygon",3]]],[11,"scale_xy","","",11,[[["f64",15]],["polygon",3]]],[11,"rotate","","",11,[[["angle",3]],["polygon",3]]],[11,"rotate_around","","",11,[[["angle",3],["pt2d",3]],["polygon",3]]],[11,"points","","The order of these points depends on the constructor! The …",11,[[],["vec",3]]],[11,"into_points","","",11,[[],[["pt2d",3],["vec",3]]]],[11,"into_ring","","",11,[[],["ring",3]]],[11,"center","","",11,[[],["pt2d",3]]],[11,"rectangle","","Top-left at the origin. Doesn\'t take Distance, because …",11,[[["f64",15]],["polygon",3]]],[11,"rectangle_centered","","",11,[[["distance",3],["pt2d",3]],["polygon",3]]],[11,"rectangle_two_corners","","",11,[[["pt2d",3]],[["polygon",3],["option",4]]]],[11,"maybe_rounded_rectangle","","Top-left at the origin. Doesn\'t take Distance, because …",11,[[["f64",15],["cornerradii",3],["into",8]],[["polygon",3],["option",4]]]],[11,"pill","","A rectangle, two sides of which are fully rounded …",11,[[["f64",15]],["polygon",3]]],[11,"rounded_rectangle","","Top-left at the origin. Doesn\'t take Distance, because …",11,[[["f64",15],["cornerradii",3],["into",8]],["polygon",3]]],[11,"union","","",11,[[["polygon",3]],["polygon",3]]],[11,"union_all","","",11,[[["polygon",3],["vec",3]],["polygon",3]]],[11,"intersection","","",11,[[["polygon",3]],[["polygon",3],["vec",3]]]],[11,"convex_hull","","",11,[[["polygon",3],["vec",3]],["polygon",3]]],[11,"concave_hull","","",11,[[["f64",15],["polygon",3],["vec",3]],["polygon",3]]],[11,"polylabel","","",11,[[],["pt2d",3]]],[11,"intersects","","Do two polygons intersect at all?",11,[[["polygon",3]],["bool",15]]],[11,"to_outline","","Creates the outline around the polygon, with the …",11,[[["distance",3]],[["polygon",3],["result",6]]]],[11,"strip_rings","","Remove the internal rings used for to_outline. This is …",11,[[],["polygon",3]]],[11,"area","","Usually m^2, unless the polygon is in screen-space",11,[[],["f64",15]]],[11,"clip_polyline","","Doesn\'t handle multiple crossings in and out.",11,[[["polyline",3]],[["option",4],["vec",3]]]],[11,"clip_ring","","",11,[[["ring",3]],[["option",4],["vec",3]]]],[11,"to_geojson","","If the polygon is just a single outer ring, produces a …",11,[[["option",4],["gpsbounds",3]],["geometry",3]]],[3,"Triangle","","",null,null],[12,"pt1","","",12,null],[12,"pt2","","",12,null],[12,"pt3","","",12,null],[11,"new","","",12,[[["pt2d",3]],["triangle",3]]],[11,"contains_pt","","",12,[[["pt2d",3]],["bool",15]]],[5,"to_geo","","",null,[[["vec",3]],[["f64",15],["polygon",3]]]],[5,"from_multi","","",null,[[["multipolygon",3],["f64",15]],[["polygon",3],["vec",3]]]],[5,"downsize","","",null,[[["usize",15],["vec",3]],[["vec",3],["u16",15]]]],[0,"polyline","geom","",null,null],[17,"MITER_THRESHOLD","geom::polyline","",null,null],[4,"ArrowCap","","",null,null],[13,"Triangle","","",13,null],[3,"PolyLine","","",null,null],[12,"pts","","",14,null],[12,"length","","",14,null],[11,"new","","",14,[[["pt2d",3],["vec",3]],[["result",6],["polyline",3]]]],[11,"must_new","","",14,[[["pt2d",3],["vec",3]],["polyline",3]]],[11,"unchecked_new","","Doesn\'t check for duplicates. Use at your own risk.",14,[[["pt2d",3],["vec",3]],["polyline",3]]],[11,"deduping_new","","First dedupes adjacent points",14,[[["pt2d",3],["vec",3]],[["result",6],["polyline",3]]]],[11,"to_thick_ring","","Like make_polygons, but make sure the points actually …",14,[[["distance",3]],["ring",3]]],[11,"to_thick_boundary","","",14,[[["distance",3]],[["polygon",3],["option",4]]]],[11,"reversed","","",14,[[],["polyline",3]]],[11,"extend","","",14,[[["polyline",3]],[["result",6],["polyline",3]]]],[11,"must_extend","","",14,[[["polyline",3]],["polyline",3]]],[11,"must_push","","",14,[[["pt2d",3]],["polyline",3]]],[11,"append","","One or both args might be empty.",14,[[["pt2d",3],["vec",3]],[["result",6],["vec",3]]]],[11,"points","","",14,[[],["vec",3]]],[11,"into_points","","",14,[[],[["pt2d",3],["vec",3]]]],[11,"lines","","",14,[[]]],[11,"length","","",14,[[],["distance",3]]],[11,"slice","","Returns the excess distance left over from the end",14,[[["distance",3]],["result",6]]],[11,"exact_slice","","No excess leftover distance allowed.",14,[[["distance",3]],["polyline",3]]],[11,"maybe_exact_slice","","",14,[[["distance",3]],[["result",6],["polyline",3]]]],[11,"first_half","","",14,[[],["polyline",3]]],[11,"second_half","","",14,[[],["polyline",3]]],[11,"dist_along","","",14,[[["distance",3]],["result",6]]],[11,"must_dist_along","","",14,[[["distance",3]]]],[11,"middle","","",14,[[],["pt2d",3]]],[11,"first_pt","","",14,[[],["pt2d",3]]],[11,"last_pt","","",14,[[],["pt2d",3]]],[11,"first_line","","",14,[[],["line",3]]],[11,"last_line","","",14,[[],["line",3]]],[11,"shift_right","","",14,[[["distance",3]],[["result",6],["polyline",3]]]],[11,"must_shift_right","","",14,[[["distance",3]],["polyline",3]]],[11,"shift_left","","",14,[[["distance",3]],[["result",6],["polyline",3]]]],[11,"must_shift_left","","",14,[[["distance",3]],["polyline",3]]],[11,"shift_with_corrections","","",14,[[["distance",3]],[["result",6],["polyline",3]]]],[11,"shift_with_sharp_angles","","",14,[[["f64",15],["distance",3]],[["pt2d",3],["vec",3]]]],[11,"make_polygons","","The resulting polygon is manually triangulated and may …",14,[[["distance",3]],["polygon",3]]],[11,"make_polygons_with_miter_threshold","","The resulting polygon is manually triangulated and may …",14,[[["f64",15],["distance",3]],["polygon",3]]],[11,"exact_dashed_polygons","","",14,[[["distance",3]],[["polygon",3],["vec",3]]]],[11,"dashed_lines","","Don\'t draw the dashes too close to the ends.",14,[[["distance",3]],[["polygon",3],["vec",3]]]],[11,"maybe_make_arrow","","Fail if the length is too short.",14,[[["distance",3],["arrowcap",4]],[["polygon",3],["option",4]]]],[11,"make_arrow","","If the length is too short, just give up and make the …",14,[[["distance",3],["arrowcap",4]],["polygon",3]]],[11,"make_double_arrow","","",14,[[["distance",3],["arrowcap",4]],["polygon",3]]],[11,"dashed_arrow","","",14,[[["distance",3],["arrowcap",4]],[["polygon",3],["vec",3]]]],[11,"intersection","","Also return the angle of the line where the hit was found",14,[[["polyline",3]],["option",4]]],[11,"intersection_infinite","","",14,[[["infiniteline",3]],[["pt2d",3],["option",4]]]],[11,"get_slice_ending_at","","Panics if the pt is not on the polyline. Returns None if …",14,[[["pt2d",3]],[["option",4],["polyline",3]]]],[11,"get_slice_starting_at","","Returns None if the point is the last point.",14,[[["pt2d",3]],[["option",4],["polyline",3]]]],[11,"dist_along_of_point","","",14,[[["pt2d",3]],["option",4]]],[11,"trim_to_endpts","","",14,[[["pt2d",3]],["polyline",3]]],[11,"get_bounds","","",14,[[],["bounds",3]]],[11,"extend_to_length","","If the current line is at least this long, return it. …",14,[[["distance",3]],["polyline",3]]],[11,"to_geojson","","Produces a GeoJSON linestring, optionally mapping the …",14,[[["option",4],["gpsbounds",3]],["geometry",3]]],[11,"project_pt","","Returns the point on the polyline closest to the query.",14,[[["pt2d",3]],["pt2d",3]]],[5,"fix_angles","","",null,[[["polyline",3],["polyline",3]],[["result",6],["polyline",3]]]],[5,"to_set","","",null,[[]]],[5,"pts_to_line_string","","",null,[[["vec",3]],[["f64",15],["linestring",3]]]],[0,"pt","geom","",null,null],[3,"Pt2D","geom::pt","This represents world-space in meters.",null,null],[12,"x","","",15,null],[12,"y","","",15,null],[11,"new","","",15,[[["f64",15]],["pt2d",3]]],[11,"zero","","",15,[[]]],[11,"approx_eq","","",15,[[["distance",3],["pt2d",3]],["bool",15]]],[11,"to_gps","","Can go out of bounds.",15,[[["gpsbounds",3]],["lonlat",3]]],[11,"x","","",15,[[],["f64",15]]],[11,"y","","",15,[[],["f64",15]]],[11,"project_away","","",15,[[["distance",3],["angle",3]],["pt2d",3]]],[11,"raw_dist_to","","",15,[[["pt2d",3]],["f64",15]]],[11,"dist_to","","",15,[[["pt2d",3]],["distance",3]]],[11,"fast_dist","","Pretty meaningless units, for comparing distances very …",15,[[["pt2d",3]],[["f64",15],["notnan",3]]]],[11,"angle_to","","",15,[[["pt2d",3]],["angle",3]]],[11,"offset","","",15,[[["f64",15]],["pt2d",3]]],[11,"center","","",15,[[["vec",3]],["pt2d",3]]],[11,"approx_dedupe","","",15,[[["distance",3],["pt2d",3],["vec",3]],[["pt2d",3],["vec",3]]]],[11,"find_pts_between","","",15,[[["distance",3],["pt2d",3],["vec",3]],[["option",4],["vec",3]]]],[11,"to_hashable","","",15,[[],["hashablept2d",3]]],[3,"HashablePt2D","","This represents world space, NOT LonLat.",null,null],[12,"x_nan","","",16,null],[12,"y_nan","","",16,null],[11,"to_pt2d","","",16,[[],["pt2d",3]]],[0,"ring","geom","",null,null],[3,"Ring","geom::ring","Maybe a misnomer, but like a PolyLine, but closed.",null,null],[12,"pts","","",17,null],[11,"new","","",17,[[["pt2d",3],["vec",3]],[["result",6],["ring",3]]]],[11,"must_new","","",17,[[["pt2d",3],["vec",3]],["ring",3]]],[11,"to_outline","","Draws the ring with some thickness, with half of it …",17,[[["distance",3]],["polygon",3]]],[11,"to_polygon","","",17,[[],["polygon",3]]],[11,"points","","",17,[[],["vec",3]]],[11,"into_points","","",17,[[],[["pt2d",3],["vec",3]]]],[11,"all_intersections","","Be careful with the order of results. Hits on an earlier …",17,[[["polyline",3]],[["pt2d",3],["vec",3]]]],[11,"get_both_slices_btwn","","",17,[[["pt2d",3]],["option",4]]],[11,"get_shorter_slice_btwn","","",17,[[["pt2d",3]],[["option",4],["polyline",3]]]],[11,"split_points","","Extract all PolyLines and Rings. Doesn\'t handle crazy …",17,[[["vec",3]],["result",6]]],[11,"contains_pt","","",17,[[["pt2d",3]],["bool",15]]],[11,"to_geojson","","Produces a GeoJSON polygon, optionally mapping the …",17,[[["option",4],["gpsbounds",3]],["geometry",3]]],[11,"translate","","Translates the ring by a fixed offset.",17,[[["f64",15]],["ring",3]]],[0,"speed","geom","",null,null],[3,"Speed","geom::speed","In meters per second. Can be negative.",null,null],[12,"0","","",18,null],[18,"ZERO","","",18,null],[11,"meters_per_second","","",18,[[["f64",15]],["speed",3]]],[11,"const_meters_per_second","","",18,[[["f64",15]],["speed",3]]],[11,"miles_per_hour","","",18,[[["f64",15]],["speed",3]]],[11,"km_per_hour","","",18,[[["f64",15]],["speed",3]]],[11,"from_dist_time","","",18,[[["distance",3],["duration",3]],["speed",3]]],[11,"inner_meters_per_second","","",18,[[],["f64",15]]],[11,"to_string","","Describes the speed according to formatting rules.",18,[[["unitfmt",3]],["string",3]]],[0,"stats","geom","",null,null],[4,"Statistic","geom::stats","",null,null],[13,"Min","","",19,null],[13,"Mean","","",19,null],[13,"P50","","",19,null],[13,"P90","","",19,null],[13,"P99","","",19,null],[13,"Max","","",19,null],[11,"all","","",19,[[],[["vec",3],["statistic",4]]]],[8,"HgramValue","","",null,null],[10,"hgram_zero","","",20,[[]]],[10,"to_u64","","",20,[[],["u64",15]]],[10,"from_u64","","",20,[[["u64",15]]]],[3,"Histogram","","",null,null],[12,"count","","",21,null],[12,"histogram","","",21,null],[12,"min","","",21,null],[12,"max","","",21,null],[11,"new","","",21,[[],["histogram",3]]],[11,"add","","",21,[[]]],[11,"remove","","",21,[[]]],[11,"describe","","",21,[[],["string",3]]],[11,"percentile","","None if empty",21,[[["f64",15]],["option",4]]],[11,"select","","",21,[[["statistic",4]],["option",4]]],[11,"count","","",21,[[],["usize",15]]],[11,"seems_eq","","Could implement PartialEq, but be a bit more clear how …",21,[[["histogram",3]],["bool",15]]],[0,"time","geom","",null,null],[3,"Time","geom::time","In seconds since midnight. Can\'t be negative.",null,null],[12,"0","","",22,null],[18,"START_OF_DAY","","",22,null],[11,"seconds_since_midnight","","",22,[[["f64",15]],["time",3]]],[11,"get_parts","","(hours, minutes, seconds, centiseconds)",22,[[]]],[11,"get_hours","","Rounded down. 6:59:00 is hour 6.",22,[[],["usize",15]]],[11,"ampm_tostring","","",22,[[],["string",3]]],[11,"as_filename","","",22,[[],["string",3]]],[11,"parse","","",22,[[["str",15]],[["time",3],["result",6]]]],[11,"percent_of","","",22,[[["f64",15]],["time",3]]],[11,"to_percent","","",22,[[["time",3]],["f64",15]]],[11,"inner_seconds","","For RNG range generation. Don\'t abuse.",22,[[],["f64",15]]],[11,"clamped_sub","","",22,[[["duration",3]],["time",3]]],[11,"round_seconds","","",22,[[["f64",15]],["time",3]]],[3,"Angle","geom","An angle, stored in radians.",null,null],[12,"0","","",0,null],[3,"Bounds","","Represents a rectangular boundary of <code>Pt2D</code> points.",null,null],[12,"min_x","","",1,null],[12,"min_y","","",1,null],[12,"max_x","","",1,null],[12,"max_y","","",1,null],[3,"GPSBounds","","Represents a rectangular boundary of <code>LonLat</code> points. After …",null,null],[12,"min_lon","","",2,null],[12,"min_lat","","",2,null],[12,"max_lon","","",2,null],[12,"max_lat","","",2,null],[3,"Circle","","A circle, defined by a center and radius.",null,null],[12,"center","","",3,null],[12,"radius","","",3,null],[3,"Distance","","A distance, in meters. Can be negative.",null,null],[12,"0","","",4,null],[3,"Duration","","A duration, in seconds. Can be negative.",null,null],[12,"0","","",5,null],[3,"FindClosest","","A quad-tree to quickly find the closest points to some …",null,null],[12,"geometries","","",6,null],[12,"quadtree","","",6,null],[3,"LonLat","","Represents a (longitude, latitude) point.",null,null],[12,"longitude","","",7,null],[12,"latitude","","",7,null],[3,"InfiniteLine","","",null,null],[12,"0","","",9,null],[12,"1","","",9,null],[3,"Line","","A line segment.",null,null],[12,"0","","",8,null],[12,"1","","",8,null],[3,"Percent","","Most of the time, [0, 1]. But some callers may go outside …",null,null],[12,"0","","",10,null],[3,"Polygon","","",null,null],[12,"points","","",11,null],[12,"indices","","Groups of three indices make up the triangles",11,null],[12,"rings","","If the polygon has holes, explicitly store all the rings …",11,null],[3,"Triangle","","",null,null],[12,"pt1","","",12,null],[12,"pt2","","",12,null],[12,"pt3","","",12,null],[4,"ArrowCap","","",null,null],[13,"Triangle","","",13,null],[3,"PolyLine","","",null,null],[12,"pts","","",14,null],[12,"length","","",14,null],[3,"HashablePt2D","","This represents world space, NOT LonLat.",null,null],[12,"x_nan","","",16,null],[12,"y_nan","","",16,null],[3,"Pt2D","","This represents world-space in meters.",null,null],[12,"x","","",15,null],[12,"y","","",15,null],[3,"Ring","","Maybe a misnomer, but like a PolyLine, but closed.",null,null],[12,"pts","","",17,null],[3,"Speed","","In meters per second. Can be negative.",null,null],[12,"0","","",18,null],[8,"HgramValue","","",null,null],[10,"hgram_zero","","",20,[[]]],[10,"to_u64","","",20,[[],["u64",15]]],[10,"from_u64","","",20,[[["u64",15]]]],[3,"Histogram","","",null,null],[12,"count","","",21,null],[12,"histogram","","",21,null],[12,"min","","",21,null],[12,"max","","",21,null],[4,"Statistic","","",null,null],[13,"Min","","",19,null],[13,"Mean","","",19,null],[13,"P50","","",19,null],[13,"P90","","",19,null],[13,"P99","","",19,null],[13,"Max","","",19,null],[3,"Time","","In seconds since midnight. Can\'t be negative.",null,null],[12,"0","","",22,null],[17,"EPSILON_DIST","","",null,null],[5,"trim_f64","","Reduce the precision of an f64. This helps ensure …",null,[[["f64",15]],["f64",15]]],[3,"UnitFmt","","Specifies how to stringify different geom objects.",null,null],[12,"round_durations","","Round <code>Duration</code>s to a whole number of seconds.",23,null],[12,"metric","","Display in metric; US imperial otherwise.",23,null],[3,"CornerRadii","","",null,null],[12,"top_left","","",24,null],[12,"top_right","","",24,null],[12,"bottom_right","","",24,null],[12,"bottom_left","","",24,null],[11,"uniform","","",24,[[["f64",15]]]],[11,"zero","","",24,[[]]],[11,"from","geom::angle","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","geom::bounds","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","geom::circle","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","geom::distance","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","geom::duration","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","geom::find_closest","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","geom::gps","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","geom::line","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","geom::percent","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","geom::polygon","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","geom::polyline","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","geom::pt","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","geom::ring","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","geom::speed","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","geom::stats","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","geom::time","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","geom","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"hgram_zero","geom::duration","",5,[[],["duration",3]]],[11,"to_u64","","",5,[[],["u64",15]]],[11,"from_u64","","",5,[[["u64",15]],["duration",3]]],[11,"from","geom::polygon","",11,[[["f64",15],["polygon",3]]]],[11,"from","geom::pt","",15,[[["f64",15],["coordinate",3]]]],[11,"from","","",15,[[["f64",15],["point",3]]]],[11,"from","geom::ring","",17,[[["f64",15],["linestring",3]]]],[11,"from","geom","",24,[[["f64",15]]]],[11,"clone","geom::angle","",0,[[],["angle",3]]],[11,"clone","geom::bounds","",1,[[],["bounds",3]]],[11,"clone","","",2,[[],["gpsbounds",3]]],[11,"clone","geom::circle","",3,[[],["circle",3]]],[11,"clone","geom::distance","",4,[[],["distance",3]]],[11,"clone","geom::duration","",5,[[],["duration",3]]],[11,"clone","geom::gps","",7,[[],["lonlat",3]]],[11,"clone","geom::line","",8,[[],["line",3]]],[11,"clone","","",9,[[],["infiniteline",3]]],[11,"clone","geom::percent","",10,[[],["percent",3]]],[11,"clone","geom::polygon","",11,[[],["polygon",3]]],[11,"clone","","",12,[[],["triangle",3]]],[11,"clone","geom::polyline","",14,[[],["polyline",3]]],[11,"clone","geom::pt","",15,[[],["pt2d",3]]],[11,"clone","","",16,[[],["hashablept2d",3]]],[11,"clone","geom::ring","",17,[[],["ring",3]]],[11,"clone","geom::speed","",18,[[],["speed",3]]],[11,"clone","geom::stats","",19,[[],["statistic",4]]],[11,"clone","","",21,[[],["histogram",3]]],[11,"clone","geom::time","",22,[[],["time",3]]],[11,"clone","geom","",23,[[],["unitfmt",3]]],[11,"clone","","",24,[[],["cornerradii",3]]],[11,"default","geom::distance","",4,[[],["distance",3]]],[11,"default","geom::duration","",5,[[],["duration",3]]],[11,"default","geom::stats","",21,[[],["histogram",3]]],[11,"default","geom","",24,[[]]],[11,"cmp","geom::distance","",4,[[["distance",3]],["ordering",4]]],[11,"cmp","geom::duration","",5,[[["duration",3]],["ordering",4]]],[11,"cmp","geom::gps","",7,[[["lonlat",3]],["ordering",4]]],[11,"cmp","geom::pt","",16,[[["hashablept2d",3]],["ordering",4]]],[11,"cmp","geom::speed","",18,[[["speed",3]],["ordering",4]]],[11,"cmp","geom::stats","",19,[[["statistic",4]],["ordering",4]]],[11,"cmp","geom::time","",22,[[["time",3]],["ordering",4]]],[11,"eq","geom::angle","",0,[[["angle",3]],["bool",15]]],[11,"ne","","",0,[[["angle",3]],["bool",15]]],[11,"eq","geom::bounds","",1,[[["bounds",3]],["bool",15]]],[11,"ne","","",1,[[["bounds",3]],["bool",15]]],[11,"eq","","",2,[[["gpsbounds",3]],["bool",15]]],[11,"ne","","",2,[[["gpsbounds",3]],["bool",15]]],[11,"eq","geom::distance","",4,[[["distance",3]],["bool",15]]],[11,"ne","","",4,[[["distance",3]],["bool",15]]],[11,"eq","geom::duration","",5,[[["duration",3]],["bool",15]]],[11,"ne","","",5,[[["duration",3]],["bool",15]]],[11,"eq","geom::gps","",7,[[["lonlat",3]],["bool",15]]],[11,"ne","","",7,[[["lonlat",3]],["bool",15]]],[11,"eq","geom::line","",8,[[["line",3]],["bool",15]]],[11,"ne","","",8,[[["line",3]],["bool",15]]],[11,"eq","geom::percent","",10,[[["percent",3]],["bool",15]]],[11,"ne","","",10,[[["percent",3]],["bool",15]]],[11,"eq","geom::polygon","",11,[[["polygon",3]],["bool",15]]],[11,"ne","","",11,[[["polygon",3]],["bool",15]]],[11,"eq","geom::polyline","",14,[[["polyline",3]],["bool",15]]],[11,"ne","","",14,[[["polyline",3]],["bool",15]]],[11,"eq","geom::pt","",15,[[["pt2d",3]],["bool",15]]],[11,"eq","","",16,[[["hashablept2d",3]],["bool",15]]],[11,"ne","","",16,[[["hashablept2d",3]],["bool",15]]],[11,"eq","geom::ring","",17,[[["ring",3]],["bool",15]]],[11,"ne","","",17,[[["ring",3]],["bool",15]]],[11,"eq","geom::speed","",18,[[["speed",3]],["bool",15]]],[11,"ne","","",18,[[["speed",3]],["bool",15]]],[11,"eq","geom::stats","",19,[[["statistic",4]],["bool",15]]],[11,"eq","geom::time","",22,[[["time",3]],["bool",15]]],[11,"ne","","",22,[[["time",3]],["bool",15]]],[11,"partial_cmp","geom::angle","",0,[[["angle",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["angle",3]],["bool",15]]],[11,"le","","",0,[[["angle",3]],["bool",15]]],[11,"gt","","",0,[[["angle",3]],["bool",15]]],[11,"ge","","",0,[[["angle",3]],["bool",15]]],[11,"partial_cmp","geom::distance","",4,[[["distance",3]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["distance",3]],["bool",15]]],[11,"le","","",4,[[["distance",3]],["bool",15]]],[11,"gt","","",4,[[["distance",3]],["bool",15]]],[11,"ge","","",4,[[["distance",3]],["bool",15]]],[11,"partial_cmp","geom::duration","",5,[[["duration",3]],[["option",4],["ordering",4]]]],[11,"lt","","",5,[[["duration",3]],["bool",15]]],[11,"le","","",5,[[["duration",3]],["bool",15]]],[11,"gt","","",5,[[["duration",3]],["bool",15]]],[11,"ge","","",5,[[["duration",3]],["bool",15]]],[11,"partial_cmp","geom::gps","",7,[[["lonlat",3]],[["option",4],["ordering",4]]]],[11,"lt","","",7,[[["lonlat",3]],["bool",15]]],[11,"le","","",7,[[["lonlat",3]],["bool",15]]],[11,"gt","","",7,[[["lonlat",3]],["bool",15]]],[11,"ge","","",7,[[["lonlat",3]],["bool",15]]],[11,"partial_cmp","geom::pt","",16,[[["hashablept2d",3]],[["option",4],["ordering",4]]]],[11,"lt","","",16,[[["hashablept2d",3]],["bool",15]]],[11,"le","","",16,[[["hashablept2d",3]],["bool",15]]],[11,"gt","","",16,[[["hashablept2d",3]],["bool",15]]],[11,"ge","","",16,[[["hashablept2d",3]],["bool",15]]],[11,"partial_cmp","geom::speed","",18,[[["speed",3]],[["option",4],["ordering",4]]]],[11,"lt","","",18,[[["speed",3]],["bool",15]]],[11,"le","","",18,[[["speed",3]],["bool",15]]],[11,"gt","","",18,[[["speed",3]],["bool",15]]],[11,"ge","","",18,[[["speed",3]],["bool",15]]],[11,"partial_cmp","geom::stats","",19,[[["statistic",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","geom::time","",22,[[["time",3]],[["option",4],["ordering",4]]]],[11,"lt","","",22,[[["time",3]],["bool",15]]],[11,"le","","",22,[[["time",3]],["bool",15]]],[11,"gt","","",22,[[["time",3]],["bool",15]]],[11,"ge","","",22,[[["time",3]],["bool",15]]],[11,"fmt","geom::angle","",0,[[["formatter",3]],["result",6]]],[11,"fmt","geom::bounds","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","geom::circle","",3,[[["formatter",3]],["result",6]]],[11,"fmt","geom::distance","",4,[[["formatter",3]],["result",6]]],[11,"fmt","geom::duration","",5,[[["formatter",3]],["result",6]]],[11,"fmt","geom::gps","",7,[[["formatter",3]],["result",6]]],[11,"fmt","geom::line","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","geom::polygon","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","geom::polyline","",14,[[["formatter",3]],["result",6]]],[11,"fmt","geom::pt","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","geom::ring","",17,[[["formatter",3]],["result",6]]],[11,"fmt","geom::speed","",18,[[["formatter",3]],["result",6]]],[11,"fmt","geom::time","",22,[[["formatter",3]],["result",6]]],[11,"fmt","geom","",24,[[["formatter",3]],["result",6]]],[11,"fmt","geom::angle","",0,[[["formatter",3]],["result",6]]],[11,"fmt","geom::circle","",3,[[["formatter",3]],["result",6]]],[11,"fmt","geom::distance","",4,[[["formatter",3]],["result",6]]],[11,"fmt","geom::duration","",5,[[["formatter",3]],["result",6]]],[11,"fmt","geom::gps","",7,[[["formatter",3]],["result",6]]],[11,"fmt","geom::line","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","geom::percent","",10,[[["formatter",3]],["result",6]]],[11,"fmt","geom::polygon","",11,[[["formatter",3]],["result",6]]],[11,"fmt","geom::polyline","",14,[[["formatter",3]],["result",6]]],[11,"fmt","geom::pt","",15,[[["formatter",3]],["result",6]]],[11,"fmt","geom::ring","",17,[[["formatter",3]],["result",6]]],[11,"fmt","geom::stats","",19,[[["formatter",3]],["result",6]]],[11,"fmt","geom::time","",22,[[["formatter",3]],["result",6]]],[11,"div","geom::angle","",0,[[["f64",15]],["angle",3]]],[11,"div","geom::distance","",4,[[["distance",3]],["f64",15]]],[11,"div","","",4,[[["f64",15]],["distance",3]]],[11,"div","","",4,[[["speed",3]],["duration",3]]],[11,"div","geom::duration","",5,[[["duration",3]],["f64",15]]],[11,"div","","",5,[[["f64",15]],["duration",3]]],[11,"div","geom::speed","",18,[[["speed",3]],["f64",15]]],[11,"rem","geom::duration","",5,[[["duration",3]],["duration",3]]],[11,"sub","geom::distance","",4,[[["distance",3]],["distance",3]]],[11,"sub","geom::duration","",5,[[["duration",3]],["duration",3]]],[11,"sub","geom::speed","",18,[[["speed",3]],["speed",3]]],[11,"sub","geom::time","",22,[[["duration",3]],["time",3]]],[11,"sub","","",22,[[["time",3]],["duration",3]]],[11,"add","geom::angle","",0,[[["angle",3]],["angle",3]]],[11,"add","geom::distance","",4,[[["distance",3]],["distance",3]]],[11,"add","geom::duration","",5,[[["duration",3]],["duration",3]]],[11,"add","geom::speed","",18,[[["speed",3]],["speed",3]]],[11,"add","geom::time","",22,[[["duration",3]],["time",3]]],[11,"mul","geom::distance","",4,[[["f64",15]],["distance",3]]],[11,"mul","geom::duration","",5,[[["f64",15]],["duration",3]]],[11,"mul","","",5,[[["speed",3]],["distance",3]]],[11,"mul","geom::speed","",18,[[["f64",15]],["speed",3]]],[11,"mul","","",18,[[["duration",3]],["distance",3]]],[11,"neg","geom::angle","",0,[[],["angle",3]]],[11,"neg","geom::distance","",4,[[],["distance",3]]],[11,"neg","geom::speed","",18,[[],["speed",3]]],[11,"add_assign","geom::distance","",4,[[["distance",3]]]],[11,"add_assign","geom::duration","",5,[[["duration",3]]]],[11,"add_assign","geom::time","",22,[[["duration",3]]]],[11,"sub_assign","geom::distance","",4,[[["distance",3]]]],[11,"sub_assign","geom::duration","",5,[[["duration",3]]]],[11,"hash","geom::pt","",16,[[]]],[11,"hash","geom::time","",22,[[]]],[11,"sum","geom::angle","",0,[[],["angle",3]]],[11,"sum","geom::distance","",4,[[],["distance",3]]],[11,"sum","geom::duration","",5,[[],["duration",3]]],[11,"serialize","geom::angle","",0,[[],["result",4]]],[11,"serialize","geom::bounds","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","geom::circle","",3,[[],["result",4]]],[11,"serialize","geom::distance","",4,[[],["result",4]]],[11,"serialize","geom::duration","",5,[[],["result",4]]],[11,"serialize","geom::gps","",7,[[],["result",4]]],[11,"serialize","geom::line","",8,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","geom::polygon","",11,[[],["result",4]]],[11,"serialize","geom::polyline","",14,[[],["result",4]]],[11,"serialize","geom::pt","",15,[[],["result",4]]],[11,"serialize","geom::ring","",17,[[],["result",4]]],[11,"serialize","geom::speed","",18,[[],["result",4]]],[11,"serialize","geom::stats","",19,[[],["result",4]]],[11,"serialize","geom::time","",22,[[],["result",4]]],[11,"deserialize","geom::angle","",0,[[],["result",4]]],[11,"deserialize","geom::bounds","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","geom::circle","",3,[[],["result",4]]],[11,"deserialize","geom::distance","",4,[[],["result",4]]],[11,"deserialize","geom::duration","",5,[[],["result",4]]],[11,"deserialize","geom::gps","",7,[[],["result",4]]],[11,"deserialize","geom::line","",8,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","geom::polygon","",11,[[],["result",4]]],[11,"deserialize","geom::polyline","",14,[[],["result",4]]],[11,"deserialize","geom::pt","",15,[[],["result",4]]],[11,"deserialize","geom::ring","",17,[[],["result",4]]],[11,"deserialize","geom::speed","",18,[[],["result",4]]],[11,"deserialize","geom::stats","",19,[[],["result",4]]],[11,"deserialize","geom::time","",22,[[],["result",4]]]],"p":[[3,"Angle"],[3,"Bounds"],[3,"GPSBounds"],[3,"Circle"],[3,"Distance"],[3,"Duration"],[3,"FindClosest"],[3,"LonLat"],[3,"Line"],[3,"InfiniteLine"],[3,"Percent"],[3,"Polygon"],[3,"Triangle"],[4,"ArrowCap"],[3,"PolyLine"],[3,"Pt2D"],[3,"HashablePt2D"],[3,"Ring"],[3,"Speed"],[4,"Statistic"],[8,"HgramValue"],[3,"Histogram"],[3,"Time"],[3,"UnitFmt"],[3,"CornerRadii"]]},\
"headless":{"doc":"","i":[[3,"MAP","headless","",null,null],[12,"__private_field","","",0,null],[3,"SIM","","",null,null],[12,"__private_field","","",1,null],[3,"LOAD","","",null,null],[12,"__private_field","","",2,null],[5,"main","","",null,[[]]],[5,"serve_req","","",null,[[["body",3],["request",3]]]],[5,"handle_command","","",null,[[["hashmap",3],["vec",3],["sim",3],["loadsim",3],["map",3],["str",15]],[["result",6],["string",3]]]],[3,"FinishedTrip","","",null,null],[12,"id","","",3,null],[12,"person","","",3,null],[12,"duration","","",3,null],[12,"distance_crossed","","",3,null],[12,"mode","","",3,null],[12,"capped","","",3,null],[3,"Delays","","",null,null],[12,"per_direction","","",4,null],[3,"Throughput","","",null,null],[12,"per_direction","","",5,null],[3,"AgentPositions","","",null,null],[12,"agents","","",6,null],[3,"AgentPosition","","",null,null],[12,"id","","The agent\'s ID",7,null],[12,"trip","","None for buses",7,null],[12,"person","","None for buses",7,null],[12,"vehicle_type","","None for pedestrians",7,null],[12,"pos","","The agent\'s current position. For pedestrians, this is …",7,null],[12,"distance_crossed","","The distance crossed so far by the agent, in meters. …",7,null],[3,"RoadThroughput","","",null,null],[12,"counts","","",8,null],[3,"TrafficSignalState","","",null,null],[12,"current_stage_idx","","",9,null],[12,"remaining_time","","",9,null],[12,"accepted","","",9,null],[12,"waiting","","",9,null],[3,"BlockedByGraph","","",null,null],[12,"blocked_by","","Each entry indicates that some agent has been stuck in …",10,null],[3,"LoadSim","","",null,null],[12,"scenario","","",11,null],[12,"modifiers","","",11,null],[12,"edits","","",11,null],[12,"rng_seed","","",11,null],[12,"opts","","",11,null],[11,"setup","","",11,[[["timer",3]]]],[5,"export_geometry","","",null,[[["intersectionid",3],["map",3]],["geojson",4]]],[5,"export_all_geometry","","",null,[[["map",3]],["geojson",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_any","","",0,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"into_any","","",1,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"into_any","","",2,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any_arc","","",2,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"into_any","","",3,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"into_any_arc","","",3,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"into_any","","",4,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"into_any_arc","","",4,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"into_any","","",5,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"into_any_arc","","",5,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"into_any","","",6,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"into_any_arc","","",6,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"into_any","","",7,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"into_any_arc","","",7,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"into_any","","",8,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"into_any_arc","","",8,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"into_any","","",9,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"into_any_arc","","",9,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"into_any","","",10,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"into_any_arc","","",10,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"into_any","","",11,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"into_any_arc","","",11,[[["arc",3]],[["arc",3],["any",8]]]],[11,"deref","","",0,[[],["rwlock",3]]],[11,"deref","","",1,[[],["rwlock",3]]],[11,"deref","","",2,[[],["rwlock",3]]],[11,"initialize","","",0,[[]]],[11,"initialize","","",1,[[]]],[11,"initialize","","",2,[[]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]]],"p":[[3,"MAP"],[3,"SIM"],[3,"LOAD"],[3,"FinishedTrip"],[3,"Delays"],[3,"Throughput"],[3,"AgentPositions"],[3,"AgentPosition"],[3,"RoadThroughput"],[3,"TrafficSignalState"],[3,"BlockedByGraph"],[3,"LoadSim"]]},\
"import_traffic":{"doc":"","i":[[5,"main","import_traffic","",null,[[]]],[3,"Input","","",null,null],[12,"scenario_name","","",0,null],[12,"people","","",0,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_any","","",0,[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"deserialize","","",0,[[],["result",4]]]],"p":[[3,"Input"]]},\
"importer":{"doc":"It\'s assumed that the importer is run with the current …","i":[[0,"berlin","importer","",null,null],[5,"import_extra_data","importer::berlin","",null,[[["rawmap",3],["importerconfiguration",3],["timer",3]]]],[5,"correlate_population","","",null,[[["string",3],["timer",3]]]],[3,"Record","","",null,null],[12,"raumid","","",0,null],[12,"e_e","","",0,null],[5,"distribute_residents","","",null,[[["map",3],["timer",3]]]],[0,"configuration","importer","",null,null],[3,"ImporterConfiguration","importer::configuration","",null,null],[12,"osmconvert","","",1,null],[12,"unzip","","",1,null],[12,"gunzip","","",1,null],[12,"gunzip_args","","",1,null],[5,"load_configuration","","",null,[[],["importerconfiguration",3]]],[0,"dependencies","importer","",null,null],[5,"are_dependencies_callable","importer::dependencies","",null,[[["importerconfiguration",3]],["bool",15]]],[5,"is_program_callable","","",null,[[["osstr",3],["asref",8]],["bool",15]]],[0,"generic","importer","",null,null],[3,"GenericCityImporter","importer::generic","Importing a new city can be done just by filling out this …",null,null],[12,"osm_url","","The URL to a .osm or .osm.pbf file containing the entire …",2,null],[12,"map_config","","",2,null],[12,"onstreet_parking","","",2,null],[12,"public_offstreet_parking","","",2,null],[12,"private_offstreet_parking","","",2,null],[12,"include_railroads","","OSM railway=rail will be included as light rail if so. …",2,null],[12,"extra_buildings","","If provided, read polygons from this GeoJSON file and add …",2,null],[11,"osm_to_raw","","",2,[[["mapname",3],["importerconfiguration",3],["timer",3]]]],[0,"seattle","importer","",null,null],[5,"input","importer::seattle","",null,[[["importerconfiguration",3],["timer",3]]]],[5,"osm_to_raw","","",null,[[["timer",3],["importerconfiguration",3],["str",15]]]],[5,"adjust_private_parking","","",null,[[["map",3],["scenario",3]]]],[5,"add_gtfs_schedules","","This import from GTFS:",null,[[["map",3]]]],[3,"TripRecord","","",null,null],[12,"shape_id","","",3,null],[12,"trip_id","","",3,null],[3,"StopTimeRecord","","",null,null],[12,"trip_id","","",4,null],[12,"arrival_time","","",4,null],[5,"match_parcels_to_buildings","","Match OSM buildings to parcels, scraping the number of …",null,[[["extrashapes",3],["map",3],["timer",3]]]],[0,"uk","importer","",null,null],[5,"import_collision_data","importer::uk","",null,[[["rawmap",3],["importerconfiguration",3],["timer",3]]]],[5,"generate_scenario","","",null,[[["importerconfiguration",3],["map",3],["timer",3]]]],[5,"parse_desire_lines","","",null,[[["string",3]],[["result",6],["vec",3]]]],[3,"Record","","",null,null],[12,"home_zone","","",5,null],[12,"work_zone","","",5,null],[12,"num_transit1","","",5,null],[12,"num_transit2","","",5,null],[12,"num_transit3","","",5,null],[12,"num_drivers","","",5,null],[12,"num_bikers","","",5,null],[12,"num_pedestrians","","",5,null],[5,"parse_zones","","",null,[[["string",3],["gpsbounds",3]],[["result",6],["hashmap",3]]]],[5,"parse_polygon","","",null,[[["gpsbounds",3],["vec",3],["vec",3]],[["polygon",3],["result",6]]]],[5,"load_study_area","","",null,[[["map",3]],[["polygon",3],["result",6]]]],[0,"utils","importer","",null,null],[5,"download","importer::utils","If the output file doesn\'t already exist, downloads the …",null,[[["importerconfiguration",3],["string",3],["str",15]]]],[5,"download_kml","","If the output file doesn\'t already exist, downloads the …",null,[[["string",3],["gpsbounds",3],["timer",3],["bool",15],["str",15]]]],[5,"osmconvert","","Uses osmconvert to clip the input .osm (or .pbf) against …",null,[[["string",3],["importerconfiguration",3]]]],[5,"raw_to_map","","Converts a RawMap to a Map.",null,[[["bool",15],["mapname",3],["timer",3]],["map",3]]],[5,"main","importer","",null,[[]]],[5,"regenerate_everything","","",null,[[["importerconfiguration",3]]]],[3,"Job","","",null,null],[12,"city","","",6,null],[12,"osm_to_raw","","",6,null],[12,"raw_to_map","","",6,null],[12,"scenario","","",6,null],[12,"city_overview","","",6,null],[12,"only_map","","",6,null],[11,"run","","",6,[[["bool",15],["importerconfiguration",3],["timer",3]]]],[5,"oneshot","","",null,[[["string",3],["bool",15],["option",4]]]],[11,"from","importer::berlin","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_any","","",0,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","importer::configuration","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"into_any","","",1,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","importer::generic","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"into_any","","",2,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any_arc","","",2,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","importer::seattle","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"into_any","","",3,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"into_any_arc","","",3,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"into_any","","",4,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"into_any_arc","","",4,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","importer::uk","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"into_any","","",5,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"into_any_arc","","",5,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","importer","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"into_any","","",6,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"into_any_arc","","",6,[[["arc",3]],[["arc",3],["any",8]]]],[11,"default","importer::configuration","",1,[[],["importerconfiguration",3]]],[11,"fmt","importer::berlin","",0,[[["formatter",3]],["result",6]]],[11,"fmt","importer::seattle","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","importer::uk","",5,[[["formatter",3]],["result",6]]],[11,"serialize","importer::generic","",2,[[],["result",4]]],[11,"deserialize","importer::berlin","",0,[[],["result",4]]],[11,"deserialize","importer::configuration","",1,[[],["result",4]]],[11,"deserialize","importer::generic","",2,[[],["result",4]]],[11,"deserialize","importer::seattle","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","importer::uk","",5,[[],["result",4]]]],"p":[[3,"Record"],[3,"ImporterConfiguration"],[3,"GenericCityImporter"],[3,"TripRecord"],[3,"StopTimeRecord"],[3,"Record"],[3,"Job"]]},\
"json_to_binary_map":{"doc":"","i":[[5,"main","json_to_binary_map","",null,[[]]]],"p":[]},\
"kml":{"doc":"","i":[[3,"ExtraShapes","kml","Some dataset imported from KML, CSV, or something else. …",null,null],[12,"shapes","","",0,null],[3,"ExtraShape","","A single object in the dataset.",null,null],[12,"points","","The object has a different inferred shape depending on …",1,null],[12,"attributes","","Arbitrary key/value pairs associated with this object; no …",1,null],[5,"load","","Parses a .kml file and returns ExtraShapes. Objects will …",null,[[["timer",3],["bool",15],["gpsbounds",3],["string",3]],[["result",6],["extrashapes",3]]]],[5,"recurse","","",null,[[["bool",15],["usize",15],["node",3],["btreemap",3],["vec",3],["gpsbounds",3]],["result",6]]],[5,"parse_pt","","",null,[[["str",15]],[["lonlat",3],["option",4]]]],[11,"load_csv","","Parses a .csv file and returns ExtraShapes. Each record …",0,[[["timer",3],["gpsbounds",3],["string",3]],[["result",6],["extrashapes",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","","",1,[[],["extrashape",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]]],"p":[[3,"ExtraShapes"],[3,"ExtraShape"]]},\
"map_editor":{"doc":"The map_editor renders and lets you edit RawMaps, which …","i":[[0,"edit","map_editor","",null,null],[3,"EditRoad","map_editor::edit","",null,null],[12,"r","","",0,null],[12,"show_direction","","",0,null],[11,"new","","",0,[[["app",3],["originalroad",3],["eventctx",3]],[["state",8],["box",3]]]],[0,"model","map_editor","",null,null],[17,"INTERSECTION_RADIUS","map_editor::model","",null,null],[17,"BUILDING_LENGTH","","",null,null],[3,"Model","","",null,null],[12,"map","","",1,null],[12,"showing_pts","","",1,null],[12,"world","","",1,null],[12,"include_bldgs","","",1,null],[12,"intersection_geom","","",1,null],[11,"blank","","",1,[[],["model",3]]],[11,"import","","",1,[[["string",3],["bool",15],["eventctx",3]],["model",3]]],[11,"export_to_osm","","",1,[[]]],[11,"set_boundary","","",1,[[["pt2d",3],["eventctx",3]]]],[11,"compute_bounds","","",1,[[],["bounds",3]]],[11,"intersection_added","","",1,[[["nodeid",3],["eventctx",3]]]],[11,"create_i","","",1,[[["pt2d",3],["eventctx",3]]]],[11,"move_i","","",1,[[["pt2d",3],["nodeid",3],["eventctx",3]]]],[11,"delete_i","","",1,[[["nodeid",3]]]],[11,"toggle_i","","",1,[[["nodeid",3],["eventctx",3]]]],[11,"show_intersection_geometry","","",1,[[["bool",15],["eventctx",3]]]],[11,"road_added","","",1,[[["originalroad",3],["eventctx",3]]]],[11,"road_deleted","","",1,[[["originalroad",3]]]],[11,"create_r","","",1,[[["nodeid",3],["eventctx",3]]]],[11,"delete_r","","",1,[[["originalroad",3],["eventctx",3]]]],[11,"road_object","","",1,[[["originalroad",3]],[["id",4],["object",3]]]],[11,"show_r_points","","",1,[[["originalroad",3],["eventctx",3]]]],[11,"stop_showing_pts","","",1,[[["originalroad",3]]]],[11,"move_r_pt","","",1,[[["usize",15],["pt2d",3],["eventctx",3],["originalroad",3]]]],[11,"delete_r_pt","","",1,[[["usize",15],["originalroad",3],["eventctx",3]]]],[11,"insert_r_pt","","",1,[[["pt2d",3],["originalroad",3],["eventctx",3]],[["option",4],["id",4]]]],[11,"clear_r_pts","","",1,[[["originalroad",3],["eventctx",3]]]],[11,"merge_r","","",1,[[["originalroad",3],["eventctx",3]]]],[11,"bldg_added","","",1,[[["osmid",4],["eventctx",3]]]],[11,"create_b","","",1,[[["pt2d",3],["eventctx",3]],["id",4]]],[11,"move_b","","",1,[[["osmid",4],["pt2d",3],["eventctx",3]]]],[11,"delete_b","","",1,[[["osmid",4]]]],[4,"ID","","",null,null],[13,"Building","","",2,null],[13,"Intersection","","",2,null],[13,"Road","","",2,null],[13,"RoadPoint","","",2,null],[5,"time_to_id","","",null,[[],["i64",15]]],[5,"dump_to_osm","","Express a RawMap as a .osm file. Why not just save the …",null,[[["rawmap",3]],[["error",3],["result",4]]]],[0,"world","map_editor","",null,null],[8,"ObjectID","map_editor::world","",null,null],[10,"zorder","","",3,[[],["usize",15]]],[3,"Object","","",null,null],[12,"id","","",4,null],[12,"geometry","","",4,null],[11,"new","","",4,[[["polygon",3],["color",3]],["object",3]]],[3,"WorldObject","","",null,null],[12,"unioned_polygon","","",5,null],[12,"draw","","",5,null],[12,"quadtree_id","","",5,null],[3,"World","","",null,null],[12,"objects","","",6,null],[12,"quadtree","","",6,null],[12,"current_selection","","",6,null],[11,"new","","",6,[[],["world",3]]],[11,"draw","","",6,[[["fn",8],["gfxctx",3]]]],[11,"handle_mouseover","","",6,[[["eventctx",3]]]],[11,"force_set_selection","","",6,[[]]],[11,"get_selection","","",6,[[],["option",4]]],[11,"add","","",6,[[["object",3],["eventctx",3]]]],[11,"delete","","",6,[[]]],[3,"App","map_editor","",null,null],[12,"model","","",7,null],[3,"MainState","","",null,null],[12,"mode","","",8,null],[12,"panel","","",8,null],[12,"last_id","","",8,null],[4,"Mode","","",null,null],[13,"Viewing","","",9,null],[13,"MovingIntersection","","",9,null],[13,"MovingBuilding","","",9,null],[13,"MovingRoadPoint","","",9,null],[13,"CreatingRoad","","",9,null],[13,"SetBoundaryPt1","","",9,null],[13,"SetBoundaryPt2","","",9,null],[11,"new","","",8,[[["eventctx",3]]]],[5,"main","","",null,[[]]],[11,"from","map_editor::edit","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_any","","",0,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","map_editor::model","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"into_any","","",1,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"equivalent","","",2,[[],["bool",15]]],[11,"get_hash","","",2,[[],["u64",15]]],[11,"vzip","","",2,[[]]],[11,"into_any","","",2,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any_arc","","",2,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","map_editor::world","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"into_any","","",4,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"into_any_arc","","",4,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"into_any","","",5,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"into_any_arc","","",5,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"into_any","","",6,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"from","map_editor","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"into_any","","",7,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"into_any_arc","","",7,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"into_any","","",8,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"into_any","","",9,[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"into_any_arc","","",9,[[["arc",3]],[["arc",3],["any",8]]]],[11,"zorder","map_editor::model","",2,[[],["usize",15]]],[11,"clone","","",2,[[],["id",4]]],[11,"eq","","",2,[[["id",4]],["bool",15]]],[11,"ne","","",2,[[["id",4]],["bool",15]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"hash","","",2,[[]]],[11,"event","map_editor","",8,[[["eventctx",3],["app",3]],[["app",3],["transition",4]]]],[11,"draw","","",8,[[["app",3],["gfxctx",3]]]],[11,"dump_before_abort","","",7,[[["canvas",3]]]],[11,"before_quit","","",7,[[["canvas",3]]]],[11,"on_click","map_editor::edit","",0,[[["app",3],["panel",3],["eventctx",3],["str",15]],[["app",3],["transition",4]]]],[11,"other_event","","",0,[[["eventctx",3],["app",3]],[["app",3],["transition",4]]]],[11,"draw","","",0,[[["app",3],["gfxctx",3]]]],[11,"draw_baselayer","","",0,[[],["drawbaselayer",4]]]],"p":[[3,"EditRoad"],[3,"Model"],[4,"ID"],[8,"ObjectID"],[3,"Object"],[3,"WorldObject"],[3,"World"],[3,"App"],[3,"MainState"],[4,"Mode"]]},\
"map_gui":{"doc":"This crate contains common code for applications that …","i":[[0,"colors","map_gui","A color scheme groups colors used for different map, …",null,null],[4,"ColorSchemeChoice","map_gui::colors","",null,null],[13,"DayMode","","",0,null],[13,"NightMode","","",0,null],[13,"Pregame","","",0,null],[13,"SAMGreenDay","","",0,null],[13,"SAMDesertDay","","",0,null],[13,"BAP","","",0,null],[13,"OSM","","",0,null],[13,"Starcat","","",0,null],[13,"Textured","","",0,null],[13,"MapboxLight","","",0,null],[13,"MapboxDark","","",0,null],[13,"FadedZoom","","",0,null],[13,"NegativeSpace","","",0,null],[11,"choices","","",0,[[],[["choice",3],["vec",3]]]],[3,"ColorScheme","","",null,null],[12,"scheme","","",1,null],[12,"panel_bg","","",1,null],[12,"inner_panel_bg","","",1,null],[12,"day_time_slider","","",1,null],[12,"night_time_slider","","",1,null],[12,"selected","","",1,null],[12,"current_object","","",1,null],[12,"perma_selected_object","","",1,null],[12,"fade_map_dark","","",1,null],[12,"gui_style","","",1,null],[12,"dialog_bg","","",1,null],[12,"minimap_cursor_border","","",1,null],[12,"minimap_cursor_bg","","",1,null],[12,"driving_lane","","",1,null],[12,"bus_lane","","",1,null],[12,"parking_lane","","",1,null],[12,"bike_lane","","",1,null],[12,"sidewalk","","",1,null],[12,"sidewalk_lines","","",1,null],[12,"general_road_marking","","",1,null],[12,"road_center_line","","",1,null],[12,"light_rail_track","","",1,null],[12,"private_road","","",1,null],[12,"unzoomed_highway","","",1,null],[12,"unzoomed_arterial","","",1,null],[12,"unzoomed_residential","","",1,null],[12,"unzoomed_trail","","",1,null],[12,"normal_intersection","","",1,null],[12,"stop_sign","","",1,null],[12,"stop_sign_pole","","",1,null],[12,"signal_protected_turn","","",1,null],[12,"signal_permitted_turn","","",1,null],[12,"signal_banned_turn","","",1,null],[12,"signal_box","","",1,null],[12,"signal_spinner","","",1,null],[12,"signal_turn_block_bg","","",1,null],[12,"very_slow_intersection","","",1,null],[12,"slow_intersection","","",1,null],[12,"normal_slow_intersection","","",1,null],[12,"void_background","","",1,null],[12,"map_background","","",1,null],[12,"unzoomed_interesting_intersection","","",1,null],[12,"residential_building","","",1,null],[12,"commercial_building","","",1,null],[12,"building_outline","","",1,null],[12,"parking_lot","","",1,null],[12,"grass","","",1,null],[12,"water","","",1,null],[12,"median_strip","","",1,null],[12,"pedestrian_plaza","","",1,null],[12,"study_area","","",1,null],[12,"unzoomed_car","","",1,null],[12,"unzoomed_bike","","",1,null],[12,"unzoomed_bus","","",1,null],[12,"unzoomed_pedestrian","","",1,null],[12,"agent_colors","","",1,null],[12,"route","","",1,null],[12,"turn_arrow","","",1,null],[12,"brake_light","","",1,null],[12,"bus_body","","",1,null],[12,"bus_label","","",1,null],[12,"train_body","","",1,null],[12,"ped_head","","",1,null],[12,"ped_foot","","",1,null],[12,"ped_preparing_bike_body","","",1,null],[12,"ped_crowd","","",1,null],[12,"bike_frame","","",1,null],[12,"parked_car","","",1,null],[12,"good_to_bad_red","","",1,null],[12,"good_to_bad_green","","",1,null],[12,"bus_layer","","",1,null],[12,"edits_layer","","",1,null],[12,"parking_trip","","",1,null],[12,"bike_trip","","",1,null],[12,"bus_trip","","",1,null],[12,"before_changes","","",1,null],[12,"after_changes","","",1,null],[11,"new","","",1,[[["eventctx",3],["colorschemechoice",4]],["colorscheme",3]]],[11,"pregame","","",1,[[],["colorscheme",3]]],[11,"day_mode","","",1,[[],["colorscheme",3]]],[11,"light_background","","",1,[[["style",3]],["colorscheme",3]]],[11,"rotating_color_plot","","",1,[[["usize",15]],["color",3]]],[11,"rotating_color_agents","","",1,[[["usize",15]],["color",3]]],[11,"unzoomed_road_surface","","",1,[[["roadrank",4]],["color",3]]],[11,"zoomed_road_surface","","",1,[[["lanetype",4],["roadrank",4]],["color",3]]],[11,"zoomed_intersection_surface","","",1,[[["roadrank",4]],["color",3]]],[11,"road_center_line","","",1,[[["roadrank",4]],["color",3]]],[11,"general_road_marking","","",1,[[["roadrank",4]],["color",3]]],[11,"solid_road_center","","",1,[[],["bool",15]]],[5,"modulo_color","","",null,[[["usize",15],["vec",3]],["color",3]]],[5,"hex","","",null,[[["str",15]],["color",3]]],[11,"night_mode","","",1,[[],["colorscheme",3]]],[11,"sam_green_day","","",1,[[],["colorscheme",3]]],[11,"sam_desert_day","","",1,[[],["colorscheme",3]]],[11,"bap","","",1,[[],["colorscheme",3]]],[11,"osm","","",1,[[],["colorscheme",3]]],[11,"starcat","","",1,[[],["colorscheme",3]]],[11,"textured","","",1,[[],["colorscheme",3]]],[11,"mapbox_light","","",1,[[],["colorscheme",3]]],[11,"mapbox_dark","","",1,[[],["colorscheme",3]]],[11,"faded_zoom","","",1,[[],["colorscheme",3]]],[11,"negative_space","","",1,[[],["colorscheme",3]]],[0,"load","map_gui","Loading large resources (like maps, scenarios, and …",null,null],[0,"native_loader","map_gui::load","",null,null],[3,"FileLoader","map_gui::load::native_loader","Loads a JSON or bincoded file, then deserializes it",null,null],[12,"path","","",2,null],[12,"on_load","","",2,null],[11,"new","","",2,[[["string",3],["box",3],["eventctx",3],["fnonce",8]],[["state",8],["box",3]]]],[3,"RawFileLoader","","Loads a file without deserializing it.",null,null],[12,"path","","",3,null],[12,"on_load","","",3,null],[11,"new","","",3,[[["string",3],["box",3],["eventctx",3],["fnonce",8]],[["state",8],["box",3]]]],[3,"FileLoader","map_gui::load","Loads a JSON or bincoded file, then deserializes it",null,null],[12,"path","","",2,null],[12,"on_load","","",2,null],[3,"RawFileLoader","","Loads a file without deserializing it.",null,null],[12,"path","","",3,null],[12,"on_load","","",3,null],[3,"MapLoader","","",null,null],[11,"new","","",4,[[["eventctx",3],["box",3],["mapname",3],["fnonce",8]],[["state",8],["box",3]]]],[3,"MapAlreadyLoaded","","",null,null],[12,"on_load","","",5,null],[3,"FutureLoader","","",null,null],[12,"loading_title","","",6,null],[12,"started","","",6,null],[12,"panel","","",6,null],[12,"receiver","","",6,null],[12,"on_load","","",6,null],[12,"runtime","","",6,null],[11,"new","","",6,[[["eventctx",3],["box",3],["box",3],["pin",3],["fnonce",8],["str",15]],[["state",8],["box",3]]]],[0,"options","map_gui","",null,null],[3,"Options","map_gui::options","Options controlling the UI. Some of the options are …",null,null],[12,"dev","","Dev mode exposes experimental tools useful for debugging, …",7,null],[12,"debug_all_agents","","Every time we draw, render all agents zoomed in. …",7,null],[12,"traffic_signal_style","","How traffic signals should be rendered.",7,null],[12,"color_scheme","","The color scheme for map elements, agents, and the UI.",7,null],[12,"toggle_day_night_colors","","Automatically change color_scheme based on simulation …",7,null],[12,"min_zoom_for_detail","","Map elements are drawn differently when unzoomed and …",7,null],[12,"camera_angle","","Draw buildings in different perspectives",7,null],[12,"time_increment","","How much to advance the sim with one of the speed controls",7,null],[12,"dont_draw_time_warp","","When time warping, don\'t draw to speed up simulation",7,null],[12,"jump_to_delay","","The delay threshold to halt on when jumping to the next …",7,null],[12,"language","","Display roads and buildings in an alternate language, if …",7,null],[12,"units","","How to render geometric units",7,null],[11,"default","","",7,[[],["options",3]]],[11,"update_from_args","","Update the options using command-line flags.",7,[[["cmdargs",3]]]],[4,"TrafficSignalStyle","","Different ways of drawing traffic signals. The names of …",null,null],[13,"BAP","","",8,null],[13,"Yuwen","","",8,null],[13,"IndividualTurnArrows","","",8,null],[4,"CameraAngle","","",null,null],[13,"TopDown","","",9,null],[13,"IsometricNE","","",9,null],[13,"IsometricNW","","",9,null],[13,"IsometricSE","","",9,null],[13,"IsometricSW","","",9,null],[13,"Abstract","","",9,null],[3,"OptionsPanel","","",null,null],[12,"panel","","",10,null],[11,"new","","",10,[[["eventctx",3]],[["state",8],["box",3]]]],[0,"render","map_gui","Render static and dynamic map elements.",null,null],[0,"agents","map_gui::render","",null,null],[3,"AgentCache","map_gui::render::agents","",null,null],[12,"unzoomed_agents","","This is controlled almost entirely by the minimap panel. …",11,null],[12,"time","","",11,null],[12,"agents_per_on","","",11,null],[12,"unzoomed","","",11,null],[11,"new","","",11,[[],["agentcache",3]]],[11,"get","","",11,[[["traversable",4]],[["vec",3],["renderable",8]]]],[11,"populate_if_needed","","",11,[[["prerender",3],["sim",3],["traversable",4],["map",3],["colorscheme",3]]]],[11,"calculate_unzoomed_agents","","If the sim time has changed or the unzoomed agent filters …",11,[[["applike",8]],["quadtree",3]]],[11,"draw_unzoomed_agents","","",11,[[["gfxctx",3],["applike",8]]]],[3,"UnzoomedAgents","","",null,null],[12,"cars","","",12,null],[12,"bikes","","",12,null],[12,"buses_and_trains","","",12,null],[12,"peds","","",12,null],[11,"new","","",12,[[],["unzoomedagents",3]]],[11,"cars","","",12,[[],["bool",15]]],[11,"bikes","","",12,[[],["bool",15]]],[11,"buses_and_trains","","",12,[[],["bool",15]]],[11,"peds","","",12,[[],["bool",15]]],[11,"color","","",12,[[["unzoomedagent",3],["colorscheme",3]],[["option",4],["color",3]]]],[11,"update","","",12,[[["panel",3]]]],[0,"area","map_gui::render","",null,null],[3,"DrawArea","map_gui::render::area","",null,null],[12,"id","","",13,null],[11,"new","","",13,[[["area",3],["eventctx",3],["geombatch",3],["colorscheme",3]],["drawarea",3]]],[11,"fill","","",13,[[["areatype",4],["colorscheme",3]],["fill",4]]],[0,"bike","map_gui::render","",null,null],[3,"DrawBike","map_gui::render::bike","",null,null],[12,"id","","",14,null],[12,"body_circle","","",14,null],[12,"zorder","","",14,null],[12,"draw_default","","",14,null],[11,"new","","",14,[[["prerender",3],["sim",3],["map",3],["colorscheme",3],["drawcarinput",3]],["drawbike",3]]],[0,"building","map_gui::render","",null,null],[3,"DrawBuilding","map_gui::render::building","",null,null],[12,"id","","",15,null],[12,"label","","",15,null],[11,"new","","",15,[[["options",3],["eventctx",3],["geombatch",3],["map",3],["colorscheme",3],["building",3]],["drawbuilding",3]]],[0,"bus_stop","map_gui::render","",null,null],[17,"RADIUS","map_gui::render::bus_stop","",null,null],[3,"DrawBusStop","","",null,null],[12,"id","","",16,null],[12,"center","","",16,null],[12,"zorder","","",16,null],[12,"draw_default","","",16,null],[11,"new","","",16,[[["eventctx",3],["busstop",3],["map",3],["colorscheme",3]],["drawbusstop",3]]],[0,"car","map_gui::render","",null,null],[17,"CAR_WIDTH","map_gui::render::car","",null,null],[3,"DrawCar","","",null,null],[12,"id","","",17,null],[12,"body","","",17,null],[12,"body_polygon","","",17,null],[12,"zorder","","",17,null],[12,"draw_default","","",17,null],[11,"new","","",17,[[["prerender",3],["sim",3],["map",3],["colorscheme",3],["drawcarinput",3]],["drawcar",3]]],[5,"thick_line_from_angle","","",null,[[["pt2d",3],["angle",3],["distance",3]],["polygon",3]]],[5,"zoomed_color_car","","",null,[[["drawcarinput",3],["colorscheme",3],["sim",3]],["color",3]]],[0,"intersection","map_gui::render","",null,null],[3,"DrawIntersection","map_gui::render::intersection","",null,null],[12,"id","","",18,null],[12,"zorder","","",18,null],[12,"draw_default","","",18,null],[12,"draw_traffic_signal","","",18,null],[11,"new","","",18,[[["map",3],["intersection",3]],["drawintersection",3]]],[11,"clear_rendering","","",18,[[]]],[11,"render","","",18,[[["applike",8]],["geombatch",3]]],[11,"stop_sign_geom","","",18,[[["roadwithstopsign",3],["map",3]],["option",4]]],[5,"calculate_corners","","",null,[[["map",3],["intersection",3]],[["vec",3],["polygon",3]]]],[5,"calculate_corners_with_borders","","",null,[[["intersection",3],["applike",8],["geombatch",3]]]],[5,"calculate_border_arrows","","",null,[[["road",3],["map",3],["intersection",3]],[["vec",3],["polygon",3]]]],[5,"make_octagon","","",null,[[["pt2d",3],["angle",3],["distance",3]],["polygon",3]]],[5,"make_crosswalk","","",null,[[["turn",3],["geombatch",3],["map",3],["colorscheme",3]]]],[5,"make_rainbow_crosswalk","","",null,[[["map",3],["turn",3],["geombatch",3]],["bool",15]]],[5,"perp_line","","",null,[[["line",3],["distance",3]],["line",3]]],[0,"lane","map_gui::render","",null,null],[3,"DrawLane","map_gui::render::lane","",null,null],[12,"id","","",19,null],[12,"polygon","","",19,null],[12,"zorder","","",19,null],[12,"draw_default","","",19,null],[11,"new","","",19,[[["map",3],["lane",3]],["drawlane",3]]],[11,"clear_rendering","","",19,[[]]],[11,"render","","",19,[[["applike",8]],["geombatch",3]]],[5,"perp_line","","",null,[[["line",3],["distance",3]],["line",3]]],[5,"calculate_sidewalk_lines","","",null,[[["lane",3]],[["vec",3],["polygon",3]]]],[5,"calculate_parking_lines","","",null,[[["map",3],["lane",3]],[["vec",3],["polygon",3]]]],[5,"calculate_driving_lines","","",null,[[["road",3],["lane",3]],[["vec",3],["polygon",3]]]],[5,"calculate_turn_markings","","",null,[[["map",3],["lane",3]],[["vec",3],["polygon",3]]]],[5,"calculate_one_way_markings","","",null,[[["road",3],["lane",3]],[["vec",3],["polygon",3]]]],[0,"map","map_gui::render","",null,null],[3,"DrawMap","map_gui::render::map","",null,null],[12,"roads","","",20,null],[12,"lanes","","",20,null],[12,"intersections","","",20,null],[12,"buildings","","",20,null],[12,"parking_lots","","",20,null],[12,"bus_stops","","",20,null],[12,"areas","","",20,null],[12,"boundary_polygon","","",20,null],[12,"draw_all_unzoomed_roads_and_intersections","","",20,null],[12,"draw_all_buildings","","",20,null],[12,"draw_all_building_paths","","",20,null],[12,"draw_all_building_outlines","","",20,null],[12,"draw_all_unzoomed_parking_lots","","",20,null],[12,"draw_all_areas","","",20,null],[12,"zorder_range","","",20,null],[12,"show_zorder","","",20,null],[12,"quadtree","","",20,null],[11,"new","","",20,[[["options",3],["eventctx",3],["timer",3],["map",3],["colorscheme",3]],["drawmap",3]]],[11,"regenerate_unzoomed_layer","","",20,[[["eventctx",3],["timer",3],["map",3],["colorscheme",3]],["drawable",3]]],[11,"get_r","","",20,[[["roadid",3]],["drawroad",3]]],[11,"get_l","","",20,[[["laneid",3]],["drawlane",3]]],[11,"get_i","","",20,[[["intersectionid",3]],["drawintersection",3]]],[11,"get_b","","",20,[[["buildingid",3]],["drawbuilding",3]]],[11,"get_pl","","",20,[[["parkinglotid",3]],["drawparkinglot",3]]],[11,"get_bs","","",20,[[["busstopid",3]],["drawbusstop",3]]],[11,"get_a","","",20,[[["areaid",3]],["drawarea",3]]],[11,"get_obj","","",20,[[["eventctx",3],["applike",8],["agentcache",3],["id",4]],[["renderable",8],["option",4]]]],[11,"get_matching_objects","","Unsorted, unexpanded, raw result.",20,[[["bounds",3]],[["id",4],["vec",3]]]],[11,"get_renderables_back_to_front","","A simple variation of the one in game that shows all …",20,[[["map",3],["bounds",3]],[["vec",3],["renderable",8]]]],[11,"zoomed_batch","","Build a single gigantic <code>GeomBatch</code> to render the entire …",20,[[["eventctx",3],["applike",8]],["geombatch",3]]],[0,"parking_lot","map_gui::render","",null,null],[3,"DrawParkingLot","map_gui::render::parking_lot","",null,null],[12,"id","","",21,null],[12,"draw","","",21,null],[11,"new","","",21,[[["eventctx",3],["geombatch",3],["colorscheme",3],["parkinglot",3]],["drawparkinglot",3]]],[11,"render","","",21,[[["applike",8]],["geombatch",3]]],[0,"pedestrian","map_gui::render","",null,null],[3,"DrawPedestrian","map_gui::render::pedestrian","",null,null],[12,"id","","",22,null],[12,"body_circle","","",22,null],[12,"zorder","","",22,null],[12,"draw_default","","",22,null],[11,"new","","",22,[[["usize",15],["prerender",3],["sim",3],["map",3],["colorscheme",3],["drawpedestrianinput",3]],["drawpedestrian",3]]],[11,"geometry","","",22,[[["usize",15],["drawpedestrianinput",3],["sim",3],["geombatch",3],["colorscheme",3]]]],[3,"DrawPedCrowd","","",null,null],[12,"members","","",23,null],[12,"blob","","",23,null],[12,"blob_pl","","",23,null],[12,"zorder","","",23,null],[12,"draw_default","","",23,null],[11,"new","","",23,[[["drawpedcrowdinput",3],["prerender",3],["map",3],["colorscheme",3]],["drawpedcrowd",3]]],[0,"road","map_gui::render","",null,null],[3,"DrawRoad","map_gui::render::road","",null,null],[12,"id","","",24,null],[12,"zorder","","",24,null],[12,"draw","","",24,null],[11,"new","","",24,[[["road",3]],["drawroad",3]]],[11,"render","","",24,[[["applike",8]],["geombatch",3]]],[11,"clear_rendering","","",24,[[]]],[0,"traffic_signal","map_gui::render","",null,null],[5,"draw_signal_stage","map_gui::render::traffic_signal","",null,[[["prerender",3],["usize",15],["duration",3],["trafficsignalstyle",4],["stage",3],["option",4],["applike",8],["geombatch",3],["intersectionid",3]]]],[5,"draw_stage_number","","",null,[[["prerender",3],["usize",15],["applike",8],["geombatch",3],["intersectionid",3]]]],[5,"draw_time_left","","",null,[[["prerender",3],["usize",15],["applike",8],["duration",3],["geombatch",3],["intersectionid",3],["stage",3]]]],[5,"walk_icon","","",null,[[["prerender",3],["movement",3]],["geombatch",3]]],[5,"dont_walk_icon","","",null,[[["prerender",3],["movement",3]],["geombatch",3]]],[5,"crosswalk_icon","","",null,[[["polyline",3]]]],[0,"turn","map_gui::render","",null,null],[17,"TURN_ICON_ARROW_LENGTH","map_gui::render::turn","",null,null],[3,"DrawMovement","","",null,null],[12,"id","","",25,null],[12,"hitbox","","",25,null],[11,"for_i","","",25,[[["prerender",3],["usize",15],["map",3],["colorscheme",3],["intersectionid",3]],["vec",3]]],[11,"draw_selected_movement","","",25,[[["turnpriority",4],["applike",8],["geombatch",3],["option",4]]]],[5,"make_circle_geom","","",null,[[["f64",15],["angle",3],["polyline",3]]]],[3,"AgentCache","map_gui::render","",null,null],[12,"unzoomed_agents","","This is controlled almost entirely by the minimap panel. …",11,null],[12,"time","","",11,null],[12,"agents_per_on","","",11,null],[12,"unzoomed","","",11,null],[3,"UnzoomedAgents","","",null,null],[12,"cars","","",12,null],[12,"bikes","","",12,null],[12,"buses_and_trains","","",12,null],[12,"peds","","",12,null],[3,"DrawArea","","",null,null],[12,"id","","",13,null],[3,"DrawBuilding","","",null,null],[12,"id","","",15,null],[12,"label","","",15,null],[5,"calculate_corners","","",null,[[["map",3],["intersection",3]],[["vec",3],["polygon",3]]]],[3,"DrawIntersection","","",null,null],[12,"id","","",18,null],[12,"zorder","","",18,null],[12,"draw_default","","",18,null],[12,"draw_traffic_signal","","",18,null],[3,"DrawMap","","",null,null],[12,"roads","","",20,null],[12,"lanes","","",20,null],[12,"intersections","","",20,null],[12,"buildings","","",20,null],[12,"parking_lots","","",20,null],[12,"bus_stops","","",20,null],[12,"areas","","",20,null],[12,"boundary_polygon","","",20,null],[12,"draw_all_unzoomed_roads_and_intersections","","",20,null],[12,"draw_all_buildings","","",20,null],[12,"draw_all_building_paths","","",20,null],[12,"draw_all_building_outlines","","",20,null],[12,"draw_all_unzoomed_parking_lots","","",20,null],[12,"draw_all_areas","","",20,null],[12,"zorder_range","","",20,null],[12,"show_zorder","","",20,null],[12,"quadtree","","",20,null],[3,"DrawPedCrowd","","",null,null],[12,"members","","",23,null],[12,"blob","","",23,null],[12,"blob_pl","","",23,null],[12,"zorder","","",23,null],[12,"draw_default","","",23,null],[3,"DrawPedestrian","","",null,null],[12,"id","","",22,null],[12,"body_circle","","",22,null],[12,"zorder","","",22,null],[12,"draw_default","","",22,null],[3,"DrawMovement","","",null,null],[12,"id","","",25,null],[12,"hitbox","","",25,null],[17,"BIG_ARROW_THICKNESS","","",null,null],[17,"CROSSWALK_LINE_THICKNESS","","",null,null],[17,"OUTLINE_THICKNESS","","",null,null],[8,"Renderable","","",null,null],[10,"get_id","","",26,[[],["id",4]]],[10,"draw","","",26,[[["gfxctx",3],["applike",8],["drawoptions",3]]]],[11,"get_zorder","","",26,[[],["isize",15]]],[10,"get_outline","","",26,[[["map",3]],["polygon",3]]],[11,"contains_pt","","",26,[[["pt2d",3],["map",3]],["bool",15]]],[5,"draw_vehicle","","",null,[[["prerender",3],["sim",3],["map",3],["colorscheme",3],["drawcarinput",3]],[["box",3],["renderable",8]]]],[3,"DrawOptions","","Control how the map is drawn.",null,null],[12,"suppress_traffic_signal_details","","Don\'t draw the current traffic signal state.",27,null],[12,"label_buildings","","Label every building.",27,null],[12,"show_building_paths","","Draw building paths.",27,null],[11,"new","","Default options for drawing a map.",27,[[],["drawoptions",3]]],[5,"unzoomed_agent_radius","","",null,[[["option",4],["vehicletype",4]],["distance",3]]],[5,"grey_out_unhighlighted_people","","If the sim has highlighted people, then fade all others …",null,[[["sim",3],["color",3],["option",4]],["color",3]]],[0,"simple_app","map_gui","",null,null],[3,"SimpleApp","map_gui::simple_app","Simple app state that just renders a static map, without …",null,null],[12,"map","","",28,null],[12,"draw_map","","",28,null],[12,"cs","","",28,null],[12,"opts","","",28,null],[12,"current_selection","","",28,null],[12,"session","","Custom per-app state can be stored here",28,null],[12,"time","","If desired, this can be advanced to render traffic …",28,null],[11,"new","","",28,[[["options",3],["eventctx",3],["fn",8]]]],[11,"draw_unzoomed","","",28,[[["gfxctx",3]]]],[11,"draw_zoomed","","",28,[[["gfxctx",3],["drawoptions",3]]]],[11,"recalculate_current_selection","","Assumes some defaults.",28,[[["eventctx",3]]]],[11,"mouseover_unzoomed_roads_and_intersections","","",28,[[["eventctx",3]],[["option",4],["id",4]]]],[11,"mouseover_unzoomed_buildings","","Only select buildings, and work whether zoomed in or not.",28,[[["eventctx",3]],[["option",4],["id",4]]]],[11,"calculate_current_selection","","",28,[[["bool",15],["eventctx",3]],[["option",4],["id",4]]]],[3,"SimpleWarper","","",null,null],[12,"warper","","",29,null],[0,"tools","map_gui","Assorted tools and UI states that\'re useful for …",null,null],[0,"camera","map_gui::tools","",null,null],[3,"CameraState","map_gui::tools::camera","Represents the state of a widgetry Canvas.",null,null],[12,"cam_x","","",30,null],[12,"cam_y","","",30,null],[12,"cam_zoom","","",30,null],[11,"save","","Save the camera\'s configuration for the specified map.",30,[[["canvas",3],["mapname",3]]]],[11,"load","","Load the camera\'s configuration for the specified map. …",30,[[["eventctx",3],["mapname",3]],["bool",15]]],[0,"city_picker","map_gui::tools","",null,null],[3,"CityPicker","map_gui::tools::city_picker","Lets the player switch maps.",null,null],[12,"panel","","",31,null],[12,"districts","","",31,null],[12,"selected","","",31,null],[12,"on_load","","",31,null],[11,"new","","",31,[[["box",3],["eventctx",3],["fnonce",8]],[["state",8],["box",3]]]],[11,"new_in_city","","",31,[[["eventctx",3],["box",3],["cityname",3],["fnonce",8]],[["state",8],["box",3]]]],[11,"chose_city","","",31,[[["mapname",3],["eventctx",3]],["transition",4]]],[3,"AllCityPicker","","",null,null],[12,"panel","","",32,null],[12,"on_load","","",32,null],[11,"new","","",32,[[["box",3],["eventctx",3],["fnonce",8]],[["state",8],["box",3]]]],[3,"CitiesInCountryPicker","","",null,null],[12,"panel","","",33,null],[12,"on_load","","",33,null],[11,"new","","",33,[[["str",15],["eventctx",3],["box",3],["fnonce",8]],[["state",8],["box",3]]]],[5,"cities_per_country","","",null,[[],[["string",3],["vec",3],["btreemap",3]]]],[0,"colors","map_gui::tools","",null,null],[3,"ColorDiscrete","map_gui::tools::colors","",null,null],[12,"map","","",34,null],[12,"unzoomed","","",34,null],[12,"zoomed","","",34,null],[12,"categories","","",34,null],[12,"colors","","",34,null],[11,"new","","",34,[[["applike",8],["vec",3]],["colordiscrete",3]]],[11,"add_l","","",34,[[["asref",8],["str",15],["laneid",3]]]],[11,"add_r","","",34,[[["asref",8],["roadid",3],["str",15]]]],[11,"add_i","","",34,[[["intersectionid",3],["asref",8],["str",15]]]],[11,"add_b","","",34,[[["buildingid",3],["asref",8],["str",15]]]],[11,"add_bs","","",34,[[["asref",8],["str",15],["busstopid",3]]]],[11,"build","","",34,[[["eventctx",3]]]],[3,"ColorLegend","","",null,null],[11,"row","","",35,[[["eventctx",3],["color",3]],["widget",3]]],[11,"gradient","","",35,[[["string",3],["eventctx",3],["colorscale",3],["vec",3],["into",8]],["widget",3]]],[11,"categories","","",35,[[["eventctx",3],["vec",3]],["widget",3]]],[3,"DivergingScale","","",null,null],[12,"low_color","","",36,null],[12,"mid_color","","",36,null],[12,"high_color","","",36,null],[12,"min","","",36,null],[12,"avg","","",36,null],[12,"max","","",36,null],[12,"ignore","","",36,null],[11,"new","","",36,[[["color",3]],["divergingscale",3]]],[11,"range","","",36,[[["f64",15]],["divergingscale",3]]],[11,"ignore","","",36,[[["f64",15]],["divergingscale",3]]],[11,"eval","","",36,[[["f64",15]],[["option",4],["color",3]]]],[11,"make_legend","","",36,[[["string",3],["eventctx",3],["vec",3],["into",8]],["widget",3]]],[3,"ColorNetwork","","",null,null],[12,"map","","",37,null],[12,"unzoomed","","",37,null],[12,"zoomed","","",37,null],[11,"new","","",37,[[["applike",8]],["colornetwork",3]]],[11,"add_l","","",37,[[["color",3],["laneid",3]]]],[11,"add_r","","",37,[[["roadid",3],["color",3]]]],[11,"add_i","","",37,[[["intersectionid",3],["color",3]]]],[11,"add_b","","",37,[[["buildingid",3],["color",3]]]],[11,"add_pl","","",37,[[["parkinglotid",3],["color",3]]]],[11,"ranked_roads","","",37,[[["counter",3],["roadid",3],["colorscale",3]]]],[11,"ranked_intersections","","",37,[[["intersectionid",3],["counter",3],["colorscale",3]]]],[11,"pct_roads","","",37,[[["counter",3],["roadid",3],["colorscale",3]]]],[11,"pct_intersections","","",37,[[["intersectionid",3],["counter",3],["colorscale",3]]]],[11,"build","","",37,[[["eventctx",3]]]],[3,"ColorScale","","",null,null],[12,"0","","",38,null],[11,"eval","","",38,[[["f64",15]],["color",3]]],[11,"from_colorous","","",38,[[["gradient",3]],["colorscale",3]]],[11,"inner_eval","","",38,[[["f64",15]]]],[0,"command","map_gui::tools","",null,null],[3,"RunCommand","map_gui::tools::command","Executes a command and displays STDOUT and STDERR in a …",null,null],[12,"p","","",39,null],[12,"comm","","",39,null],[12,"panel","","",39,null],[12,"lines","","",39,null],[12,"max_capacity","","",39,null],[12,"started","","",39,null],[12,"last_drawn","","",39,null],[12,"on_load","","",39,null],[11,"new","","",39,[[["string",3],["fnonce",8],["eventctx",3],["box",3],["vec",3]],[["state",8],["box",3]]]],[11,"read_output","","",39,[[]]],[0,"heatmap","map_gui::tools","",null,null],[17,"NEIGHBORS","map_gui::tools::heatmap","",null,null],[3,"HeatmapOptions","","",null,null],[12,"resolution","","",40,null],[12,"radius","","",40,null],[12,"smoothing","","",40,null],[12,"contours","","",40,null],[12,"color_scheme","","",40,null],[11,"new","","",40,[[],["heatmapoptions",3]]],[11,"to_controls","","",40,[[["eventctx",3],["widget",3]],[["vec",3],["widget",3]]]],[11,"from_controls","","",40,[[["panel",3]],["heatmapoptions",3]]],[5,"make_heatmap","","",null,[[["eventctx",3],["geombatch",3],["pt2d",3],["bounds",3],["vec",3],["heatmapoptions",3]],["widget",3]]],[3,"Grid","","",null,null],[12,"data","","",41,null],[12,"width","","",41,null],[12,"height","","",41,null],[11,"new","","",41,[[["usize",15]],["grid",3]]],[11,"idx","","",41,[[["usize",15]],["usize",15]]],[0,"icons","map_gui::tools","",null,null],[5,"start_marker","map_gui::tools::icons","Draw a start marker pointing at something.",null,[[["pt2d",3],["f64",15]],["geombatch",3]]],[5,"goal_marker","","Draw a goal marker pointing at something.",null,[[["pt2d",3],["f64",15]],["geombatch",3]]],[0,"importer","map_gui::tools","",null,null],[3,"ImportCity","map_gui::tools::importer","",null,null],[12,"panel","","",42,null],[12,"on_load","","",42,null],[11,"new","","",42,[[["box",3],["eventctx",3],["fnonce",8]],[["state",8],["box",3]]]],[5,"grab_geojson_from_clipboard","","",null,[[],["result",6]]],[0,"minimap","map_gui::tools","",null,null],[3,"Minimap","map_gui::tools::minimap","",null,null],[12,"controls","","",43,null],[12,"time","","",43,null],[12,"app_type","","",43,null],[12,"dragging","","",43,null],[12,"panel","","",43,null],[12,"zoomed","","",43,null],[12,"layer","","",43,null],[12,"zoom_lvl","","",43,null],[12,"base_zoom","","",43,null],[12,"zoom","","",43,null],[12,"offset_x","","",43,null],[12,"offset_y","","",43,null],[8,"MinimapControls","","Customize the appearance and behavior of a minimap.",null,null],[10,"has_zorder","","Should the user be able to control the z-order visible? …",44,[[],["bool",15]]],[11,"has_layer","","Is there some additional layer displayed on the minimap? …",44,[[],["bool",15]]],[11,"draw_extra","","Draw extra stuff on the minimap, just pulling from the …",44,[[["gfxctx",3]]]],[11,"make_unzoomed_panel","","When unzoomed, display this panel. By default, no …",44,[[["eventctx",3]],["panel",3]]],[11,"make_legend","","A row beneath the minimap in the zoomed view, usually …",44,[[["eventctx",3]],["widget",3]]],[11,"make_zoomed_side_panel","","Controls to be placed to the left to the zoomed-in panel",44,[[["eventctx",3]],["widget",3]]],[11,"panel_clicked","","If a button is clicked that was produced by some method …",44,[[["eventctx",3],["str",15]],[["option",4],["transition",4]]]],[11,"panel_changed","","Called for <code>Outcome::Changed</code> on the panel.",44,[[["eventctx",3],["panel",3]]]],[11,"new","","",43,[[["eventctx",3]],["minimap",3]]],[11,"recreate_panel","","",43,[[["eventctx",3]]]],[11,"map_to_minimap_pct","","",43,[[["pt2d",3]]]],[11,"set_zoom","","",43,[[["usize",15],["eventctx",3]]]],[11,"recenter","","",43,[[["eventctx",3]]]],[11,"event","","",43,[[["eventctx",3]],[["option",4],["transition",4]]]],[11,"draw","","",43,[[["gfxctx",3]]]],[11,"draw_with_extra_layers","","",43,[[["gfxctx",3],["vec",3],["drawable",3]]]],[11,"get_panel","","",43,[[],["panel",3]]],[11,"mut_panel","","",43,[[],["panel",3]]],[0,"navigate","map_gui::tools","",null,null],[3,"Navigator","map_gui::tools::navigate","",null,null],[12,"panel","","",45,null],[11,"new","","",45,[[["eventctx",3]],[["state",8],["box",3]]]],[3,"CrossStreet","","",null,null],[12,"first","","",46,null],[12,"panel","","",46,null],[12,"draw","","",46,null],[11,"new","","",46,[[["vec",3],["eventctx",3],["roadid",3]],[["state",8],["box",3]]]],[3,"SearchBuildings","","",null,null],[12,"panel","","",47,null],[11,"new","","",47,[[["eventctx",3]],[["state",8],["box",3]]]],[0,"turn_explorer","map_gui::tools","",null,null],[3,"TurnExplorer","map_gui::tools::turn_explorer","A tool to explore all of the turns from a single lane.",null,null],[12,"l","","",48,null],[12,"idx","","",48,null],[12,"panel","","",48,null],[11,"new","","",48,[[["eventctx",3],["laneid",3]],[["state",8],["box",3]]]],[11,"make_panel","","",48,[[["usize",15],["eventctx",3],["laneid",3]],["panel",3]]],[11,"color_turn_type","","",48,[[["turntype",4]],["color",3]]],[17,"CURRENT_TURN","","",null,null],[17,"CONFLICTING_TURN","","",null,null],[0,"ui","map_gui::tools","Generic UI tools. Some of this should perhaps be lifted …",null,null],[3,"ChooseSomething","map_gui::tools::ui","Choose something from a menu, then feed the answer to a …",null,null],[12,"panel","","",49,null],[12,"cb","","",49,null],[11,"new","","",49,[[["string",3],["box",3],["eventctx",3],["vec",3],["into",8],["fn",8],["choice",3]],[["state",8],["box",3]]]],[3,"PromptInput","","Prompt for arbitrary text input, then feed the answer to …",null,null],[12,"panel","","",50,null],[12,"cb","","",50,null],[11,"new","","",50,[[["fn",8],["eventctx",3],["box",3],["str",15]],[["state",8],["box",3]]]],[3,"PopupMsg","","Display a message dialog.",null,null],[12,"panel","","",51,null],[12,"unzoomed","","",51,null],[12,"zoomed","","",51,null],[11,"new","","",51,[[["vec",3],["eventctx",3],["str",15]],[["state",8],["box",3]]]],[11,"also_draw","","",51,[[["vec",3],["eventctx",3],["drawable",3],["str",15]],[["state",8],["box",3]]]],[0,"updater","map_gui::tools","",null,null],[17,"NEXT_RELEASE","map_gui::tools::updater","",null,null],[3,"Picker","","",null,null],[12,"panel","","",52,null],[12,"on_load","","",52,null],[11,"new","","",52,[[["box",3],["eventctx",3],["fnonce",8]],[["state",8],["box",3]]]],[5,"size_per_city","","",null,[[["manifest",3]],[["btreemap",3],["string",3],["u64",15]]]],[5,"prettyprint_bytes","","",null,[[["u64",15]],["string",3]]],[5,"prompt_to_download_missing_data","","",null,[[["mapname",3],["eventctx",3]],[["transition",4],["applike",8]]]],[5,"sync_missing_files","","",null,[[["timer",3]],[["string",3],["vec",3]]]],[5,"download","","",null,[[["string",3],["str",15]],[["result",6],["u64",15]]]],[0,"url","map_gui::tools","",null,null],[3,"URLManager","map_gui::tools::url","Utilities for reflecting the current map and viewport in …",null,null],[11,"update_url_free_param","","This does nothing on native. On web, it modifies the …",53,[[["string",3]],["result",6]]],[11,"update_url_cam","","This does nothing on native. On web, it modifies the …",53,[[["eventctx",3]],["result",6]]],[11,"parse_center_camera","","Parse an OSM-style <code>zoom/lat/lon</code> string …",53,[[["string",3]],["option",4]]],[5,"update_url","","",null,[[["fn",8],["box",3]],["result",6]]],[5,"change_url_free_param","","",null,[[["string",3],["str",15]],["string",3]]],[5,"change_url_cam","","",null,[[["string",3],["str",15]],["string",3]]],[3,"CameraState","map_gui::tools","Represents the state of a widgetry Canvas.",null,null],[12,"cam_x","","",30,null],[12,"cam_y","","",30,null],[12,"cam_zoom","","",30,null],[3,"CityPicker","","Lets the player switch maps.",null,null],[12,"panel","","",31,null],[12,"districts","","",31,null],[12,"selected","","",31,null],[12,"on_load","","",31,null],[3,"ColorDiscrete","","",null,null],[12,"map","","",34,null],[12,"unzoomed","","",34,null],[12,"zoomed","","",34,null],[12,"categories","","",34,null],[12,"colors","","",34,null],[3,"ColorLegend","","",null,null],[3,"ColorNetwork","","",null,null],[12,"map","","",37,null],[12,"unzoomed","","",37,null],[12,"zoomed","","",37,null],[3,"ColorScale","","",null,null],[12,"0","","",38,null],[3,"DivergingScale","","",null,null],[12,"low_color","","",36,null],[12,"mid_color","","",36,null],[12,"high_color","","",36,null],[12,"min","","",36,null],[12,"avg","","",36,null],[12,"max","","",36,null],[12,"ignore","","",36,null],[5,"make_heatmap","","",null,[[["eventctx",3],["geombatch",3],["pt2d",3],["bounds",3],["vec",3],["heatmapoptions",3]],["widget",3]]],[3,"Grid","","",null,null],[12,"data","","",41,null],[12,"width","","",41,null],[12,"height","","",41,null],[3,"HeatmapOptions","","",null,null],[12,"resolution","","",40,null],[12,"radius","","",40,null],[12,"smoothing","","",40,null],[12,"contours","","",40,null],[12,"color_scheme","","",40,null],[5,"goal_marker","","Draw a goal marker pointing at something.",null,[[["pt2d",3],["f64",15]],["geombatch",3]]],[5,"start_marker","","Draw a start marker pointing at something.",null,[[["pt2d",3],["f64",15]],["geombatch",3]]],[3,"Minimap","","",null,null],[12,"controls","","",43,null],[12,"time","","",43,null],[12,"app_type","","",43,null],[12,"dragging","","",43,null],[12,"panel","","",43,null],[12,"zoomed","","",43,null],[12,"layer","","",43,null],[12,"zoom_lvl","","",43,null],[12,"base_zoom","","",43,null],[12,"zoom","","",43,null],[12,"offset_x","","",43,null],[12,"offset_y","","",43,null],[8,"MinimapControls","","Customize the appearance and behavior of a minimap.",null,null],[10,"has_zorder","","Should the user be able to control the z-order visible? …",44,[[],["bool",15]]],[11,"has_layer","map_gui::tools::minimap","Is there some additional layer displayed on the minimap? …",44,[[],["bool",15]]],[11,"draw_extra","","Draw extra stuff on the minimap, just pulling from the …",44,[[["gfxctx",3]]]],[11,"make_unzoomed_panel","","When unzoomed, display this panel. By default, no …",44,[[["eventctx",3]],["panel",3]]],[11,"make_legend","","A row beneath the minimap in the zoomed view, usually …",44,[[["eventctx",3]],["widget",3]]],[11,"make_zoomed_side_panel","","Controls to be placed to the left to the zoomed-in panel",44,[[["eventctx",3]],["widget",3]]],[11,"panel_clicked","","If a button is clicked that was produced by some method …",44,[[["eventctx",3],["str",15]],[["option",4],["transition",4]]]],[11,"panel_changed","","Called for <code>Outcome::Changed</code> on the panel.",44,[[["eventctx",3],["panel",3]]]],[3,"Navigator","map_gui::tools","",null,null],[12,"panel","","",45,null],[3,"TurnExplorer","","A tool to explore all of the turns from a single lane.",null,null],[12,"l","","",48,null],[12,"idx","","",48,null],[12,"panel","","",48,null],[3,"ChooseSomething","","Choose something from a menu, then feed the answer to a …",null,null],[12,"panel","","",49,null],[12,"cb","","",49,null],[3,"PopupMsg","","Display a message dialog.",null,null],[12,"panel","","",51,null],[12,"unzoomed","","",51,null],[12,"zoomed","","",51,null],[3,"PromptInput","","Prompt for arbitrary text input, then feed the answer to …",null,null],[12,"panel","","",50,null],[12,"cb","","",50,null],[3,"URLManager","","Utilities for reflecting the current map and viewport in …",null,null],[5,"prompt_to_download_missing_data","","",null,[[["mapname",3],["eventctx",3]],[["transition",4],["applike",8]]]],[5,"loading_tips","","",null,[[],["text",3]]],[5,"grey_out_map","","Make it clear the map can\'t be interacted with right now.",null,[[["gfxctx",3],["applike",8]]]],[5,"nice_map_name","","",null,[[["mapname",3]],["str",15]]],[5,"nice_country_name","","",null,[[["str",15]],["str",15]]],[5,"open_browser","","",null,[[["asref",8],["str",15]]]],[3,"SimpleApp","map_gui","Simple app state that just renders a static map, without …",null,null],[12,"map","","",28,null],[12,"draw_map","","",28,null],[12,"cs","","",28,null],[12,"opts","","",28,null],[12,"current_selection","","",28,null],[12,"session","","Custom per-app state can be stored here",28,null],[12,"time","","If desired, this can be advanced to render traffic …",28,null],[8,"AppLike","","An application wishing to use the tools in this crate has …",null,null],[10,"map","","",54,[[],["map",3]]],[10,"sim","","",54,[[],["sim",3]]],[10,"cs","","",54,[[],["colorscheme",3]]],[10,"mut_cs","","",54,[[],["colorscheme",3]]],[10,"draw_map","","",54,[[],["drawmap",3]]],[10,"mut_draw_map","","",54,[[],["drawmap",3]]],[10,"opts","","",54,[[],["options",3]]],[10,"mut_opts","","",54,[[],["options",3]]],[10,"map_switched","","",54,[[["timer",3],["eventctx",3],["map",3]]]],[10,"draw_with_opts","","",54,[[["gfxctx",3],["drawoptions",3]]]],[10,"make_warper","","Create a <code>widgetry::State</code> that warps to the given point.",54,[[["f64",15],["option",4],["eventctx",3],["pt2d",3],["option",4],["id",4]],[["state",8],["box",3]]]],[11,"sim_time","","",54,[[],["time",3]]],[11,"current_stage_and_remaining_time","","",54,[[["intersectionid",3]]]],[11,"change_color_scheme","","Change the color scheme. Idempotent. Return true if there …",54,[[["eventctx",3],["colorschemechoice",4]],["bool",15]]],[4,"ID","","",null,null],[13,"Road","","",55,null],[13,"Lane","","",55,null],[13,"Intersection","","",55,null],[13,"Building","","",55,null],[13,"ParkingLot","","",55,null],[13,"Car","","",55,null],[13,"Pedestrian","","",55,null],[13,"PedCrowd","","",55,null],[13,"BusStop","","",55,null],[13,"Area","","",55,null],[11,"from_agent","","",55,[[["agentid",4]],["id",4]]],[11,"agent_id","","",55,[[],[["option",4],["agentid",4]]]],[11,"as_intersection","","",55,[[],["intersectionid",3]]],[11,"as_building","","",55,[[],["buildingid",3]]],[11,"from","map_gui::colors","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_any","","",0,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any_arc","","",0,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"into_any","","",1,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","map_gui::load::native_loader","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"into_any","","",2,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"into_any","","",3,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"from","map_gui::load","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"into_any","","",4,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"into_any_arc","","",4,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"into_any","","",5,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"into_any","","",6,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"from","map_gui::options","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"into_any","","",7,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"into_any_arc","","",7,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"into_any","","",8,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"into_any_arc","","",8,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"into_any","","",9,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"into_any_arc","","",9,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"into_any","","",10,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"from","map_gui::render::agents","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"into_any","","",11,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"into_any","","",12,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",12,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"into_any_arc","","",12,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","map_gui::render::area","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"into_any","","",13,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"into_any_arc","","",13,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","map_gui::render::bike","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"into_any","","",14,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"into_any_arc","","",14,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","map_gui::render::building","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"into_any","","",15,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",15,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",15,[[],["any",8]]],[11,"as_any_mut","","",15,[[],["any",8]]],[11,"into_any_arc","","",15,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","map_gui::render::bus_stop","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"into_any","","",16,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",16,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"into_any_arc","","",16,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","map_gui::render::car","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"into_any","","",17,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",17,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",17,[[],["any",8]]],[11,"as_any_mut","","",17,[[],["any",8]]],[11,"into_any_arc","","",17,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","map_gui::render::intersection","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"into_any","","",18,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",18,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"from","map_gui::render::lane","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"into_any","","",19,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",19,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",19,[[],["any",8]]],[11,"as_any_mut","","",19,[[],["any",8]]],[11,"into_any_arc","","",19,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","map_gui::render::map","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"into_any","","",20,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",20,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",20,[[],["any",8]]],[11,"as_any_mut","","",20,[[],["any",8]]],[11,"from","map_gui::render::parking_lot","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"into_any","","",21,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",21,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",21,[[],["any",8]]],[11,"as_any_mut","","",21,[[],["any",8]]],[11,"into_any_arc","","",21,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","map_gui::render::pedestrian","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"into_any","","",22,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",22,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",22,[[],["any",8]]],[11,"as_any_mut","","",22,[[],["any",8]]],[11,"into_any_arc","","",22,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"into_any","","",23,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",23,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",23,[[],["any",8]]],[11,"as_any_mut","","",23,[[],["any",8]]],[11,"into_any_arc","","",23,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","map_gui::render::road","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"into_any","","",24,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",24,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",24,[[],["any",8]]],[11,"as_any_mut","","",24,[[],["any",8]]],[11,"into_any_arc","","",24,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","map_gui::render::turn","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"into_any","","",25,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",25,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",25,[[],["any",8]]],[11,"as_any_mut","","",25,[[],["any",8]]],[11,"into_any_arc","","",25,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","map_gui::render","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"into_any","","",27,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",27,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",27,[[],["any",8]]],[11,"as_any_mut","","",27,[[],["any",8]]],[11,"into_any_arc","","",27,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","map_gui::simple_app","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"into_any","","",28,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",28,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",28,[[],["any",8]]],[11,"as_any_mut","","",28,[[],["any",8]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"into_any","","",29,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",29,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",29,[[],["any",8]]],[11,"as_any_mut","","",29,[[],["any",8]]],[11,"into_any_arc","","",29,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","map_gui::tools::camera","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"into_any","","",30,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",30,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",30,[[],["any",8]]],[11,"as_any_mut","","",30,[[],["any",8]]],[11,"into_any_arc","","",30,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","map_gui::tools::city_picker","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"into_any","","",31,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",31,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",31,[[],["any",8]]],[11,"as_any_mut","","",31,[[],["any",8]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"into_any","","",32,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",32,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",32,[[],["any",8]]],[11,"as_any_mut","","",32,[[],["any",8]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"into_any","","",33,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",33,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",33,[[],["any",8]]],[11,"as_any_mut","","",33,[[],["any",8]]],[11,"from","map_gui::tools::colors","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"into_any","","",34,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",34,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",34,[[],["any",8]]],[11,"as_any_mut","","",34,[[],["any",8]]],[11,"into_any_arc","","",34,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"into_any","","",35,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",35,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",35,[[],["any",8]]],[11,"as_any_mut","","",35,[[],["any",8]]],[11,"into_any_arc","","",35,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"into_any","","",36,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",36,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",36,[[],["any",8]]],[11,"as_any_mut","","",36,[[],["any",8]]],[11,"into_any_arc","","",36,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"into_any","","",37,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",37,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",37,[[],["any",8]]],[11,"as_any_mut","","",37,[[],["any",8]]],[11,"into_any_arc","","",37,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"into_any","","",38,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",38,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",38,[[],["any",8]]],[11,"as_any_mut","","",38,[[],["any",8]]],[11,"into_any_arc","","",38,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","map_gui::tools::command","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"into_any","","",39,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",39,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",39,[[],["any",8]]],[11,"as_any_mut","","",39,[[],["any",8]]],[11,"from","map_gui::tools::heatmap","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"into_any","","",40,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",40,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",40,[[],["any",8]]],[11,"as_any_mut","","",40,[[],["any",8]]],[11,"into_any_arc","","",40,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"into_any","","",41,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",41,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",41,[[],["any",8]]],[11,"as_any_mut","","",41,[[],["any",8]]],[11,"into_any_arc","","",41,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","map_gui::tools::importer","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"into_any","","",42,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",42,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",42,[[],["any",8]]],[11,"as_any_mut","","",42,[[],["any",8]]],[11,"from","map_gui::tools::minimap","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"into_any","","",43,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",43,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",43,[[],["any",8]]],[11,"as_any_mut","","",43,[[],["any",8]]],[11,"from","map_gui::tools::navigate","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"into_any","","",45,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",45,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",45,[[],["any",8]]],[11,"as_any_mut","","",45,[[],["any",8]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"into_any","","",46,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",46,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",46,[[],["any",8]]],[11,"as_any_mut","","",46,[[],["any",8]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"into_any","","",47,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",47,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",47,[[],["any",8]]],[11,"as_any_mut","","",47,[[],["any",8]]],[11,"from","map_gui::tools::turn_explorer","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"into_any","","",48,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",48,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",48,[[],["any",8]]],[11,"as_any_mut","","",48,[[],["any",8]]],[11,"from","map_gui::tools::ui","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"into_any","","",49,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",49,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",49,[[],["any",8]]],[11,"as_any_mut","","",49,[[],["any",8]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"into_any","","",50,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",50,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",50,[[],["any",8]]],[11,"as_any_mut","","",50,[[],["any",8]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"into_any","","",51,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",51,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",51,[[],["any",8]]],[11,"as_any_mut","","",51,[[],["any",8]]],[11,"from","map_gui::tools::updater","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"into_any","","",52,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",52,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",52,[[],["any",8]]],[11,"as_any_mut","","",52,[[],["any",8]]],[11,"from","map_gui::tools::url","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"into_any","","",53,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",53,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",53,[[],["any",8]]],[11,"as_any_mut","","",53,[[],["any",8]]],[11,"into_any_arc","","",53,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","map_gui","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"equivalent","","",55,[[],["bool",15]]],[11,"get_hash","","",55,[[],["u64",15]]],[11,"vzip","","",55,[[]]],[11,"into_any","","",55,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",55,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",55,[[],["any",8]]],[11,"as_any_mut","","",55,[[],["any",8]]],[11,"into_any_arc","","",55,[[["arc",3]],[["any",8],["arc",3]]]],[11,"get_id","map_gui::render::area","",13,[[],["id",4]]],[11,"draw","","",13,[[["gfxctx",3],["applike",8],["drawoptions",3]]]],[11,"get_outline","","",13,[[["map",3]],["polygon",3]]],[11,"get_id","map_gui::render::bike","",14,[[],["id",4]]],[11,"draw","","",14,[[["gfxctx",3],["applike",8],["drawoptions",3]]]],[11,"get_outline","","",14,[[["map",3]],["polygon",3]]],[11,"contains_pt","","",14,[[["pt2d",3],["map",3]],["bool",15]]],[11,"get_zorder","","",14,[[],["isize",15]]],[11,"get_id","map_gui::render::building","",15,[[],["id",4]]],[11,"draw","","",15,[[["gfxctx",3],["applike",8],["drawoptions",3]]]],[11,"get_zorder","","",15,[[],["isize",15]]],[11,"get_outline","","",15,[[["map",3]],["polygon",3]]],[11,"contains_pt","","",15,[[["pt2d",3],["map",3]],["bool",15]]],[11,"get_id","map_gui::render::bus_stop","",16,[[],["id",4]]],[11,"draw","","",16,[[["gfxctx",3],["applike",8],["drawoptions",3]]]],[11,"get_outline","","",16,[[["map",3]],["polygon",3]]],[11,"contains_pt","","",16,[[["pt2d",3],["map",3]],["bool",15]]],[11,"get_zorder","","",16,[[],["isize",15]]],[11,"get_id","map_gui::render::car","",17,[[],["id",4]]],[11,"draw","","",17,[[["gfxctx",3],["applike",8],["drawoptions",3]]]],[11,"get_outline","","",17,[[["map",3]],["polygon",3]]],[11,"contains_pt","","",17,[[["pt2d",3],["map",3]],["bool",15]]],[11,"get_zorder","","",17,[[],["isize",15]]],[11,"get_id","map_gui::render::intersection","",18,[[],["id",4]]],[11,"draw","","",18,[[["gfxctx",3],["applike",8],["drawoptions",3]]]],[11,"get_outline","","",18,[[["map",3]],["polygon",3]]],[11,"contains_pt","","",18,[[["pt2d",3],["map",3]],["bool",15]]],[11,"get_zorder","","",18,[[],["isize",15]]],[11,"get_id","map_gui::render::lane","",19,[[],["id",4]]],[11,"draw","","",19,[[["gfxctx",3],["applike",8],["drawoptions",3]]]],[11,"get_outline","","",19,[[["map",3]],["polygon",3]]],[11,"contains_pt","","",19,[[["pt2d",3],["map",3]],["bool",15]]],[11,"get_zorder","","",19,[[],["isize",15]]],[11,"get_id","map_gui::render::parking_lot","",21,[[],["id",4]]],[11,"draw","","",21,[[["gfxctx",3],["applike",8],["drawoptions",3]]]],[11,"get_zorder","","",21,[[],["isize",15]]],[11,"get_outline","","",21,[[["map",3]],["polygon",3]]],[11,"contains_pt","","",21,[[["pt2d",3],["map",3]],["bool",15]]],[11,"get_id","map_gui::render::pedestrian","",22,[[],["id",4]]],[11,"draw","","",22,[[["gfxctx",3],["applike",8],["drawoptions",3]]]],[11,"get_outline","","",22,[[["map",3]],["polygon",3]]],[11,"contains_pt","","",22,[[["pt2d",3],["map",3]],["bool",15]]],[11,"get_zorder","","",22,[[],["isize",15]]],[11,"get_id","","",23,[[],["id",4]]],[11,"draw","","",23,[[["gfxctx",3],["applike",8],["drawoptions",3]]]],[11,"get_outline","","",23,[[["map",3]],["polygon",3]]],[11,"get_zorder","","",23,[[],["isize",15]]],[11,"get_id","map_gui::render::road","",24,[[],["id",4]]],[11,"draw","","",24,[[["gfxctx",3],["applike",8],["drawoptions",3]]]],[11,"get_outline","","",24,[[["map",3]],["polygon",3]]],[11,"contains_pt","","",24,[[["pt2d",3],["map",3]],["bool",15]]],[11,"get_zorder","","",24,[[],["isize",15]]],[11,"map","map_gui::simple_app","",28,[[],["map",3]]],[11,"sim","","",28,[[],["sim",3]]],[11,"cs","","",28,[[],["colorscheme",3]]],[11,"mut_cs","","",28,[[],["colorscheme",3]]],[11,"draw_map","","",28,[[],["drawmap",3]]],[11,"mut_draw_map","","",28,[[],["drawmap",3]]],[11,"opts","","",28,[[],["options",3]]],[11,"mut_opts","","",28,[[],["options",3]]],[11,"map_switched","","",28,[[["timer",3],["eventctx",3],["map",3]]]],[11,"draw_with_opts","","",28,[[["gfxctx",3],["drawoptions",3]]]],[11,"make_warper","","",28,[[["f64",15],["option",4],["eventctx",3],["pt2d",3],["option",4],["id",4]],[["box",3],["state",8]]]],[11,"sim_time","","",28,[[],["time",3]]],[11,"current_stage_and_remaining_time","","",28,[[["intersectionid",3]]]],[11,"clone","map_gui::colors","",0,[[],["colorschemechoice",4]]],[11,"clone","map_gui::options","",7,[[],["options",3]]],[11,"clone","","",8,[[],["trafficsignalstyle",4]]],[11,"clone","","",9,[[],["cameraangle",4]]],[11,"clone","map_gui::render::agents","",12,[[],["unzoomedagents",3]]],[11,"clone","map_gui::tools::heatmap","",40,[[],["heatmapoptions",3]]],[11,"clone","map_gui","",55,[[],["id",4]]],[11,"cmp","","",55,[[["id",4]],["ordering",4]]],[11,"eq","map_gui::colors","",0,[[["colorschemechoice",4]],["bool",15]]],[11,"eq","map_gui::options","",8,[[["trafficsignalstyle",4]],["bool",15]]],[11,"eq","","",9,[[["cameraangle",4]],["bool",15]]],[11,"eq","map_gui::render::agents","",12,[[["unzoomedagents",3]],["bool",15]]],[11,"ne","","",12,[[["unzoomedagents",3]],["bool",15]]],[11,"eq","map_gui::tools::heatmap","",40,[[["heatmapoptions",3]],["bool",15]]],[11,"ne","","",40,[[["heatmapoptions",3]],["bool",15]]],[11,"eq","map_gui","",55,[[["id",4]],["bool",15]]],[11,"ne","","",55,[[["id",4]],["bool",15]]],[11,"partial_cmp","","",55,[[["id",4]],[["option",4],["ordering",4]]]],[11,"lt","","",55,[[["id",4]],["bool",15]]],[11,"le","","",55,[[["id",4]],["bool",15]]],[11,"gt","","",55,[[["id",4]],["bool",15]]],[11,"ge","","",55,[[["id",4]],["bool",15]]],[11,"fmt","map_gui::colors","",0,[[["formatter",3]],["result",6]]],[11,"fmt","map_gui::options","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","map_gui::tools::camera","",30,[[["formatter",3]],["result",6]]],[11,"fmt","map_gui","",55,[[["formatter",3]],["result",6]]],[11,"hash","","",55,[[]]],[11,"deserialize","map_gui::tools::camera","",30,[[],["result",4]]],[11,"serialize","","",30,[[],["result",4]]],[11,"draw_default","map_gui::simple_app","",28,[[["gfxctx",3]]]],[11,"dump_before_abort","","",28,[[["canvas",3]]]],[11,"before_quit","","",28,[[["canvas",3]]]],[11,"event","map_gui::load","",5,[[["eventctx",3]],["transition",4]]],[11,"draw","","",5,[[["gfxctx",3]]]],[11,"event","map_gui::load::native_loader","",2,[[["eventctx",3]],["transition",4]]],[11,"draw","","",2,[[["gfxctx",3]]]],[11,"event","","",3,[[["eventctx",3]],["transition",4]]],[11,"draw","","",3,[[["gfxctx",3]]]],[11,"event","map_gui::load","",6,[[["eventctx",3]],["transition",4]]],[11,"draw","","",6,[[["gfxctx",3]]]],[11,"event","map_gui::options","",10,[[["eventctx",3]],["transition",4]]],[11,"draw","","",10,[[["gfxctx",3]]]],[11,"event","map_gui::simple_app","",29,[[["simpleapp",3],["eventctx",3]],[["transition",4],["simpleapp",3]]]],[11,"draw","","",29,[[["gfxctx",3],["simpleapp",3]]]],[11,"event","map_gui::tools::city_picker","",31,[[["eventctx",3]],["transition",4]]],[11,"draw_baselayer","","",31,[[],["drawbaselayer",4]]],[11,"draw","","",31,[[["gfxctx",3]]]],[11,"event","","",32,[[["eventctx",3]],["transition",4]]],[11,"draw_baselayer","","",32,[[],["drawbaselayer",4]]],[11,"draw","","",32,[[["gfxctx",3]]]],[11,"event","","",33,[[["eventctx",3]],["transition",4]]],[11,"draw_baselayer","","",33,[[],["drawbaselayer",4]]],[11,"draw","","",33,[[["gfxctx",3]]]],[11,"event","map_gui::tools::command","",39,[[["eventctx",3]],["transition",4]]],[11,"draw","","",39,[[["gfxctx",3]]]],[11,"event","map_gui::tools::importer","",42,[[["eventctx",3]],["transition",4]]],[11,"draw","","",42,[[["gfxctx",3]]]],[11,"event","map_gui::tools::navigate","",45,[[["eventctx",3]],["transition",4]]],[11,"draw","","",45,[[["gfxctx",3]]]],[11,"event","","",46,[[["eventctx",3]],["transition",4]]],[11,"draw","","",46,[[["gfxctx",3]]]],[11,"event","","",47,[[["eventctx",3]],["transition",4]]],[11,"draw","","",47,[[["gfxctx",3]]]],[11,"event","map_gui::tools::turn_explorer","",48,[[["eventctx",3]],["transition",4]]],[11,"draw_baselayer","","",48,[[],["drawbaselayer",4]]],[11,"draw","","",48,[[["gfxctx",3]]]],[11,"event","map_gui::tools::ui","",49,[[["eventctx",3]],["transition",4]]],[11,"draw_baselayer","","",49,[[],["drawbaselayer",4]]],[11,"draw","","",49,[[["gfxctx",3]]]],[11,"event","","",50,[[["eventctx",3]],["transition",4]]],[11,"draw_baselayer","","",50,[[],["drawbaselayer",4]]],[11,"draw","","",50,[[["gfxctx",3]]]],[11,"event","","",51,[[["eventctx",3]],["transition",4]]],[11,"draw_baselayer","","",51,[[],["drawbaselayer",4]]],[11,"draw","","",51,[[["gfxctx",3]]]],[11,"event","map_gui::tools::updater","",52,[[["eventctx",3]],["transition",4]]],[11,"draw","","",52,[[["gfxctx",3]]]]],"p":[[4,"ColorSchemeChoice"],[3,"ColorScheme"],[3,"FileLoader"],[3,"RawFileLoader"],[3,"MapLoader"],[3,"MapAlreadyLoaded"],[3,"FutureLoader"],[3,"Options"],[4,"TrafficSignalStyle"],[4,"CameraAngle"],[3,"OptionsPanel"],[3,"AgentCache"],[3,"UnzoomedAgents"],[3,"DrawArea"],[3,"DrawBike"],[3,"DrawBuilding"],[3,"DrawBusStop"],[3,"DrawCar"],[3,"DrawIntersection"],[3,"DrawLane"],[3,"DrawMap"],[3,"DrawParkingLot"],[3,"DrawPedestrian"],[3,"DrawPedCrowd"],[3,"DrawRoad"],[3,"DrawMovement"],[8,"Renderable"],[3,"DrawOptions"],[3,"SimpleApp"],[3,"SimpleWarper"],[3,"CameraState"],[3,"CityPicker"],[3,"AllCityPicker"],[3,"CitiesInCountryPicker"],[3,"ColorDiscrete"],[3,"ColorLegend"],[3,"DivergingScale"],[3,"ColorNetwork"],[3,"ColorScale"],[3,"RunCommand"],[3,"HeatmapOptions"],[3,"Grid"],[3,"ImportCity"],[3,"Minimap"],[8,"MinimapControls"],[3,"Navigator"],[3,"CrossStreet"],[3,"SearchBuildings"],[3,"TurnExplorer"],[3,"ChooseSomething"],[3,"PromptInput"],[3,"PopupMsg"],[3,"Picker"],[3,"URLManager"],[8,"AppLike"],[4,"ID"]]},\
"map_model":{"doc":"<code>map_model</code> describes the world where simulations occur. …","i":[[0,"city","map_model","",null,null],[3,"City","map_model::city","A single city (like Seattle) can be broken down into …",null,null],[12,"name","","",0,null],[12,"boundary","","",0,null],[12,"areas","","",0,null],[12,"districts","","The individual maps",0,null],[11,"from_huge_map","","If there\'s a single map covering all the smaller maps, …",0,[[["map",3]],["city",3]]],[11,"from_individual_maps","","Generate a city from a bunch of smaller, individual maps. …",0,[[["cityname",3],["timer",3]],["city",3]]],[0,"connectivity","map_model","",null,null],[0,"walking","map_model::connectivity","",null,null],[3,"WalkingOptions","map_model::connectivity::walking","",null,null],[12,"allow_shoulders","","If true, allow walking on shoulders.",1,null],[12,"walking_speed","","",1,null],[11,"default","","",1,[[],["walkingoptions",3]]],[11,"common_speeds","","",1,[[],["vec",3]]],[11,"default_speed","","",1,[[],["speed",3]]],[3,"Item","","",null,null],[12,"cost","","",2,null],[12,"node","","",2,null],[5,"all_walking_costs_from","","Starting from one building, calculate the cost to all …",null,[[["map",3],["buildingid",3],["walkingoptions",3],["duration",3]],[["buildingid",3],["duration",3],["hashmap",3]]]],[5,"all_walking_costs_from","map_model::connectivity","Starting from one building, calculate the cost to all …",null,[[["map",3],["buildingid",3],["walkingoptions",3],["duration",3]],[["buildingid",3],["duration",3],["hashmap",3]]]],[3,"WalkingOptions","","",null,null],[12,"allow_shoulders","","If true, allow walking on shoulders.",1,null],[12,"walking_speed","","",1,null],[5,"vehicle_cost","","This returns the pathfinding cost of crossing one lane …",null,[[["map",3],["lane",3],["pathconstraints",4],["turn",3],["routingparams",3]],["duration",3]]],[4,"WalkingNode","","",null,null],[13,"SidewalkEndpoint","","false is src_i, true is dst_i",3,null],[13,"RideBus","","",3,null],[13,"LeaveMap","","",3,null],[5,"find_scc","","Calculate the srongy connected components (SCC) of the …",null,[[["map",3],["pathconstraints",4]]]],[5,"all_vehicle_costs_from","","Starting from one building, calculate the cost to all …",null,[[["map",3],["buildingid",3],["pathconstraints",4],["duration",3]],[["buildingid",3],["duration",3],["hashmap",3]]]],[5,"debug_vehicle_costs","","",null,[[["map",3],["pathrequest",3]],["option",4]]],[0,"edits","map_model","Once a Map exists, the player can edit it in the UI …",null,null],[0,"compat","map_model::edits","",null,null],[5,"upgrade","map_model::edits::compat","When the PermanentMapEdits format changes, add a …",null,[[["map",3],["value",4]],[["permanentmapedits",3],["result",6]]]],[5,"walk","","",null,[[["value",4]]]],[5,"fix_offset","","",null,[[["value",4]]]],[5,"fix_intersection_ids","","",null,[[["value",4]]]],[5,"fix_road_direction","","",null,[[["value",4]]]],[5,"fix_old_lane_cmds","","",null,[[["map",3],["value",4]],["result",6]]],[5,"fix_merge_zones","","",null,[[["value",4]]]],[5,"fix_map_name","","",null,[[["value",4]]]],[5,"fix_phase_to_stage","","",null,[[["value",4]]]],[5,"fix_adaptive_stages","","",null,[[["value",4]]]],[5,"fix_plans","","",null,[[["value",4]]]],[5,"fix_city_name","","",null,[[["value",4]]]],[3,"OriginalLane","","",null,null],[12,"parent","","",4,null],[12,"num_fwd","","",4,null],[12,"num_back","","",4,null],[12,"dir","","",4,null],[12,"idx","","",4,null],[3,"ChangeLaneType","","",null,null],[12,"id","","",5,null],[12,"lt","","",5,null],[12,"orig_lt","","",5,null],[3,"ReverseLane","","",null,null],[12,"l","","",6,null],[12,"dst_i","","",6,null],[3,"ChangeSpeedLimit","","",null,null],[12,"id","","",7,null],[12,"new","","",7,null],[12,"old","","",7,null],[3,"ChangeAccessRestrictions","","",null,null],[12,"id","","",8,null],[12,"new","","",8,null],[12,"old","","",8,null],[11,"lookup","","",4,[[["map",3]],["result",6]]],[0,"perma","map_model::edits","",null,null],[3,"PermanentMapEdits","map_model::edits::perma","MapEdits are converted to this before serializing. …",null,null],[12,"map_name","","",9,null],[12,"edits_name","","",9,null],[12,"version","","",9,null],[12,"commands","","",9,null],[12,"merge_zones","","If false, adjacent roads with the same AccessRestrictions …",9,null],[12,"proposal_description","","Edits without these are player generated.",9,null],[12,"proposal_link","","The link is optional even for proposals",9,null],[4,"PermanentEditIntersection","","",null,null],[13,"StopSign","","",10,null],[12,"must_stop","map_model::edits::perma::PermanentEditIntersection","",11,null],[13,"TrafficSignal","map_model::edits::perma","",10,null],[13,"Closed","","",10,null],[4,"PermanentEditCmd","","",null,null],[13,"ChangeRoad","","",12,null],[12,"r","map_model::edits::perma::PermanentEditCmd","",13,null],[12,"new","","",13,null],[12,"old","","",13,null],[13,"ChangeIntersection","map_model::edits::perma","",12,null],[12,"i","map_model::edits::perma::PermanentEditCmd","",14,null],[12,"new","","",14,null],[12,"old","","",14,null],[13,"ChangeRouteSchedule","map_model::edits::perma","",12,null],[12,"osm_rel_id","map_model::edits::perma::PermanentEditCmd","",15,null],[12,"old","","",15,null],[12,"new","","",15,null],[11,"to_cmd","map_model::edits::perma","",12,[[["map",3]],[["editcmd",4],["result",6]]]],[11,"to_edits","","Transform permanent edits to MapEdits, looking up the map …",9,[[["map",3]],[["result",6],["mapedits",3]]]],[11,"to_edits_permissive","","Transform permanent edits to MapEdits, looking up the map …",9,[[["map",3]],["mapedits",3]]],[11,"from_permanent","","",10,[[["map",3],["intersectionid",3]],[["result",6],["editintersection",4]]]],[3,"MapEdits","map_model::edits","Represents changes to a map. Note this isn\'t serializable …",null,null],[12,"edits_name","","",16,null],[12,"commands","","A stack, oldest edit is first. The same intersection may …",16,null],[12,"merge_zones","","If false, adjacent roads with the same AccessRestrictions …",16,null],[12,"changed_roads","","Derived from commands, kept up to date by update_derived",16,null],[12,"original_intersections","","",16,null],[12,"changed_routes","","",16,null],[12,"proposal_description","","Some edits are included in the game by default, in …",16,null],[12,"proposal_link","","",16,null],[4,"EditIntersection","","",null,null],[13,"StopSign","","",17,null],[13,"TrafficSignal","","",17,null],[13,"Closed","","",17,null],[3,"EditRoad","","",null,null],[12,"lanes_ltr","","",18,null],[12,"speed_limit","","",18,null],[12,"access_restrictions","","",18,null],[11,"get_orig_from_osm","","",18,[[["mapconfig",3],["road",3]],["editroad",3]]],[11,"diff","","",18,[[["editroad",3]],[["string",3],["vec",3]]]],[4,"EditCmd","","",null,null],[13,"ChangeRoad","","",19,null],[12,"r","map_model::edits::EditCmd","",20,null],[12,"old","","",20,null],[12,"new","","",20,null],[13,"ChangeIntersection","map_model::edits","",19,null],[12,"i","map_model::edits::EditCmd","",21,null],[12,"new","","",21,null],[12,"old","","",21,null],[13,"ChangeRouteSchedule","map_model::edits","",19,null],[12,"id","map_model::edits::EditCmd","",22,null],[12,"old","","",22,null],[12,"new","","",22,null],[3,"EditEffects","map_model::edits","",null,null],[12,"changed_roads","","",23,null],[12,"changed_intersections","","",23,null],[12,"added_turns","","",23,null],[12,"deleted_turns","","",23,null],[11,"new","","",16,[[],["mapedits",3]]],[11,"load","","",16,[[["map",3],["string",3],["timer",3]],[["result",6],["mapedits",3]]]],[11,"save","","",16,[[["map",3]]]],[11,"update_derived","","",16,[[["map",3]]]],[11,"compress","","Assumes update_derived has been called.",16,[[["map",3]]]],[11,"changed_lanes","","Pick apart changed_roads and figure out if an entire road …",16,[[["map",3]]]],[11,"new","","",23,[[],["editeffects",3]]],[11,"describe","","(summary, details)",19,[[["map",3]]]],[11,"apply","","",19,[[["map",3],["editeffects",3]]]],[11,"undo","","",19,[[],["editcmd",4]]],[5,"recalculate_turns","","",null,[[["editeffects",3],["intersectionid",3],["map",3]]]],[0,"make","map_model","See …",null,null],[0,"bridges","map_model::make","",null,null],[5,"find_bridges","map_model::make::bridges","Look for roads underneath bridges, then lower their …",null,[[["vec",3],["timer",3],["bounds",3]]]],[0,"buildings","map_model::make","",null,null],[5,"make_all_buildings","map_model::make::buildings","Finalize importing of buildings, mostly by matching them …",null,[[["map",3],["btreemap",3],["timer",3],["bool",15]],[["building",3],["vec",3]]]],[5,"trim_path","","",null,[[["polygon",3],["line",3]],["line",3]]],[5,"get_address","","",null,[[["map",3],["tags",3],["laneid",3]],["string",3]]],[5,"classify_bldg","","",null,[[["f64",15],["tags",3],["xorshiftrng",3],["vec",3]],["buildingtype",4]]],[0,"initial","map_model::make","Naming is confusing, but RawMap -> InitialMap -> Map. …",null,null],[0,"geometry","map_model::make::initial","OSM describes roads as center-lines that intersect. Turn …",null,null],[17,"DEGENERATE_INTERSECTION_HALF_LENGTH","map_model::make::initial::geometry","",null,null],[5,"intersection_polygon","","Also returns a list of labeled polygons for debugging.",null,[[["btreemap",3],["intersection",3]],["result",6]]],[5,"generalized_trim_back","","",null,[[["vec",3],["nodeid",3],["btreemap",3]],["result",6]]],[5,"deadend","","",null,[[["vec",3],["nodeid",3],["btreemap",3]],["result",6]]],[5,"close_off_polygon","","",null,[[["vec",3],["pt2d",3]],[["vec",3],["pt2d",3]]]],[3,"Piece","","",null,null],[12,"id","","",24,null],[12,"left","","",24,null],[12,"center","","",24,null],[12,"right","","",24,null],[5,"on_off_ramp","","",null,[[["vec",3],["nodeid",3],["btreemap",3]],["option",4]]],[0,"lane_specs","map_model::make::initial","",null,null],[3,"LaneSpec","map_model::make::initial::lane_specs","",null,null],[12,"lt","","",25,null],[12,"dir","","",25,null],[12,"width","","",25,null],[5,"fwd","","",null,[[["lanetype",4]],["lanespec",3]]],[5,"back","","",null,[[["lanetype",4]],["lanespec",3]]],[5,"get_lane_specs_ltr","","",null,[[["tags",3],["mapconfig",3]],[["lanespec",3],["vec",3]]]],[5,"assemble_ltr","","",null,[[["vec",3],["drivingside",4],["lanespec",3]],[["lanespec",3],["vec",3]]]],[3,"InitialMap","map_model::make::initial","",null,null],[12,"roads","","",26,null],[12,"intersections","","",26,null],[12,"bounds","","",26,null],[3,"Road","","",null,null],[12,"id","","",27,null],[12,"src_i","","",27,null],[12,"dst_i","","",27,null],[12,"trimmed_center_pts","","",27,null],[12,"half_width","","",27,null],[12,"lane_specs_ltr","","",27,null],[12,"osm_tags","","",27,null],[11,"new","","",27,[[["rawroad",3],["mapconfig",3],["originalroad",3]],[["road",3],["result",6]]]],[3,"Intersection","","",null,null],[12,"id","","",28,null],[12,"polygon","","",28,null],[12,"roads","","",28,null],[12,"intersection_type","","",28,null],[12,"elevation","","",28,null],[11,"new","","",26,[[["rawmap",3],["timer",3],["bounds",3]],["initialmap",3]]],[0,"medians","map_model::make","",null,null],[5,"find_medians","map_model::make::medians","Fill in empty space between one-way roads.",null,[[["map",3]],[["vec",3],["polygon",3]]]],[0,"merge_intersections","map_model::make","",null,null],[5,"merge_short_roads","map_model::make::merge_intersections","Merge tiny \\\"roads\\\" that\'re actually just part of a …",null,[[["rawmap",3]],[["btreeset",3],["nodeid",3]]]],[5,"should_merge","","",null,[[["rawmap",3],["originalroad",3]],["bool",15]]],[5,"connects_dual_carriageway","","",null,[[["rawmap",3],["originalroad",3]],["bool",15]]],[5,"angle","","",null,[[["rawroad",3]],["angle",3]]],[0,"parking_lots","map_model::make","",null,null],[5,"make_all_parking_lots","map_model::make::parking_lots","Take in parking lots from OSM and all parking aisle …",null,[[["map",3],["timer",3],["vec",3],["vec",3]],[["parkinglot",3],["vec",3]]]],[5,"trim_path","","",null,[[["polygon",3],["line",3]],["line",3]]],[5,"infer_spots","","",null,[[["polygon",3],["vec",3]],["vec",3]]],[5,"line_valid","","",null,[[["vec",3],["polygon",3],["line",3],["vec",3]],["bool",15]]],[0,"remove_disconnected","map_model::make","",null,null],[5,"remove_disconnected_roads","map_model::make::remove_disconnected","Some roads might be totally disconnected from the largest …",null,[[["rawmap",3],["timer",3]]]],[0,"traffic_signals","map_model::make","The various traffic signal generators live in the traffic …",null,null],[0,"lagging_green","map_model::make::traffic_signals","",null,null],[5,"make_traffic_signal","map_model::make::traffic_signals::lagging_green","Create a traffic signal which has a stage that is: …",null,[[["map",3],["intersectionid",3]],[["option",4],["controltrafficsignal",3]]]],[5,"make_signal","","",null,[[["map",3],["intersectionid",3]],[["option",4],["controltrafficsignal",3]]]],[5,"optimize","","",null,[[["controltrafficsignal",3]],[["option",4],["controltrafficsignal",3]]]],[5,"make_crosswalk_variable","","",null,[[["controltrafficsignal",3]]]],[5,"merge_stages","","",null,[[["controltrafficsignal",3]],[["option",4],["controltrafficsignal",3]]]],[5,"is_conflict","","",null,[[["stage",3],["controltrafficsignal",3]],["option",4]]],[5,"protected_yield_stage","","",null,[[["movementid",3]],["stage",3]]],[5,"multi_way_stages","","Build stages. First find roads that are straight across, …",null,[[["map",3],["intersectionid",3]],[["option",4],["controltrafficsignal",3]]]],[5,"add_stage","","",null,[[["controltrafficsignal",3],["stage",3]]]],[5,"turns","","",null,[[["vec",3],["roadid",3]],[["vec",3],["movementid",3]]]],[5,"remove_movement","","",null,[[["vec",3],["roadid",3]],[["option",4],["movementid",3]]]],[5,"three_way_three_stage","","",null,[[["map",3],["intersectionid",3]],[["option",4],["controltrafficsignal",3]]]],[5,"four_way_four_stage","","",null,[[["map",3],["intersectionid",3]],[["option",4],["controltrafficsignal",3]]]],[5,"movements","","",null,[[["controltrafficsignal",3]]]],[5,"straight_types","","",null,[[["vec",3]]]],[5,"make_lagging_green_variable","","",null,[[["controltrafficsignal",3]]]],[5,"get_possible_policies","map_model::make::traffic_signals","Applies a bunch of heuristics to a single intersection, …",null,[[["map",3],["bool",15],["intersectionid",3]],["vec",3]]],[5,"new","","",null,[[["map",3],["intersectionid",3]],["controltrafficsignal",3]]],[5,"greedy_assignment","","",null,[[["map",3],["intersectionid",3]],["controltrafficsignal",3]]],[5,"degenerate","","",null,[[["map",3],["intersectionid",3]],[["option",4],["controltrafficsignal",3]]]],[5,"half_signal","","",null,[[["map",3],["intersectionid",3]],[["option",4],["controltrafficsignal",3]]]],[5,"three_way","","",null,[[["map",3],["intersectionid",3]],[["option",4],["controltrafficsignal",3]]]],[5,"four_way_four_stage","","",null,[[["map",3],["intersectionid",3]],[["option",4],["controltrafficsignal",3]]]],[5,"four_way_two_stage","","",null,[[["map",3],["intersectionid",3]],[["option",4],["controltrafficsignal",3]]]],[5,"all_walk_all_yield","","",null,[[["map",3],["intersectionid",3]],["controltrafficsignal",3]]],[5,"stage_per_road","","",null,[[["map",3],["intersectionid",3]],["controltrafficsignal",3]]],[5,"expand_all_stages","","",null,[[["controltrafficsignal",3]]]],[17,"PROTECTED","","",null,null],[17,"YIELD","","",null,null],[5,"make_stages","","",null,[[["drivingside",4],["controltrafficsignal",3],["vec",3],["vec",3]]]],[5,"make_stages_filtered","","",null,[[["drivingside",4],["bool",15],["controltrafficsignal",3],["vec",3],["vec",3]]]],[5,"synchronize","","Simple second-pass after generating all signals. Find …",null,[[["map",3]]]],[0,"transit","map_model::make","",null,null],[5,"make_stops_and_routes","map_model::make::transit","Construct the final model of bus/train stops and routes. …",null,[[["vec",3],["map",3],["timer",3]]]],[5,"make_route","","",null,[[["map",3],["matcher",3],["btreemap",3],["rawbusroute",3]],["result",6]]],[3,"Matcher","","",null,null],[12,"sidewalk_pts","","",29,null],[12,"light_rail_pts","","",29,null],[11,"new","","",29,[[["map",3],["vec",3],["timer",3]],["matcher",3]]],[11,"lookup","","",29,[[["pathconstraints",4],["rawbusstop",3],["map",3]],["result",6]]],[5,"pick_start_lane","","",null,[[["pathconstraints",4],["position",3],["map",3]],[["laneid",3],["result",6]]]],[5,"default_spawn_times","","",null,[[],[["time",3],["vec",3]]]],[0,"turns","map_model::make","",null,null],[5,"make_all_turns","map_model::make::turns","Generate all driving and walking turns at an …",null,[[["map",3],["intersection",3]],[["turn",3],["vec",3]]]],[5,"ensure_unique","","",null,[[["vec",3],["turn",3]],[["turn",3],["vec",3]]]],[5,"is_turn_allowed","","",null,[[["map",3],["turn",3]],["bool",15]]],[5,"does_turn_pass_restrictions","","",null,[[["map",3],["turn",3],["intersection",3]],["bool",15]]],[5,"make_vehicle_turns","","",null,[[["map",3],["intersection",3]],[["turn",3],["vec",3]]]],[5,"curvey_turn","","",null,[[["lane",3]],[["polyline",3],["result",6]]]],[5,"to_pt","","",null,[[["pt2d",3]],[["f64",15],["point2d",3]]]],[5,"from_pt","","",null,[[["f64",15],["point2d",3]],["pt2d",3]]],[5,"lc_penalty","","",null,[[["map",3],["turn",3]],["isize",15]]],[5,"remove_merging_turns","","",null,[[["map",3],["turn",3],["turntype",4],["vec",3]],[["turn",3],["vec",3]]]],[5,"turn_type_from_angles","","",null,[[["angle",3]],["turntype",4]]],[5,"expected_turn_types_for_four_way","","",null,[[["map",3],["intersection",3]],[["option",4],["hashmap",3]]]],[0,"walking_turns","map_model::make","",null,null],[5,"make_walking_turns","map_model::make::walking_turns","Generate Crosswalk and SharedSidewalkCorner (places where …",null,[[["map",3],["intersection",3]],[["turn",3],["vec",3]]]],[5,"filter_turns","","Filter out crosswalks on really short roads. In reality, …",null,[[["map",3],["turn",3],["intersection",3],["vec",3]],[["turn",3],["vec",3]]]],[5,"_make_walking_turns_v2","","",null,[[["map",3],["intersection",3]],[["turn",3],["vec",3]]]],[5,"make_footway_turns","","At an intersection of footpaths only, just generate a …",null,[[["map",3],["intersection",3]],[["turn",3],["vec",3]]]],[5,"make_crosswalks","","",null,[[["drivingside",4],["intersectionid",3],["lane",3]],[["vec",3],["option",4]]]],[5,"make_degenerate_crosswalks","","",null,[[["intersectionid",3],["vec",3],["road",3]],[["vec",3],["option",4]]]],[5,"make_shared_sidewalk_corner","","",null,[[["intersection",3],["lane",3],["drivingside",4]],["polyline",3]]],[5,"turn_id","","",null,[[["intersectionid",3],["laneid",3]],["turnid",3]]],[5,"get_sidewalk","","",null,[[["vec",3],["vec",3]],[["option",4],["lane",3]]]],[5,"match_points_to_lanes","map_model::make","Snap points to an exact Position along the nearest lane. …",null,[[["fn",8],["distance",3],["bounds",3],["timer",3],["hashset",3],["hashablept2d",3],["vec",3]],[["hashmap",3],["hashablept2d",3],["position",3]]]],[0,"map","map_model","A bunch of (mostly read-only) queries on a Map.",null,null],[3,"MapConfig","map_model::map","",null,null],[12,"driving_side","","If true, driving happens on the right side of the road …",30,null],[12,"bikes_can_use_bus_lanes","","",30,null],[12,"inferred_sidewalks","","If true, roads without explicitly tagged sidewalks may …",30,null],[12,"street_parking_spot_length","","Street parking is divided into spots of this length. 8 …",30,null],[4,"DrivingSide","","",null,null],[13,"Right","","",31,null],[13,"Left","","",31,null],[0,"objects","map_model","",null,null],[0,"area","map_model::objects","",null,null],[3,"AreaID","map_model::objects::area","",null,null],[12,"0","","",32,null],[4,"AreaType","","",null,null],[13,"Park","","",33,null],[13,"Water","","",33,null],[13,"Island","","",33,null],[13,"MedianStrip","","",33,null],[13,"PedestrianPlaza","","",33,null],[13,"StudyArea","","Not from OSM. A user-specified area to focus on.",33,null],[3,"Area","","Areas are just used for drawing.",null,null],[12,"id","","",34,null],[12,"area_type","","",34,null],[12,"polygon","","",34,null],[12,"osm_tags","","",34,null],[12,"osm_id","","The importing process also automatically creates some …",34,null],[0,"building","map_model::objects","",null,null],[3,"BuildingID","map_model::objects::building","",null,null],[12,"0","","",35,null],[3,"Building","","A building has connections to the road and sidewalk, may …",null,null],[12,"id","","",36,null],[12,"polygon","","",36,null],[12,"levels","","",36,null],[12,"address","","",36,null],[12,"name","","",36,null],[12,"orig_id","","",36,null],[12,"label_center","","Where a text label should be centered to have the best …",36,null],[12,"amenities","","",36,null],[12,"bldg_type","","",36,null],[12,"parking","","",36,null],[12,"osm_tags","","Depending on options while importing, these might be …",36,null],[12,"sidewalk_pos","","The building\'s connection for pedestrians is immutable. …",36,null],[12,"driveway_geom","","Goes from building to sidewalk",36,null],[3,"Amenity","","A business located inside a building.",null,null],[12,"names","","",37,null],[12,"amenity_type","","This is the specific amenity listed in OSM, not the more …",37,null],[12,"osm_tags","","Depending on options while importing, these might be …",37,null],[4,"OffstreetParking","","Represent no parking as Private(0, false).",null,null],[13,"PublicGarage","","(Name, spots)",38,null],[13,"Private","","(Spots, explicitly tagged as a garage)",38,null],[4,"BuildingType","","",null,null],[13,"Residential","","",39,null],[12,"num_residents","map_model::objects::building::BuildingType","",40,null],[12,"num_housing_units","","",40,null],[13,"ResidentialCommercial","map_model::objects::building","An estimated number of residents, workers",39,null],[13,"Commercial","","An estimated number of workers",39,null],[13,"Empty","","",39,null],[11,"has_residents","","",39,[[],["bool",15]]],[3,"NamePerLanguage","","None corresponds to the native name",null,null],[12,"0","","",41,null],[11,"get","","",41,[[["option",4],["string",3]],["string",3]]],[11,"new","","",41,[[["tags",3]],[["option",4],["nameperlanguage",3]]]],[11,"unnamed","","",41,[[],["nameperlanguage",3]]],[11,"sidewalk","","",36,[[],["laneid",3]]],[11,"house_number","","",36,[[],[["string",3],["option",4]]]],[11,"driving_connection","","The polyline goes from the building to the driving …",36,[[["map",3]],["option",4]]],[11,"biking_connection","","Returns (biking position, sidewalk position). Could fail …",36,[[["map",3]],["option",4]]],[11,"num_parking_spots","","",36,[[],["usize",15]]],[11,"has_amenity","","Does this building contain any amenity matching the …",36,[[["amenitytype",4]],["bool",15]]],[5,"sidewalk_to_bike","","",null,[[["map",3],["position",3]],["option",4]]],[4,"AmenityType","","Businesses are categorized into one of these types.",null,null],[13,"Groceries","","",42,null],[13,"Food","","",42,null],[13,"Bar","","",42,null],[13,"Medical","","",42,null],[13,"Religious","","",42,null],[13,"Education","","",42,null],[13,"Financial","","",42,null],[13,"PostOffice","","",42,null],[13,"Culture","","",42,null],[13,"Childcare","","",42,null],[13,"Shopping","","",42,null],[11,"types","","",42,[[],[["vec",3],["str",15]]]],[11,"all","","All types of amenities, in an arbitrary order.",42,[[],[["vec",3],["amenitytype",4]]]],[11,"categorize","","Categorize an OSM amenity tag.",42,[[["str",15]],[["amenitytype",4],["option",4]]]],[11,"parse","","",42,[[["str",15]],[["amenitytype",4],["option",4]]]],[0,"bus_stop","map_model::objects","Bus stops and routes.",null,null],[3,"BusStopID","map_model::objects::bus_stop","",null,null],[12,"sidewalk","","",43,null],[12,"idx","","As long as this is unique per lane, this value is …",43,null],[3,"BusRouteID","","",null,null],[12,"0","","",44,null],[3,"BusStop","","",null,null],[12,"id","","",45,null],[12,"name","","",45,null],[12,"driving_pos","","These may be on different roads entirely, like for light …",45,null],[12,"sidewalk_pos","","",45,null],[12,"is_train_stop","","If it\'s both, train overrides bus",45,null],[3,"BusRoute","","",null,null],[12,"id","","",46,null],[12,"full_name","","",46,null],[12,"short_name","","",46,null],[12,"gtfs_trip_marker","","",46,null],[12,"osm_rel_id","","",46,null],[12,"stops","","",46,null],[12,"start","","May be a border or not. If not, is long enough for buses …",46,null],[12,"end_border","","",46,null],[12,"route_type","","",46,null],[12,"spawn_times","","Non-empty, times in order for one day when a vehicle …",46,null],[12,"orig_spawn_times","","Explicitly store whatever the original was, since this …",46,null],[11,"all_steps","","",46,[[["map",3]],[["vec",3],["pathrequest",3]]]],[11,"plural_noun","","",46,[[],["str",15]]],[0,"intersection","map_model::objects","",null,null],[3,"IntersectionID","map_model::objects::intersection","",null,null],[12,"0","","",47,null],[4,"IntersectionType","","",null,null],[13,"StopSign","","",48,null],[13,"TrafficSignal","","",48,null],[13,"Border","","",48,null],[13,"Construction","","",48,null],[3,"Intersection","","An intersection connects roads. Most have >2 roads and …",null,null],[12,"id","","",49,null],[12,"polygon","","This needs to be in clockwise orientation, or later …",49,null],[12,"turns","","",49,null],[12,"elevation","","",49,null],[12,"intersection_type","","",49,null],[12,"orig_id","","",49,null],[12,"incoming_lanes","","Note that a lane may belong to both incoming_lanes and …",49,null],[12,"outgoing_lanes","","",49,null],[12,"roads","","",49,null],[12,"merged","","Was a short road adjacent to this intersection merged?",49,null],[11,"is_border","","",49,[[],["bool",15]]],[11,"is_incoming_border","","",49,[[],["bool",15]]],[11,"is_outgoing_border","","",49,[[],["bool",15]]],[11,"is_closed","","",49,[[],["bool",15]]],[11,"is_stop_sign","","",49,[[],["bool",15]]],[11,"is_traffic_signal","","",49,[[],["bool",15]]],[11,"is_light_rail","","",49,[[["map",3]],["bool",15]]],[11,"is_private","","",49,[[["map",3]],["bool",15]]],[11,"is_footway","","",49,[[["map",3]],["bool",15]]],[11,"is_cycleway","","",49,[[["map",3]],["bool",15]]],[11,"get_incoming_lanes","","",49,[[["map",3],["pathconstraints",4]],[["vec",3],["laneid",3]]]],[11,"get_outgoing_lanes","","Strict for bikes. If there are bike lanes, not allowed to …",49,[[["map",3],["pathconstraints",4]],[["vec",3],["laneid",3]]]],[11,"get_zorder","","",49,[[["map",3]],["isize",15]]],[11,"get_rank","","",49,[[["map",3]],["roadrank",4]]],[11,"get_roads_sorted_by_incoming_angle","","",49,[[["vec",3]],[["vec",3],["roadid",3]]]],[11,"get_sorted_incoming_roads","","Return all incoming roads to an intersection, sorted by …",49,[[["map",3]],[["vec",3],["roadid",3]]]],[11,"some_outgoing_road","","",49,[[["map",3]],[["option",4],["directedroadid",3]]]],[11,"some_incoming_road","","",49,[[["map",3]],[["option",4],["directedroadid",3]]]],[11,"name","","",49,[[["option",4],["map",3],["string",3]],["string",3]]],[0,"lane","map_model::objects","",null,null],[17,"PARKING_LOT_SPOT_LENGTH","map_model::objects::lane","From some manually audited cases in Seattle, the length …",null,null],[3,"LaneID","","",null,null],[12,"0","","",50,null],[4,"LaneType","","",null,null],[13,"Driving","","",51,null],[13,"Parking","","",51,null],[13,"Sidewalk","","",51,null],[13,"Shoulder","","",51,null],[13,"Biking","","",51,null],[13,"Bus","","",51,null],[13,"SharedLeftTurn","","",51,null],[13,"Construction","","",51,null],[13,"LightRail","","",51,null],[11,"is_for_moving_vehicles","","",51,[[],["bool",15]]],[11,"supports_any_movement","","",51,[[],["bool",15]]],[11,"describe","","",51,[[],["str",15]]],[11,"short_name","","",51,[[],["str",15]]],[3,"Lane","","A road segment is broken down into individual lanes, …",null,null],[12,"id","","",52,null],[12,"parent","","",52,null],[12,"lane_type","","",52,null],[12,"lane_center_pts","","",52,null],[12,"width","","",52,null],[12,"dir","","",52,null],[12,"src_i","","",52,null],[12,"dst_i","","",52,null],[12,"bus_stops","","Meaningless order",52,null],[12,"driving_blackhole","","{Cars, bikes} trying to start or end here might not be …",52,null],[12,"biking_blackhole","","",52,null],[11,"first_pt","","",52,[[],["pt2d",3]]],[11,"last_pt","","",52,[[],["pt2d",3]]],[11,"first_line","","",52,[[],["line",3]]],[11,"last_line","","",52,[[],["line",3]]],[11,"endpoint","","",52,[[["intersectionid",3]],["pt2d",3]]],[11,"end_line","","pt2 will be endpoint",52,[[["intersectionid",3]],["line",3]]],[11,"dist_along_of_point","","",52,[[["pt2d",3]],[["option",4],["distance",3]]]],[11,"length","","",52,[[],["distance",3]]],[11,"intersections","","",52,[[],[["intersectionid",3],["vec",3]]]],[11,"number_parking_spots","","",52,[[["mapconfig",3]],["usize",15]]],[11,"is_driving","","",52,[[],["bool",15]]],[11,"is_biking","","",52,[[],["bool",15]]],[11,"is_bus","","",52,[[],["bool",15]]],[11,"is_walkable","","",52,[[],["bool",15]]],[11,"is_sidewalk","","",52,[[],["bool",15]]],[11,"is_shoulder","","",52,[[],["bool",15]]],[11,"is_parking","","",52,[[],["bool",15]]],[11,"is_light_rail","","",52,[[],["bool",15]]],[11,"get_directed_parent","","",52,[[],["directedroadid",3]]],[11,"get_turn_restrictions","","",52,[[["road",3]],[["option",4],["btreeset",3]]]],[11,"trace_around_block","","Starting from this lane, follow the lane\'s left edge to …",52,[[["map",3]],["option",4]]],[0,"parking_lot","map_model::objects","",null,null],[3,"ParkingLotID","map_model::objects::parking_lot","",null,null],[12,"0","","",53,null],[3,"ParkingLot","","Parking lots have some fixed capacity for cars, and are …",null,null],[12,"id","","",54,null],[12,"polygon","","",54,null],[12,"aisles","","",54,null],[12,"osm_id","","",54,null],[12,"spots","","The middle of the \\\"T\\\", pointing towards the parking aisle",54,null],[12,"extra_spots","","If we can\'t render all spots (maybe a lot with no aisles …",54,null],[12,"driveway_line","","Goes from the lot to the driving lane",54,null],[12,"driving_pos","","Guaranteed to be at least 7m (MAX_CAR_LENGTH + a little …",54,null],[12,"sidewalk_line","","Lot to sidewalk",54,null],[12,"sidewalk_pos","","",54,null],[11,"capacity","","",54,[[],["usize",15]]],[0,"road","map_model::objects","",null,null],[3,"RoadID","map_model::objects::road","",null,null],[12,"0","","",55,null],[4,"Direction","","",null,null],[13,"Fwd","","",56,null],[13,"Back","","",56,null],[11,"opposite","","",56,[[],["direction",4]]],[3,"DirectedRoadID","","",null,null],[12,"id","","",57,null],[12,"dir","","",57,null],[11,"src_i","","",57,[[["map",3]],["intersectionid",3]]],[11,"dst_i","","",57,[[["map",3]],["intersectionid",3]]],[11,"lanes","","Strict for bikes. If there are bike lanes, not allowed to …",57,[[["pathconstraints",4],["map",3]],[["vec",3],["laneid",3]]]],[11,"must_get_sidewalk","","Get the only sidewalk or shoulder on this side of the …",57,[[["map",3]],["laneid",3]]],[11,"has_lanes","","Does this directed road have any lanes of a certain type?",57,[[["map",3],["lanetype",4]],["bool",15]]],[3,"Road","","A Road represents a segment between exactly two …",null,null],[12,"id","","",58,null],[12,"osm_tags","","",58,null],[12,"turn_restrictions","","self is \'from\'",58,null],[12,"complicated_turn_restrictions","","self is \'from\'. (via, to). Only BanTurns.",58,null],[12,"orig_id","","",58,null],[12,"speed_limit","","",58,null],[12,"access_restrictions","","",58,null],[12,"zorder","","",58,null],[12,"percent_incline","","[-1.0, 1.0] theoretically, but in practice, about [-0.25, …",58,null],[12,"lanes_ltr","","Invariant: A road must contain at least one child",58,null],[12,"center_pts","","The physical center of the road, including sidewalks, …",58,null],[12,"src_i","","",58,null],[12,"dst_i","","",58,null],[11,"lanes_ltr","","Returns all lanes from the left side of the road to …",58,[[],["vec",3]]],[11,"get_left_side","","",58,[[["map",3]],["polyline",3]]],[11,"offset","","Counting from the left side of the road",58,[[["laneid",3]],["usize",15]]],[11,"dir_and_offset","","lane must belong to this road. Offset 0 is the centermost …",58,[[["laneid",3]]]],[11,"parking_to_driving","","",58,[[["map",3],["laneid",3]],[["option",4],["laneid",3]]]],[11,"speed_limit_from_osm","","",58,[[],["speed",3]]],[11,"find_closest_lane","","Includes off-side",58,[[["map",3],["fn",8],["laneid",3]],[["option",4],["laneid",3]]]],[11,"all_lanes","","",58,[[],[["vec",3],["laneid",3]]]],[11,"get_dir_change_pl","","This is the FIRST yellow line where the direction of the …",58,[[["map",3]],["polyline",3]]],[11,"get_half_width","","",58,[[["map",3]],["distance",3]]],[11,"get_thick_polygon","","",58,[[["map",3]],["polygon",3]]],[11,"get_name","","",58,[[["option",4],["string",3]],["string",3]]],[11,"get_rank","","",58,[[],["roadrank",4]]],[11,"get_detailed_rank","","",58,[[],["usize",15]]],[11,"all_bus_stops","","",58,[[["map",3]],[["vec",3],["busstopid",3]]]],[11,"is_light_rail","","",58,[[],["bool",15]]],[11,"is_footway","","",58,[[],["bool",15]]],[11,"is_service","","",58,[[],["bool",15]]],[11,"is_cycleway","","",58,[[],["bool",15]]],[11,"common_endpt","","",58,[[["road",3]],["intersectionid",3]]],[11,"is_private","","",58,[[],["bool",15]]],[11,"access_restrictions_from_osm","","",58,[[],["accessrestrictions",3]]],[11,"get_zone","","",58,[[["map",3]],[["option",4],["zone",3]]]],[11,"is_extremely_short","","Many roads wind up with almost no length, due to their …",58,[[],["bool",15]]],[11,"children_forwards","","These are ordered from closest to center lane (left-most …",58,[[],["vec",3]]],[11,"children_backwards","","",58,[[],["vec",3]]],[11,"children","","",58,[[["direction",4]],["vec",3]]],[11,"incoming_lanes","","Returns lanes from the \\\"center\\\" going out",58,[[["intersectionid",3]],["vec",3]]],[11,"outgoing_lanes","","Returns lanes from the \\\"center\\\" going out",58,[[["intersectionid",3]],["vec",3]]],[0,"stop_signs","map_model::objects","",null,null],[3,"ControlStopSign","map_model::objects::stop_signs","",null,null],[12,"id","","",59,null],[12,"roads","","",59,null],[3,"RoadWithStopSign","","",null,null],[12,"lane_closest_to_edge","","",60,null],[12,"must_stop","","",60,null],[11,"new","","",59,[[["map",3],["intersectionid",3]],["controlstopsign",3]]],[11,"get_priority","","Get the priority of a turn according to the stop sign -- …",59,[[["map",3],["turnid",3]],["turnpriority",4]]],[11,"flip_sign","","",59,[[["roadid",3]]]],[0,"traffic_signals","map_model::objects","",null,null],[17,"CROSSWALK_PACE","map_model::objects::traffic_signals","",null,null],[3,"ControlTrafficSignal","","A traffic signal consists of a sequence of Stages that …",null,null],[12,"id","","",61,null],[12,"stages","","",61,null],[12,"offset","","",61,null],[12,"movements","","",61,null],[3,"Stage","","",null,null],[12,"protected_movements","","",62,null],[12,"yield_movements","","",62,null],[12,"stage_type","","",62,null],[4,"StageType","","",null,null],[13,"Fixed","","",63,null],[13,"Variable","","Minimum is the minimum duration, 0 allows cycle to be …",63,null],[11,"simple_duration","","",63,[[],["duration",3]]],[11,"new","","",61,[[["map",3],["intersectionid",3]],["controltrafficsignal",3]]],[11,"validating_new","","Only call this variant while importing the map, to …",61,[[["map",3],["intersectionid",3]],["controltrafficsignal",3]]],[11,"get_possible_policies","","",61,[[["map",3],["intersectionid",3]],["vec",3]]],[11,"get_min_crossing_time","","",61,[[["usize",15]],["duration",3]]],[11,"validate","","",61,[[],["result",6]]],[11,"convert_to_ped_scramble","","Move crosswalks from stages, adding them to an all-walk …",61,[[],["bool",15]]],[11,"convert_to_ped_scramble_without_promotion","","Move crosswalks from stages, adding them to an all-walk …",61,[[],["bool",15]]],[11,"internal_convert_to_ped_scramble","","",61,[[["bool",15]],["bool",15]]],[11,"adjust_major_minor_timing","","Modifies the fixed timing of all stages, applying either …",61,[[["map",3],["duration",3]],["result",6]]],[11,"turn_to_movement","","",61,[[["turnid",3]],["movementid",3]]],[11,"missing_turns","","",61,[[],[["btreeset",3],["movementid",3]]]],[11,"compressed_id","","",61,[[["turnid",3]],["compressedmovementid",3]]],[11,"simple_cycle_duration","","How long a full cycle of the signal lasts, assuming no …",61,[[],["duration",3]]],[11,"new","","",62,[[],["stage",3]]],[11,"could_be_protected","","",62,[[["movementid",3],["btreemap",3]],["bool",15]]],[11,"get_priority_of_turn","","",62,[[["turnid",3],["controltrafficsignal",3]],["turnpriority",4]]],[11,"get_priority_of_movement","","",62,[[["movementid",3]],["turnpriority",4]]],[11,"edit_movement","","",62,[[["movement",3],["turnpriority",4]]]],[11,"enforce_minimum_crosswalk_time","","",62,[[["movement",3]]]],[11,"max_crosswalk_time","","",62,[[["btreemap",3]],[["option",4],["duration",3]]]],[11,"export","","",61,[[["map",3]],["trafficsignal",3]]],[11,"import","","",61,[[["trafficsignal",3],["map",3],["intersectionid",3]],[["result",6],["controltrafficsignal",3]]]],[5,"export_movement","","",null,[[["map",3],["movementid",3]],["turn",3]]],[5,"import_movement","","",null,[[["map",3],["turn",3]],[["movementid",3],["result",6]]]],[5,"find_r","","",null,[[["map",3],["directedroad",3]],[["result",6],["directedroadid",3]]]],[0,"turn","map_model::objects","",null,null],[3,"TurnID","map_model::objects::turn","Turns are uniquely identified by their (src, dst) lanes …",null,null],[12,"parent","","",64,null],[12,"src","","src and dst must both belong to parent. No guarantees …",64,null],[12,"dst","","",64,null],[4,"TurnType","","",null,null],[13,"Crosswalk","","",65,null],[13,"SharedSidewalkCorner","","",65,null],[13,"Straight","","",65,null],[13,"Right","","",65,null],[13,"Left","","",65,null],[13,"UTurn","","",65,null],[4,"TurnPriority","","",null,null],[13,"Banned","","For stop signs: Can\'t currently specify this! For traffic …",66,null],[13,"Yield","","For stop signs: cars have to stop before doing this turn, …",66,null],[13,"Protected","","For stop signs: cars can do this without stopping. These …",66,null],[3,"Turn","","A Turn leads from the end of one Lane to the start of …",null,null],[12,"id","","",67,null],[12,"turn_type","","",67,null],[12,"geom","","",67,null],[12,"other_crosswalk_ids","","Empty except for TurnType::Crosswalk. Usually just one …",67,null],[11,"conflicts_with","","",67,[[["turn",3]],["bool",15]]],[11,"angle","","",67,[[],["angle",3]]],[11,"between_sidewalks","","",67,[[],["bool",15]]],[11,"penalty","","penalties for (lane types, lane-changing, slow lane)",67,[[["map",3]]]],[3,"MovementID","","A movement is like a turn, but with less detail -- it …",null,null],[12,"from","","",68,null],[12,"to","","",68,null],[12,"parent","","",68,null],[12,"crosswalk","","",68,null],[11,"get","","",68,[[["map",3]],[["movement",3],["result",6]]]],[3,"CompressedMovementID","","This is cheaper to store than a MovementID. It simply …",null,null],[12,"i","","",69,null],[12,"idx","","",69,null],[3,"Movement","","A Movement groups all turns from one road to another, …",null,null],[12,"id","","",70,null],[12,"turn_type","","",70,null],[12,"members","","",70,null],[12,"geom","","The \\\"overall\\\" path of movement, aka, an \\\"average\\\" of the …",70,null],[12,"angle","","",70,null],[11,"for_i","","",70,[[["map",3],["intersectionid",3]],[["result",6],["btreemap",3]]]],[11,"src_center_and_width","","Polyline points FROM intersection",70,[[["map",3]]]],[11,"conflicts_with","","",70,[[["movement",3]],["bool",15]]],[5,"movement_geom","","",null,[[["polyline",3],["directedroadid",3],["vec",3]],[["polyline",3],["result",6]]]],[11,"to_movement","","",64,[[["map",3]],["movementid",3]]],[0,"zone","map_model::objects","Zones and AccessRestrictions are used to model things …",null,null],[3,"AccessRestrictions","map_model::objects::zone","",null,null],[12,"allow_through_traffic","","",71,null],[12,"cap_vehicles_per_hour","","",71,null],[11,"new","","",71,[[],["accessrestrictions",3]]],[3,"Zone","","A contiguous set of roads with access restrictions. This …",null,null],[12,"members","","",72,null],[12,"borders","","",72,null],[12,"restrictions","","",72,null],[11,"make_all","","",72,[[["map",3]],[["vec",3],["zone",3]]]],[5,"floodfill","","",null,[[["map",3],["roadid",3]],["zone",3]]],[0,"osm","map_model","Useful utilities for working with OpenStreetMap.",null,null],[17,"NAME","map_model::osm","",null,null],[17,"HIGHWAY","","",null,null],[17,"MAXSPEED","","",null,null],[17,"PARKING_RIGHT","","",null,null],[17,"PARKING_LEFT","","",null,null],[17,"PARKING_BOTH","","",null,null],[17,"SIDEWALK","","",null,null],[17,"OSM_WAY_ID","","",null,null],[17,"OSM_REL_ID","","",null,null],[17,"ENDPT_FWD","","",null,null],[17,"ENDPT_BACK","","",null,null],[17,"INFERRED_PARKING","","",null,null],[17,"INFERRED_SIDEWALKS","","",null,null],[4,"RoadRank","","",null,null],[13,"Local","","",73,null],[13,"Arterial","","",73,null],[13,"Highway","","",73,null],[11,"from_highway","","",73,[[["str",15]],["roadrank",4]]],[11,"detailed_from_highway","","Larger number means a bigger road, according to …",73,[[["str",15]],["usize",15]]],[3,"NodeID","","",null,null],[12,"0","","",74,null],[3,"WayID","","",null,null],[12,"0","","",75,null],[3,"RelationID","","",null,null],[12,"0","","",76,null],[4,"OsmID","","",null,null],[13,"Node","","",77,null],[13,"Way","","",77,null],[13,"Relation","","",77,null],[11,"inner","","",77,[[],["i64",15]]],[0,"pathfind","map_model","Everything related to pathfinding through a map for …",null,null],[0,"ch","map_model::pathfind","Uses https://github.com/easbar/fast_paths. Slower …",null,null],[3,"ContractionHierarchyPathfinder","map_model::pathfind::ch","",null,null],[12,"car_graph","","",78,null],[12,"bike_graph","","",78,null],[12,"bus_graph","","",78,null],[12,"walking_graph","","",78,null],[12,"walking_with_transit_graph","","",78,null],[11,"new","","",78,[[["map",3],["timer",3]],["contractionhierarchypathfinder",3]]],[11,"simple_pathfind","","",78,[[["map",3],["pathrequest",3]],[["path",3],["option",4]]]],[11,"simple_walking_path","","",78,[[["map",3],["pathrequest",3]],[["vec",3],["option",4]]]],[11,"should_use_transit","","",78,[[["map",3],["position",3]],["option",4]]],[11,"apply_edits","","",78,[[["map",3],["timer",3]]]],[5,"round","","",null,[[["duration",3]],["usize",15]]],[0,"dijkstra","map_model::pathfind","Pathfinding without needing to build a separate …",null,null],[5,"simple_pathfind","map_model::pathfind::dijkstra","",null,[[["routingparams",3],["map",3],["pathrequest",3]],["option",4]]],[5,"build_graph_for_vehicles","","",null,[[["map",3],["pathconstraints",4]],[["digraphmap",6],["turnid",3],["laneid",3]]]],[5,"build_graph_for_vehicles_v2","","",null,[[["map",3],["pathconstraints",4]],[["movementid",3],["digraphmap",6],["directedroadid",3]]]],[5,"pathfind_avoiding_roads","","",null,[[["map",3],["btreeset",3],["pathrequest",3],["roadid",3]],["option",4]]],[5,"calc_path_v2","","",null,[[["map",3],["movementid",3],["directedroadid",3],["digraphmap",6],["routingparams",3],["pathrequest",3]],["option",4]]],[5,"build_graph_for_pedestrians","","",null,[[["map",3]],[["walkingnode",4],["digraphmap",6],["duration",3]]]],[5,"simple_walking_path","","",null,[[["map",3],["pathrequest",3]],[["vec",3],["option",4]]]],[0,"node_map","map_model::pathfind","Some helpers for working with fast_paths.",null,null],[3,"NodeMap","map_model::pathfind::node_map","A bidirectional mapping between fast_paths NodeId and …",null,null],[12,"node_to_id","","",79,null],[12,"id_to_node","","",79,null],[11,"new","","",79,[[],["nodemap",3]]],[11,"get_or_insert","","",79,[[],["nodeid",6]]],[11,"get","","",79,[[],["nodeid",6]]],[11,"translate","","",79,[[["shortestpath",3]],["vec",3]]],[3,"InnerNodeMap","","",null,null],[12,"id_to_node","","",80,null],[5,"deserialize_nodemap","","",null,[[["deserializer",8]],[["result",4],["nodemap",3]]]],[0,"pathfinder","map_model::pathfind","",null,null],[4,"Pathfinder","map_model::pathfind::pathfinder","Most of the time, prefer using the faster contraction …",null,null],[13,"Dijkstra","","",81,null],[13,"CH","","",81,null],[11,"pathfind","","Finds a path from a start to an end for a certain type of …",81,[[["map",3],["pathrequest",3]],[["path",3],["option",4]]]],[11,"pathfind_with_params","","Finds a path from a start to an end for a certain type of …",81,[[["routingparams",3],["map",3],["pathrequest",3]],[["path",3],["option",4]]]],[11,"pathfind_avoiding_roads","","Note this is a slower implementation, never using …",81,[[["map",3],["btreeset",3],["pathrequest",3],["roadid",3]],[["path",3],["option",4]]]],[11,"should_use_transit","","",81,[[["map",3],["position",3]],["option",4]]],[11,"apply_edits","","",81,[[["map",3],["timer",3]]]],[0,"uber_turns","map_model::pathfind","To deal with complicated intersections and short roads in …",null,null],[3,"IntersectionCluster","map_model::pathfind::uber_turns","This only applies to VehiclePathfinder; walking through …",null,null],[12,"members","","",82,null],[12,"uber_turns","","",82,null],[3,"UberTurn","","",null,null],[12,"path","","",83,null],[11,"find_all","","",82,[[["map",3]],[["intersectioncluster",3],["vec",3]]]],[11,"new","","(legal, illegal)",82,[[["map",3],["intersectionid",3],["btreeset",3]]]],[11,"autodetect","","Find all other traffic signals \\\"close\\\" to one. Ignore …",82,[[["map",3],["intersectionid",3]],[["option",4],["btreeset",3]]]],[5,"flood","","",null,[[["map",3],["turnid",3],["btreeset",3]],[["vec",3],["uberturn",3]]]],[5,"trace_back","","",null,[[["turnid",3],["btreemap",3]],[["vec",3],["turnid",3]]]],[11,"entry","","",83,[[],["laneid",3]]],[11,"exit","","",83,[[],["laneid",3]]],[11,"geom","","",83,[[["map",3]],["polyline",3]]],[3,"UberTurnV2","","A sequence of movements through a cluster of …",null,null],[12,"path","","",84,null],[11,"to_v2","","Group lane-based uber-turns into road-based UberTurnV2s.",82,[[["map",3]],[["uberturnv2",3],["vec",3]]]],[11,"entry","","",84,[[],["directedroadid",3]]],[11,"exit","","",84,[[],["directedroadid",3]]],[0,"v2","map_model::pathfind","Structures related to the new road-based pathfinding …",null,null],[5,"path_v2_to_v1","map_model::pathfind::v2","Transform a sequence of roads representing a path into …",null,[[["map",3],["directedroadid",3],["vec",3],["pathrequest",3],["uberturnv2",3],["vec",3]],[["path",3],["result",6]]]],[5,"find_uber_turns","","",null,[[["map",3],["vec",3],["uberturnv2",3],["vec",3]],[["vec",3],["uberturn",3]]]],[5,"_broken_path_v2_to_v1","","",null,[[["map",3],["directedroadid",3],["vec",3],["pathrequest",3]],[["path",3],["result",6]]]],[0,"vehicles","map_model::pathfind","Pathfinding for cars, bikes, buses, and trains using …",null,null],[3,"VehiclePathfinder","map_model::pathfind::vehicles","",null,null],[12,"graph","","",85,null],[12,"nodes","","",85,null],[12,"uber_turns","","",85,null],[12,"constraints","","",85,null],[12,"path_calc","","",85,null],[4,"Node","","",null,null],[13,"Road","","",86,null],[13,"UberTurn","","",86,null],[11,"new","","",85,[[["map",3],["pathconstraints",4],["option",4],["vehiclepathfinder",3]],["vehiclepathfinder",3]]],[11,"pathfind","","",85,[[["map",3],["pathrequest",3]],["option",4]]],[11,"apply_edits","","",85,[[["map",3]]]],[5,"make_input_graph","","",null,[[["map",3],["nodemap",3],["vec",3],["pathconstraints",4]],["inputgraph",3]]],[5,"vehicle_cost","","This returns the pathfinding cost of crossing one lane …",null,[[["map",3],["lane",3],["pathconstraints",4],["turn",3],["routingparams",3]],["duration",3]]],[5,"vehicle_cost_v2","","This returns the pathfinding cost of crossing one road …",null,[[["map",3],["movementid",3],["directedroadid",3],["pathconstraints",4],["routingparams",3]],["duration",3]]],[0,"walking","map_model::pathfind","Pathfinding for pedestrians using contraction …",null,null],[3,"SidewalkPathfinder","map_model::pathfind::walking","",null,null],[12,"graph","","",87,null],[12,"nodes","","",87,null],[12,"use_transit","","",87,null],[12,"path_calc","","",87,null],[4,"WalkingNode","","",null,null],[13,"SidewalkEndpoint","","false is src_i, true is dst_i",3,null],[13,"RideBus","","",3,null],[13,"LeaveMap","","",3,null],[11,"closest","map_model::connectivity","",3,[[["map",3],["position",3]],["walkingnode",4]]],[11,"end_transit","","",3,[[["map",3],["position",3]],["walkingnode",4]]],[11,"new","map_model::pathfind::walking","",87,[[["map",3],["bool",15],["vehiclepathfinder",3]],["sidewalkpathfinder",3]]],[11,"apply_edits","","",87,[[["map",3],["vehiclepathfinder",3]]]],[11,"pathfind","","Returns the raw nodes",87,[[["map",3],["pathrequest",3]],[["vec",3],["option",4]]]],[11,"should_use_transit","","Attempt the pathfinding and see if we should ride a bus. …",87,[[["map",3],["position",3]],["option",4]]],[5,"make_input_graph","","",null,[[["map",3],["nodemap",3],["bool",15],["vehiclepathfinder",3]],["inputgraph",3]]],[5,"transit_input_graph","","",null,[[["map",3],["nodemap",3],["vehiclepathfinder",3],["inputgraph",3]]]],[5,"walking_path_to_steps","","",null,[[["walkingnode",4],["map",3],["vec",3]],[["vec",3],["pathstep",4]]]],[5,"one_step_walking_path","","",null,[[["map",3],["pathrequest",3]],["path",3]]],[4,"PathStep","map_model::pathfind","",null,null],[13,"Lane","","Original direction",88,null],[13,"ContraflowLane","","Sidewalks only!",88,null],[13,"Turn","","",88,null],[11,"as_traversable","","",88,[[],["traversable",4]]],[11,"as_lane","","",88,[[],["laneid",3]]],[11,"as_turn","","",88,[[],["turnid",3]]],[11,"exact_slice","","",88,[[["map",3],["option",4],["distance",3]],[["polyline",3],["result",6]]]],[3,"Path","","",null,null],[12,"steps","","",89,null],[12,"orig_req","","",89,null],[12,"total_length","","",89,null],[12,"crossed_so_far","","",89,null],[12,"uber_turns","","",89,null],[12,"currently_inside_ut","","",89,null],[11,"new","","",89,[[["map",3],["vec",3],["pathstep",4],["pathrequest",3],["vec",3],["uberturn",3]],["path",3]]],[11,"dist_crossed_from_step","","Once we finish this PathStep, how much distance will be …",89,[[["map",3],["pathstep",4]],["distance",3]]],[11,"one_step","","",89,[[["map",3],["pathrequest",3]],["path",3]]],[11,"get_req","","The original PathRequest used to produce this path. If …",89,[[],["pathrequest",3]]],[11,"crossed_so_far","","",89,[[],["distance",3]]],[11,"total_length","","",89,[[],["distance",3]]],[11,"percent_dist_crossed","","",89,[[],["f64",15]]],[11,"is_empty","","",89,[[],["bool",15]]],[11,"is_last_step","","",89,[[],["bool",15]]],[11,"isnt_last_step","","",89,[[],["bool",15]]],[11,"currently_inside_ut","","",89,[[],["option",4]]],[11,"about_to_start_ut","","",89,[[],[["option",4],["uberturn",3]]]],[11,"shift","","",89,[[["map",3]],["pathstep",4]]],[11,"add","","",89,[[["map",3],["pathstep",4]]]],[11,"is_upcoming_uber_turn_component","","",89,[[["turnid",3]],["bool",15]]],[11,"modify_step","","Trusting the caller to do this in valid ways.",89,[[["usize",15],["map",3],["pathstep",4]]]],[11,"current_step","","",89,[[],["pathstep",4]]],[11,"next_step","","",89,[[],["pathstep",4]]],[11,"maybe_next_step","","",89,[[],[["option",4],["pathstep",4]]]],[11,"last_step","","",89,[[],["pathstep",4]]],[11,"trace","","Traces along the path from its originally requested …",89,[[["map",3]],[["option",4],["polyline",3]]]],[11,"trace_from_start","","Traces along the path from a specified distance along the …",89,[[["map",3],["distance",3]],[["option",4],["polyline",3]]]],[11,"get_steps","","",89,[[],["vecdeque",3]]],[11,"estimate_duration","","Estimate how long following the path will take in the …",89,[[["map",3],["pathconstraints",4],["speed",3],["option",4]],["duration",3]]],[4,"PathConstraints","","Who\'s asking for a path?",null,null],[13,"Pedestrian","","",90,null],[13,"Car","","",90,null],[13,"Bike","","",90,null],[13,"Bus","","",90,null],[13,"Train","","",90,null],[11,"all","","",90,[[],[["pathconstraints",4],["vec",3]]]],[11,"from_lt","","Not bijective, but this is the best guess of user intent",90,[[["lanetype",4]],["pathconstraints",4]]],[11,"can_use","","",90,[[["map",3],["lane",3]],["bool",15]]],[11,"filter_lanes","","Strict for bikes. If there are bike lanes, not allowed to …",90,[[["map",3],["vec",3],["laneid",3]],[["vec",3],["laneid",3]]]],[3,"PathRequest","","",null,null],[12,"start","","",91,null],[12,"end","","",91,null],[12,"constraints","","",91,null],[11,"between_buildings","","Determines the start and end position to travel between …",91,[[["map",3],["buildingid",3],["pathconstraints",4]],[["option",4],["pathrequest",3]]]],[5,"validate_continuity","","",null,[[["map",3],["vec",3]]]],[5,"validate_restrictions","","",null,[[["map",3],["vec",3]]]],[5,"validate_zones","","",null,[[["map",3],["vec",3],["pathrequest",3]]]],[5,"zone_cost","","Heavily penalize crossing into an access-restricted zone …",null,[[["pathconstraints",4],["turn",3],["map",3]],["duration",3]]],[5,"zone_cost_v2","","Heavily penalize crossing into an access-restricted zone …",null,[[["pathconstraints",4],["map",3],["movementid",3]],["duration",3]]],[3,"RoutingParams","","Tuneable parameters for all types of routing.",null,null],[12,"unprotected_turn_penalty","","",92,null],[12,"bike_lane_penalty","","",92,null],[12,"bus_lane_penalty","","",92,null],[12,"driving_lane_penalty","","",92,null],[11,"default","","",92,[[],["routingparams",3]]],[0,"raw","map_model","The convert_osm crate produces a RawMap from OSM and …",null,null],[3,"RawMap","map_model::raw","",null,null],[12,"name","","",93,null],[12,"roads","","",93,null],[12,"intersections","","",93,null],[12,"buildings","","",93,null],[12,"bus_routes","","",93,null],[12,"areas","","",93,null],[12,"parking_lots","","",93,null],[12,"parking_aisles","","",93,null],[12,"boundary_polygon","","",93,null],[12,"gps_bounds","","",93,null],[12,"config","","",93,null],[3,"OriginalRoad","","A way to refer to roads across many maps and over time. …",null,null],[12,"osm_way_id","","",94,null],[12,"i1","","",94,null],[12,"i2","","",94,null],[11,"new","","",94,[[["i64",15]],["originalroad",3]]],[11,"to_string_code","","Prints the OriginalRoad in a way that can be copied to …",94,[[],["string",3]]],[11,"common_endpt","","",94,[[["originalroad",3]],["nodeid",3]]],[11,"blank","","",93,[[["mapname",3]],["rawmap",3]]],[11,"roads_per_intersection","","",93,[[["nodeid",3]],[["vec",3],["originalroad",3]]]],[11,"new_osm_node_id","","",93,[[["i64",15]],["nodeid",3]]],[11,"new_osm_way_id","","",93,[[["i64",15]],["wayid",3]]],[11,"preview_intersection","","(Intersection polygon, polygons for roads, list of …",93,[[["nodeid",3]]]],[11,"trimmed_road_geometry","","Generate the trimmed <code>PolyLine</code> for a single RawRoad by …",93,[[["originalroad",3]],[["option",4],["polyline",3]]]],[11,"save","","",93,[[]]],[11,"get_city_name","","",93,[[],["cityname",3]]],[11,"can_delete_intersection","","",93,[[["nodeid",3]],["bool",15]]],[11,"delete_intersection","","",93,[[["nodeid",3]]]],[11,"move_intersection","","",93,[[["pt2d",3],["nodeid",3]],[["vec",3],["option",4]]]],[11,"closest_intersection","","",93,[[["pt2d",3]],["nodeid",3]]],[11,"path_dist_to","","",93,[[["nodeid",3]],[["option",4],["distance",3]]]],[11,"merge_short_road","","(the surviving intersection, the deleted intersection, …",93,[[["originalroad",3]],["result",6]]],[3,"RawRoad","","",null,null],[12,"center_points","","This is effectively a PolyLine, except there\'s a case …",95,null],[12,"osm_tags","","",95,null],[12,"turn_restrictions","","",95,null],[12,"complicated_turn_restrictions","","(via, to). For turn restrictions where \'via\' is an entire …",95,null],[12,"percent_incline","","",95,null],[11,"get_geometry","","Returns the corrected center and total width",95,[[["mapconfig",3],["originalroad",3]],["result",6]]],[11,"is_light_rail","","",95,[[],["bool",15]]],[11,"is_footway","","",95,[[],["bool",15]]],[11,"is_service","","",95,[[],["bool",15]]],[3,"RawIntersection","","",null,null],[12,"point","","Represents the original place where OSM center-lines …",96,null],[12,"intersection_type","","",96,null],[12,"elevation","","",96,null],[3,"RawBuilding","","",null,null],[12,"polygon","","",97,null],[12,"osm_tags","","",97,null],[12,"public_garage_name","","",97,null],[12,"num_parking_spots","","",97,null],[12,"amenities","","",97,null],[3,"RawArea","","",null,null],[12,"area_type","","",98,null],[12,"polygon","","",98,null],[12,"osm_tags","","",98,null],[12,"osm_id","","",98,null],[3,"RawParkingLot","","",null,null],[12,"osm_id","","",99,null],[12,"polygon","","",99,null],[12,"osm_tags","","",99,null],[4,"RestrictionType","","",null,null],[13,"BanTurns","","",100,null],[13,"OnlyAllowTurns","","",100,null],[3,"TurnRestriction","","",null,null],[12,"0","","",101,null],[12,"1","","",101,null],[12,"2","","",101,null],[11,"new","","",100,[[["str",15]],[["option",4],["restrictiontype",4]]]],[3,"RawBusRoute","","",null,null],[12,"full_name","","",102,null],[12,"short_name","","",102,null],[12,"osm_rel_id","","",102,null],[12,"gtfs_trip_marker","","",102,null],[12,"is_bus","","If not, light rail",102,null],[12,"stops","","",102,null],[12,"border_start","","",102,null],[12,"border_end","","",102,null],[12,"all_pts","","This is guaranteed to be in order and contiguous.",102,null],[3,"RawBusStop","","",null,null],[12,"name","","",103,null],[12,"vehicle_pos","","Probably not an intersection, but this type is more …",103,null],[12,"matched_road","","Guaranteed to be filled out when RawMap is fully written.",103,null],[12,"ped_pos","","If it\'s not explicitly mapped, we\'ll do equiv_pos.",103,null],[0,"traversable","map_model","",null,null],[3,"Position","map_model::traversable","Represents a specific point some distance along a lane.",null,null],[12,"lane","","",104,null],[12,"dist_along","","",104,null],[11,"new","","",104,[[["distance",3],["laneid",3]],["position",3]]],[11,"start","","",104,[[["laneid",3]],["position",3]]],[11,"end","","",104,[[["map",3],["laneid",3]],["position",3]]],[11,"lane","","",104,[[],["laneid",3]]],[11,"dist_along","","",104,[[],["distance",3]]],[11,"pt","","",104,[[["map",3]],["pt2d",3]]],[11,"pt_and_angle","","",104,[[["map",3]]]],[11,"equiv_pos","","Given a position along a lane, find the equivalent …",104,[[["map",3],["laneid",3]],["position",3]]],[11,"equiv_pos_for_long_object","","",104,[[["map",3],["distance",3],["laneid",3]],["position",3]]],[11,"min_dist","","",104,[[["map",3],["distance",3]],[["position",3],["option",4]]]],[11,"buffer_dist","","",104,[[["map",3],["distance",3]],[["position",3],["option",4]]]],[4,"Traversable","","Either a lane or a turn, where most movement happens.",null,null],[13,"Lane","","",105,null],[13,"Turn","","",105,null],[11,"as_lane","","",105,[[],["laneid",3]]],[11,"as_turn","","",105,[[],["turnid",3]]],[11,"maybe_turn","","",105,[[],[["turnid",3],["option",4]]]],[11,"maybe_lane","","",105,[[],[["option",4],["laneid",3]]]],[11,"length","","",105,[[["map",3]],["distance",3]]],[11,"dist_along","","",105,[[["map",3],["distance",3]],["result",6]]],[11,"slice","","",105,[[["map",3],["distance",3]],["result",6]]],[11,"exact_slice","","",105,[[["map",3],["distance",3]],["polyline",3]]],[11,"get_zorder","","",105,[[["map",3]],["isize",15]]],[11,"max_speed_along","","The single definitive place to determine how fast …",105,[[["map",3],["pathconstraints",4],["speed",3],["option",4]],["speed",3]]],[11,"max_speed_along_road","","The single definitive place to determine how fast …",105,[[["map",3],["directedroadid",3],["pathconstraints",4],["speed",3],["option",4]],["speed",3]]],[11,"max_speed_along_movement","","The single definitive place to determine how fast …",105,[[["map",3],["movementid",3],["pathconstraints",4],["speed",3],["option",4]],["speed",3]]],[17,"MAX_BIKE_SPEED","","",null,null],[17,"MAX_WALKING_SPEED","","",null,null],[5,"bike_speed_on_incline","","",null,[[["f64",15],["speed",3]],["speed",3]]],[5,"walking_speed_on_incline","","",null,[[["f64",15],["speed",3]],["speed",3]]],[3,"City","map_model","A single city (like Seattle) can be broken down into …",null,null],[12,"name","","",0,null],[12,"boundary","","",0,null],[12,"areas","","",0,null],[12,"districts","","The individual maps",0,null],[4,"EditCmd","","",null,null],[13,"ChangeRoad","","",19,null],[12,"r","map_model::EditCmd","",20,null],[12,"old","","",20,null],[12,"new","","",20,null],[13,"ChangeIntersection","map_model","",19,null],[12,"i","map_model::EditCmd","",21,null],[12,"new","","",21,null],[12,"old","","",21,null],[13,"ChangeRouteSchedule","map_model","",19,null],[12,"id","map_model::EditCmd","",22,null],[12,"old","","",22,null],[12,"new","","",22,null],[3,"EditEffects","map_model","",null,null],[12,"changed_roads","","",23,null],[12,"changed_intersections","","",23,null],[12,"added_turns","","",23,null],[12,"deleted_turns","","",23,null],[4,"EditIntersection","","",null,null],[13,"StopSign","","",17,null],[13,"TrafficSignal","","",17,null],[13,"Closed","","",17,null],[3,"EditRoad","","",null,null],[12,"lanes_ltr","","",18,null],[12,"speed_limit","","",18,null],[12,"access_restrictions","","",18,null],[3,"MapEdits","","Represents changes to a map. Note this isn\'t serializable …",null,null],[12,"edits_name","","",16,null],[12,"commands","","A stack, oldest edit is first. The same intersection may …",16,null],[12,"merge_zones","","If false, adjacent roads with the same AccessRestrictions …",16,null],[12,"changed_roads","","Derived from commands, kept up to date by update_derived",16,null],[12,"original_intersections","","",16,null],[12,"changed_routes","","",16,null],[12,"proposal_description","","Some edits are included in the game by default, in …",16,null],[12,"proposal_link","","",16,null],[3,"PermanentMapEdits","","MapEdits are converted to this before serializing. …",null,null],[12,"map_name","","",9,null],[12,"edits_name","","",9,null],[12,"version","","",9,null],[12,"commands","","",9,null],[12,"merge_zones","","If false, adjacent roads with the same AccessRestrictions …",9,null],[12,"proposal_description","","Edits without these are player generated.",9,null],[12,"proposal_link","","The link is optional even for proposals",9,null],[4,"DrivingSide","","",null,null],[13,"Right","","",31,null],[13,"Left","","",31,null],[3,"MapConfig","","",null,null],[12,"driving_side","","If true, driving happens on the right side of the road …",30,null],[12,"bikes_can_use_bus_lanes","","",30,null],[12,"inferred_sidewalks","","If true, roads without explicitly tagged sidewalks may …",30,null],[12,"street_parking_spot_length","","Street parking is divided into spots of this length. 8 …",30,null],[3,"Area","","Areas are just used for drawing.",null,null],[12,"id","","",34,null],[12,"area_type","","",34,null],[12,"polygon","","",34,null],[12,"osm_tags","","",34,null],[12,"osm_id","","The importing process also automatically creates some …",34,null],[3,"AreaID","","",null,null],[12,"0","","",32,null],[4,"AreaType","","",null,null],[13,"Park","","",33,null],[13,"Water","","",33,null],[13,"Island","","",33,null],[13,"MedianStrip","","",33,null],[13,"PedestrianPlaza","","",33,null],[13,"StudyArea","","Not from OSM. A user-specified area to focus on.",33,null],[3,"Amenity","","A business located inside a building.",null,null],[12,"names","","",37,null],[12,"amenity_type","","This is the specific amenity listed in OSM, not the more …",37,null],[12,"osm_tags","","Depending on options while importing, these might be …",37,null],[4,"AmenityType","","Businesses are categorized into one of these types.",null,null],[13,"Groceries","","",42,null],[13,"Food","","",42,null],[13,"Bar","","",42,null],[13,"Medical","","",42,null],[13,"Religious","","",42,null],[13,"Education","","",42,null],[13,"Financial","","",42,null],[13,"PostOffice","","",42,null],[13,"Culture","","",42,null],[13,"Childcare","","",42,null],[13,"Shopping","","",42,null],[3,"Building","","A building has connections to the road and sidewalk, may …",null,null],[12,"id","","",36,null],[12,"polygon","","",36,null],[12,"levels","","",36,null],[12,"address","","",36,null],[12,"name","","",36,null],[12,"orig_id","","",36,null],[12,"label_center","","Where a text label should be centered to have the best …",36,null],[12,"amenities","","",36,null],[12,"bldg_type","","",36,null],[12,"parking","","",36,null],[12,"osm_tags","","Depending on options while importing, these might be …",36,null],[12,"sidewalk_pos","","The building\'s connection for pedestrians is immutable. …",36,null],[12,"driveway_geom","","Goes from building to sidewalk",36,null],[3,"BuildingID","","",null,null],[12,"0","","",35,null],[4,"BuildingType","","",null,null],[13,"Residential","","",39,null],[12,"num_residents","map_model::BuildingType","",40,null],[12,"num_housing_units","","",40,null],[13,"ResidentialCommercial","map_model","An estimated number of residents, workers",39,null],[13,"Commercial","","An estimated number of workers",39,null],[13,"Empty","","",39,null],[3,"NamePerLanguage","","None corresponds to the native name",null,null],[12,"0","","",41,null],[4,"OffstreetParking","","Represent no parking as Private(0, false).",null,null],[13,"PublicGarage","","(Name, spots)",38,null],[13,"Private","","(Spots, explicitly tagged as a garage)",38,null],[3,"BusRoute","","",null,null],[12,"id","","",46,null],[12,"full_name","","",46,null],[12,"short_name","","",46,null],[12,"gtfs_trip_marker","","",46,null],[12,"osm_rel_id","","",46,null],[12,"stops","","",46,null],[12,"start","","May be a border or not. If not, is long enough for buses …",46,null],[12,"end_border","","",46,null],[12,"route_type","","",46,null],[12,"spawn_times","","Non-empty, times in order for one day when a vehicle …",46,null],[12,"orig_spawn_times","","Explicitly store whatever the original was, since this …",46,null],[3,"BusRouteID","","",null,null],[12,"0","","",44,null],[3,"BusStop","","",null,null],[12,"id","","",45,null],[12,"name","","",45,null],[12,"driving_pos","","These may be on different roads entirely, like for light …",45,null],[12,"sidewalk_pos","","",45,null],[12,"is_train_stop","","If it\'s both, train overrides bus",45,null],[3,"BusStopID","","",null,null],[12,"sidewalk","","",43,null],[12,"idx","","As long as this is unique per lane, this value is …",43,null],[3,"Intersection","","An intersection connects roads. Most have >2 roads and …",null,null],[12,"id","","",49,null],[12,"polygon","","This needs to be in clockwise orientation, or later …",49,null],[12,"turns","","",49,null],[12,"elevation","","",49,null],[12,"intersection_type","","",49,null],[12,"orig_id","","",49,null],[12,"incoming_lanes","","Note that a lane may belong to both incoming_lanes and …",49,null],[12,"outgoing_lanes","","",49,null],[12,"roads","","",49,null],[12,"merged","","Was a short road adjacent to this intersection merged?",49,null],[3,"IntersectionID","","",null,null],[12,"0","","",47,null],[4,"IntersectionType","","",null,null],[13,"StopSign","","",48,null],[13,"TrafficSignal","","",48,null],[13,"Border","","",48,null],[13,"Construction","","",48,null],[3,"Lane","","A road segment is broken down into individual lanes, …",null,null],[12,"id","","",52,null],[12,"parent","","",52,null],[12,"lane_type","","",52,null],[12,"lane_center_pts","","",52,null],[12,"width","","",52,null],[12,"dir","","",52,null],[12,"src_i","","",52,null],[12,"dst_i","","",52,null],[12,"bus_stops","","Meaningless order",52,null],[12,"driving_blackhole","","{Cars, bikes} trying to start or end here might not be …",52,null],[12,"biking_blackhole","","",52,null],[3,"LaneID","","",null,null],[12,"0","","",50,null],[4,"LaneType","","",null,null],[13,"Driving","","",51,null],[13,"Parking","","",51,null],[13,"Sidewalk","","",51,null],[13,"Shoulder","","",51,null],[13,"Biking","","",51,null],[13,"Bus","","",51,null],[13,"SharedLeftTurn","","",51,null],[13,"Construction","","",51,null],[13,"LightRail","","",51,null],[17,"PARKING_LOT_SPOT_LENGTH","","From some manually audited cases in Seattle, the length …",null,null],[3,"ParkingLot","","Parking lots have some fixed capacity for cars, and are …",null,null],[12,"id","","",54,null],[12,"polygon","","",54,null],[12,"aisles","","",54,null],[12,"osm_id","","",54,null],[12,"spots","","The middle of the \\\"T\\\", pointing towards the parking aisle",54,null],[12,"extra_spots","","If we can\'t render all spots (maybe a lot with no aisles …",54,null],[12,"driveway_line","","Goes from the lot to the driving lane",54,null],[12,"driving_pos","","Guaranteed to be at least 7m (MAX_CAR_LENGTH + a little …",54,null],[12,"sidewalk_line","","Lot to sidewalk",54,null],[12,"sidewalk_pos","","",54,null],[3,"ParkingLotID","","",null,null],[12,"0","","",53,null],[3,"DirectedRoadID","","",null,null],[12,"id","","",57,null],[12,"dir","","",57,null],[4,"Direction","","",null,null],[13,"Fwd","","",56,null],[13,"Back","","",56,null],[3,"Road","","A Road represents a segment between exactly two …",null,null],[12,"id","","",58,null],[12,"osm_tags","","",58,null],[12,"turn_restrictions","","self is \'from\'",58,null],[12,"complicated_turn_restrictions","","self is \'from\'. (via, to). Only BanTurns.",58,null],[12,"orig_id","","",58,null],[12,"speed_limit","","",58,null],[12,"access_restrictions","","",58,null],[12,"zorder","","",58,null],[12,"percent_incline","","[-1.0, 1.0] theoretically, but in practice, about [-0.25, …",58,null],[12,"lanes_ltr","","Invariant: A road must contain at least one child",58,null],[12,"center_pts","","The physical center of the road, including sidewalks, …",58,null],[12,"src_i","","",58,null],[12,"dst_i","","",58,null],[3,"RoadID","","",null,null],[12,"0","","",55,null],[3,"ControlStopSign","","",null,null],[12,"id","","",59,null],[12,"roads","","",59,null],[3,"RoadWithStopSign","","",null,null],[12,"lane_closest_to_edge","","",60,null],[12,"must_stop","","",60,null],[3,"ControlTrafficSignal","","A traffic signal consists of a sequence of Stages that …",null,null],[12,"id","","",61,null],[12,"stages","","",61,null],[12,"offset","","",61,null],[12,"movements","","",61,null],[3,"Stage","","",null,null],[12,"protected_movements","","",62,null],[12,"yield_movements","","",62,null],[12,"stage_type","","",62,null],[4,"StageType","","",null,null],[13,"Fixed","","",63,null],[13,"Variable","","Minimum is the minimum duration, 0 allows cycle to be …",63,null],[3,"CompressedMovementID","","This is cheaper to store than a MovementID. It simply …",null,null],[12,"i","","",69,null],[12,"idx","","",69,null],[3,"Movement","","A Movement groups all turns from one road to another, …",null,null],[12,"id","","",70,null],[12,"turn_type","","",70,null],[12,"members","","",70,null],[12,"geom","","The \\\"overall\\\" path of movement, aka, an \\\"average\\\" of the …",70,null],[12,"angle","","",70,null],[3,"MovementID","","A movement is like a turn, but with less detail -- it …",null,null],[12,"from","","",68,null],[12,"to","","",68,null],[12,"parent","","",68,null],[12,"crosswalk","","",68,null],[3,"Turn","","A Turn leads from the end of one Lane to the start of …",null,null],[12,"id","","",67,null],[12,"turn_type","","",67,null],[12,"geom","","",67,null],[12,"other_crosswalk_ids","","Empty except for TurnType::Crosswalk. Usually just one …",67,null],[3,"TurnID","","Turns are uniquely identified by their (src, dst) lanes …",null,null],[12,"parent","","",64,null],[12,"src","","src and dst must both belong to parent. No guarantees …",64,null],[12,"dst","","",64,null],[4,"TurnPriority","","",null,null],[13,"Banned","","For stop signs: Can\'t currently specify this! For traffic …",66,null],[13,"Yield","","For stop signs: cars have to stop before doing this turn, …",66,null],[13,"Protected","","For stop signs: cars can do this without stopping. These …",66,null],[4,"TurnType","","",null,null],[13,"Crosswalk","","",65,null],[13,"SharedSidewalkCorner","","",65,null],[13,"Straight","","",65,null],[13,"Right","","",65,null],[13,"Left","","",65,null],[13,"UTurn","","",65,null],[3,"AccessRestrictions","","",null,null],[12,"allow_through_traffic","","",71,null],[12,"cap_vehicles_per_hour","","",71,null],[3,"Zone","","A contiguous set of roads with access restrictions. This …",null,null],[12,"members","","",72,null],[12,"borders","","",72,null],[12,"restrictions","","",72,null],[3,"IntersectionCluster","","This only applies to VehiclePathfinder; walking through …",null,null],[12,"members","","",82,null],[12,"uber_turns","","",82,null],[3,"UberTurn","","",null,null],[12,"path","","",83,null],[3,"Path","","",null,null],[12,"steps","","",89,null],[12,"orig_req","","",89,null],[12,"total_length","","",89,null],[12,"crossed_so_far","","",89,null],[12,"uber_turns","","",89,null],[12,"currently_inside_ut","","",89,null],[4,"PathConstraints","","Who\'s asking for a path?",null,null],[13,"Pedestrian","","",90,null],[13,"Car","","",90,null],[13,"Bike","","",90,null],[13,"Bus","","",90,null],[13,"Train","","",90,null],[3,"PathRequest","","",null,null],[12,"start","","",91,null],[12,"end","","",91,null],[12,"constraints","","",91,null],[4,"PathStep","","",null,null],[13,"Lane","","Original direction",88,null],[13,"ContraflowLane","","Sidewalks only!",88,null],[13,"Turn","","",88,null],[3,"RoutingParams","","Tuneable parameters for all types of routing.",null,null],[12,"unprotected_turn_penalty","","",92,null],[12,"bike_lane_penalty","","",92,null],[12,"bus_lane_penalty","","",92,null],[12,"driving_lane_penalty","","",92,null],[3,"Position","","Represents a specific point some distance along a lane.",null,null],[12,"lane","","",104,null],[12,"dist_along","","",104,null],[4,"Traversable","","Either a lane or a turn, where most movement happens.",null,null],[13,"Lane","","",105,null],[13,"Turn","","",105,null],[17,"MAX_BIKE_SPEED","","",null,null],[17,"MAX_WALKING_SPEED","","",null,null],[17,"NORMAL_LANE_THICKNESS","","",null,null],[17,"SERVICE_ROAD_LANE_THICKNESS","","",null,null],[17,"SIDEWALK_THICKNESS","","",null,null],[17,"SHOULDER_THICKNESS","","",null,null],[3,"Map","","",null,null],[12,"roads","","",106,null],[12,"lanes","","",106,null],[12,"intersections","","",106,null],[12,"turns","","",106,null],[12,"buildings","","",106,null],[12,"bus_stops","","",106,null],[12,"bus_routes","","",106,null],[12,"areas","","",106,null],[12,"parking_lots","","",106,null],[12,"boundary_polygon","","",106,null],[12,"stop_signs","","",106,null],[12,"traffic_signals","","",106,null],[12,"gps_bounds","","",106,null],[12,"bounds","","",106,null],[12,"config","","",106,null],[12,"pathfinder","","",106,null],[12,"pathfinder_dirty","","",106,null],[12,"routing_params","","",106,null],[12,"zones","","",106,null],[12,"name","","",106,null],[12,"edits","","",106,null],[11,"from","map_model::city","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","map_model::connectivity::walking","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"equivalent","","",2,[[],["bool",15]]],[11,"vzip","","",2,[[]]],[11,"from","map_model::connectivity","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"equivalent","","",3,[[],["bool",15]]],[11,"get_hash","","",3,[[],["u64",15]]],[11,"vzip","","",3,[[]]],[11,"from","map_model::edits::compat","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","map_model::edits::perma","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","map_model::edits","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","map_model::make::initial::geometry","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","map_model::make::initial::lane_specs","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","map_model::make::initial","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","map_model::make::transit","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","map_model::map","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","map_model::objects::area","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"equivalent","","",32,[[],["bool",15]]],[11,"get_hash","","",32,[[],["u64",15]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"equivalent","","",33,[[],["bool",15]]],[11,"get_hash","","",33,[[],["u64",15]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","map_model::objects::building","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"equivalent","","",35,[[],["bool",15]]],[11,"get_hash","","",35,[[],["u64",15]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"equivalent","","",41,[[],["bool",15]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"equivalent","","",42,[[],["bool",15]]],[11,"vzip","","",42,[[]]],[11,"from","map_model::objects::bus_stop","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"equivalent","","",43,[[],["bool",15]]],[11,"get_hash","","",43,[[],["u64",15]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"equivalent","","",44,[[],["bool",15]]],[11,"get_hash","","",44,[[],["u64",15]]],[11,"vzip","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","map_model::objects::intersection","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"equivalent","","",47,[[],["bool",15]]],[11,"get_hash","","",47,[[],["u64",15]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"equivalent","","",48,[[],["bool",15]]],[11,"get_hash","","",48,[[],["u64",15]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","map_model::objects::lane","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"equivalent","","",50,[[],["bool",15]]],[11,"get_hash","","",50,[[],["u64",15]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"equivalent","","",51,[[],["bool",15]]],[11,"get_hash","","",51,[[],["u64",15]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","map_model::objects::parking_lot","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"to_string","","",53,[[],["string",3]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"equivalent","","",53,[[],["bool",15]]],[11,"get_hash","","",53,[[],["u64",15]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","map_model::objects::road","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"to_string","","",55,[[],["string",3]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"equivalent","","",55,[[],["bool",15]]],[11,"get_hash","","",55,[[],["u64",15]]],[11,"vzip","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"equivalent","","",56,[[],["bool",15]]],[11,"get_hash","","",56,[[],["u64",15]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"to_string","","",57,[[],["string",3]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"equivalent","","",57,[[],["bool",15]]],[11,"get_hash","","",57,[[],["u64",15]]],[11,"vzip","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","map_model::objects::stop_signs","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from","map_model::objects::traffic_signals","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","map_model::objects::turn","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"to_string","","",64,[[],["string",3]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"equivalent","","",64,[[],["bool",15]]],[11,"get_hash","","",64,[[],["u64",15]]],[11,"vzip","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"equivalent","","",65,[[],["bool",15]]],[11,"vzip","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"equivalent","","",68,[[],["bool",15]]],[11,"get_hash","","",68,[[],["u64",15]]],[11,"vzip","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"equivalent","","",69,[[],["bool",15]]],[11,"get_hash","","",69,[[],["u64",15]]],[11,"vzip","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"from","map_model::objects::zone","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"from","map_model::osm","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"equivalent","","",73,[[],["bool",15]]],[11,"vzip","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"to_string","","",74,[[],["string",3]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"equivalent","","",74,[[],["bool",15]]],[11,"get_hash","","",74,[[],["u64",15]]],[11,"vzip","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"to_string","","",75,[[],["string",3]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"equivalent","","",75,[[],["bool",15]]],[11,"get_hash","","",75,[[],["u64",15]]],[11,"vzip","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"to_string","","",76,[[],["string",3]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"equivalent","","",76,[[],["bool",15]]],[11,"get_hash","","",76,[[],["u64",15]]],[11,"vzip","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"to_string","","",77,[[],["string",3]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"equivalent","","",77,[[],["bool",15]]],[11,"get_hash","","",77,[[],["u64",15]]],[11,"vzip","","",77,[[]]],[11,"from","map_model::pathfind::ch","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"from","map_model::pathfind::node_map","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"from","map_model::pathfind::pathfinder","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"from","map_model::pathfind::uber_turns","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"equivalent","","",84,[[],["bool",15]]],[11,"vzip","","",84,[[]]],[11,"from","map_model::pathfind::vehicles","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"equivalent","","",86,[[],["bool",15]]],[11,"vzip","","",86,[[]]],[11,"from","map_model::pathfind::walking","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"from","map_model::pathfind","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"equivalent","","",88,[[],["bool",15]]],[11,"get_hash","","",88,[[],["u64",15]]],[11,"vzip","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"equivalent","","",90,[[],["bool",15]]],[11,"vzip","","",90,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"to_string","","",91,[[],["string",3]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"equivalent","","",91,[[],["bool",15]]],[11,"vzip","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"from","map_model::raw","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"to_string","","",94,[[],["string",3]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"equivalent","","",94,[[],["bool",15]]],[11,"get_hash","","",94,[[],["u64",15]]],[11,"vzip","","",94,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"equivalent","","",100,[[],["bool",15]]],[11,"get_hash","","",100,[[],["u64",15]]],[11,"vzip","","",100,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"equivalent","","",101,[[],["bool",15]]],[11,"get_hash","","",101,[[],["u64",15]]],[11,"vzip","","",101,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"from","map_model::traversable","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"to_string","","",104,[[],["string",3]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"equivalent","","",104,[[],["bool",15]]],[11,"vzip","","",104,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"to_string","","",105,[[],["string",3]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"equivalent","","",105,[[],["bool",15]]],[11,"get_hash","","",105,[[],["u64",15]]],[11,"vzip","","",105,[[]]],[11,"from","map_model","",106,[[]]],[11,"into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"vzip","","",106,[[]]],[11,"clone","map_model::connectivity::walking","",1,[[],["walkingoptions",3]]],[11,"clone","map_model::edits::perma","",9,[[],["permanentmapedits",3]]],[11,"clone","","",10,[[],["permanenteditintersection",4]]],[11,"clone","","",12,[[],["permanenteditcmd",4]]],[11,"clone","map_model::edits","",16,[[],["mapedits",3]]],[11,"clone","","",17,[[],["editintersection",4]]],[11,"clone","","",18,[[],["editroad",3]]],[11,"clone","","",19,[[],["editcmd",4]]],[11,"clone","map_model::map","",30,[[],["mapconfig",3]]],[11,"clone","","",31,[[],["drivingside",4]]],[11,"clone","map_model::objects::area","",32,[[],["areaid",3]]],[11,"clone","","",33,[[],["areatype",4]]],[11,"clone","map_model::objects::building","",35,[[],["buildingid",3]]],[11,"clone","","",37,[[],["amenity",3]]],[11,"clone","","",38,[[],["offstreetparking",4]]],[11,"clone","","",39,[[],["buildingtype",4]]],[11,"clone","","",41,[[],["nameperlanguage",3]]],[11,"clone","","",42,[[],["amenitytype",4]]],[11,"clone","map_model::objects::bus_stop","",43,[[],["busstopid",3]]],[11,"clone","","",44,[[],["busrouteid",3]]],[11,"clone","","",45,[[],["busstop",3]]],[11,"clone","map_model::objects::intersection","",47,[[],["intersectionid",3]]],[11,"clone","","",48,[[],["intersectiontype",4]]],[11,"clone","map_model::objects::lane","",50,[[],["laneid",3]]],[11,"clone","","",51,[[],["lanetype",4]]],[11,"clone","map_model::objects::parking_lot","",53,[[],["parkinglotid",3]]],[11,"clone","map_model::objects::road","",55,[[],["roadid",3]]],[11,"clone","","",56,[[],["direction",4]]],[11,"clone","","",57,[[],["directedroadid",3]]],[11,"clone","map_model::objects::stop_signs","",59,[[],["controlstopsign",3]]],[11,"clone","","",60,[[],["roadwithstopsign",3]]],[11,"clone","map_model::objects::traffic_signals","",61,[[],["controltrafficsignal",3]]],[11,"clone","","",62,[[],["stage",3]]],[11,"clone","","",63,[[],["stagetype",4]]],[11,"clone","map_model::objects::turn","",64,[[],["turnid",3]]],[11,"clone","","",65,[[],["turntype",4]]],[11,"clone","","",66,[[],["turnpriority",4]]],[11,"clone","","",67,[[],["turn",3]]],[11,"clone","","",68,[[],["movementid",3]]],[11,"clone","","",69,[[],["compressedmovementid",3]]],[11,"clone","","",70,[[],["movement",3]]],[11,"clone","map_model::objects::zone","",71,[[],["accessrestrictions",3]]],[11,"clone","map_model::osm","",73,[[],["roadrank",4]]],[11,"clone","","",74,[[],["nodeid",3]]],[11,"clone","","",75,[[],["wayid",3]]],[11,"clone","","",76,[[],["relationid",3]]],[11,"clone","","",77,[[],["osmid",4]]],[11,"clone","map_model::pathfind::uber_turns","",83,[[],["uberturn",3]]],[11,"clone","","",84,[[],["uberturnv2",3]]],[11,"clone","map_model::pathfind::vehicles","",86,[[],["node",4]]],[11,"clone","map_model::connectivity","",3,[[],["walkingnode",4]]],[11,"clone","map_model::pathfind","",88,[[],["pathstep",4]]],[11,"clone","","",89,[[],["path",3]]],[11,"clone","","",90,[[]]],[11,"clone","","",91,[[],["pathrequest",3]]],[11,"clone","map_model::raw","",94,[[],["originalroad",3]]],[11,"clone","","",95,[[],["rawroad",3]]],[11,"clone","","",96,[[],["rawintersection",3]]],[11,"clone","","",97,[[],["rawbuilding",3]]],[11,"clone","","",98,[[],["rawarea",3]]],[11,"clone","","",99,[[],["rawparkinglot",3]]],[11,"clone","","",100,[[],["restrictiontype",4]]],[11,"clone","","",101,[[],["turnrestriction",3]]],[11,"clone","map_model::traversable","",104,[[],["position",3]]],[11,"clone","","",105,[[],["traversable",4]]],[11,"default","map_model::edits","",16,[[],["mapedits",3]]],[11,"cmp","map_model::connectivity::walking","",2,[[["item",3]],["ordering",4]]],[11,"cmp","map_model::objects::area","",32,[[["areaid",3]],["ordering",4]]],[11,"cmp","map_model::objects::building","",35,[[["buildingid",3]],["ordering",4]]],[11,"cmp","","",41,[[["nameperlanguage",3]],["ordering",4]]],[11,"cmp","","",42,[[["amenitytype",4]],["ordering",4]]],[11,"cmp","map_model::objects::bus_stop","",43,[[["busstopid",3]],["ordering",4]]],[11,"cmp","","",44,[[["busrouteid",3]],["ordering",4]]],[11,"cmp","map_model::objects::intersection","",47,[[["intersectionid",3]],["ordering",4]]],[11,"cmp","map_model::objects::lane","",50,[[["laneid",3]],["ordering",4]]],[11,"cmp","","",51,[[["lanetype",4]],["ordering",4]]],[11,"cmp","map_model::objects::parking_lot","",53,[[["parkinglotid",3]],["ordering",4]]],[11,"cmp","map_model::objects::road","",55,[[["roadid",3]],["ordering",4]]],[11,"cmp","","",56,[[["direction",4]],["ordering",4]]],[11,"cmp","","",57,[[["directedroadid",3]],["ordering",4]]],[11,"cmp","map_model::objects::turn","",64,[[["turnid",3]],["ordering",4]]],[11,"cmp","","",65,[[["turntype",4]],["ordering",4]]],[11,"cmp","","",68,[[["movementid",3]],["ordering",4]]],[11,"cmp","","",69,[[["compressedmovementid",3]],["ordering",4]]],[11,"cmp","map_model::osm","",73,[[["roadrank",4]],["ordering",4]]],[11,"cmp","","",74,[[["nodeid",3]],["ordering",4]]],[11,"cmp","","",75,[[["wayid",3]],["ordering",4]]],[11,"cmp","","",76,[[["relationid",3]],["ordering",4]]],[11,"cmp","","",77,[[["osmid",4]],["ordering",4]]],[11,"cmp","map_model::pathfind::uber_turns","",84,[[["uberturnv2",3]],["ordering",4]]],[11,"cmp","map_model::pathfind::vehicles","",86,[[["node",4]],["ordering",4]]],[11,"cmp","map_model::connectivity","",3,[[["walkingnode",4]],["ordering",4]]],[11,"cmp","map_model::pathfind","",88,[[["pathstep",4]],["ordering",4]]],[11,"cmp","","",90,[[["pathconstraints",4]],["ordering",4]]],[11,"cmp","map_model::raw","",94,[[["originalroad",3]],["ordering",4]]],[11,"cmp","","",100,[[["restrictiontype",4]],["ordering",4]]],[11,"cmp","","",101,[[["turnrestriction",3]],["ordering",4]]],[11,"cmp","map_model::traversable","",104,[[["position",3]],["ordering",4]]],[11,"cmp","","",105,[[["traversable",4]],["ordering",4]]],[11,"eq","map_model::connectivity::walking","",2,[[["item",3]],["bool",15]]],[11,"ne","","",2,[[["item",3]],["bool",15]]],[11,"eq","map_model::edits","",16,[[["mapedits",3]],["bool",15]]],[11,"ne","","",16,[[["mapedits",3]],["bool",15]]],[11,"eq","","",17,[[["editintersection",4]],["bool",15]]],[11,"ne","","",17,[[["editintersection",4]],["bool",15]]],[11,"eq","","",18,[[["editroad",3]],["bool",15]]],[11,"ne","","",18,[[["editroad",3]],["bool",15]]],[11,"eq","","",19,[[["editcmd",4]],["bool",15]]],[11,"ne","","",19,[[["editcmd",4]],["bool",15]]],[11,"eq","map_model::make::initial::lane_specs","",25,[[["lanespec",3]],["bool",15]]],[11,"ne","","",25,[[["lanespec",3]],["bool",15]]],[11,"eq","map_model::map","",31,[[["drivingside",4]],["bool",15]]],[11,"eq","map_model::objects::area","",32,[[["areaid",3]],["bool",15]]],[11,"ne","","",32,[[["areaid",3]],["bool",15]]],[11,"eq","","",33,[[["areatype",4]],["bool",15]]],[11,"eq","map_model::objects::building","",35,[[["buildingid",3]],["bool",15]]],[11,"ne","","",35,[[["buildingid",3]],["bool",15]]],[11,"eq","","",38,[[["offstreetparking",4]],["bool",15]]],[11,"ne","","",38,[[["offstreetparking",4]],["bool",15]]],[11,"eq","","",41,[[["nameperlanguage",3]],["bool",15]]],[11,"ne","","",41,[[["nameperlanguage",3]],["bool",15]]],[11,"eq","","",42,[[["amenitytype",4]],["bool",15]]],[11,"eq","map_model::objects::bus_stop","",43,[[["busstopid",3]],["bool",15]]],[11,"ne","","",43,[[["busstopid",3]],["bool",15]]],[11,"eq","","",44,[[["busrouteid",3]],["bool",15]]],[11,"ne","","",44,[[["busrouteid",3]],["bool",15]]],[11,"eq","","",45,[[["busstop",3]],["bool",15]]],[11,"ne","","",45,[[["busstop",3]],["bool",15]]],[11,"eq","map_model::objects::intersection","",47,[[["intersectionid",3]],["bool",15]]],[11,"ne","","",47,[[["intersectionid",3]],["bool",15]]],[11,"eq","","",48,[[["intersectiontype",4]],["bool",15]]],[11,"eq","map_model::objects::lane","",50,[[["laneid",3]],["bool",15]]],[11,"ne","","",50,[[["laneid",3]],["bool",15]]],[11,"eq","","",51,[[["lanetype",4]],["bool",15]]],[11,"eq","map_model::objects::parking_lot","",53,[[["parkinglotid",3]],["bool",15]]],[11,"ne","","",53,[[["parkinglotid",3]],["bool",15]]],[11,"eq","map_model::objects::road","",55,[[["roadid",3]],["bool",15]]],[11,"ne","","",55,[[["roadid",3]],["bool",15]]],[11,"eq","","",56,[[["direction",4]],["bool",15]]],[11,"eq","","",57,[[["directedroadid",3]],["bool",15]]],[11,"ne","","",57,[[["directedroadid",3]],["bool",15]]],[11,"eq","map_model::objects::stop_signs","",59,[[["controlstopsign",3]],["bool",15]]],[11,"ne","","",59,[[["controlstopsign",3]],["bool",15]]],[11,"eq","","",60,[[["roadwithstopsign",3]],["bool",15]]],[11,"ne","","",60,[[["roadwithstopsign",3]],["bool",15]]],[11,"eq","map_model::objects::traffic_signals","",61,[[["controltrafficsignal",3]],["bool",15]]],[11,"ne","","",61,[[["controltrafficsignal",3]],["bool",15]]],[11,"eq","","",62,[[["stage",3]],["bool",15]]],[11,"ne","","",62,[[["stage",3]],["bool",15]]],[11,"eq","","",63,[[["stagetype",4]],["bool",15]]],[11,"ne","","",63,[[["stagetype",4]],["bool",15]]],[11,"eq","map_model::objects::turn","",64,[[["turnid",3]],["bool",15]]],[11,"ne","","",64,[[["turnid",3]],["bool",15]]],[11,"eq","","",65,[[["turntype",4]],["bool",15]]],[11,"eq","","",66,[[["turnpriority",4]],["bool",15]]],[11,"eq","","",67,[[["turn",3]],["bool",15]]],[11,"ne","","",67,[[["turn",3]],["bool",15]]],[11,"eq","","",68,[[["movementid",3]],["bool",15]]],[11,"ne","","",68,[[["movementid",3]],["bool",15]]],[11,"eq","","",69,[[["compressedmovementid",3]],["bool",15]]],[11,"ne","","",69,[[["compressedmovementid",3]],["bool",15]]],[11,"eq","","",70,[[["movement",3]],["bool",15]]],[11,"ne","","",70,[[["movement",3]],["bool",15]]],[11,"eq","map_model::objects::zone","",71,[[["accessrestrictions",3]],["bool",15]]],[11,"ne","","",71,[[["accessrestrictions",3]],["bool",15]]],[11,"eq","","",72,[[["zone",3]],["bool",15]]],[11,"ne","","",72,[[["zone",3]],["bool",15]]],[11,"eq","map_model::osm","",73,[[["roadrank",4]],["bool",15]]],[11,"eq","","",74,[[["nodeid",3]],["bool",15]]],[11,"ne","","",74,[[["nodeid",3]],["bool",15]]],[11,"eq","","",75,[[["wayid",3]],["bool",15]]],[11,"ne","","",75,[[["wayid",3]],["bool",15]]],[11,"eq","","",76,[[["relationid",3]],["bool",15]]],[11,"ne","","",76,[[["relationid",3]],["bool",15]]],[11,"eq","","",77,[[["osmid",4]],["bool",15]]],[11,"ne","","",77,[[["osmid",4]],["bool",15]]],[11,"eq","map_model::pathfind::uber_turns","",83,[[["uberturn",3]],["bool",15]]],[11,"ne","","",83,[[["uberturn",3]],["bool",15]]],[11,"eq","","",84,[[["uberturnv2",3]],["bool",15]]],[11,"ne","","",84,[[["uberturnv2",3]],["bool",15]]],[11,"eq","map_model::pathfind::vehicles","",86,[[["node",4]],["bool",15]]],[11,"ne","","",86,[[["node",4]],["bool",15]]],[11,"eq","map_model::connectivity","",3,[[["walkingnode",4]],["bool",15]]],[11,"ne","","",3,[[["walkingnode",4]],["bool",15]]],[11,"eq","map_model::pathfind","",88,[[["pathstep",4]],["bool",15]]],[11,"ne","","",88,[[["pathstep",4]],["bool",15]]],[11,"eq","","",89,[[["path",3]],["bool",15]]],[11,"ne","","",89,[[["path",3]],["bool",15]]],[11,"eq","","",90,[[],["bool",15]]],[11,"eq","","",90,[[["enumset",3]],["bool",15]]],[11,"eq","","",91,[[["pathrequest",3]],["bool",15]]],[11,"ne","","",91,[[["pathrequest",3]],["bool",15]]],[11,"eq","","",92,[[["routingparams",3]],["bool",15]]],[11,"ne","","",92,[[["routingparams",3]],["bool",15]]],[11,"eq","map_model::raw","",94,[[["originalroad",3]],["bool",15]]],[11,"ne","","",94,[[["originalroad",3]],["bool",15]]],[11,"eq","","",95,[[["rawroad",3]],["bool",15]]],[11,"ne","","",95,[[["rawroad",3]],["bool",15]]],[11,"eq","","",96,[[["rawintersection",3]],["bool",15]]],[11,"ne","","",96,[[["rawintersection",3]],["bool",15]]],[11,"eq","","",100,[[["restrictiontype",4]],["bool",15]]],[11,"eq","","",101,[[["turnrestriction",3]],["bool",15]]],[11,"ne","","",101,[[["turnrestriction",3]],["bool",15]]],[11,"eq","map_model::traversable","",104,[[["position",3]],["bool",15]]],[11,"ne","","",104,[[["position",3]],["bool",15]]],[11,"eq","","",105,[[["traversable",4]],["bool",15]]],[11,"ne","","",105,[[["traversable",4]],["bool",15]]],[11,"partial_cmp","map_model::connectivity::walking","",2,[[["item",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","map_model::objects::area","",32,[[["areaid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",32,[[["areaid",3]],["bool",15]]],[11,"le","","",32,[[["areaid",3]],["bool",15]]],[11,"gt","","",32,[[["areaid",3]],["bool",15]]],[11,"ge","","",32,[[["areaid",3]],["bool",15]]],[11,"partial_cmp","map_model::objects::building","",35,[[["buildingid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",35,[[["buildingid",3]],["bool",15]]],[11,"le","","",35,[[["buildingid",3]],["bool",15]]],[11,"gt","","",35,[[["buildingid",3]],["bool",15]]],[11,"ge","","",35,[[["buildingid",3]],["bool",15]]],[11,"partial_cmp","","",41,[[["nameperlanguage",3]],[["option",4],["ordering",4]]]],[11,"lt","","",41,[[["nameperlanguage",3]],["bool",15]]],[11,"le","","",41,[[["nameperlanguage",3]],["bool",15]]],[11,"gt","","",41,[[["nameperlanguage",3]],["bool",15]]],[11,"ge","","",41,[[["nameperlanguage",3]],["bool",15]]],[11,"partial_cmp","","",42,[[["amenitytype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","map_model::objects::bus_stop","",43,[[["busstopid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",43,[[["busstopid",3]],["bool",15]]],[11,"le","","",43,[[["busstopid",3]],["bool",15]]],[11,"gt","","",43,[[["busstopid",3]],["bool",15]]],[11,"ge","","",43,[[["busstopid",3]],["bool",15]]],[11,"partial_cmp","","",44,[[["busrouteid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",44,[[["busrouteid",3]],["bool",15]]],[11,"le","","",44,[[["busrouteid",3]],["bool",15]]],[11,"gt","","",44,[[["busrouteid",3]],["bool",15]]],[11,"ge","","",44,[[["busrouteid",3]],["bool",15]]],[11,"partial_cmp","map_model::objects::intersection","",47,[[["intersectionid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",47,[[["intersectionid",3]],["bool",15]]],[11,"le","","",47,[[["intersectionid",3]],["bool",15]]],[11,"gt","","",47,[[["intersectionid",3]],["bool",15]]],[11,"ge","","",47,[[["intersectionid",3]],["bool",15]]],[11,"partial_cmp","map_model::objects::lane","",50,[[["laneid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",50,[[["laneid",3]],["bool",15]]],[11,"le","","",50,[[["laneid",3]],["bool",15]]],[11,"gt","","",50,[[["laneid",3]],["bool",15]]],[11,"ge","","",50,[[["laneid",3]],["bool",15]]],[11,"partial_cmp","","",51,[[["lanetype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","map_model::objects::parking_lot","",53,[[["parkinglotid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",53,[[["parkinglotid",3]],["bool",15]]],[11,"le","","",53,[[["parkinglotid",3]],["bool",15]]],[11,"gt","","",53,[[["parkinglotid",3]],["bool",15]]],[11,"ge","","",53,[[["parkinglotid",3]],["bool",15]]],[11,"partial_cmp","map_model::objects::road","",55,[[["roadid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",55,[[["roadid",3]],["bool",15]]],[11,"le","","",55,[[["roadid",3]],["bool",15]]],[11,"gt","","",55,[[["roadid",3]],["bool",15]]],[11,"ge","","",55,[[["roadid",3]],["bool",15]]],[11,"partial_cmp","","",56,[[["direction",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",57,[[["directedroadid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",57,[[["directedroadid",3]],["bool",15]]],[11,"le","","",57,[[["directedroadid",3]],["bool",15]]],[11,"gt","","",57,[[["directedroadid",3]],["bool",15]]],[11,"ge","","",57,[[["directedroadid",3]],["bool",15]]],[11,"partial_cmp","map_model::objects::turn","",64,[[["turnid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",64,[[["turnid",3]],["bool",15]]],[11,"le","","",64,[[["turnid",3]],["bool",15]]],[11,"gt","","",64,[[["turnid",3]],["bool",15]]],[11,"ge","","",64,[[["turnid",3]],["bool",15]]],[11,"partial_cmp","","",65,[[["turntype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",66,[[["turnpriority",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",68,[[["movementid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",68,[[["movementid",3]],["bool",15]]],[11,"le","","",68,[[["movementid",3]],["bool",15]]],[11,"gt","","",68,[[["movementid",3]],["bool",15]]],[11,"ge","","",68,[[["movementid",3]],["bool",15]]],[11,"partial_cmp","","",69,[[["compressedmovementid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",69,[[["compressedmovementid",3]],["bool",15]]],[11,"le","","",69,[[["compressedmovementid",3]],["bool",15]]],[11,"gt","","",69,[[["compressedmovementid",3]],["bool",15]]],[11,"ge","","",69,[[["compressedmovementid",3]],["bool",15]]],[11,"partial_cmp","map_model::osm","",73,[[["roadrank",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",74,[[["nodeid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",74,[[["nodeid",3]],["bool",15]]],[11,"le","","",74,[[["nodeid",3]],["bool",15]]],[11,"gt","","",74,[[["nodeid",3]],["bool",15]]],[11,"ge","","",74,[[["nodeid",3]],["bool",15]]],[11,"partial_cmp","","",75,[[["wayid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",75,[[["wayid",3]],["bool",15]]],[11,"le","","",75,[[["wayid",3]],["bool",15]]],[11,"gt","","",75,[[["wayid",3]],["bool",15]]],[11,"ge","","",75,[[["wayid",3]],["bool",15]]],[11,"partial_cmp","","",76,[[["relationid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",76,[[["relationid",3]],["bool",15]]],[11,"le","","",76,[[["relationid",3]],["bool",15]]],[11,"gt","","",76,[[["relationid",3]],["bool",15]]],[11,"ge","","",76,[[["relationid",3]],["bool",15]]],[11,"partial_cmp","","",77,[[["osmid",4]],[["option",4],["ordering",4]]]],[11,"lt","","",77,[[["osmid",4]],["bool",15]]],[11,"le","","",77,[[["osmid",4]],["bool",15]]],[11,"gt","","",77,[[["osmid",4]],["bool",15]]],[11,"ge","","",77,[[["osmid",4]],["bool",15]]],[11,"partial_cmp","map_model::pathfind::uber_turns","",84,[[["uberturnv2",3]],[["option",4],["ordering",4]]]],[11,"lt","","",84,[[["uberturnv2",3]],["bool",15]]],[11,"le","","",84,[[["uberturnv2",3]],["bool",15]]],[11,"gt","","",84,[[["uberturnv2",3]],["bool",15]]],[11,"ge","","",84,[[["uberturnv2",3]],["bool",15]]],[11,"partial_cmp","map_model::pathfind::vehicles","",86,[[["node",4]],[["option",4],["ordering",4]]]],[11,"lt","","",86,[[["node",4]],["bool",15]]],[11,"le","","",86,[[["node",4]],["bool",15]]],[11,"gt","","",86,[[["node",4]],["bool",15]]],[11,"ge","","",86,[[["node",4]],["bool",15]]],[11,"partial_cmp","map_model::connectivity","",3,[[["walkingnode",4]],[["option",4],["ordering",4]]]],[11,"lt","","",3,[[["walkingnode",4]],["bool",15]]],[11,"le","","",3,[[["walkingnode",4]],["bool",15]]],[11,"gt","","",3,[[["walkingnode",4]],["bool",15]]],[11,"ge","","",3,[[["walkingnode",4]],["bool",15]]],[11,"partial_cmp","map_model::pathfind","",88,[[["pathstep",4]],[["option",4],["ordering",4]]]],[11,"lt","","",88,[[["pathstep",4]],["bool",15]]],[11,"le","","",88,[[["pathstep",4]],["bool",15]]],[11,"gt","","",88,[[["pathstep",4]],["bool",15]]],[11,"ge","","",88,[[["pathstep",4]],["bool",15]]],[11,"partial_cmp","","",90,[[["pathconstraints",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","map_model::raw","",94,[[["originalroad",3]],[["option",4],["ordering",4]]]],[11,"lt","","",94,[[["originalroad",3]],["bool",15]]],[11,"le","","",94,[[["originalroad",3]],["bool",15]]],[11,"gt","","",94,[[["originalroad",3]],["bool",15]]],[11,"ge","","",94,[[["originalroad",3]],["bool",15]]],[11,"partial_cmp","","",100,[[["restrictiontype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",101,[[["turnrestriction",3]],[["option",4],["ordering",4]]]],[11,"lt","","",101,[[["turnrestriction",3]],["bool",15]]],[11,"le","","",101,[[["turnrestriction",3]],["bool",15]]],[11,"gt","","",101,[[["turnrestriction",3]],["bool",15]]],[11,"ge","","",101,[[["turnrestriction",3]],["bool",15]]],[11,"partial_cmp","map_model::traversable","",104,[[["position",3]],[["option",4],["ordering",4]]]],[11,"lt","","",104,[[["position",3]],["bool",15]]],[11,"le","","",104,[[["position",3]],["bool",15]]],[11,"gt","","",104,[[["position",3]],["bool",15]]],[11,"ge","","",104,[[["position",3]],["bool",15]]],[11,"partial_cmp","","",105,[[["traversable",4]],[["option",4],["ordering",4]]]],[11,"lt","","",105,[[["traversable",4]],["bool",15]]],[11,"le","","",105,[[["traversable",4]],["bool",15]]],[11,"gt","","",105,[[["traversable",4]],["bool",15]]],[11,"ge","","",105,[[["traversable",4]],["bool",15]]],[11,"fmt","map_model::edits::compat","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::edits","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::map","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::objects::area","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::objects::building","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::objects::bus_stop","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::objects::intersection","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::objects::lane","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::objects::parking_lot","",53,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::objects::road","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::objects::stop_signs","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::objects::traffic_signals","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::objects::turn","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::objects::zone","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::osm","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::pathfind::uber_turns","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::pathfind::vehicles","",86,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::connectivity","",3,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::pathfind","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::raw","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::traversable","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::objects::area","",32,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::objects::building","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::objects::bus_stop","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::objects::intersection","",47,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::objects::lane","",50,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::objects::parking_lot","",53,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::objects::road","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::objects::turn","",64,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::osm","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::pathfind","",91,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::raw","",94,[[["formatter",3]],["result",6]]],[11,"fmt","map_model::traversable","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"sub","map_model::pathfind","",90,[[]]],[11,"not","","",90,[[]]],[11,"bitand","","",90,[[]]],[11,"bitor","","",90,[[]]],[11,"bitxor","","",90,[[]]],[11,"hash","map_model::objects::area","",32,[[]]],[11,"hash","","",33,[[]]],[11,"hash","map_model::objects::building","",35,[[]]],[11,"hash","map_model::objects::bus_stop","",43,[[]]],[11,"hash","","",44,[[]]],[11,"hash","map_model::objects::intersection","",47,[[]]],[11,"hash","","",48,[[]]],[11,"hash","map_model::objects::lane","",50,[[]]],[11,"hash","","",51,[[]]],[11,"hash","map_model::objects::parking_lot","",53,[[]]],[11,"hash","map_model::objects::road","",55,[[]]],[11,"hash","","",56,[[]]],[11,"hash","","",57,[[]]],[11,"hash","map_model::objects::turn","",64,[[]]],[11,"hash","","",68,[[]]],[11,"hash","","",69,[[]]],[11,"hash","map_model::osm","",74,[[]]],[11,"hash","","",75,[[]]],[11,"hash","","",76,[[]]],[11,"hash","","",77,[[]]],[11,"hash","map_model::connectivity","",3,[[]]],[11,"hash","map_model::pathfind","",88,[[]]],[11,"hash","map_model::raw","",94,[[]]],[11,"hash","","",100,[[]]],[11,"hash","","",101,[[]]],[11,"hash","map_model::traversable","",105,[[]]],[11,"serialize","map_model::city","",0,[[],["result",4]]],[11,"serialize","map_model::edits::perma","",9,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","map_model::edits","",18,[[],["result",4]]],[11,"serialize","map_model::map","",30,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","map_model::objects::area","",32,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","","",34,[[],["result",4]]],[11,"serialize","map_model::objects::building","",35,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"serialize","","",37,[[],["result",4]]],[11,"serialize","","",38,[[],["result",4]]],[11,"serialize","","",39,[[],["result",4]]],[11,"serialize","","",41,[[],["result",4]]],[11,"serialize","map_model::objects::bus_stop","",43,[[],["result",4]]],[11,"serialize","","",44,[[],["result",4]]],[11,"serialize","","",45,[[],["result",4]]],[11,"serialize","","",46,[[],["result",4]]],[11,"serialize","map_model::objects::intersection","",47,[[],["result",4]]],[11,"serialize","","",48,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","map_model::objects::lane","",50,[[],["result",4]]],[11,"serialize","","",51,[[],["result",4]]],[11,"serialize","","",52,[[],["result",4]]],[11,"serialize","map_model::objects::parking_lot","",53,[[],["result",4]]],[11,"serialize","","",54,[[],["result",4]]],[11,"serialize","map_model::objects::road","",55,[[],["result",4]]],[11,"serialize","","",56,[[],["result",4]]],[11,"serialize","","",57,[[],["result",4]]],[11,"serialize","","",58,[[],["result",4]]],[11,"serialize","map_model::objects::stop_signs","",59,[[],["result",4]]],[11,"serialize","","",60,[[],["result",4]]],[11,"serialize","map_model::objects::traffic_signals","",61,[[],["result",4]]],[11,"serialize","","",62,[[],["result",4]]],[11,"serialize","","",63,[[],["result",4]]],[11,"serialize","map_model::objects::turn","",64,[[],["result",4]]],[11,"serialize","","",65,[[],["result",4]]],[11,"serialize","","",66,[[],["result",4]]],[11,"serialize","","",67,[[],["result",4]]],[11,"serialize","","",68,[[],["result",4]]],[11,"serialize","","",69,[[],["result",4]]],[11,"serialize","","",70,[[],["result",4]]],[11,"serialize","map_model::objects::zone","",71,[[],["result",4]]],[11,"serialize","","",72,[[],["result",4]]],[11,"serialize","map_model::osm","",74,[[],["result",4]]],[11,"serialize","","",75,[[],["result",4]]],[11,"serialize","","",76,[[],["result",4]]],[11,"serialize","","",77,[[],["result",4]]],[11,"serialize","map_model::pathfind::ch","",78,[[],["result",4]]],[11,"serialize","map_model::pathfind::node_map","",79,[[],["result",4]]],[11,"serialize","map_model::pathfind::pathfinder","",81,[[],["result",4]]],[11,"serialize","map_model::pathfind::uber_turns","",83,[[],["result",4]]],[11,"serialize","","",84,[[],["result",4]]],[11,"serialize","map_model::pathfind::vehicles","",85,[[],["result",4]]],[11,"serialize","","",86,[[],["result",4]]],[11,"serialize","map_model::pathfind::walking","",87,[[],["result",4]]],[11,"serialize","map_model::connectivity","",3,[[],["result",4]]],[11,"serialize","map_model::pathfind","",88,[[],["result",4]]],[11,"serialize","","",89,[[],["result",4]]],[11,"serialize","","",90,[[],["result",4]]],[11,"serialize","","",91,[[],["result",4]]],[11,"serialize","","",92,[[],["result",4]]],[11,"serialize","map_model::raw","",93,[[],["result",4]]],[11,"serialize","","",94,[[],["result",4]]],[11,"serialize","","",95,[[],["result",4]]],[11,"serialize","","",96,[[],["result",4]]],[11,"serialize","","",97,[[],["result",4]]],[11,"serialize","","",98,[[],["result",4]]],[11,"serialize","","",99,[[],["result",4]]],[11,"serialize","","",100,[[],["result",4]]],[11,"serialize","","",102,[[],["result",4]]],[11,"serialize","","",103,[[],["result",4]]],[11,"serialize","map_model::traversable","",104,[[],["result",4]]],[11,"serialize","","",105,[[],["result",4]]],[11,"serialize","map_model","",106,[[],["result",4]]],[11,"deserialize","map_model::city","",0,[[],["result",4]]],[11,"deserialize","map_model::edits::compat","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","map_model::edits::perma","",9,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","map_model::edits","",18,[[],["result",4]]],[11,"deserialize","map_model::map","",30,[[],["result",4]]],[11,"deserialize","","",31,[[],["result",4]]],[11,"deserialize","map_model::objects::area","",32,[[],["result",4]]],[11,"deserialize","","",33,[[],["result",4]]],[11,"deserialize","","",34,[[],["result",4]]],[11,"deserialize","map_model::objects::building","",35,[[],["result",4]]],[11,"deserialize","","",36,[[],["result",4]]],[11,"deserialize","","",37,[[],["result",4]]],[11,"deserialize","","",38,[[],["result",4]]],[11,"deserialize","","",39,[[],["result",4]]],[11,"deserialize","","",41,[[],["result",4]]],[11,"deserialize","map_model::objects::bus_stop","",43,[[],["result",4]]],[11,"deserialize","","",44,[[],["result",4]]],[11,"deserialize","","",45,[[],["result",4]]],[11,"deserialize","","",46,[[],["result",4]]],[11,"deserialize","map_model::objects::intersection","",47,[[],["result",4]]],[11,"deserialize","","",48,[[],["result",4]]],[11,"deserialize","","",49,[[],["result",4]]],[11,"deserialize","map_model::objects::lane","",50,[[],["result",4]]],[11,"deserialize","","",51,[[],["result",4]]],[11,"deserialize","","",52,[[],["result",4]]],[11,"deserialize","map_model::objects::parking_lot","",53,[[],["result",4]]],[11,"deserialize","","",54,[[],["result",4]]],[11,"deserialize","map_model::objects::road","",55,[[],["result",4]]],[11,"deserialize","","",56,[[],["result",4]]],[11,"deserialize","","",57,[[],["result",4]]],[11,"deserialize","","",58,[[],["result",4]]],[11,"deserialize","map_model::objects::stop_signs","",59,[[],["result",4]]],[11,"deserialize","","",60,[[],["result",4]]],[11,"deserialize","map_model::objects::traffic_signals","",61,[[],["result",4]]],[11,"deserialize","","",62,[[],["result",4]]],[11,"deserialize","","",63,[[],["result",4]]],[11,"deserialize","map_model::objects::turn","",64,[[],["result",4]]],[11,"deserialize","","",65,[[],["result",4]]],[11,"deserialize","","",66,[[],["result",4]]],[11,"deserialize","","",67,[[],["result",4]]],[11,"deserialize","","",68,[[],["result",4]]],[11,"deserialize","","",69,[[],["result",4]]],[11,"deserialize","","",70,[[],["result",4]]],[11,"deserialize","map_model::objects::zone","",71,[[],["result",4]]],[11,"deserialize","","",72,[[],["result",4]]],[11,"deserialize","map_model::osm","",74,[[],["result",4]]],[11,"deserialize","","",75,[[],["result",4]]],[11,"deserialize","","",76,[[],["result",4]]],[11,"deserialize","","",77,[[],["result",4]]],[11,"deserialize","map_model::pathfind::ch","",78,[[],["result",4]]],[11,"deserialize","map_model::pathfind::node_map","",80,[[],["result",4]]],[11,"deserialize","map_model::pathfind::pathfinder","",81,[[],["result",4]]],[11,"deserialize","map_model::pathfind::uber_turns","",83,[[],["result",4]]],[11,"deserialize","","",84,[[],["result",4]]],[11,"deserialize","map_model::pathfind::vehicles","",85,[[],["result",4]]],[11,"deserialize","","",86,[[],["result",4]]],[11,"deserialize","map_model::pathfind::walking","",87,[[],["result",4]]],[11,"deserialize","map_model::connectivity","",3,[[],["result",4]]],[11,"deserialize","map_model::pathfind","",88,[[],["result",4]]],[11,"deserialize","","",89,[[],["result",4]]],[11,"deserialize","","",90,[[],["result",4]]],[11,"deserialize","","",91,[[],["result",4]]],[11,"deserialize","","",92,[[],["result",4]]],[11,"deserialize","map_model::raw","",93,[[],["result",4]]],[11,"deserialize","","",94,[[],["result",4]]],[11,"deserialize","","",95,[[],["result",4]]],[11,"deserialize","","",96,[[],["result",4]]],[11,"deserialize","","",97,[[],["result",4]]],[11,"deserialize","","",98,[[],["result",4]]],[11,"deserialize","","",99,[[],["result",4]]],[11,"deserialize","","",100,[[],["result",4]]],[11,"deserialize","","",102,[[],["result",4]]],[11,"deserialize","","",103,[[],["result",4]]],[11,"deserialize","map_model::traversable","",104,[[],["result",4]]],[11,"deserialize","","",105,[[],["result",4]]],[11,"deserialize","map_model","",106,[[],["result",4]]],[11,"enum_into_u32","map_model::pathfind","",90,[[],["u32",15]]],[11,"enum_from_u32","","",90,[[["u32",15]]]],[11,"serialize","","",90,[[["enumset",3],["pathconstraints",4],["serializer",8]],["result",4]]],[11,"deserialize","","",90,[[["deserializer",8]],[["enumset",3],["result",4]]]],[11,"to_perma","map_model::edits","",19,[[["map",3]],["permanenteditcmd",4]]],[11,"to_permanent","","Encode the edits in a permanent format, referring to …",16,[[["map",3]],["permanentmapedits",3]]],[11,"to_permanent","","",17,[[["map",3]],["permanenteditintersection",4]]],[11,"new_edits","map_model","",106,[[],["mapedits",3]]],[11,"get_edits","","",106,[[],["mapedits",3]]],[11,"unsaved_edits","","",106,[[],["bool",15]]],[11,"get_r_edit","","",106,[[["roadid",3]],["editroad",3]]],[11,"edit_road_cmd","","",106,[[["fn",8],["roadid",3]],["editcmd",4]]],[11,"get_i_edit","","Panics on borders",106,[[["intersectionid",3]],["editintersection",4]]],[11,"save_edits","","",106,[[]]],[11,"must_apply_edits","","",106,[[["mapedits",3]]]],[11,"try_apply_edits","","",106,[[["mapedits",3]]]],[11,"apply_edits","","",106,[[["mapedits",3],["bool",15]]]],[11,"recalculate_pathfinding_after_edits","","This can expensive, so don\'t constantly do it while …",106,[[["timer",3]]]],[11,"incremental_edit_traffic_signal","","Since the player is in the middle of editing, the signal …",106,[[["controltrafficsignal",3]]]],[11,"create_from_raw","","",106,[[["rawmap",3],["bool",15],["timer",3]],["map",3]]],[11,"import_minimal","","Use for creating a map directly from some external …",106,[[["bounds",3],["gpsbounds",3],["vec",3],["vec",3],["mapname",3],["vec",3],["intersection",3],["turn",3],["vec",3],["lane",3],["road",3]],["map",3]]],[11,"load_synchronously","","Load a map from a local serialized Map or RawMap. Note …",106,[[["string",3],["timer",3]],["map",3]]],[11,"map_loaded_directly","","After deserializing a map directly, call this after.",106,[[]]],[11,"blank","","Just for temporary std::mem::replace tricks.",106,[[],["map",3]]],[11,"all_roads","","",106,[[],["vec",3]]],[11,"all_lanes","","",106,[[],["vec",3]]],[11,"all_intersections","","",106,[[],["vec",3]]],[11,"all_turns","","",106,[[],["btreemap",3]]],[11,"all_buildings","","",106,[[],["vec",3]]],[11,"all_areas","","",106,[[],["vec",3]]],[11,"all_parking_lots","","",106,[[],["vec",3]]],[11,"all_zones","","",106,[[],["vec",3]]],[11,"maybe_get_r","","",106,[[["roadid",3]],[["road",3],["option",4]]]],[11,"maybe_get_l","","",106,[[["laneid",3]],[["option",4],["lane",3]]]],[11,"maybe_get_i","","",106,[[["intersectionid",3]],[["intersection",3],["option",4]]]],[11,"maybe_get_t","","",106,[[["turnid",3]],[["option",4],["turn",3]]]],[11,"maybe_get_b","","",106,[[["buildingid",3]],[["option",4],["building",3]]]],[11,"maybe_get_pl","","",106,[[["parkinglotid",3]],[["option",4],["parkinglot",3]]]],[11,"maybe_get_a","","",106,[[["areaid",3]],[["area",3],["option",4]]]],[11,"maybe_get_bs","","",106,[[["busstopid",3]],[["busstop",3],["option",4]]]],[11,"maybe_get_stop_sign","","",106,[[["intersectionid",3]],[["option",4],["controlstopsign",3]]]],[11,"maybe_get_traffic_signal","","",106,[[["intersectionid",3]],[["option",4],["controltrafficsignal",3]]]],[11,"maybe_get_br","","",106,[[["busrouteid",3]],[["option",4],["busroute",3]]]],[11,"get_r","","",106,[[["roadid",3]],["road",3]]],[11,"get_l","","",106,[[["laneid",3]],["lane",3]]],[11,"get_i","","",106,[[["intersectionid",3]],["intersection",3]]],[11,"get_t","","",106,[[["turnid",3]],["turn",3]]],[11,"get_b","","",106,[[["buildingid",3]],["building",3]]],[11,"get_a","","",106,[[["areaid",3]],["area",3]]],[11,"get_pl","","",106,[[["parkinglotid",3]],["parkinglot",3]]],[11,"get_stop_sign","","",106,[[["intersectionid",3]],["controlstopsign",3]]],[11,"get_traffic_signal","","",106,[[["intersectionid",3]],["controltrafficsignal",3]]],[11,"get_turns_in_intersection","","",106,[[["intersectionid",3]],[["turn",3],["vec",3]]]],[11,"get_turns_from_lane","","The turns may belong to two different intersections!",106,[[["laneid",3]],[["turn",3],["vec",3]]]],[11,"get_turns_to_lane","","",106,[[["laneid",3]],[["turn",3],["vec",3]]]],[11,"get_turn_between","","",106,[[["intersectionid",3],["laneid",3]],[["turnid",3],["option",4]]]],[11,"get_next_turns_and_lanes","","",106,[[["intersectionid",3],["laneid",3]],["vec",3]]],[11,"get_turns_for","","",106,[[["pathconstraints",4],["laneid",3]],[["turn",3],["vec",3]]]],[11,"get_movements_for","","Find all movements from one road to another that\'re …",106,[[["pathconstraints",4],["directedroadid",3]],[["vec",3],["movementid",3]]]],[11,"get_next_roads","","",106,[[["roadid",3]],[["btreeset",3],["roadid",3]]]],[11,"get_parent","","",106,[[["laneid",3]],["road",3]]],[11,"get_gps_bounds","","",106,[[],["gpsbounds",3]]],[11,"get_bounds","","",106,[[],["bounds",3]]],[11,"get_city_name","","",106,[[],["cityname",3]]],[11,"get_name","","",106,[[],["mapname",3]]],[11,"all_bus_stops","","",106,[[],["btreemap",3]]],[11,"get_bs","","",106,[[["busstopid",3]],["busstop",3]]],[11,"get_br","","",106,[[["busrouteid",3]],["busroute",3]]],[11,"all_bus_routes","","",106,[[],["vec",3]]],[11,"get_bus_route","","",106,[[["str",15]],[["option",4],["busroute",3]]]],[11,"get_routes_serving_stop","","",106,[[["busstopid",3]],[["vec",3],["busroute",3]]]],[11,"building_to_road","","",106,[[["buildingid",3]],["road",3]]],[11,"all_incoming_borders","","This and all_outgoing_borders are expensive to constantly …",106,[[],[["vec",3],["intersection",3]]]],[11,"all_outgoing_borders","","",106,[[],[["vec",3],["intersection",3]]]],[11,"all_directed_roads_for","","Find all directed roads usable by somebody.",106,[[["pathconstraints",4]],[["vec",3],["directedroadid",3]]]],[11,"save","","",106,[[]]],[11,"find_driving_lane_near_building","","Cars trying to park near this building should head for …",106,[[["buildingid",3]],["laneid",3]]],[11,"get_boundary_polygon","","",106,[[],["polygon",3]]],[11,"pathfind","","",106,[[["pathrequest",3]],[["path",3],["result",6]]]],[11,"pathfind_avoiding_roads","","",106,[[["roadid",3],["btreeset",3],["pathrequest",3]],[["path",3],["option",4]]]],[11,"pathfind_with_params","","",106,[[["routingparams",3],["pathrequest",3]],[["path",3],["result",6]]]],[11,"should_use_transit","","",106,[[["position",3]],["option",4]]],[11,"get_movement","","",106,[[["turnid",3]],[["option",4],["movementid",3]]]],[11,"find_r_by_osm_id","","",106,[[["originalroad",3]],[["result",6],["roadid",3]]]],[11,"find_i_by_osm_id","","",106,[[["nodeid",3]],[["result",6],["intersectionid",3]]]],[11,"find_b_by_osm_id","","",106,[[["osmid",4]],[["buildingid",3],["option",4]]]],[11,"find_br","","",106,[[["relationid",3]],[["busrouteid",3],["option",4]]]],[11,"hack_override_offstreet_spots","","",106,[[["usize",15]]]],[11,"hack_override_offstreet_spots_individ","","",106,[[["buildingid",3],["usize",15]]]],[11,"hack_override_bldg_type","","",106,[[["buildingid",3],["buildingtype",4]]]],[11,"hack_override_orig_spawn_times","","",106,[[["busrouteid",3],["vec",3],["time",3]]]],[11,"hack_add_area","","",106,[[["areatype",4],["tags",3],["polygon",3]]]],[11,"hack_override_routing_params","","",106,[[["routingparams",3],["timer",3]]]],[11,"get_languages","","",106,[[],[["btreeset",3],["str",15]]]],[11,"get_config","","",106,[[],["mapconfig",3]]],[11,"simple_path_btwn","","Simple search along undirected roads",106,[[["intersectionid",3]],[["option",4],["vec",3]]]],[11,"routing_params","","Returns the routing params baked into the map.",106,[[],["routingparams",3]]]],"p":[[3,"City"],[3,"WalkingOptions"],[3,"Item"],[4,"WalkingNode"],[3,"OriginalLane"],[3,"ChangeLaneType"],[3,"ReverseLane"],[3,"ChangeSpeedLimit"],[3,"ChangeAccessRestrictions"],[3,"PermanentMapEdits"],[4,"PermanentEditIntersection"],[13,"StopSign"],[4,"PermanentEditCmd"],[13,"ChangeRoad"],[13,"ChangeIntersection"],[13,"ChangeRouteSchedule"],[3,"MapEdits"],[4,"EditIntersection"],[3,"EditRoad"],[4,"EditCmd"],[13,"ChangeRoad"],[13,"ChangeIntersection"],[13,"ChangeRouteSchedule"],[3,"EditEffects"],[3,"Piece"],[3,"LaneSpec"],[3,"InitialMap"],[3,"Road"],[3,"Intersection"],[3,"Matcher"],[3,"MapConfig"],[4,"DrivingSide"],[3,"AreaID"],[4,"AreaType"],[3,"Area"],[3,"BuildingID"],[3,"Building"],[3,"Amenity"],[4,"OffstreetParking"],[4,"BuildingType"],[13,"Residential"],[3,"NamePerLanguage"],[4,"AmenityType"],[3,"BusStopID"],[3,"BusRouteID"],[3,"BusStop"],[3,"BusRoute"],[3,"IntersectionID"],[4,"IntersectionType"],[3,"Intersection"],[3,"LaneID"],[4,"LaneType"],[3,"Lane"],[3,"ParkingLotID"],[3,"ParkingLot"],[3,"RoadID"],[4,"Direction"],[3,"DirectedRoadID"],[3,"Road"],[3,"ControlStopSign"],[3,"RoadWithStopSign"],[3,"ControlTrafficSignal"],[3,"Stage"],[4,"StageType"],[3,"TurnID"],[4,"TurnType"],[4,"TurnPriority"],[3,"Turn"],[3,"MovementID"],[3,"CompressedMovementID"],[3,"Movement"],[3,"AccessRestrictions"],[3,"Zone"],[4,"RoadRank"],[3,"NodeID"],[3,"WayID"],[3,"RelationID"],[4,"OsmID"],[3,"ContractionHierarchyPathfinder"],[3,"NodeMap"],[3,"InnerNodeMap"],[4,"Pathfinder"],[3,"IntersectionCluster"],[3,"UberTurn"],[3,"UberTurnV2"],[3,"VehiclePathfinder"],[4,"Node"],[3,"SidewalkPathfinder"],[4,"PathStep"],[3,"Path"],[4,"PathConstraints"],[3,"PathRequest"],[3,"RoutingParams"],[3,"RawMap"],[3,"OriginalRoad"],[3,"RawRoad"],[3,"RawIntersection"],[3,"RawBuilding"],[3,"RawArea"],[3,"RawParkingLot"],[4,"RestrictionType"],[3,"TurnRestriction"],[3,"RawBusRoute"],[3,"RawBusStop"],[3,"Position"],[4,"Traversable"],[3,"Map"]]},\
"one_step_import":{"doc":"","i":[[5,"main","one_step_import","Import a one-shot A/B Street map in a single command. …",null,[[],["result",6]]]],"p":[]},\
"osm_viewer":{"doc":"","i":[[0,"viewer","osm_viewer","",null,null],[6,"App","osm_viewer::viewer","",null,null],[3,"Viewer","","",null,null],[12,"top_panel","","",0,null],[12,"fixed_object_outline","","",0,null],[12,"minimap","","",0,null],[12,"businesses","","",0,null],[11,"new","","",0,[[["simpleapp",3],["eventctx",3]],[["box",3],["state",8]]]],[11,"recalculate_top_panel","","",0,[[["option",4],["widget",3],["simpleapp",3],["eventctx",3]]]],[11,"calculate_tags","","",0,[[["eventctx",3],["simpleapp",3]],["widget",3]]],[3,"BusinessSearch","","",null,null],[12,"counts","","",1,null],[12,"show","","",1,null],[12,"highlight","","",1,null],[12,"hovering_on_amenity","","",1,null],[11,"new","","",1,[[["simpleapp",3],["eventctx",3]],["businesssearch",3]]],[11,"update","","",1,[[["simpleapp",3],["eventctx",3]]]],[11,"hovering_on_amenity","","",1,[[["option",4],["string",3],["simpleapp",3],["eventctx",3]]]],[11,"render","","",1,[[["eventctx",3]],["widget",3]]],[3,"MinimapController","","",null,null],[5,"main","osm_viewer","",null,[[]]],[5,"run","","",null,[[["settings",3]]]],[11,"from","osm_viewer::viewer","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_any","","",0,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"into_any","","",1,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"into_any","","",2,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any_arc","","",2,[[["arc",3]],[["arc",3],["any",8]]]],[11,"event","","",0,[[["simpleapp",3],["eventctx",3]],[["transition",4],["simpleapp",3]]]],[11,"draw_baselayer","","",0,[[],["drawbaselayer",4]]],[11,"draw","","",0,[[["simpleapp",3],["gfxctx",3]]]],[11,"has_zorder","","",2,[[["simpleapp",3]],["bool",15]]],[11,"make_legend","","",2,[[["simpleapp",3],["eventctx",3]],["widget",3]]]],"p":[[3,"Viewer"],[3,"BusinessSearch"],[3,"MinimapController"]]},\
"parking_mapper":{"doc":"","i":[[0,"mapper","parking_mapper","",null,null],[6,"App","parking_mapper::mapper","",null,null],[3,"ParkingMapper","","",null,null],[12,"panel","","",0,null],[12,"draw_layer","","",0,null],[12,"show","","",0,null],[12,"selected","","",0,null],[12,"data","","",0,null],[4,"Show","","",null,null],[13,"TODO","","",1,null],[13,"Done","","",1,null],[13,"DividedHighways","","",1,null],[13,"UnmappedDividedHighways","","",1,null],[13,"OverlappingStuff","","",1,null],[4,"Value","","",null,null],[13,"BothSides","","",2,null],[13,"NoStopping","","",2,null],[13,"RightOnly","","",2,null],[13,"LeftOnly","","",2,null],[13,"Complicated","","",2,null],[11,"new","","",0,[[["eventctx",3],["simpleapp",3]],[["box",3],["state",8]]]],[11,"make","","",0,[[["eventctx",3],["show",4],["btreemap",3],["simpleapp",3],["wayid",3],["value",4]],[["box",3],["state",8]]]],[3,"ChangeWay","","",null,null],[12,"panel","","",3,null],[12,"draw","","",3,null],[12,"osm_way_id","","",3,null],[12,"data","","",3,null],[12,"show","","",3,null],[11,"new","","",3,[[["eventctx",3],["show",4],["btreemap",3],["hashset",3],["simpleapp",3],["wayid",3],["value",4]],[["box",3],["state",8]]]],[5,"generate_osmc","","",null,[[["btreemap",3],["bool",15],["timer",3]],["result",6]]],[5,"find_divided_highways","","",null,[[["simpleapp",3]],[["hashset",3],["roadid",3]]]],[5,"find_overlapping_stuff","","",null,[[["simpleapp",3],["timer",3]],[["vec",3],["polygon",3]]]],[5,"main","parking_mapper","",null,[[]]],[11,"from","parking_mapper::mapper","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_any","","",0,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"into_any","","",1,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"into_any","","",2,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any_arc","","",2,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"into_any","","",3,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"clone","","",1,[[],["show",4]]],[11,"clone","","",2,[[],["value",4]]],[11,"eq","","",1,[[["show",4]],["bool",15]]],[11,"eq","","",2,[[["value",4]],["bool",15]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"event","","",0,[[["eventctx",3],["simpleapp",3]],[["simpleapp",3],["transition",4]]]],[11,"draw","","",0,[[["gfxctx",3],["simpleapp",3]]]],[11,"event","","",3,[[["eventctx",3],["simpleapp",3]],[["simpleapp",3],["transition",4]]]],[11,"draw","","",3,[[["gfxctx",3],["simpleapp",3]]]]],"p":[[3,"ParkingMapper"],[4,"Show"],[4,"Value"],[3,"ChangeWay"]]},\
"pick_geofabrik":{"doc":"","i":[[5,"main","pick_geofabrik","Takes an osmosis polygon boundary file as input, then …",null,[[],["result",6]]],[5,"load_remote_geojson","","",null,[[["string",3],["str",15]]]],[5,"find_matching_regions","","",null,[[["geojson",4],["lonlat",3]],["vec",3]]]],"p":[]},\
"popdat":{"doc":"popdat (\\\"population data\\\") generates <code>Scenarios</code> given a …","i":[[0,"activities","popdat","",null,null],[5,"rand_duration","popdat::activities","",null,[[["duration",3],["xorshiftrng",3]],["duration",3]]],[5,"rand_time","","",null,[[["duration",3],["xorshiftrng",3]],["time",3]]],[5,"minutes","","",null,[[["usize",15]],["duration",3]]],[5,"hours","","",null,[[["usize",15]],["duration",3]]],[0,"distribute_people","popdat","",null,null],[5,"assign_people_to_houses","popdat::distribute_people","",null,[[["config",3],["vec",3],["censusarea",3],["map",3],["xorshiftrng",3]],[["censusperson",3],["vec",3]]]],[5,"distribute_population_to_homes","","Starting from some number of total people living in a …",null,[[["f64",15],["usize",15],["polygon",3],["map",3],["xorshiftrng",3]],["vec",3]]],[0,"import_census","popdat","",null,null],[0,"make_person","","",null,null],[5,"make_people","popdat::make_person","",null,[[["censusperson",3],["timer",3],["xorshiftrng",3],["config",3],["vec",3],["map",3]],[["vec",3],["personspec",3]]]],[3,"PersonFactory","","",null,null],[12,"activity_to_buildings","","",0,null],[11,"new","","",0,[[["map",3]]]],[11,"activity_to_buildings","","",0,[[["map",3]],[["activity",4],["vec",3],["hashmap",3]]]],[11,"find_building_for_activity","","",0,[[["tripendpoint",4],["activity",4],["map",3],["xorshiftrng",3]],[["buildingid",3],["option",4]]]],[11,"make_person","","",0,[[["censusperson",3],["vec",3],["config",3],["map",3],["xorshiftrng",3]],["personspec",3]]],[5,"pick_mode","","",null,[[["tripendpoint",4],["config",3],["map",3],["xorshiftrng",3]],["tripmode",4]]],[0,"od","popdat","This is an alternative pipeline for generating a …",null,null],[3,"DesireLine","popdat::od","This describes some number of commuters living in some …",null,null],[12,"home_zone","","",1,null],[12,"work_zone","","",1,null],[12,"mode","","",1,null],[12,"number_commuters","","",1,null],[3,"Options","","",null,null],[12,"departure_time","","When should somebody depart from home to work?",2,null],[12,"work_duration","","How long should somebody work before returning home?",2,null],[11,"default","","",2,[[],["options",3]]],[5,"disaggregate","","Generates a scenario from aggregated origin/destination …",null,[[["desireline",3],["options",3],["map",3],["vec",3],["string",3],["xorshiftrng",3],["polygon",3],["hashmap",3],["timer",3]],[["vec",3],["personspec",3]]]],[3,"Zone","","",null,null],[12,"polygon","","",3,null],[12,"pct_overlap","","",3,null],[12,"homes","","",3,null],[12,"workplaces","","",3,null],[12,"borders","","",3,null],[5,"create_zones","","",null,[[["string",3],["polygon",3],["hashmap",3],["map",3]],[["string",3],["hashmap",3],["zone",3]]]],[11,"pick_home","","Returns endpoints to (leave home, goto home). These\'re …",3,[[["xorshiftrng",3],["map",3],["tripmode",4]],["option",4]]],[11,"pick_workplace","","Returns endpoints to (leave work, goto work). These\'re …",3,[[["xorshiftrng",3],["map",3],["tripmode",4]],["option",4]]],[11,"pick_borders","","",3,[[["xorshiftrng",3],["map",3],["tripmode",4]],["option",4]]],[3,"NormalDistribution","","A normal distribution of Durations.",null,null],[12,"mean","","",4,null],[12,"std_deviation","","",4,null],[11,"new","","",4,[[["duration",3]],["normaldistribution",3]]],[11,"sample","","",4,[[["xorshiftrng",3]],["duration",3]]],[5,"distribute_population_to_homes","popdat","Starting from some number of total people living in a …",null,[[["f64",15],["usize",15],["polygon",3],["map",3],["xorshiftrng",3]],["vec",3]]],[3,"CensusArea","","Represents aggregate demographic data for some part of a …",null,null],[12,"polygon","","",5,null],[12,"population","","",5,null],[3,"CensusPerson","","Demographic information for a single person",null,null],[12,"home","","",6,null],[12,"age","","",6,null],[12,"employed","","",6,null],[12,"owns_car","","",6,null],[4,"PersonType","","It might be useful to classify a CensusPerson into …",null,null],[13,"Student","","",7,null],[13,"Worker","","",7,null],[3,"Schedule","","A single person\'s daily schedule. It\'s assumed that …",null,null],[12,"activities","","",8,null],[4,"Activity","","Different things people might do in the day. Maybe it\'s …",null,null],[13,"Breakfast","","",9,null],[13,"Lunch","","",9,null],[13,"Dinner","","",9,null],[13,"School","","",9,null],[13,"Entertainment","","",9,null],[13,"Errands","","",9,null],[13,"Financial","","",9,null],[13,"Healthcare","","",9,null],[13,"Home","","",9,null],[13,"Work","","",9,null],[3,"Config","","Any arbitrarily chosen parameters needed should be put …",null,null],[12,"walk_for_distances_shorter_than","","",10,null],[12,"walk_or_bike_for_distances_shorter_than","","",10,null],[11,"default","","",10,[[],["config",3]]],[5,"generate_scenario","","Wires together all the pieces, so you can just hand this …",null,[[["map",3],["xorshiftrng",3],["vec",3],["censusarea",3],["config",3],["str",15]],["scenario",3]]],[11,"from","popdat::make_person","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_any","","",0,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any_arc","","",0,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","popdat::od","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"into_any","","",1,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"into_any","","",2,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any_arc","","",2,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"into_any","","",3,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"into_any_arc","","",3,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"into_any","","",4,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"into_any_arc","","",4,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","popdat","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"into_any","","",5,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"into_any_arc","","",5,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"into_any","","",6,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"into_any_arc","","",6,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"into_any","","",7,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"into_any_arc","","",7,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"into_any","","",8,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"into_any_arc","","",8,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"equivalent","","",9,[[],["bool",15]]],[11,"get_hash","","",9,[[],["u64",15]]],[11,"vzip","","",9,[[]]],[11,"into_any","","",9,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"into_any_arc","","",9,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"into_any","","",10,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"into_any_arc","","",10,[[["arc",3]],[["any",8],["arc",3]]]],[11,"clone","","",9,[[],["activity",4]]],[11,"eq","","",5,[[["censusarea",3]],["bool",15]]],[11,"ne","","",5,[[["censusarea",3]],["bool",15]]],[11,"eq","","",9,[[["activity",4]],["bool",15]]],[11,"fmt","popdat::od","",1,[[["formatter",3]],["result",6]]],[11,"fmt","popdat","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"hash","","",9,[[]]],[11,"generate_schedule","","",6,[[["config",3],["xorshiftrng",3]],["schedule",3]]],[11,"fetch_all_for_map","","",5,[[["gpsbounds",3],["polygon",3]]]]],"p":[[3,"PersonFactory"],[3,"DesireLine"],[3,"Options"],[3,"Zone"],[3,"NormalDistribution"],[3,"CensusArea"],[3,"CensusPerson"],[4,"PersonType"],[3,"Schedule"],[4,"Activity"],[3,"Config"]]},\
"random_scenario":{"doc":"","i":[[5,"main","random_scenario","",null,[[]]]],"p":[]},\
"santa":{"doc":"","i":[[0,"after_level","santa","",null,null],[17,"ZOOM","santa::after_level","",null,null],[3,"Strategize","","",null,null],[12,"unlock_messages","","",0,null],[12,"draw_all","","",0,null],[11,"new","","",0,[[["usize",15],["recordpath",3],["simpleapp",3],["level",3],["eventctx",3],["buildings",3]],[["box",3],["state",8]]]],[3,"Results","","",null,null],[11,"new","","",1,[[["usize",15],["simpleapp",3],["level",3],["eventctx",3]],[["box",3],["state",8]]]],[3,"RecordPath","","",null,null],[12,"pts","","",2,null],[11,"new","","",2,[[],["recordpath",3]]],[11,"add_pt","","",2,[[["pt2d",3]]]],[11,"render","","",2,[[["distance",3]],["polygon",3]]],[0,"animation","santa","",null,null],[3,"Animator","santa::animation","",null,null],[12,"active","","",3,null],[12,"draw_mapspace","","",3,null],[12,"draw_screenspace","","",3,null],[3,"Animation","","",null,null],[12,"start","","",4,null],[12,"end","","",4,null],[12,"effect","","",4,null],[12,"screenspace","","",4,null],[4,"Effect","","",null,null],[13,"Scale","","",5,null],[12,"orig","santa::animation::Effect","",6,null],[12,"center","","",6,null],[12,"lerp_scale","","",6,null],[13,"FollowPath","santa::animation","",5,null],[12,"color","santa::animation::Effect","",7,null],[12,"width","","",7,null],[12,"pl","","",7,null],[13,"Flash","santa::animation","",5,null],[12,"orig","santa::animation::Effect","",8,null],[12,"alpha_scale","","",8,null],[12,"cycles","","",8,null],[11,"new","santa::animation","",3,[[["eventctx",3]],["animator",3]]],[11,"add","","Pass in a future value for <code>now</code> to schedule a delayed …",3,[[["effect",4],["time",3],["duration",3]]]],[11,"add_screenspace","","",3,[[["effect",4],["time",3],["duration",3]]]],[11,"event","","",3,[[["time",3],["eventctx",3]]]],[11,"draw","","",3,[[["gfxctx",3]]]],[11,"is_done","","",3,[[],["bool",15]]],[11,"render","","",5,[[["f64",15],["geombatch",3]]]],[3,"SnowEffect","","",null,null],[12,"rng","","",9,null],[12,"flakes","","",9,null],[12,"draw","","",9,null],[3,"Snowflake","","",null,null],[12,"start","","",10,null],[12,"initial_pos","","",10,null],[12,"fall_speed","","",10,null],[12,"swoop_period","","",10,null],[12,"max_swoop","","",10,null],[11,"pos","","",10,[[["time",3]],["pt2d",3]]],[11,"new","","",9,[[["eventctx",3]],["snoweffect",3]]],[11,"spawn_new","","",9,[[["pt2d",3],["time",3]],["snowflake",3]]],[11,"event","","",9,[[["time",3],["eventctx",3]]]],[11,"draw","","",9,[[["gfxctx",3]]]],[0,"before_level","santa","",null,null],[17,"ZOOM","santa::before_level","",null,null],[3,"Picker","","",null,null],[12,"vehicle_panel","","",11,null],[12,"instructions_panel","","",11,null],[12,"upzone_panel","","",11,null],[12,"level","","",11,null],[12,"bldgs","","",11,null],[12,"current_picks","","",11,null],[12,"draw_start","","",11,null],[11,"new","","",11,[[["level",3],["simpleapp",3],["eventctx",3]],[["box",3],["state",8]]]],[11,"randomly_pick_upzones","","",11,[[["simpleapp",3]]]],[5,"make_vehicle_panel","","",null,[[["simpleapp",3],["eventctx",3]],["panel",3]]],[5,"make_upzone_panel","","",null,[[["usize",15],["simpleapp",3],["eventctx",3]],["panel",3]]],[5,"explain_upzoning","","",null,[[["eventctx",3]],[["simpleapp",3],["transition",4]]]],[0,"buildings","santa","",null,null],[3,"Buildings","santa::buildings","",null,null],[12,"buildings","","",12,null],[12,"draw_all","","",12,null],[12,"total_housing_units","","",12,null],[12,"upzones","","",12,null],[4,"BldgState","","",null,null],[13,"Undelivered","","",13,null],[13,"Store","","",13,null],[13,"Done","","",13,null],[13,"Ignore","","",13,null],[11,"new","","",12,[[["simpleapp",3],["buildingid",3],["eventctx",3],["hashset",3]],["buildings",3]]],[11,"all_stores","","",12,[[],[["vec",3],["buildingid",3]]]],[11,"draw_done_houses","","",12,[[["simpleapp",3],["eventctx",3]],["drawable",3]]],[0,"controls","santa","",null,null],[17,"HACK","santa::controls","",null,null],[3,"InstantController","","",null,null],[12,"facing","","Which of the 8 directions are we facing, based on the …",14,null],[11,"new","","",14,[[],["instantcontroller",3]]],[11,"displacement","","",14,[[["speed",3],["eventctx",3]],["option",4]]],[5,"angle_from_arrow_keys","","",null,[[["eventctx",3]],[["option",4],["angle",3]]]],[0,"game","santa","",null,null],[17,"MAX_BOOST","santa::game","",null,null],[17,"ACQUIRE_BOOST_RATE","","",null,null],[17,"BOOST_SPEED_MULTIPLIER","","",null,null],[17,"HANGRY_SPEED_MULTIPLIER","","",null,null],[3,"Game","","",null,null],[12,"status_panel","","",15,null],[12,"time_panel","","",15,null],[12,"pause_panel","","",15,null],[12,"minimap","","",15,null],[12,"animator","","",15,null],[12,"snow","","",15,null],[12,"state","","",15,null],[12,"player","","",15,null],[11,"new","","",15,[[["level",3],["vehicle",3],["simpleapp",3],["buildingid",3],["eventctx",3],["hashset",3]],[["box",3],["state",8]]]],[11,"update_time_panel","","",15,[[["simpleapp",3],["eventctx",3]]]],[11,"update_status_panel","","",15,[[["simpleapp",3],["eventctx",3]]]],[11,"update_boost_panel","","",15,[[["simpleapp",3],["eventctx",3]]]],[11,"update","","",15,[[["simpleapp",3],["eventctx",3],["duration",3]]]],[3,"GameState","","",null,null],[12,"level","","",16,null],[12,"vehicle","","",16,null],[12,"bldgs","","",16,null],[12,"score","","",16,null],[12,"energy","","",16,null],[12,"boost","","",16,null],[12,"draw_done_houses","","",16,null],[12,"energyless_arrow","","",16,null],[12,"idle_time","","",16,null],[12,"game_over","","",16,null],[12,"warned_low_time","","",16,null],[12,"warned_low_energy","","",16,null],[12,"record_path","","",16,null],[11,"new","","",16,[[["level",3],["vehicle",3],["buildings",3],["eventctx",3]],["gamestate",3]]],[11,"present_dropped","","",16,[[["simpleapp",3],["eventctx",3],["buildingid",3]],[["usize",15],["option",4]]]],[11,"has_energy","","",16,[[],["bool",15]]],[11,"met_goal","","",16,[[],["bool",15]]],[3,"EnergylessArrow","","",null,null],[12,"draw","","",17,null],[12,"started","","",17,null],[12,"last_update","","",17,null],[12,"all_stores","","",17,null],[11,"new","","",17,[[["time",3],["vec",3],["buildingid",3],["eventctx",3]],["energylessarrow",3]]],[11,"update","","",17,[[["pt2d",3],["simpleapp",3],["eventctx",3]]]],[3,"MinimapController","","",null,null],[0,"levels","santa","",null,null],[3,"Level","santa::levels","",null,null],[12,"title","","",18,null],[12,"description","","",18,null],[12,"map","","",18,null],[12,"music","","",18,null],[12,"start","","",18,null],[12,"minimap_zoom","","",18,null],[12,"time_limit","","",18,null],[12,"goal","","",18,null],[12,"unlock_upzones","","",18,null],[12,"unlock_vehicles","","",18,null],[11,"all","","",18,[[],[["level",3],["vec",3]]]],[0,"meters","santa","",null,null],[5,"custom_bar","santa::meters","",null,[[["f64",15],["text",3],["eventctx",3],["color",3]],["widget",3]]],[5,"make_bar","","",null,[[["usize",15],["eventctx",3],["color",3]],["widget",3]]],[0,"music","santa","",null,null],[17,"OUT_OF_GAME","santa::music","",null,null],[17,"IN_GAME","","",null,null],[3,"Music","","",null,null],[12,"inner","","",19,null],[3,"Inner","","",null,null],[12,"_stream","","",20,null],[12,"stream_handle","","",20,null],[12,"sink","","",20,null],[12,"unmuted_volume","","",20,null],[12,"current_song","","",20,null],[12,"panel","","",20,null],[11,"empty","","",19,[[],["music",3]]],[11,"start","","",19,[[["bool",15],["eventctx",3],["str",15]],["music",3]]],[11,"event","","",19,[[["eventctx",3],["bool",15]]]],[11,"draw","","",19,[[["gfxctx",3]]]],[11,"specify_volume","","",19,[[["f32",15]]]],[11,"change_song","","",19,[[["str",15]]]],[11,"new","","",20,[[["bool",15],["eventctx",3],["str",15]],[["result",6],["inner",3]]]],[11,"unmute","","",20,[[]]],[11,"mute","","",20,[[]]],[11,"specify_volume","","",20,[[["f32",15]]]],[11,"change_song","","",20,[[["str",15]],["result",6]]],[0,"player","santa","",null,null],[17,"ZOOM","santa::player","",null,null],[3,"Player","","",null,null],[12,"pos","","",21,null],[12,"facing","","",21,null],[12,"on","","",21,null],[12,"bldgs_along_road","","",21,null],[12,"controls","","",21,null],[11,"new","","",21,[[["simpleapp",3],["eventctx",3],["intersectionid",3]],["player",3]]],[11,"update_with_speed","","Returns any buildings we passed",21,[[["simpleapp",3],["eventctx",3],["speed",3]],[["vec",3],["buildingid",3]]]],[11,"pos_to_on","","",21,[[["pt2d",3],["simpleapp",3]],[["option",4],["on",4]]]],[11,"apply_displacement","","",21,[[["f64",15],["simpleapp",3],["bool",15],["eventctx",3]],[["vec",3],["buildingid",3]]]],[11,"get_pos","","",21,[[],["pt2d",3]]],[11,"get_angle","","",21,[[],["angle",3]]],[11,"on_good_road","","Is the player currently on a road with a bus or bike lane?",21,[[["simpleapp",3]],["bool",15]]],[11,"override_pos","","For the game over animation",21,[[["pt2d",3]]]],[4,"On","","",null,null],[13,"Intersection","","",22,null],[13,"Road","","",22,null],[11,"get_connections","","",22,[[["simpleapp",3]]]],[3,"BuildingsAlongRoad","","",null,null],[12,"per_road","","",23,null],[11,"new","","",23,[[["simpleapp",3]],["buildingsalongroad",3]]],[11,"query_range","","",23,[[["roadid",3],["distance",3]],[["vec",3],["buildingid",3]]]],[0,"session","santa","",null,null],[3,"Session","santa::session","Persistent state that lasts across levels.",null,null],[12,"levels","","",24,null],[12,"enable_modding","","Enable this to use the levels, instead of overwriting …",24,null],[12,"colors","","",24,null],[12,"high_scores","","Level title -> the top 3 scores",24,null],[12,"levels_unlocked","","",24,null],[12,"current_vehicle","","",24,null],[12,"vehicles_unlocked","","",24,null],[12,"upzones_unlocked","","",24,null],[12,"upzones_explained","","",24,null],[12,"upzones_per_level","","",24,null],[12,"music","","",24,null],[12,"play_music","","",24,null],[3,"ColorScheme","","",null,null],[12,"house","","",25,null],[12,"apartment","","",25,null],[12,"store","","",25,null],[12,"visited","","",25,null],[12,"score","","",25,null],[12,"energy","","",25,null],[12,"boost","","",25,null],[11,"load","","",24,[[],["session",3]]],[11,"record_score","","If a message is returned, a new level and some powers …",24,[[["usize",15],["string",3]],[["option",4],["vec",3]]]],[11,"unlock_all","","",24,[[]]],[11,"update_music","","",24,[[["eventctx",3]]]],[11,"save","","",24,[[]]],[0,"title","santa","",null,null],[3,"TitleScreen","santa::title","",null,null],[11,"new","","",26,[[["simpleapp",3],["eventctx",3]],[["box",3],["state",8]]]],[5,"level_btn","","",null,[[["usize",15],["simpleapp",3],["level",3],["eventctx",3]],["geombatch",3]]],[5,"locked_level","","",null,[[["usize",15],["simpleapp",3],["level",3],["eventctx",3]],["widget",3]]],[5,"unlocked_level","","",null,[[["usize",15],["simpleapp",3],["level",3],["eventctx",3]],["widget",3]]],[3,"Credits","","",null,null],[11,"new","","",27,[[["eventctx",3]],[["box",3],["state",8]]]],[5,"link","","",null,[[["eventctx",3],["str",15]],["widget",3]]],[0,"vehicles","santa","",null,null],[3,"Vehicle","santa::vehicles","",null,null],[12,"name","","",28,null],[12,"speed","","",28,null],[12,"max_energy","","",28,null],[12,"draw_frames","","",28,null],[12,"scale","","",28,null],[11,"get","","",28,[[["str",15]],["vehicle",3]]],[11,"animate","","",28,[[["prerender",3],["time",3]],["geombatch",3]]],[11,"max_stats","","(max speed, max energy)",28,[[]]],[6,"App","santa","",null,null],[6,"Transition","","",null,null],[5,"main","","",null,[[]]],[5,"run","","",null,[[["settings",3]]]],[11,"from","santa::after_level","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any","","",0,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any_arc","","",0,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_any","","",1,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_any","","",2,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any_arc","","",2,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",2,[[]]],[11,"from","santa::animation","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_any","","",3,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"into_any_arc","","",3,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_any","","",4,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"into_any_arc","","",4,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_any","","",5,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"into_any_arc","","",5,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",5,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_any","","",9,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"into_any_arc","","",9,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"into_any","","",10,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"into_any_arc","","",10,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",10,[[]]],[11,"from","santa::before_level","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"into_any","","",11,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"vzip","","",11,[[]]],[11,"from","santa::buildings","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_any","","",12,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",12,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"into_any_arc","","",12,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_any","","",13,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"into_any_arc","","",13,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",13,[[]]],[11,"from","santa::controls","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_any","","",14,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"into_any_arc","","",14,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",14,[[]]],[11,"from","santa::game","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_any","","",15,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",15,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",15,[[],["any",8]]],[11,"as_any_mut","","",15,[[],["any",8]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"into_any","","",16,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",16,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"into_any_arc","","",16,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"into_any","","",17,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",17,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",17,[[],["any",8]]],[11,"as_any_mut","","",17,[[],["any",8]]],[11,"into_any_arc","","",17,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",17,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"into_any","","",29,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",29,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",29,[[],["any",8]]],[11,"as_any_mut","","",29,[[],["any",8]]],[11,"into_any_arc","","",29,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",29,[[]]],[11,"from","santa::levels","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"into_any","","",18,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",18,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"into_any_arc","","",18,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",18,[[]]],[11,"from","santa::music","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_any","","",19,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",19,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",19,[[],["any",8]]],[11,"as_any_mut","","",19,[[],["any",8]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"into_any","","",20,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",20,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",20,[[],["any",8]]],[11,"as_any_mut","","",20,[[],["any",8]]],[11,"vzip","","",20,[[]]],[11,"from","santa::player","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_any","","",21,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",21,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",21,[[],["any",8]]],[11,"as_any_mut","","",21,[[],["any",8]]],[11,"into_any_arc","","",21,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"into_any","","",22,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",22,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",22,[[],["any",8]]],[11,"as_any_mut","","",22,[[],["any",8]]],[11,"into_any_arc","","",22,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"into_any","","",23,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",23,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",23,[[],["any",8]]],[11,"as_any_mut","","",23,[[],["any",8]]],[11,"into_any_arc","","",23,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",23,[[]]],[11,"from","santa::session","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"into_any","","",24,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",24,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",24,[[],["any",8]]],[11,"as_any_mut","","",24,[[],["any",8]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_any","","",25,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",25,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",25,[[],["any",8]]],[11,"as_any_mut","","",25,[[],["any",8]]],[11,"into_any_arc","","",25,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",25,[[]]],[11,"from","santa::title","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"into_any","","",26,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",26,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",26,[[],["any",8]]],[11,"as_any_mut","","",26,[[],["any",8]]],[11,"into_any_arc","","",26,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"into_any","","",27,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",27,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",27,[[],["any",8]]],[11,"as_any_mut","","",27,[[],["any",8]]],[11,"into_any_arc","","",27,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",27,[[]]],[11,"from","santa::vehicles","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"into_any","","",28,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",28,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",28,[[],["any",8]]],[11,"as_any_mut","","",28,[[],["any",8]]],[11,"into_any_arc","","",28,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",28,[[]]],[11,"clone","santa::buildings","",13,[[],["bldgstate",4]]],[11,"clone","santa::levels","",18,[[],["level",3]]],[11,"clone","santa::player","",22,[[],["on",4]]],[11,"default","santa::music","",19,[[],["music",3]]],[11,"eq","santa::levels","",18,[[["level",3]],["bool",15]]],[11,"ne","","",18,[[["level",3]],["bool",15]]],[11,"eq","santa::player","",22,[[["on",4]],["bool",15]]],[11,"ne","","",22,[[["on",4]],["bool",15]]],[11,"event","santa::before_level","",11,[[["simpleapp",3],["eventctx",3]],[["simpleapp",3],["transition",4]]]],[11,"draw","","",11,[[["gfxctx",3],["simpleapp",3]]]],[11,"event","santa::game","",15,[[["simpleapp",3],["eventctx",3]],[["simpleapp",3],["transition",4]]]],[11,"draw","","",15,[[["gfxctx",3],["simpleapp",3]]]],[11,"on_destroy","","",15,[[["simpleapp",3],["eventctx",3]]]],[11,"on_click","santa::after_level","",0,[[["panel",3],["simpleapp",3],["eventctx",3],["str",15]],[["simpleapp",3],["transition",4]]]],[11,"other_event","","",0,[[["simpleapp",3],["eventctx",3]],[["simpleapp",3],["transition",4]]]],[11,"draw","","",0,[[["gfxctx",3],["simpleapp",3]]]],[11,"on_click","","",1,[[["panel",3],["simpleapp",3],["eventctx",3],["str",15]],[["simpleapp",3],["transition",4]]]],[11,"other_event","","",1,[[["simpleapp",3],["eventctx",3]],[["simpleapp",3],["transition",4]]]],[11,"draw","","",1,[[["gfxctx",3],["simpleapp",3]]]],[11,"on_click","santa::title","",26,[[["panel",3],["simpleapp",3],["eventctx",3],["str",15]],[["simpleapp",3],["transition",4]]]],[11,"other_event","","",26,[[["simpleapp",3],["eventctx",3]],[["simpleapp",3],["transition",4]]]],[11,"draw","","",26,[[["gfxctx",3],["simpleapp",3]]]],[11,"on_click","","",27,[[["panel",3],["simpleapp",3],["eventctx",3],["str",15]],[["simpleapp",3],["transition",4]]]],[11,"other_event","","",27,[[["simpleapp",3],["eventctx",3]],[["simpleapp",3],["transition",4]]]],[11,"draw","","",27,[[["gfxctx",3],["simpleapp",3]]]],[11,"deserialize","santa::levels","",18,[[],["result",4]]],[11,"deserialize","santa::session","",24,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"serialize","santa::levels","",18,[[],["result",4]]],[11,"serialize","santa::session","",24,[[],["result",4]]],[11,"serialize","","",25,[[],["result",4]]],[11,"has_zorder","santa::game","",29,[[["simpleapp",3]],["bool",15]]],[11,"make_legend","","",29,[[["simpleapp",3],["eventctx",3]],["widget",3]]]],"p":[[3,"Strategize"],[3,"Results"],[3,"RecordPath"],[3,"Animator"],[3,"Animation"],[4,"Effect"],[13,"Scale"],[13,"FollowPath"],[13,"Flash"],[3,"SnowEffect"],[3,"Snowflake"],[3,"Picker"],[3,"Buildings"],[4,"BldgState"],[3,"InstantController"],[3,"Game"],[3,"GameState"],[3,"EnergylessArrow"],[3,"Level"],[3,"Music"],[3,"Inner"],[3,"Player"],[4,"On"],[3,"BuildingsAlongRoad"],[3,"Session"],[3,"ColorScheme"],[3,"TitleScreen"],[3,"Credits"],[3,"Vehicle"],[3,"MinimapController"]]},\
"sim":{"doc":"The sim crate runs a traffic simulation on top of the …","i":[[0,"analytics","sim","",null,null],[3,"Analytics","sim::analytics","As a simulation runs, different pieces emit Events. The …",null,null],[12,"road_thruput","","",0,null],[12,"intersection_thruput","","",0,null],[12,"traffic_signal_thruput","","",0,null],[12,"demand","","Most fields in Analytics are cumulative over time, but …",0,null],[12,"bus_arrivals","","",0,null],[12,"passengers_boarding","","For each passenger boarding, how long did they wait at …",0,null],[12,"passengers_alighting","","",0,null],[12,"started_trips","","",0,null],[12,"finished_trips","","Finish time, ID, mode, trip duration if successful (or …",0,null],[12,"trip_intersection_delays","","Records how long was spent waiting at each turn …",0,null],[12,"lane_speed_percentage","","Records the average speed/maximum speed for each lane If …",0,null],[12,"trip_log","","",0,null],[12,"intersection_delays","","Only for traffic signals. The u8 is the movement index …",0,null],[12,"parking_lane_changes","","Per parking lane or lot, when does a spot become filled …",0,null],[12,"parking_lot_changes","","",0,null],[12,"alerts","","",0,null],[12,"record_anything","","For benchmarking, we may want to disable collecting data.",0,null],[11,"new","","",0,[[["bool",15]],["analytics",3]]],[11,"event","","",0,[[["event",4],["map",3],["time",3]]]],[11,"record_demand","","",0,[[["path",3],["map",3]]]],[11,"finished_trip_time","","Ignores the current time. Returns None for cancelled …",0,[[["tripid",3]],[["option",4],["duration",3]]]],[11,"both_finished_trips","","Returns pairs of trip times for finished trips in both …",0,[[["analytics",3],["time",3]],["vec",3]]],[11,"get_trip_phases","","If calling on prebaked Analytics, be careful to pass in …",0,[[["map",3],["tripid",3]],[["vec",3],["tripphase",3]]]],[11,"get_all_trip_phases","","",0,[[],[["btreemap",3],["vec",3],["tripid",3]]]],[11,"active_agents","","",0,[[["time",3]],["vec",3]]],[11,"parking_lane_availability","","Returns the free spots over time",0,[[["usize",15],["time",3],["laneid",3]],["vec",3]]],[11,"parking_lot_availability","","",0,[[["usize",15],["time",3],["parkinglotid",3]],["vec",3]]],[11,"parking_spot_availability","","",0,[[["usize",15],["vec",3],["time",3]],["vec",3]]],[3,"TripPhase","","",null,null],[12,"start_time","","",1,null],[12,"end_time","","",1,null],[12,"path","","",1,null],[12,"has_path_req","","",1,null],[12,"phase_type","","",1,null],[3,"TimeSeriesCount","","See https://github.com/a-b-street/abstreet/issues/85",null,null],[12,"counts","","(Road or intersection, type, hour block) -> count for …",2,null],[12,"raw","","Very expensive to store, so it\'s optional. But useful to …",2,null],[11,"new","","",2,[[],["timeseriescount",3]]],[11,"record","","",2,[[["usize",15],["time",3],["agenttype",4]]]],[11,"total_for","","",2,[[],["usize",15]]],[11,"total_for_with_agent_types","","",2,[[["btreeset",3],["agenttype",4]],["usize",15]]],[11,"total_for_by_time","","",2,[[["time",3]],["usize",15]]],[11,"all_total_counts","","",2,[[["btreeset",3]],["counter",3]]],[11,"count_per_hour","","",2,[[["time",3]],["vec",3]]],[11,"raw_throughput","","",2,[[["time",3]],["vec",3]]],[3,"Window","","",null,null],[12,"times","","",3,null],[12,"window_size","","",3,null],[11,"new","","",3,[[["duration",3]],["window",3]]],[11,"add","","Returns the count at time",3,[[["time",3]],["usize",15]]],[11,"count","","Grab the count at this time, but don\'t add a new time",3,[[["time",3]],["usize",15]]],[0,"cap","sim","",null,null],[6,"ZoneIdx","sim::cap","",null,null],[3,"CapSimState","","Dynamically limit driving trips that meet different …",null,null],[12,"road_to_zone","","",4,null],[12,"zones","","",4,null],[12,"cancel_drivers_delay_threshold","","",4,null],[12,"delay_trips_instead_of_cancelling","","",4,null],[4,"CapResult","","",null,null],[13,"OK","","",5,null],[13,"Reroute","","",5,null],[13,"Cancel","","",5,null],[12,"reason","sim::cap::CapResult","",6,null],[13,"Delay","sim::cap","",5,null],[3,"Zone","","",null,null],[12,"cap","","",7,null],[12,"entered_in_last_hour","","",7,null],[12,"hour_started","","",7,null],[11,"new","","",4,[[["map",3],["simoptions",3]],["capsimstate",3]]],[11,"maybe_cap_path","","Before the driving portion of a trip begins, check that …",4,[[["map",3],["time",3],["path",3],["carid",3],["intersectionsimstate",3]],["capresult",4]]],[11,"get_cap_counter","","",4,[[["roadid",3]],["usize",15]]],[11,"trip_under_cap","","",4,[[["path",3],["time",3],["map",3],["carid",3]],["bool",15]]],[11,"path_crosses_delay","","",4,[[["path",3],["time",3],["map",3],["intersectionsimstate",3]],["option",4]]],[0,"events","sim","",null,null],[4,"Event","sim::events","As a simulation runs, different systems emit Events. This …",null,null],[13,"CarReachedParkingSpot","","",8,null],[13,"CarLeftParkingSpot","","",8,null],[13,"BusArrivedAtStop","","",8,null],[13,"BusDepartedFromStop","","",8,null],[13,"PassengerBoardsTransit","","How long waiting at the stop?",8,null],[13,"PassengerAlightsTransit","","",8,null],[13,"PersonEntersBuilding","","",8,null],[13,"PersonLeavesBuilding","","",8,null],[13,"PersonLeavesMap","","None if cancelled",8,null],[13,"PersonEntersMap","","",8,null],[13,"PedReachedParkingSpot","","",8,null],[13,"BikeStoppedAtSidewalk","","",8,null],[13,"AgentEntersTraversable","","If the agent is a transit vehicle, then include a count …",8,null],[13,"IntersectionDelayMeasured","","TripID, TurnID (Where the delay was encountered), Time …",8,null],[13,"TripFinished","","",8,null],[12,"trip","sim::events::Event","",9,null],[12,"mode","","",9,null],[12,"total_time","","",9,null],[12,"blocked_time","","",9,null],[13,"TripCancelled","sim::events","",8,null],[13,"TripPhaseStarting","","",8,null],[13,"LaneSpeedPercentage","","TripID, LaneID (Where the delay was encountered), Average …",8,null],[13,"PathAmended","","Just use for parking replanning. Not happy about copying …",8,null],[13,"Alert","","",8,null],[4,"AlertLocation","","",null,null],[13,"Nil","","",10,null],[13,"Intersection","","",10,null],[13,"Person","","",10,null],[13,"Building","","",10,null],[4,"TripPhaseType","","",null,null],[13,"Driving","","",11,null],[13,"Walking","","",11,null],[13,"Biking","","",11,null],[13,"Parking","","",11,null],[13,"WaitingForBus","","",11,null],[13,"RidingBus","","What stop did they board at?",11,null],[13,"Cancelled","","",11,null],[13,"Finished","","",11,null],[13,"DelayedStart","","",11,null],[11,"describe","","",11,[[["map",3]],["string",3]]],[0,"make","sim","Everything needed to setup a simulation. …",null,null],[0,"activity_model","sim::make","An activity model creates \\\"people\\\" that follow a set …",null,null],[5,"create_prole","sim::make::activity_model","",null,[[["tripendpoint",4],["map",3],["xorshiftrng",3]],[["personspec",3],["result",6]]]],[5,"select_trip_mode","","",null,[[["xorshiftrng",3],["distance",3]],["tripmode",4]]],[5,"rand_time","","",null,[[["xorshiftrng",3],["time",3]],["time",3]]],[0,"external","sim::make","Some users of the API …",null,null],[3,"ExternalPerson","sim::make::external","",null,null],[12,"origin","","",12,null],[12,"trips","","",12,null],[3,"ExternalTrip","","",null,null],[12,"departure","","",13,null],[12,"destination","","",13,null],[12,"mode","","",13,null],[12,"purpose","","",13,null],[4,"ExternalTripEndpoint","","",null,null],[13,"TripEndpoint","","",14,null],[13,"Position","","",14,null],[11,"import","","Import external scenario data. The main difference …",12,[[["map",3],["bool",15],["vec",3],["externalperson",3]],[["vec",3],["result",6]]]],[3,"MapBorders","","Lists all border intersections of the map, broken down by …",null,null],[12,"incoming_walking","","",15,null],[12,"incoming_driving","","",15,null],[12,"incoming_biking","","",15,null],[12,"outgoing_walking","","",15,null],[12,"outgoing_driving","","",15,null],[12,"outgoing_biking","","",15,null],[11,"new","","",15,[[["map",3]],["mapborders",3]]],[11,"for_mode","","Returns the (incoming, outgoing) borders for the …",15,[[["tripmode",4]]]],[0,"generator","sim::make","This is a much more primitive way to randomly generate …",null,null],[3,"ScenarioGenerator","sim::make::generator","",null,null],[12,"scenario_name","","",16,null],[12,"only_seed_buses","","",16,null],[12,"spawn_over_time","","",16,null],[12,"border_spawn_over_time","","",16,null],[3,"SpawnOverTime","","",null,null],[12,"num_agents","","",17,null],[12,"start_time","","",17,null],[12,"stop_time","","",17,null],[12,"goal","","",17,null],[12,"percent_driving","","",17,null],[12,"percent_biking","","",17,null],[12,"percent_use_transit","","",17,null],[3,"BorderSpawnOverTime","","",null,null],[12,"num_peds","","",18,null],[12,"num_cars","","",18,null],[12,"num_bikes","","",18,null],[12,"percent_use_transit","","",18,null],[12,"start_time","","",18,null],[12,"stop_time","","",18,null],[12,"start_from_border","","",18,null],[12,"goal","","",18,null],[11,"generate","","",16,[[["xorshiftrng",3],["map",3],["timer",3]],["scenario",3]]],[11,"small_run","","",16,[[["map",3]],["scenariogenerator",3]]],[11,"empty","","",16,[[["str",15]],["scenariogenerator",3]]],[11,"spawn_agent","","",17,[[["xorshiftrng",3],["map",3],["scenario",3]]]],[11,"spawn","","",18,[[["xorshiftrng",3],["map",3],["tripmode",4],["scenario",3]]]],[5,"rand_time","","",null,[[["xorshiftrng",3],["time",3]],["time",3]]],[0,"load","sim::make","",null,null],[3,"SimFlags","sim::make::load","SimFlags specifies a simulation to setup.",null,null],[12,"load","","A path to some file.",19,null],[12,"modifiers","","",19,null],[12,"rng_seed","","",19,null],[12,"opts","","",19,null],[18,"RNG_SEED","","",19,null],[11,"from_args","","",19,[[["cmdargs",3]],["simflags",3]]],[11,"for_test","","",19,[[["str",15]],["simflags",3]]],[11,"make_rng","","",19,[[],["xorshiftrng",3]]],[11,"load_synchronously","","Loads a map and simulation. Not appropriate for use in …",19,[[["timer",3]]]],[0,"modifier","sim::make","",null,null],[4,"ScenarioModifier","sim::make::modifier","Transforms an existing Scenario before instantiating it.",null,null],[13,"RepeatDays","","",20,null],[13,"ChangeMode","","",20,null],[12,"pct_ppl","sim::make::modifier::ScenarioModifier","",21,null],[12,"departure_filter","","",21,null],[12,"from_modes","","",21,null],[12,"to_mode","","If <code>None</code>, then just cancel the trip.",21,null],[13,"AddExtraTrips","sim::make::modifier","Scenario name",20,null],[11,"apply","","If this modifies scenario_name, then that means prebaked …",20,[[["map",3],["scenario",3]],["scenario",3]]],[11,"describe","","",20,[[],["string",3]]],[5,"repeat_days","","",null,[[["usize",15],["scenario",3]],["scenario",3]]],[0,"scenario","sim::make","",null,null],[3,"Scenario","sim::make::scenario","A Scenario describes all the input to a simulation. …",null,null],[12,"scenario_name","","",22,null],[12,"map_name","","",22,null],[12,"people","","",22,null],[12,"only_seed_buses","","None means seed all buses. Otherwise the route name must …",22,null],[3,"PersonSpec","","",null,null],[12,"orig_id","","Just used for debugging",23,null],[12,"origin","","The first trip starts here",23,null],[12,"trips","","Each trip starts at the destination of the previous trip",23,null],[3,"IndividTrip","","",null,null],[12,"depart","","",24,null],[12,"destination","","",24,null],[12,"mode","","",24,null],[12,"purpose","","",24,null],[12,"cancelled","","",24,null],[12,"modified","","Did a ScenarioModifier affect this?",24,null],[11,"new","","",24,[[["trippurpose",4],["tripendpoint",4],["time",3],["tripmode",4]],["individtrip",3]]],[4,"TripPurpose","","Lifted from Seattle\'s Soundcast model, but seems general …",null,null],[13,"Home","","",25,null],[13,"Work","","",25,null],[13,"School","","",25,null],[13,"Escort","","",25,null],[13,"PersonalBusiness","","",25,null],[13,"Shopping","","",25,null],[13,"Meal","","",25,null],[13,"Social","","",25,null],[13,"Recreation","","",25,null],[13,"Medical","","",25,null],[13,"ParkAndRideTransfer","","",25,null],[11,"instantiate","","",22,[[["xorshiftrng",3],["map",3],["sim",3],["timer",3]]]],[11,"instantiate_without_retries","","If retry_if_no_room is false, any vehicles that fail to …",22,[[["xorshiftrng",3],["map",3],["sim",3],["bool",15],["timer",3]]]],[11,"save","","",22,[[]]],[11,"empty","","",22,[[["map",3],["str",15]],["scenario",3]]],[11,"rand_car","","",22,[[["xorshiftrng",3]],["vehiclespec",3]]],[11,"rand_bike","","",22,[[["xorshiftrng",3]],["vehiclespec",3]]],[11,"rand_dist","","",22,[[["xorshiftrng",3],["distance",3]],["distance",3]]],[11,"rand_speed","","",22,[[["xorshiftrng",3],["speed",3]],["speed",3]]],[11,"rand_ped_speed","","",22,[[["xorshiftrng",3]],["speed",3]]],[11,"count_parked_cars_per_bldg","","",22,[[],[["counter",3],["buildingid",3]]]],[11,"remove_weird_schedules","","",22,[[],["scenario",3]]],[5,"seed_parked_cars","","",null,[[["xorshiftrng",3],["map",3],["sim",3],["vec",3],["timer",3]]]],[5,"find_spot_near_building","","",null,[[["map",3],["btreemap",3],["buildingid",3]],[["option",4],["parkingspot",4]]]],[11,"check_schedule","","Verify that a person\'s trips make sense",23,[[],["result",6]]],[11,"get_vehicles","","",23,[[["xorshiftrng",3]]]],[0,"spawner","sim::make","Intermediate structures used to instantiate a Scenario. …",null,null],[3,"StartTripArgs","sim::make::spawner","We need to remember a few things from scenario …",null,null],[12,"retry_if_no_room","","",26,null],[12,"use_vehicle","","",26,null],[4,"TripSpec","","",null,null],[13,"VehicleAppearing","","Can be used to spawn from a border or anywhere for …",27,null],[12,"start_pos","sim::make::spawner::TripSpec","",28,null],[12,"goal","","",28,null],[12,"use_vehicle","","This must be a currently off-map vehicle owned by the …",28,null],[12,"retry_if_no_room","","",28,null],[13,"SpawningFailure","sim::make::spawner","Something went wrong spawning the trip.",27,null],[12,"use_vehicle","sim::make::spawner::TripSpec","",29,null],[12,"error","","",29,null],[13,"UsingParkedCar","sim::make::spawner","",27,null],[12,"car","sim::make::spawner::TripSpec","This must be a currently parked vehicle owned by the …",30,null],[12,"start_bldg","","",30,null],[12,"goal","","",30,null],[13,"JustWalking","sim::make::spawner","",27,null],[12,"start","sim::make::spawner::TripSpec","",31,null],[12,"goal","","",31,null],[13,"UsingBike","sim::make::spawner","",27,null],[12,"bike","sim::make::spawner::TripSpec","",32,null],[12,"start","","",32,null],[12,"goal","","",32,null],[13,"UsingTransit","sim::make::spawner","",27,null],[12,"start","sim::make::spawner::TripSpec","",33,null],[12,"goal","","",33,null],[12,"route","","",33,null],[12,"stop1","","",33,null],[12,"maybe_stop2","","",33,null],[11,"to_plan","sim::make::spawner","",27,[[["map",3]]]],[11,"maybe_new","","Turn an origin/destination pair and mode into a specific …",27,[[["tripendpoint",4],["map",3],["tripmode",4],["option",4],["carid",3],["bool",15]],[["tripspec",4],["result",6]]]],[4,"TripEndpoint","","Specifies where a trip begins or ends.",null,null],[13,"Bldg","","",34,null],[13,"Border","","",34,null],[13,"SuddenlyAppear","","Used for interactive spawning, tests, etc. For now, only …",34,null],[11,"path_req","","Figure out a single PathRequest that goes between two …",34,[[["tripendpoint",4],["map",3],["tripmode",4]],[["pathrequest",3],["option",4]]]],[11,"start_sidewalk_spot","","",34,[[["map",3]],[["sidewalkspot",3],["result",6]]]],[11,"end_sidewalk_spot","","",34,[[["map",3]],[["sidewalkspot",3],["result",6]]]],[11,"driving_goal","","",34,[[["pathconstraints",4],["map",3]],[["drivinggoal",4],["result",6]]]],[11,"pos","","",34,[[["bool",15],["map",3],["tripmode",4]],[["position",3],["option",4]]]],[11,"pt","","Returns a point representing where this endpoint is.",34,[[["map",3]],["pt2d",3]]],[5,"fork_rng","sim::make","Need to explain this trick -- basically keeps consistency …",null,[[["xorshiftrng",3]],["xorshiftrng",3]]],[0,"mechanics","sim","",null,null],[0,"car","sim::mechanics","",null,null],[3,"Car","sim::mechanics::car","Represents a single vehicle. Note \\\"car\\\" is a misnomer; it …",null,null],[12,"vehicle","","",35,null],[12,"state","","",35,null],[12,"router","","",35,null],[12,"trip_and_person","","None for buses",35,null],[12,"started_at","","",35,null],[12,"total_blocked_time","","",35,null],[12,"last_steps","","In reverse order -- most recently left is first. The sum …",35,null],[11,"crossing_state","","Assumes the current head of the path is the thing to …",35,[[["distance",3],["time",3],["map",3]],["carstate",4]]],[11,"crossing_state_with_end_dist","","",35,[[["map",3],["distanceinterval",3],["time",3]],["carstate",4]]],[11,"get_draw_car","","",35,[[["map",3],["time",3],["transitsimstate",3],["distance",3]],["drawcarinput",3]]],[11,"is_parking","","",35,[[],["bool",15]]],[4,"CarState","","See …",null,null],[13,"Crossing","","",36,null],[13,"Queued","","",36,null],[12,"blocked_since","sim::mechanics::car::CarState","",37,null],[13,"WaitingToAdvance","sim::mechanics::car","",36,null],[12,"blocked_since","sim::mechanics::car::CarState","",38,null],[13,"Unparking","sim::mechanics::car","Where\'s the front of the car while this is happening?",36,null],[13,"Parking","","",36,null],[13,"IdlingAtStop","","",36,null],[11,"get_end_time","","",36,[[],["time",3]]],[11,"time_spent_waiting","","",36,[[["time",3]],["duration",3]]],[0,"driving","sim::mechanics","",null,null],[17,"TIME_TO_WAIT_AT_BUS_STOP","sim::mechanics::driving","",null,null],[17,"BLIND_RETRY_TO_CREEP_FORWARDS","","",null,null],[17,"BLIND_RETRY_TO_REACH_END_DIST","","",null,null],[3,"DrivingSimState","","Simulates vehicles!",null,null],[12,"cars","","",39,null],[12,"queues","","",39,null],[12,"events","","",39,null],[12,"waiting_to_spawn","","",39,null],[12,"recalc_lanechanging","","",39,null],[12,"handle_uber_turns","","",39,null],[12,"time_to_unpark_onstreet","","",39,null],[12,"time_to_park_onstreet","","",39,null],[12,"time_to_unpark_offstreet","","",39,null],[12,"time_to_park_offstreet","","",39,null],[11,"new","","",39,[[["map",3],["simoptions",3]],["drivingsimstate",3]]],[11,"start_car_on_lane","","None if it worked, otherwise returns the CreateCar …",39,[[["ctx",3],["createcar",3],["time",3]],[["createcar",3],["option",4]]]],[11,"vehicle_waiting_to_spawn","","If start_car_on_lane fails and a retry is scheduled, this …",39,[[["option",4],["position",3],["personid",3],["carid",3]]]],[11,"update_car","","State transitions for this car:",39,[[["time",3],["transitsimstate",3],["ctx",3],["carid",3],["tripmanager",3],["walkingsimstate",3]]]],[11,"update_car_without_distances","","",39,[[["car",3],["time",3],["transitsimstate",3],["ctx",3]],["bool",15]]],[11,"update_car_with_distances","","",39,[[["usize",15],["time",3],["transitsimstate",3],["ctx",3],["tripmanager",3],["car",3],["walkingsimstate",3],["vec",3]],["bool",15]]],[11,"delete_car","","Abruptly remove a vehicle from the simulation. They may …",39,[[["ctx",3],["carid",3],["time",3]],["vehicle",3]]],[11,"delete_car_internal","","",39,[[["usize",15],["car",3],["vec",3],["time",3],["ctx",3]]]],[11,"update_laggy_head","","",39,[[["ctx",3],["carid",3],["time",3]]]],[11,"trim_last_steps","","",39,[[["usize",15],["car",3],["time",3],["ctx",3]]]],[11,"collect_events","","",39,[[],[["event",4],["vec",3]]]],[11,"handle_live_edits","","",39,[[["map",3]]]],[11,"get_unzoomed_agents","","Note the ordering of results is non-deterministic!",39,[[["map",3],["time",3]],[["vec",3],["unzoomedagent",3]]]],[11,"does_car_exist","","",39,[[["carid",3]],["bool",15]]],[11,"get_all_draw_cars","","Note the ordering of results is non-deterministic!",39,[[["map",3],["time",3],["transitsimstate",3]],[["vec",3],["drawcarinput",3]]]],[11,"get_single_draw_car","","This is about as expensive as get_draw_cars_on.",39,[[["map",3],["time",3],["transitsimstate",3],["carid",3]],[["drawcarinput",3],["option",4]]]],[11,"get_draw_cars_on","","",39,[[["map",3],["time",3],["transitsimstate",3],["traversable",4]],[["vec",3],["drawcarinput",3]]]],[11,"debug_car","","",39,[[["carid",3]]]],[11,"debug_car_ui","","",39,[[["carid",3]],["string",3]]],[11,"debug_lane","","",39,[[["laneid",3]]]],[11,"agent_properties","","",39,[[["carid",3],["time",3]],["agentproperties",3]]],[11,"get_path","","",39,[[["carid",3]],[["option",4],["path",3]]]],[11,"get_all_driving_paths","","",39,[[],[["path",3],["vec",3]]]],[11,"trace_route","","",39,[[["carid",3],["time",3],["map",3]],[["polyline",3],["option",4]]]],[11,"percent_along_route","","",39,[[["carid",3]],["f64",15]]],[11,"get_owner_of_car","","",39,[[["carid",3]],[["personid",3],["option",4]]]],[11,"target_lane_penalty","","",39,[[["laneid",3]]]],[11,"find_trips_to_edited_parking","","",39,[[["parkingspot",4],["btreeset",3]],["vec",3]]],[11,"find_vehicles_affected_by_live_edits","","Finds vehicles that\'re laggy heads on affected parts of …",39,[[["hashset",3],["btreeset",3]],["vec",3]]],[11,"all_waiting_people","","",39,[[["time",3],["btreemap",3]]]],[11,"debug_queue_lengths","","",39,[[["laneid",3]],["option",4]]],[11,"get_blocked_by_graph","","",39,[[["intersectionsimstate",3],["map",3],["time",3]],[["agentid",4],["btreemap",3]]]],[11,"get_car_front","","",39,[[["car",3],["time",3]],["distance",3]]],[11,"wants_to_overtake","","Does the given car want to over-take the vehicle in front …",39,[[["car",3]],[["option",4],["carid",3]]]],[0,"intersection","sim::mechanics","",null,null],[17,"WAIT_AT_STOP_SIGN","sim::mechanics::intersection","",null,null],[17,"WAIT_BEFORE_YIELD_AT_TRAFFIC_SIGNAL","","",null,null],[3,"IntersectionSimState","","Manages conflicts at intersections. When an agent has …",null,null],[12,"state","","",40,null],[12,"use_freeform_policy_everywhere","","",40,null],[12,"dont_block_the_box","","",40,null],[12,"break_turn_conflict_cycles","","",40,null],[12,"handle_uber_turns","","",40,null],[12,"disable_turn_conflicts","","",40,null],[12,"blocked_by","","",40,null],[12,"events","","",40,null],[12,"total_repeat_requests","","",40,null],[12,"not_allowed_requests","","",40,null],[12,"blocked_by_someone_requests","","",40,null],[3,"State","","",null,null],[12,"id","","",41,null],[12,"accepted","","",41,null],[12,"waiting","","",41,null],[12,"reserved","","",41,null],[12,"uber_turn_neighbors","","",41,null],[12,"signal","","",41,null],[3,"SignalState","","",null,null],[12,"current_stage","","",42,null],[12,"stage_ends_at","","",42,null],[12,"extensions_count","","",42,null],[3,"Request","","",null,null],[12,"agent","","",43,null],[12,"turn","","",43,null],[11,"new","","",40,[[["scheduler",3],["map",3],["simoptions",3]],["intersectionsimstate",3]]],[11,"turn_finished","","",40,[[["scheduler",3],["agentid",4],["time",3],["turnid",3],["map",3],["bool",15]]]],[11,"cancel_request","","For deleting cars",40,[[["agentid",4],["turnid",3]]]],[11,"space_freed","","",40,[[["scheduler",3],["map",3],["time",3],["intersectionid",3]]]],[11,"vehicle_gone","","Vanished at border, stopped biking, etc -- a vehicle …",40,[[["carid",3]]]],[11,"agent_deleted_mid_turn","","",40,[[["agentid",4],["turnid",3]]]],[11,"wakeup_waiting","","",40,[[["scheduler",3],["map",3],["time",3],["intersectionid",3]]]],[11,"update_intersection","","This is only triggered for traffic signals.",40,[[["scheduler",3],["map",3],["time",3],["intersectionid",3]]]],[11,"maybe_start_turn","","For cars: The head car calls this when they\'re at the end …",40,[[["scheduler",3],["agentid",4],["turnid",3],["speed",3],["time",3],["map",3],["option",4]],["bool",15]]],[11,"collect_events","","",40,[[],[["event",4],["vec",3]]]],[11,"handle_live_edited_traffic_signals","","",40,[[["scheduler",3],["map",3],["time",3]]]],[11,"handle_live_edits","","",40,[[["map",3]]]],[11,"nobody_headed_towards","","",40,[[["laneid",3],["intersectionid",3]],["bool",15]]],[11,"debug","","",40,[[["map",3],["intersectionid",3]]]],[11,"get_accepted_agents","","",40,[[["intersectionid",3]],["vec",3]]],[11,"get_waiting_agents","","",40,[[["intersectionid",3]],["vec",3]]],[11,"delayed_intersections","","Returns intersections with travelers waiting for at least …",40,[[["duration",3],["time",3]],["vec",3]]],[11,"current_stage_and_remaining_time","","",40,[[["time",3],["intersectionid",3]]]],[11,"describe_stats","","",40,[[],[["vec",3],["string",3]]]],[11,"populate_blocked_by","","",40,[[["map",3],["time",3],["btreemap",3],["hashmap",3],["fixedmap",3]]]],[11,"check_for_conflicts_before_uber_turn","","See if any agent is currently performing a turn that …",40,[[["uberturn",3],["map",3]],[["option",4],["agentid",4]]]],[11,"stop_sign_policy","","",40,[[["controlstopsign",3],["map",3],["request",3],["time",3],["scheduler",3]],["bool",15]]],[11,"traffic_signal_policy","","",40,[[["scheduler",3],["map",3],["request",3],["controltrafficsignal",3],["speed",3],["time",3],["option",4]],["bool",15]]],[11,"handle_accepted_conflicts","","",40,[[["map",3],["request",3],["option",4],["option",4]],["bool",15]]],[11,"detect_conflict_cycle","","",40,[[["carid",3]],[["option",4],["hashset",3]]]],[11,"new","","",42,[[["scheduler",3],["map",3],["intersectionid",3],["time",3]],["signalstate",3]]],[5,"allow_block_the_box","","",null,[[["intersection",3]],["bool",15]]],[0,"parking","sim::mechanics","",null,null],[8,"ParkingSim","sim::mechanics::parking","Manages the state of parked cars. There are two …",null,null],[10,"handle_live_edits","","Returns any cars that got very abruptly evicted from …",44,[[["map",3]]]],[10,"get_free_onstreet_spots","","",44,[[["laneid",3]],[["vec",3],["parkingspot",4]]]],[10,"get_free_offstreet_spots","","",44,[[["buildingid",3]],[["vec",3],["parkingspot",4]]]],[10,"get_free_lot_spots","","",44,[[["parkinglotid",3]],[["vec",3],["parkingspot",4]]]],[10,"reserve_spot","","",44,[[["parkingspot",4],["carid",3]]]],[10,"unreserve_spot","","Needed when abruptly deleting a car, in case they\'re …",44,[[["carid",3]]]],[10,"remove_parked_car","","",44,[[["parkedcar",3]]]],[10,"add_parked_car","","",44,[[["parkedcar",3]]]],[10,"get_draw_cars","","",44,[[["map",3],["laneid",3]],[["vec",3],["drawcarinput",3]]]],[10,"get_draw_cars_in_lots","","",44,[[["map",3],["laneid",3]],[["vec",3],["drawcarinput",3]]]],[10,"get_draw_car","","",44,[[["carid",3],["map",3]],[["drawcarinput",3],["option",4]]]],[10,"canonical_pt","","There\'s no DrawCarInput for cars parked offstreet, so we …",44,[[["carid",3],["map",3]],[["pt2d",3],["option",4]]]],[10,"get_all_draw_cars","","",44,[[["map",3]],[["vec",3],["drawcarinput",3]]]],[10,"is_free","","",44,[[["parkingspot",4]],["bool",15]]],[10,"get_car_at_spot","","",44,[[["parkingspot",4]],[["option",4],["parkedcar",3]]]],[10,"get_all_free_spots","","The vehicle\'s front is currently at the given …",44,[[["vehicle",3],["map",3],["buildingid",3],["position",3]],["vec",3]]],[10,"spot_to_driving_pos","","",44,[[["vehicle",3],["parkingspot",4],["map",3]],["position",3]]],[10,"spot_to_sidewalk_pos","","",44,[[["parkingspot",4],["map",3]],["position",3]]],[10,"get_owner_of_car","","",44,[[["carid",3]],[["personid",3],["option",4]]]],[10,"lookup_parked_car","","",44,[[["carid",3]],[["option",4],["parkedcar",3]]]],[10,"get_all_parking_spots","","(Filled, available)",44,[[]]],[10,"path_to_free_parking_spot","","Unrealistically assumes the driver has knowledge of …",44,[[["vehicle",3],["map",3],["buildingid",3],["laneid",3]],["option",4]]],[10,"collect_events","","",44,[[],[["event",4],["vec",3]]]],[10,"all_parked_car_positions","","",44,[[["map",3]],["vec",3]]],[10,"bldg_to_parked_cars","","",44,[[["buildingid",3]],[["carid",3],["vec",3]]]],[4,"ParkingSimState","","",null,null],[13,"Normal","","",45,null],[13,"Infinite","","",45,null],[11,"new","","Counterintuitive: any spots located in blackholes are …",45,[[["bool",15],["map",3]],["parkingsimstate",4]]],[11,"is_infinite","","",45,[[],["bool",15]]],[3,"NormalParkingSimState","","",null,null],[12,"parked_cars","","",46,null],[12,"occupants","","",46,null],[12,"reserved_spots","","",46,null],[12,"onstreet_lanes","","",46,null],[12,"driving_to_parking_lanes","","",46,null],[12,"num_spots_per_offstreet","","",46,null],[12,"driving_to_offstreet","","",46,null],[12,"num_spots_per_lot","","",46,null],[12,"driving_to_lots","","",46,null],[12,"events","","",46,null],[11,"new","","",46,[[["map",3]],["normalparkingsimstate",3]]],[3,"ParkingLane","","",null,null],[12,"parking_lane","","",47,null],[12,"driving_lane","","",47,null],[12,"sidewalk","","",47,null],[12,"spot_dist_along","","",47,null],[11,"new","","",47,[[["lane",3],["map",3]],[["parkinglane",3],["option",4]]]],[11,"dist_along_for_car","","",47,[[["usize",15],["vehicle",3],["map",3]],["distance",3]]],[11,"spots","","",47,[[],[["vec",3],["parkingspot",4]]]],[3,"InfiniteParkingSimState","","This assigns infinite private parking to all buildings …",null,null],[12,"parked_cars","","",48,null],[12,"occupants","","",48,null],[12,"reserved_spots","","",48,null],[12,"driving_to_offstreet","","",48,null],[12,"blackholed_building_redirects","","",48,null],[12,"events","","",48,null],[11,"new","","",48,[[["map",3]],["infiniteparkingsimstate",3]]],[11,"get_free_bldg_spot","","",48,[[["buildingid",3]],["parkingspot",4]]],[0,"queue","sim::mechanics","",null,null],[3,"Queue","sim::mechanics::queue","A Queue of vehicles on a single lane or turn. No …",null,null],[12,"id","","",49,null],[12,"cars","","",49,null],[12,"laggy_head","","This car\'s back is still partly in this queue.",49,null],[12,"geom_len","","",49,null],[12,"reserved_length","","When a car\'s turn is accepted, reserve the vehicle length …",49,null],[11,"new","","",49,[[["map",3],["traversable",4]],["queue",3]]],[11,"get_last_car_position","","",49,[[["hashmap",3],["time",3],["fixedmap",3]],["option",4]]],[11,"get_car_positions","","Farthest along (greatest distance) is first.",49,[[["hashmap",3],["time",3],["fixedmap",3]],["vec",3]]],[11,"inner_get_last_car_position","","",49,[[["vec",3],["time",3],["btreeset",3],["hashmap",3],["option",4],["fixedmap",3]],["option",4]]],[11,"get_idx_to_insert_car","","",49,[[["time",3],["hashmap",3],["distance",3],["fixedmap",3]],[["usize",15],["option",4]]]],[11,"try_to_reserve_entry","","If true, there\'s room and the car must actually start the …",49,[[["bool",15],["car",3]],["bool",15]]],[11,"is_overflowing","","",49,[[],["bool",15]]],[11,"room_for_car","","",49,[[["car",3]],["bool",15]]],[11,"free_reserved_space","","",49,[[["car",3]]]],[11,"target_lane_penalty","","",49,[[]]],[11,"get_leader","","Find the vehicle in front of the specified input. None if …",49,[[["carid",3]],[["option",4],["carid",3]]]],[5,"validate_positions","","",null,[[["traversable",4],["time",3],["fixedmap",3],["vec",3]]]],[5,"dump_cars","","",null,[[["vec",3],["time",3],["traversable",4],["fixedmap",3]]]],[0,"walking","sim::mechanics","",null,null],[17,"TIME_TO_START_BIKING","sim::mechanics::walking","",null,null],[17,"TIME_TO_FINISH_BIKING","","",null,null],[3,"WalkingSimState","","Simulates pedestrians. Unlike vehicles, pedestrians can …",null,null],[12,"peds","","",50,null],[12,"peds_per_traversable","","",50,null],[12,"events","","",50,null],[11,"new","","",50,[[],["walkingsimstate",3]]],[11,"spawn_ped","","",50,[[["scheduler",3],["map",3],["time",3],["createpedestrian",3]]]],[11,"get_draw_ped","","",50,[[["pedestrianid",3],["time",3],["map",3]],[["drawpedestrianinput",3],["option",4]]]],[11,"get_all_draw_peds","","",50,[[["map",3],["time",3]],[["drawpedestrianinput",3],["vec",3]]]],[11,"update_ped","","",50,[[["time",3],["transitsimstate",3],["ctx",3],["pedestrianid",3],["tripmanager",3]]]],[11,"ped_boarded_bus","","",50,[[["pedestrianid",3],["time",3]]]],[11,"delete_ped","","Abruptly remove a pedestrian from the simulation. They …",50,[[["ctx",3],["pedestrianid",3]]]],[11,"debug_ped","","",50,[[["pedestrianid",3]]]],[11,"agent_properties","","",50,[[["map",3],["pedestrianid",3],["time",3]],["agentproperties",3]]],[11,"trace_route","","",50,[[["pedestrianid",3],["time",3],["map",3]],[["polyline",3],["option",4]]]],[11,"get_path","","",50,[[["pedestrianid",3]],[["option",4],["path",3]]]],[11,"get_unzoomed_agents","","",50,[[["map",3],["time",3]],[["vec",3],["unzoomedagent",3]]]],[11,"get_draw_peds_on","","",50,[[["map",3],["time",3],["traversable",4]]]],[11,"collect_events","","",50,[[],[["event",4],["vec",3]]]],[11,"find_trips_to_parking","","",50,[[["parkedcar",3],["vec",3]],["vec",3]]],[11,"all_waiting_people","","",50,[[["time",3],["btreemap",3]]]],[11,"populate_commuter_counts","","",50,[[["commutersvehiclescounts",3]]]],[3,"Pedestrian","","",null,null],[12,"id","","",51,null],[12,"state","","",51,null],[12,"speed","","",51,null],[12,"total_blocked_time","","",51,null],[12,"started_at","","",51,null],[12,"path","","",51,null],[12,"start","","",51,null],[12,"goal","","",51,null],[12,"trip","","",51,null],[12,"person","","",51,null],[11,"crossing_state","","",51,[[["distance",3],["time",3],["map",3]],["pedstate",4]]],[11,"get_dist_along","","",51,[[["map",3],["time",3]],["distance",3]]],[11,"get_draw_ped","","",51,[[["map",3],["time",3]],["drawpedestrianinput",3]]],[11,"maybe_transition","","",51,[[["multimap",3],["map",3],["time",3],["intersectionsimstate",3],["vec",3],["scheduler",3]],["bool",15]]],[4,"PedState","","",null,null],[13,"Crossing","","",52,null],[13,"WaitingToTurn","","The Distance is either 0 or the current traversable\'s …",52,null],[13,"LeavingBuilding","","",52,null],[13,"EnteringBuilding","","",52,null],[13,"LeavingParkingLot","","",52,null],[13,"EnteringParkingLot","","",52,null],[13,"StartingToBike","","",52,null],[13,"FinishingBiking","","",52,null],[13,"WaitingForBus","","",52,null],[11,"get_end_time","","",52,[[],["time",3]]],[11,"time_spent_waiting","","",52,[[["time",3]],["duration",3]]],[5,"find_crowds","","",null,[[["vec",3],["pedcrowdlocation",4]]]],[0,"pandemic","sim","An experimental SEIR model by …",null,null],[0,"pandemic","sim::pandemic","",null,null],[3,"PandemicModel","sim::pandemic::pandemic","",null,null],[12,"pop","","",53,null],[12,"bldgs","","",53,null],[12,"bus_stops","","",53,null],[12,"buses","","",53,null],[12,"person_to_bus","","",53,null],[12,"rng","","",53,null],[12,"initialized","","",53,null],[4,"Cmd","","",null,null],[13,"BecomeHospitalized","","",54,null],[13,"BecomeQuarantined","","",54,null],[11,"new","","",53,[[["xorshiftrng",3]],["pandemicmodel",3]]],[11,"initialize","","",53,[[["scheduler",3],["vec",3]]]],[11,"count_sane","","",53,[[],["usize",15]]],[11,"count_exposed","","",53,[[],["usize",15]]],[11,"count_infected","","",53,[[],["usize",15]]],[11,"count_recovered","","",53,[[],["usize",15]]],[11,"count_dead","","",53,[[],["usize",15]]],[11,"count_total","","",53,[[],["usize",15]]],[11,"handle_event","","",53,[[["scheduler",3],["time",3],["event",4]]]],[11,"handle_cmd","","",53,[[["scheduler",3],["cmd",4],["time",3]]]],[11,"get_time","","",53,[[["personid",3]],[["time",3],["option",4]]]],[11,"is_sane","","",53,[[["personid",3]],["bool",15]]],[11,"is_infectious","","",53,[[["personid",3]],["bool",15]]],[11,"is_exposed","","",53,[[["personid",3]],["bool",15]]],[11,"is_recovered","","",53,[[["personid",3]],["bool",15]]],[11,"is_dead","","",53,[[["personid",3]],["bool",15]]],[11,"infectious_contact","","",53,[[["personid",3]],[["personid",3],["option",4]]]],[11,"transmission","","",53,[[["scheduler",3],["time",3],["personid",3],["vec",3]]]],[11,"transition","","",53,[[["personid",3],["scheduler",3],["time",3]]]],[11,"become_exposed","","",53,[[["scheduler",3],["time",3],["personid",3],["duration",3]]]],[3,"SharedSpace","","",null,null],[12,"occupants","","",55,null],[11,"new","","",55,[[],["sharedspace",3]]],[11,"person_enters_space","","",55,[[["personid",3],["time",3]]]],[11,"person_leaves_space","","",55,[[["personid",3],["time",3]],[["option",4],["vec",3]]]],[3,"AnyTime","sim::pandemic","",null,null],[12,"0","","",56,null],[11,"inner_seconds","","",56,[[],["f64",15]]],[11,"is_finite","","",56,[[],["bool",15]]],[4,"StateEvent","","",null,null],[13,"Exposition","","",57,null],[13,"Incubation","","",57,null],[13,"Hospitalization","","",57,null],[13,"Recovery","","",57,null],[13,"Death","","",57,null],[3,"Event","","",null,null],[12,"s","","",58,null],[12,"p_hosp","","",58,null],[12,"p_death","","",58,null],[12,"t","","",58,null],[11,"next","","",58,[[["xorshiftrng",3],["anytime",3]],["state",4]]],[4,"State","","",null,null],[13,"Sane","","",59,null],[13,"Exposed","","",59,null],[13,"Infectious","","",59,null],[13,"Hospitalized","","",59,null],[13,"Recovered","","",59,null],[13,"Dead","","",59,null],[18,"T_INF","","",59,null],[18,"T_INC","","",59,null],[18,"R_0","","",59,null],[18,"E_RATIO","","",59,null],[18,"I_RATIO","","",59,null],[11,"ini_infectious_ratio","","",59,[[],["f64",15]]],[11,"ini_exposed_ratio","","",59,[[],["f64",15]]],[11,"new","","",59,[[["f64",15]]]],[11,"get_time_exp","","",59,[[["f64",15],["xorshiftrng",3]],["duration",3]]],[11,"get_time_normal","","",59,[[["f64",15],["xorshiftrng",3]],["duration",3]]],[11,"is_sane","","",59,[[],["bool",15]]],[11,"is_exposed","","",59,[[],["bool",15]]],[11,"is_infectious","","",59,[[],["bool",15]]],[11,"is_recovered","","",59,[[],["bool",15]]],[11,"is_dead","","",59,[[],["bool",15]]],[11,"get_time","","",59,[[],[["time",3],["option",4]]]],[11,"get_event_time","","",59,[[],[["option",4],["anytime",3]]]],[11,"next_default","","",59,[[["xorshiftrng",3],["anytime",3]],["option",4]]],[11,"next","","",59,[[["xorshiftrng",3],["anytime",3]],["option",4]]],[11,"start","","",59,[[["xorshiftrng",3],["duration",3],["anytime",3]],["result",6]]],[0,"recorder","sim","",null,null],[3,"TrafficRecorder","sim::recorder","Records trips beginning and ending at a specified set of …",null,null],[12,"capture_points","","",60,null],[12,"trips","","",60,null],[12,"seen_trips","","",60,null],[11,"new","","",60,[[["btreeset",3],["intersectionid",3]],["trafficrecorder",3]]],[11,"handle_event","","",60,[[["map",3],["time",3],["tripmanager",3],["event",4],["drivingsimstate",3]]]],[11,"num_recorded_trips","","",60,[[],["usize",15]]],[11,"save","","",60,[[["map",3]]]],[0,"render","sim","Intermediate structures so that sim and game crates don\'t …",null,null],[3,"DrawPedestrianInput","sim::render","",null,null],[12,"id","","",61,null],[12,"pos","","",61,null],[12,"facing","","",61,null],[12,"waiting_for_turn","","",61,null],[12,"preparing_bike","","",61,null],[12,"waiting_for_bus","","",61,null],[12,"on","","",61,null],[12,"person","","",61,null],[3,"DrawPedCrowdInput","","",null,null],[12,"low","","",62,null],[12,"high","","",62,null],[12,"members","","",62,null],[12,"location","","",62,null],[4,"PedCrowdLocation","","",null,null],[13,"Sidewalk","","bool is contraflow",63,null],[13,"BldgDriveway","","",63,null],[13,"LotDriveway","","",63,null],[3,"DrawCarInput","","",null,null],[12,"id","","",64,null],[12,"waiting_for_turn","","",64,null],[12,"status","","",64,null],[12,"show_parking_intent","","",64,null],[12,"on","","Front of the car",64,null],[12,"partly_on","","Possibly the rest",64,null],[12,"label","","",64,null],[12,"person","","None means a bus or parked car. Note parked cars do NOT …",64,null],[12,"body","","",64,null],[4,"CarStatus","","",null,null],[13,"Moving","","",65,null],[13,"Parked","","",65,null],[3,"UnzoomedAgent","","",null,null],[12,"id","","",66,null],[12,"pos","","",66,null],[12,"person","","None means a bus.",66,null],[12,"parking","","True only for cars currently looking for parking. I don\'t …",66,null],[0,"router","sim","For vehicles only, not pedestrians. Follows a Path from …",null,null],[3,"Router","sim::router","",null,null],[12,"path","","Front is always the current step",67,null],[12,"goal","","",67,null],[12,"owner","","",67,null],[4,"ActionAtEnd","","",null,null],[13,"VanishAtBorder","","",68,null],[13,"StartParking","","",68,null],[13,"GotoLaneEnd","","",68,null],[13,"StopBiking","","",68,null],[13,"BusAtStop","","",68,null],[13,"GiveUpOnParking","","",68,null],[4,"Goal","","",null,null],[13,"ParkNearBuilding","","Spot and cached distance along the last driving lane",69,null],[12,"target","sim::router::Goal","",70,null],[12,"spot","","",70,null],[12,"stuck_end_dist","","No parking available at all!",70,null],[12,"started_looking","","",70,null],[13,"EndAtBorder","sim::router","",69,null],[12,"end_dist","sim::router::Goal","",71,null],[12,"i","","",71,null],[13,"BikeThenStop","sim::router","",69,null],[12,"goal","sim::router::Goal","",72,null],[13,"FollowBusRoute","sim::router","",69,null],[12,"end_dist","sim::router::Goal","",73,null],[11,"end_at_border","sim::router","",67,[[["intersectionid",3],["path",3],["carid",3],["distance",3]],["router",3]]],[11,"vanish_bus","","",67,[[["carid",3],["map",3],["position",3]],["router",3]]],[11,"park_near","","",67,[[["path",3],["carid",3],["buildingid",3]],["router",3]]],[11,"bike_then_stop","","",67,[[["path",3],["carid",3],["sidewalkspot",3]],["router",3]]],[11,"follow_bus_route","","",67,[[["path",3],["carid",3]],["router",3]]],[11,"head","","",67,[[],["traversable",4]]],[11,"next","","",67,[[],["traversable",4]]],[11,"maybe_next","","",67,[[],[["option",4],["traversable",4]]]],[11,"last_step","","",67,[[],["bool",15]]],[11,"get_end_dist","","",67,[[],["distance",3]]],[11,"get_path","","",67,[[],["path",3]]],[11,"advance","","Returns the step just finished",67,[[["vehicle",3],["map",3],["parkingsimstate",4],["vec",3],["option",4]],["traversable",4]]],[11,"maybe_handle_end","","Called when the car is Queued at the last step, or when …",67,[[["vehicle",3],["map",3],["parkingsimstate",4],["vec",3],["distance",3],["option",4]],[["actionatend",4],["option",4]]]],[11,"opportunistically_lanechange","","",67,[[["hashmap",3],["map",3],["bool",15]]]],[11,"is_parking","","",67,[[],["bool",15]]],[11,"get_parking_spot_goal","","",67,[[],[["parkingspot",4],["option",4]]]],[0,"scheduler","sim","",null,null],[4,"Command","sim::scheduler","",null,null],[13,"SpawnCar","","If true, retry when there\'s no room to spawn somewhere",74,null],[13,"SpawnPed","","",74,null],[13,"StartTrip","","",74,null],[13,"UpdateCar","","",74,null],[13,"UpdateLaggyHead","","Distinguish this from UpdateCar to avoid confusing things",74,null],[13,"UpdatePed","","",74,null],[13,"UpdateIntersection","","",74,null],[13,"Callback","","",74,null],[13,"Pandemic","","",74,null],[13,"StartBus","","The Time is redundant, just used to dedupe commands",74,null],[11,"update_agent","","",74,[[["agentid",4]],["command",4]]],[11,"to_type","","",74,[[],["commandtype",4]]],[11,"to_simple_type","","",74,[[],["simplecommandtype",4]]],[4,"CommandType","","A smaller version of Command that satisfies many more …",null,null],[13,"StartTrip","","",75,null],[13,"Car","","",75,null],[13,"CarLaggyHead","","",75,null],[13,"Ped","","",75,null],[13,"Intersection","","",75,null],[13,"Callback","","",75,null],[13,"Pandemic","","",75,null],[13,"StartBus","","",75,null],[4,"SimpleCommandType","","A more compressed form of CommandType, just used for …",null,null],[13,"StartTrip","","",76,null],[13,"Car","","",76,null],[13,"CarLaggyHead","","",76,null],[13,"Ped","","",76,null],[13,"Intersection","","",76,null],[13,"Callback","","",76,null],[13,"Pandemic","","",76,null],[13,"StartBus","","",76,null],[3,"Item","","",null,null],[12,"time","","",77,null],[12,"cmd_type","","",77,null],[3,"Scheduler","","The priority queue driving the discrete event simulation. …",null,null],[12,"items","","",78,null],[12,"queued_commands","","",78,null],[12,"latest_time","","",78,null],[12,"last_time","","",78,null],[12,"delta_times","","",78,null],[12,"cmd_type_counts","","",78,null],[11,"new","","",78,[[],["scheduler",3]]],[11,"push","","",78,[[["command",4],["time",3]]]],[11,"update","","",78,[[["command",4],["time",3]]]],[11,"cancel","","",78,[[["command",4]]]],[11,"peek_next_time","","This next command might\'ve actually been rescheduled to a …",78,[[],[["time",3],["option",4]]]],[11,"get_last_time","","",78,[[],["time",3]]],[11,"get_next","","This API is safer than handing out a batch of items at a …",78,[[],[["option",4],["command",4]]]],[11,"describe_stats","","",78,[[],[["vec",3],["string",3]]]],[0,"sim","sim","",null,null],[0,"queries","sim::sim","All sorts of read-only queries about a simulation",null,null],[3,"AgentProperties","sim::sim::queries","",null,null],[12,"total_time","","",79,null],[12,"waiting_here","","",79,null],[12,"total_waiting","","",79,null],[12,"dist_crossed","","",79,null],[12,"total_dist","","",79,null],[4,"DelayCause","","Why is an agent delayed? If there are multiple reasons, …",null,null],[13,"Agent","","Queued behind someone, or someone\'s doing a conflicting …",80,null],[13,"Intersection","","Waiting on a traffic signal to change, or pausing at a …",80,null],[17,"BLIND_RETRY_TO_SPAWN","sim::sim","",null,null],[3,"Sim","","The Sim ties together all the pieces of the simulation. …",null,null],[12,"driving","","",81,null],[12,"parking","","",81,null],[12,"walking","","",81,null],[12,"intersections","","",81,null],[12,"transit","","",81,null],[12,"cap","","",81,null],[12,"trips","","",81,null],[12,"pandemic","","",81,null],[12,"scheduler","","",81,null],[12,"time","","",81,null],[12,"map_name","","",81,null],[12,"edits_name","","",81,null],[12,"run_name","","",81,null],[12,"step_count","","",81,null],[12,"highlighted_people","","",81,null],[12,"analytics","","",81,null],[12,"recorder","","",81,null],[12,"alerts","","",81,null],[3,"Ctx","","",null,null],[12,"parking","","",82,null],[12,"intersections","","",82,null],[12,"cap","","",82,null],[12,"scheduler","","",82,null],[12,"map","","",82,null],[12,"handling_live_edits","","If present, live map edits are being processed, and the …",82,null],[3,"SimOptions","","Options controlling the traffic simulation.",null,null],[12,"run_name","","Used to distinguish savestates for running the same …",83,null],[12,"use_freeform_policy_everywhere","","Ignore all stop signs and traffic signals, instead using …",83,null],[12,"dont_block_the_box","","Prevent a vehicle from starting a turn if their target …",83,null],[12,"recalc_lanechanging","","As a vehicle follows a route, opportunistically make …",83,null],[12,"break_turn_conflict_cycles","","If a cycle of vehicles depending on each other to turn is …",83,null],[12,"handle_uber_turns","","Enable experimental handling for \\\"uber-turns\\\", sequences …",83,null],[12,"enable_pandemic_model","","Enable an experimental SEIR pandemic model.",83,null],[12,"alerts","","When a warning is encountered during simulation, …",83,null],[12,"infinite_parking","","Ignore parking data in the map and instead treat every …",83,null],[12,"disable_turn_conflicts","","Allow all agents to immediately proceed into an …",83,null],[12,"cancel_drivers_delay_threshold","","If present, cancel any driving trips who will pass …",83,null],[12,"delay_trips_instead_of_cancelling","","Instead of cancelling trips due to …",83,null],[12,"skip_analytics","","Don\'t collect any analytics. Only useful for benchmarking …",83,null],[11,"from_args","","",83,[[["cmdargs",3],["u64",15]],["simoptions",3]]],[4,"AlertHandler","","",null,null],[13,"Print","","Just print the alert to STDOUT",84,null],[13,"Block","","Print the alert to STDOUT and don\'t proceed until the UI …",84,null],[13,"Silence","","Don\'t do anything",84,null],[11,"new","","",83,[[["str",15]],["simoptions",3]]],[11,"new","","",81,[[["map",3],["simoptions",3]],["sim",3]]],[11,"spawn_trips","","",81,[[["vec",3],["map",3],["timer",3]]]],[11,"get_free_onstreet_spots","","",81,[[["laneid",3]],[["vec",3],["parkingspot",4]]]],[11,"get_free_offstreet_spots","","",81,[[["buildingid",3]],[["vec",3],["parkingspot",4]]]],[11,"get_free_lot_spots","","",81,[[["parkinglotid",3]],[["vec",3],["parkingspot",4]]]],[11,"get_all_parking_spots","","(Filled, available)",81,[[]]],[11,"bldg_to_parked_cars","","",81,[[["buildingid",3]],[["carid",3],["vec",3]]]],[11,"walking_path_to_nearest_parking_spot","","",81,[[["map",3],["buildingid",3]],[["path",3],["option",4]]]],[11,"new_person","","",81,[[["tripendpoint",4],["speed",3],["vehiclespec",3],["option",4],["origpersonid",3],["vec",3]],["person",3]]],[11,"seed_parked_car","","",81,[[["vehicle",3],["parkingspot",4]]]],[11,"seed_bus_route","","",81,[[["busroute",3]]]],[11,"start_bus","","",81,[[["busroute",3],["map",3]]]],[11,"set_name","","",81,[[["string",3]]]],[11,"minimal_step","","",81,[[["map",3],["duration",3],["option",4]],["bool",15]]],[11,"do_step","","",81,[[["map",3],["time",3],["command",4],["option",4]],["bool",15]]],[11,"dispatch_events","","",81,[[["event",4],["map",3],["vec",3]]]],[11,"timed_step","","",81,[[["map",3],["option",4],["duration",3],["timer",3]]]],[11,"tiny_step","","",81,[[["map",3],["option",4]]]],[11,"time_limited_step","","",81,[[["map",3],["duration",3],["option",4]]]],[11,"dump_before_abort","","",81,[[]]],[11,"save_dir","","",81,[[],["string",3]]],[11,"save_path","","",81,[[["time",3]],["string",3]]],[11,"save","","",81,[[],["string",3]]],[11,"find_previous_savestate","","",81,[[["time",3]],[["option",4],["string",3]]]],[11,"find_next_savestate","","",81,[[["time",3]],[["option",4],["string",3]]]],[11,"load_savestate","","",81,[[["timer",3],["string",3]],[["sim",3],["result",6]]]],[11,"handle_live_edited_traffic_signals","","",81,[[["map",3]]]],[11,"handle_live_edits","","Respond to arbitrary map edits without resetting the …",81,[[["map",3]]]],[11,"find_trips_affected_by_live_edits","","Returns (trips affected, number of parked cars displaced)",81,[[["map",3]]]],[11,"delete_car","","",81,[[["carid",3],["map",3]]]],[11,"clear_alerts","","",81,[[],["vec",3]]],[8,"SimCallback","","",null,null],[10,"run","","",85,[[["map",3],["sim",3]],["bool",15]]],[11,"is","","Returns true if the trait object wraps an object of type …",85,[[],["bool",15]]],[11,"downcast","","Returns a boxed object from a boxed trait object if the …",85,[[["box",3]],[["result",4],["box",3],["box",3]]]],[11,"downcast_rc","","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …",85,[[["rc",3]],[["rc",3],["result",4],["rc",3]]]],[11,"downcast_ref","","Returns a reference to the object within the trait object …",85,[[],["option",4]]],[11,"downcast_mut","","Returns a mutable reference to the object within the …",85,[[],["option",4]]],[11,"set_periodic_callback","","Only one at a time supported.",81,[[["duration",3]]]],[11,"unset_periodic_callback","","",81,[[]]],[11,"record_traffic_for","","",81,[[["btreeset",3],["intersectionid",3]]]],[11,"num_recorded_trips","","",81,[[],[["usize",15],["option",4]]]],[11,"save_recorded_traffic","","",81,[[["map",3]]]],[11,"set_highlighted_people","","",81,[[["btreeset",3],["personid",3]]]],[0,"transit","sim","",null,null],[6,"StopIdx","sim::transit","",null,null],[3,"Stop","","",null,null],[12,"id","","",86,null],[12,"driving_pos","","",86,null],[12,"next_stop","","",86,null],[3,"Route","","",null,null],[12,"stops","","",87,null],[12,"start","","",87,null],[12,"end_at_border","","",87,null],[12,"active_vehicles","","",87,null],[3,"Bus","","",null,null],[12,"car","","",88,null],[12,"route","","",88,null],[12,"passengers","","Where does each passenger want to deboard?",88,null],[12,"state","","",88,null],[4,"BusState","","",null,null],[13,"DrivingToStop","","",89,null],[13,"AtStop","","",89,null],[13,"DrivingOffMap","","",89,null],[13,"Done","","",89,null],[3,"TransitSimState","","Manages public transit vehicles (buses and trains) that …",null,null],[12,"buses","","",90,null],[12,"routes","","",90,null],[12,"peds_waiting","","waiting at => (ped, route, bound for, started waiting)",90,null],[12,"events","","",90,null],[11,"new","","",90,[[["map",3]],["transitsimstate",3]]],[11,"create_empty_route","","Returns the path for the first leg.",90,[[["busroute",3],["map",3]],["path",3]]],[11,"bus_created","","",90,[[["carid",3],["busrouteid",3]]]],[11,"bus_arrived_at_stop","","If true, the bus is idling. If false, the bus actually …",90,[[["time",3],["ctx",3],["carid",3],["tripmanager",3],["walkingsimstate",3]],["bool",15]]],[11,"bus_departed_from_stop","","",90,[[["carid",3],["map",3]],["router",3]]],[11,"ped_waiting_for_bus","","Returns the bus if the pedestrian boarded immediately.",90,[[["time",3],["pedestrianid",3],["busrouteid",3],["busstopid",3],["tripid",3],["map",3],["option",4],["personid",3]],[["option",4],["carid",3]]]],[11,"collect_events","","",90,[[],[["event",4],["vec",3]]]],[11,"get_passengers","","",90,[[["carid",3]],["vec",3]]],[11,"bus_route","","",90,[[["carid",3]],["busrouteid",3]]],[11,"buses_for_route","","also stop idx that the bus is coming from",90,[[["busrouteid",3]],["vec",3]]],[11,"active_vehicles","","(buses, trains)",90,[[]]],[11,"get_people_waiting_at_stop","","",90,[[["busstopid",3]],["vec",3]]],[11,"get_unzoomed_transit_riders","","",90,[[["map",3],["time",3],["drivingsimstate",3]],[["vec",3],["unzoomedagent",3]]]],[0,"trips","sim","",null,null],[3,"TripManager","sim::trips","Manages people, each of which executes some trips through …",null,null],[12,"trips","","",91,null],[12,"people","","",91,null],[12,"active_trip_mode","","",91,null],[12,"unfinished_trips","","",91,null],[12,"car_id_counter","","",91,null],[12,"events","","",91,null],[11,"new","","",91,[[],["tripmanager",3]]],[11,"new_person","","",91,[[["tripendpoint",4],["speed",3],["vehiclespec",3],["option",4],["origpersonid",3],["vec",3]],["person",3]]],[11,"new_car_id","","",91,[[],["usize",15]]],[11,"new_trip","","",91,[[["personid",3],["tripinfo",3]],["tripid",3]]],[11,"start_trip","","",91,[[["starttripargs",3],["time",3],["ctx",3],["tripid",3]]]],[11,"collect_events","","",91,[[],[["event",4],["vec",3]]]],[11,"agent_starting_trip_leg","","This is idempotent to handle the case of cars retrying …",91,[[["agentid",4],["tripid",3]]]],[11,"car_reached_parking_spot","","",91,[[["distance",3],["time",3],["ctx",3],["carid",3],["parkingspot",4],["duration",3]]]],[11,"ped_reached_parking_spot","","",91,[[["distance",3],["time",3],["ctx",3],["pedestrianid",3],["parkingspot",4],["duration",3]]]],[11,"ped_ready_to_bike","","",91,[[["distance",3],["time",3],["ctx",3],["pedestrianid",3],["sidewalkspot",3],["duration",3]]]],[11,"bike_reached_end","","",91,[[["distance",3],["time",3],["ctx",3],["carid",3],["sidewalkspot",3],["duration",3]]]],[11,"ped_reached_building","","",91,[[["time",3],["buildingid",3],["ctx",3],["pedestrianid",3],["duration",3],["distance",3]]]],[11,"ped_reached_bus_stop","","If no route is returned, the pedestrian boarded a bus …",91,[[["distance",3],["time",3],["transitsimstate",3],["ctx",3],["pedestrianid",3],["duration",3],["busstopid",3]],[["option",4],["busrouteid",3]]]],[11,"ped_boarded_bus","","",91,[[["walkingsimstate",3],["time",3],["pedestrianid",3],["carid",3],["duration",3]]]],[11,"person_left_bus","","",91,[[["time",3],["personid",3],["carid",3],["ctx",3]]]],[11,"ped_reached_border","","",91,[[["time",3],["intersectionid",3],["ctx",3],["pedestrianid",3],["duration",3],["distance",3]]]],[11,"transit_rider_reached_border","","",91,[[["time",3],["personid",3],["carid",3],["ctx",3]]]],[11,"car_or_bike_reached_border","","",91,[[["time",3],["intersectionid",3],["ctx",3],["carid",3],["duration",3],["distance",3]]]],[11,"trip_finished","","",91,[[["ctx",3],["time",3],["tripid",3]]]],[11,"start_delayed_trip","","",91,[[["personid",3],["ctx",3],["time",3]]]],[11,"spawn_ped","","",91,[[["time",3],["ctx",3],["sidewalkspot",3],["tripid",3]]]],[11,"maybe_spawn_car","","Returns the path to use if successful. Caller is …",91,[[["time",3],["ctx",3],["carid",3],["pathrequest",3],["tripid",3]],[["path",3],["result",6]]]],[11,"cancel_unstarted_trip","","Cancel a trip before it\'s started. The person will stay …",91,[[["string",3],["tripid",3]]]],[11,"cancel_trip","","Cancel a trip after it\'s started. The person will be …",91,[[["option",4],["vehicle",3],["time",3],["ctx",3],["string",3],["tripid",3]]]],[11,"trip_abruptly_cancelled","","",91,[[["agentid",4],["tripid",3]]]],[11,"active_agents","","",91,[[],[["agentid",4],["vec",3]]]],[11,"active_agents_and_trips","","",91,[[],["btreemap",3]]],[11,"num_active_agents","","",91,[[],["usize",15]]],[11,"trip_to_agent","","",91,[[["tripid",3]],[["agentid",4],["tripresult",4]]]],[11,"agent_to_trip","","This will be None for parked cars and buses. Should …",91,[[["agentid",4]],[["tripid",3],["option",4]]]],[11,"debug_trip","","",91,[[["agentid",4]]]],[11,"num_trips","","",91,[[]]],[11,"num_agents","","",91,[[["transitsimstate",3]],[["counter",3],["agenttype",4]]]],[11,"num_commuters_vehicles","","",91,[[["transitsimstate",3],["walkingsimstate",3]],["commutersvehiclescounts",3]]],[11,"num_ppl","","",91,[[]]],[11,"is_done","","",91,[[],["bool",15]]],[11,"trip_info","","",91,[[["tripid",3]],["tripinfo",3]]],[11,"all_trip_info","","",91,[[],["vec",3]]],[11,"finished_trip_details","","",91,[[["tripid",3]],["option",4]]],[11,"trip_blocked_time","","",91,[[["tripid",3]],["duration",3]]],[11,"bldg_to_people","","",91,[[["buildingid",3]],[["personid",3],["vec",3]]]],[11,"get_person","","",91,[[["personid",3]],[["person",3],["option",4]]]],[11,"get_all_people","","",91,[[],["vec",3]]],[11,"trip_to_person","","",91,[[["tripid",3]],[["personid",3],["option",4]]]],[11,"all_arrivals_at_border","","",91,[[["intersectionid",3]],["vec",3]]],[11,"generate_scenario","","Recreate the Scenario from an instantiated simulation. …",91,[[["map",3],["string",3]],["scenario",3]]],[3,"Trip","","",null,null],[12,"id","","",92,null],[12,"info","","",92,null],[12,"started","","",92,null],[12,"finished_at","","",92,null],[12,"total_blocked_time","","",92,null],[12,"total_distance","","",92,null],[12,"legs","","",92,null],[12,"person","","",92,null],[3,"TripInfo","","",null,null],[12,"departure","","Scheduled departure; the start may be delayed if the …",93,null],[12,"mode","","",93,null],[12,"start","","",93,null],[12,"end","","",93,null],[12,"purpose","","",93,null],[12,"modified","","Did a ScenarioModifier apply to this?",93,null],[12,"capped","","Was this trip affected by a congestion cap?",93,null],[12,"cancellation_reason","","",93,null],[11,"assert_walking_leg","","",92,[[["sidewalkspot",3]]]],[4,"TripLeg","","These don\'t specify where the leg starts, since it might …",null,null],[13,"Walk","","",94,null],[13,"Drive","","A person may own many vehicles, so specify which they use",94,null],[13,"RideBus","","Maybe get off at a stop, maybe ride off-map",94,null],[4,"TripMode","","",null,null],[13,"Walk","","",95,null],[13,"Bike","","",95,null],[13,"Transit","","",95,null],[13,"Drive","","",95,null],[11,"all","","",95,[[],[["vec",3],["tripmode",4]]]],[11,"verb","","",95,[[],["str",15]]],[11,"ongoing_verb","","",95,[[],["str",15]]],[11,"noun","","",95,[[],["str",15]]],[11,"to_constraints","","",95,[[],["pathconstraints",4]]],[11,"from_constraints","","",95,[[["pathconstraints",4]],["tripmode",4]]],[4,"TripResult","","",null,null],[13,"Ok","","",96,null],[13,"ModeChange","","",96,null],[13,"TripDone","","",96,null],[13,"TripDoesntExist","","",96,null],[13,"TripNotStarted","","",96,null],[13,"TripCancelled","","",96,null],[11,"ok","","",96,[[],["option",4]]],[11,"propagate_error","","",96,[[],["tripresult",4]]],[3,"Person","","",null,null],[12,"id","","",97,null],[12,"orig_id","","",97,null],[12,"home","","",97,null],[12,"trips","","",97,null],[12,"state","","",97,null],[12,"ped","","",97,null],[12,"ped_speed","","",97,null],[12,"vehicles","","Both cars and bikes",97,null],[12,"delayed_trips","","",97,null],[12,"on_bus","","",97,null],[11,"get_vehicle","","",97,[[["carid",3]],["vehicle",3]]],[4,"PersonState","","",null,null],[13,"Trip","","",98,null],[13,"Inside","","",98,null],[13,"OffMap","","",98,null],[3,"CommutersVehiclesCounts","","The number of active vehicles and commuters, broken into …",null,null],[12,"walking_commuters","","",99,null],[12,"walking_to_from_transit","","",99,null],[12,"walking_to_from_car","","",99,null],[12,"walking_to_from_bike","","",99,null],[12,"cyclists","","",99,null],[12,"sov_drivers","","",99,null],[12,"buses","","",99,null],[12,"trains","","",99,null],[12,"bus_riders","","",99,null],[12,"train_riders","","",99,null],[4,"CarStatus","sim","",null,null],[13,"Moving","","",65,null],[13,"Parked","","",65,null],[3,"DrawCarInput","","",null,null],[12,"id","","",64,null],[12,"waiting_for_turn","","",64,null],[12,"status","","",64,null],[12,"show_parking_intent","","",64,null],[12,"on","","Front of the car",64,null],[12,"partly_on","","Possibly the rest",64,null],[12,"label","","",64,null],[12,"person","","None means a bus or parked car. Note parked cars do NOT …",64,null],[12,"body","","",64,null],[3,"DrawPedCrowdInput","","",null,null],[12,"low","","",62,null],[12,"high","","",62,null],[12,"members","","",62,null],[12,"location","","",62,null],[3,"DrawPedestrianInput","","",null,null],[12,"id","","",61,null],[12,"pos","","",61,null],[12,"facing","","",61,null],[12,"waiting_for_turn","","",61,null],[12,"preparing_bike","","",61,null],[12,"waiting_for_bus","","",61,null],[12,"on","","",61,null],[12,"person","","",61,null],[4,"PedCrowdLocation","","",null,null],[13,"Sidewalk","","bool is contraflow",63,null],[13,"BldgDriveway","","",63,null],[13,"LotDriveway","","",63,null],[3,"UnzoomedAgent","","",null,null],[12,"id","","",66,null],[12,"pos","","",66,null],[12,"person","","None means a bus.",66,null],[12,"parking","","True only for cars currently looking for parking. I don\'t …",66,null],[3,"Analytics","","As a simulation runs, different pieces emit Events. The …",null,null],[12,"road_thruput","","",0,null],[12,"intersection_thruput","","",0,null],[12,"traffic_signal_thruput","","",0,null],[12,"demand","","Most fields in Analytics are cumulative over time, but …",0,null],[12,"bus_arrivals","","",0,null],[12,"passengers_boarding","","For each passenger boarding, how long did they wait at …",0,null],[12,"passengers_alighting","","",0,null],[12,"started_trips","","",0,null],[12,"finished_trips","","Finish time, ID, mode, trip duration if successful (or …",0,null],[12,"trip_intersection_delays","","Records how long was spent waiting at each turn …",0,null],[12,"lane_speed_percentage","","Records the average speed/maximum speed for each lane If …",0,null],[12,"trip_log","","",0,null],[12,"intersection_delays","","Only for traffic signals. The u8 is the movement index …",0,null],[12,"parking_lane_changes","","Per parking lane or lot, when does a spot become filled …",0,null],[12,"parking_lot_changes","","",0,null],[12,"alerts","","",0,null],[12,"record_anything","","For benchmarking, we may want to disable collecting data.",0,null],[3,"TripPhase","","",null,null],[12,"start_time","","",1,null],[12,"end_time","","",1,null],[12,"path","","",1,null],[12,"has_path_req","","",1,null],[12,"phase_type","","",1,null],[4,"AlertLocation","","",null,null],[13,"Nil","","",10,null],[13,"Intersection","","",10,null],[13,"Person","","",10,null],[13,"Building","","",10,null],[4,"TripPhaseType","","",null,null],[13,"Driving","","",11,null],[13,"Walking","","",11,null],[13,"Biking","","",11,null],[13,"Parking","","",11,null],[13,"WaitingForBus","","",11,null],[13,"RidingBus","","What stop did they board at?",11,null],[13,"Cancelled","","",11,null],[13,"Finished","","",11,null],[13,"DelayedStart","","",11,null],[5,"fork_rng","","Need to explain this trick -- basically keeps consistency …",null,[[["xorshiftrng",3]],["xorshiftrng",3]]],[3,"BorderSpawnOverTime","","",null,null],[12,"num_peds","","",18,null],[12,"num_cars","","",18,null],[12,"num_bikes","","",18,null],[12,"percent_use_transit","","",18,null],[12,"start_time","","",18,null],[12,"stop_time","","",18,null],[12,"start_from_border","","",18,null],[12,"goal","","",18,null],[3,"ExternalPerson","","",null,null],[12,"origin","","",12,null],[12,"trips","","",12,null],[3,"ExternalTrip","","",null,null],[12,"departure","","",13,null],[12,"destination","","",13,null],[12,"mode","","",13,null],[12,"purpose","","",13,null],[4,"ExternalTripEndpoint","","",null,null],[13,"TripEndpoint","","",14,null],[13,"Position","","",14,null],[3,"IndividTrip","","",null,null],[12,"depart","","",24,null],[12,"destination","","",24,null],[12,"mode","","",24,null],[12,"purpose","","",24,null],[12,"cancelled","","",24,null],[12,"modified","","Did a ScenarioModifier affect this?",24,null],[3,"MapBorders","","Lists all border intersections of the map, broken down by …",null,null],[12,"incoming_walking","","",15,null],[12,"incoming_driving","","",15,null],[12,"incoming_biking","","",15,null],[12,"outgoing_walking","","",15,null],[12,"outgoing_driving","","",15,null],[12,"outgoing_biking","","",15,null],[3,"PersonSpec","","",null,null],[12,"orig_id","","Just used for debugging",23,null],[12,"origin","","The first trip starts here",23,null],[12,"trips","","Each trip starts at the destination of the previous trip",23,null],[3,"Scenario","","A Scenario describes all the input to a simulation. …",null,null],[12,"scenario_name","","",22,null],[12,"map_name","","",22,null],[12,"people","","",22,null],[12,"only_seed_buses","","None means seed all buses. Otherwise the route name must …",22,null],[3,"ScenarioGenerator","","",null,null],[12,"scenario_name","","",16,null],[12,"only_seed_buses","","",16,null],[12,"spawn_over_time","","",16,null],[12,"border_spawn_over_time","","",16,null],[4,"ScenarioModifier","","Transforms an existing Scenario before instantiating it.",null,null],[13,"RepeatDays","","",20,null],[13,"ChangeMode","","",20,null],[12,"pct_ppl","sim::ScenarioModifier","",21,null],[12,"departure_filter","","",21,null],[12,"from_modes","","",21,null],[12,"to_mode","","If <code>None</code>, then just cancel the trip.",21,null],[13,"AddExtraTrips","sim","Scenario name",20,null],[3,"SimFlags","","SimFlags specifies a simulation to setup.",null,null],[12,"load","","A path to some file.",19,null],[12,"modifiers","","",19,null],[12,"rng_seed","","",19,null],[12,"opts","","",19,null],[3,"SpawnOverTime","","",null,null],[12,"num_agents","","",17,null],[12,"start_time","","",17,null],[12,"stop_time","","",17,null],[12,"goal","","",17,null],[12,"percent_driving","","",17,null],[12,"percent_biking","","",17,null],[12,"percent_use_transit","","",17,null],[4,"TripEndpoint","","Specifies where a trip begins or ends.",null,null],[13,"Bldg","","",34,null],[13,"Border","","",34,null],[13,"SuddenlyAppear","","Used for interactive spawning, tests, etc. For now, only …",34,null],[4,"TripPurpose","","Lifted from Seattle\'s Soundcast model, but seems general …",null,null],[13,"Home","","",25,null],[13,"Work","","",25,null],[13,"School","","",25,null],[13,"Escort","","",25,null],[13,"PersonalBusiness","","",25,null],[13,"Shopping","","",25,null],[13,"Meal","","",25,null],[13,"Social","","",25,null],[13,"Recreation","","",25,null],[13,"Medical","","",25,null],[13,"ParkAndRideTransfer","","",25,null],[3,"AgentProperties","","",null,null],[12,"total_time","","",79,null],[12,"waiting_here","","",79,null],[12,"total_waiting","","",79,null],[12,"dist_crossed","","",79,null],[12,"total_dist","","",79,null],[4,"AlertHandler","","",null,null],[13,"Print","","Just print the alert to STDOUT",84,null],[13,"Block","","Print the alert to STDOUT and don\'t proceed until the UI …",84,null],[13,"Silence","","Don\'t do anything",84,null],[4,"DelayCause","","Why is an agent delayed? If there are multiple reasons, …",null,null],[13,"Agent","","Queued behind someone, or someone\'s doing a conflicting …",80,null],[13,"Intersection","","Waiting on a traffic signal to change, or pausing at a …",80,null],[3,"Sim","","The Sim ties together all the pieces of the simulation. …",null,null],[12,"driving","","",81,null],[12,"parking","","",81,null],[12,"walking","","",81,null],[12,"intersections","","",81,null],[12,"transit","","",81,null],[12,"cap","","",81,null],[12,"trips","","",81,null],[12,"pandemic","","",81,null],[12,"scheduler","","",81,null],[12,"time","","",81,null],[12,"map_name","","",81,null],[12,"edits_name","","",81,null],[12,"run_name","","",81,null],[12,"step_count","","",81,null],[12,"highlighted_people","","",81,null],[12,"analytics","","",81,null],[12,"recorder","","",81,null],[12,"alerts","","",81,null],[8,"SimCallback","","",null,null],[10,"run","","",85,[[["map",3],["sim",3]],["bool",15]]],[3,"SimOptions","","Options controlling the traffic simulation.",null,null],[12,"run_name","","Used to distinguish savestates for running the same …",83,null],[12,"use_freeform_policy_everywhere","","Ignore all stop signs and traffic signals, instead using …",83,null],[12,"dont_block_the_box","","Prevent a vehicle from starting a turn if their target …",83,null],[12,"recalc_lanechanging","","As a vehicle follows a route, opportunistically make …",83,null],[12,"break_turn_conflict_cycles","","If a cycle of vehicles depending on each other to turn is …",83,null],[12,"handle_uber_turns","","Enable experimental handling for \\\"uber-turns\\\", sequences …",83,null],[12,"enable_pandemic_model","","Enable an experimental SEIR pandemic model.",83,null],[12,"alerts","","When a warning is encountered during simulation, …",83,null],[12,"infinite_parking","","Ignore parking data in the map and instead treat every …",83,null],[12,"disable_turn_conflicts","","Allow all agents to immediately proceed into an …",83,null],[12,"cancel_drivers_delay_threshold","","If present, cancel any driving trips who will pass …",83,null],[12,"delay_trips_instead_of_cancelling","","Instead of cancelling trips due to …",83,null],[12,"skip_analytics","","Don\'t collect any analytics. Only useful for benchmarking …",83,null],[4,"TripMode","","",null,null],[13,"Walk","","",95,null],[13,"Bike","","",95,null],[13,"Transit","","",95,null],[13,"Drive","","",95,null],[3,"CommutersVehiclesCounts","","The number of active vehicles and commuters, broken into …",null,null],[12,"walking_commuters","","",99,null],[12,"walking_to_from_transit","","",99,null],[12,"walking_to_from_car","","",99,null],[12,"walking_to_from_bike","","",99,null],[12,"cyclists","","",99,null],[12,"sov_drivers","","",99,null],[12,"buses","","",99,null],[12,"trains","","",99,null],[12,"bus_riders","","",99,null],[12,"train_riders","","",99,null],[3,"Person","","",null,null],[12,"id","","",97,null],[12,"orig_id","","",97,null],[12,"home","","",97,null],[12,"trips","","",97,null],[12,"state","","",97,null],[12,"ped","","",97,null],[12,"ped_speed","","",97,null],[12,"vehicles","","Both cars and bikes",97,null],[12,"delayed_trips","","",97,null],[12,"on_bus","","",97,null],[4,"PersonState","","",null,null],[13,"Trip","","",98,null],[13,"Inside","","",98,null],[13,"OffMap","","",98,null],[3,"TripInfo","","",null,null],[12,"departure","","Scheduled departure; the start may be delayed if the …",93,null],[12,"mode","","",93,null],[12,"start","","",93,null],[12,"end","","",93,null],[12,"purpose","","",93,null],[12,"modified","","Did a ScenarioModifier apply to this?",93,null],[12,"capped","","Was this trip affected by a congestion cap?",93,null],[12,"cancellation_reason","","",93,null],[4,"TripResult","","",null,null],[13,"Ok","","",96,null],[13,"ModeChange","","",96,null],[13,"TripDone","","",96,null],[13,"TripDoesntExist","","",96,null],[13,"TripNotStarted","","",96,null],[13,"TripCancelled","","",96,null],[17,"BIKE_LENGTH","","",null,null],[17,"MIN_CAR_LENGTH","","",null,null],[17,"MAX_CAR_LENGTH","","",null,null],[17,"BUS_LENGTH","","",null,null],[17,"LIGHT_RAIL_LENGTH","","",null,null],[17,"FOLLOWING_DISTANCE","","At all speeds (including at rest), cars must be at least …",null,null],[17,"SPAWN_DIST","","When spawning at borders, start the front of the vehicle …",null,null],[3,"CarID","","The numeric ID must be globally unique, without …",null,null],[12,"0","","",100,null],[12,"1","","",100,null],[3,"PedestrianID","","",null,null],[12,"0","","",101,null],[4,"AgentID","","",null,null],[13,"Car","","",102,null],[13,"Pedestrian","","",102,null],[13,"BusPassenger","","",102,null],[11,"as_car","","",102,[[],["carid",3]]],[11,"to_type","","",102,[[],["agenttype",4]]],[11,"to_vehicle_type","","",102,[[],[["option",4],["vehicletype",4]]]],[11,"is_car","","",102,[[["usize",15]],["bool",15]]],[4,"AgentType","","",null,null],[13,"Car","","",103,null],[13,"Bike","","",103,null],[13,"Bus","","",103,null],[13,"Train","","",103,null],[13,"Pedestrian","","",103,null],[13,"TransitRider","","",103,null],[11,"all","","",103,[[],[["vec",3],["agenttype",4]]]],[11,"noun","","",103,[[],["str",15]]],[11,"plural_noun","","",103,[[],["str",15]]],[11,"ongoing_verb","","",103,[[],["str",15]]],[3,"TripID","","",null,null],[12,"0","","",104,null],[3,"PersonID","","",null,null],[12,"0","","",105,null],[3,"OrigPersonID","","",null,null],[12,"0","","",106,null],[12,"1","","",106,null],[4,"VehicleType","","",null,null],[13,"Car","","",107,null],[13,"Bus","","",107,null],[13,"Train","","",107,null],[13,"Bike","","",107,null],[11,"to_constraints","","",107,[[],["pathconstraints",4]]],[11,"is_transit","","",107,[[],["bool",15]]],[3,"Vehicle","","",null,null],[12,"id","","",108,null],[12,"owner","","",108,null],[12,"vehicle_type","","",108,null],[12,"length","","",108,null],[12,"max_speed","","",108,null],[3,"VehicleSpec","","",null,null],[12,"vehicle_type","","",109,null],[12,"length","","",109,null],[12,"max_speed","","",109,null],[11,"make","","",109,[[["personid",3],["carid",3],["option",4]],["vehicle",3]]],[4,"ParkingSpot","","",null,null],[13,"Onstreet","","Lane and idx",110,null],[13,"Offstreet","","Building and idx (pretty meaningless)",110,null],[13,"Lot","","",110,null],[3,"ParkedCar","","",null,null],[12,"vehicle","","",111,null],[12,"spot","","",111,null],[12,"parked_since","","",111,null],[4,"DrivingGoal","","",null,null],[13,"ParkNear","","",112,null],[13,"Border","","",112,null],[11,"goal_pos","","",112,[[["pathconstraints",4],["map",3]],[["position",3],["option",4]]]],[11,"make_router","","",112,[[["path",3],["carid",3],["map",3]],["router",3]]],[3,"SidewalkSpot","","",null,null],[12,"connection","","",113,null],[12,"sidewalk_pos","","",113,null],[4,"SidewalkPOI","","Point of interest, that is",null,null],[13,"ParkingSpot","","Note that for offstreet parking, the path will be the …",114,null],[13,"DeferredParkingSpot","","Don\'t actually know where this goes yet!",114,null],[13,"Building","","",114,null],[13,"BusStop","","",114,null],[13,"Border","","",114,null],[13,"BikeRack","","The bikeable position",114,null],[13,"SuddenlyAppear","","",114,null],[11,"deferred_parking_spot","","Pretty hacky case",113,[[],["sidewalkspot",3]]],[11,"parking_spot","","",113,[[["parkingspot",4],["map",3],["parkingsimstate",4]],["sidewalkspot",3]]],[11,"building","","",113,[[["map",3],["buildingid",3]],["sidewalkspot",3]]],[11,"bike_rack","","",113,[[["map",3],["buildingid",3]],[["option",4],["sidewalkspot",3]]]],[11,"bus_stop","","",113,[[["map",3],["busstopid",3]],["sidewalkspot",3]]],[11,"start_at_border","","",113,[[["map",3],["intersectionid",3]],[["option",4],["sidewalkspot",3]]]],[11,"end_at_border","","",113,[[["map",3],["intersectionid",3]],[["option",4],["sidewalkspot",3]]]],[11,"suddenly_appear","","",113,[[["map",3],["position",3]],["sidewalkspot",3]]],[3,"TimeInterval","","",null,null],[12,"start","","",115,null],[12,"end","","",115,null],[11,"new","","",115,[[["time",3]],["timeinterval",3]]],[11,"percent","","",115,[[["time",3]],["f64",15]]],[11,"percent_clamp_end","","",115,[[["time",3]],["f64",15]]],[3,"DistanceInterval","","",null,null],[12,"start","","",116,null],[12,"end","","",116,null],[11,"new_driving","","",116,[[["distance",3]],["distanceinterval",3]]],[11,"new_walking","","",116,[[["distance",3]],["distanceinterval",3]]],[11,"lerp","","",116,[[["f64",15]],["distance",3]]],[11,"length","","",116,[[],["distance",3]]],[3,"CreatePedestrian","","",null,null],[12,"id","","",117,null],[12,"start","","",117,null],[12,"speed","","",117,null],[12,"goal","","",117,null],[12,"path","","",117,null],[12,"trip","","",117,null],[12,"person","","",117,null],[3,"CreateCar","","",null,null],[12,"vehicle","","",118,null],[12,"router","","",118,null],[12,"maybe_parked_car","","",118,null],[12,"trip_and_person","","None for buses",118,null],[12,"maybe_route","","",118,null],[11,"for_appearing","","",118,[[["vehicle",3],["router",3],["personid",3],["tripid",3]],["createcar",3]]],[11,"for_parked_car","","",118,[[["parkedcar",3],["router",3],["personid",3],["tripid",3]],["createcar",3]]],[11,"from","sim::analytics","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_any","","",0,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any_arc","","",0,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"into_any","","",1,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"into_any","","",2,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any_arc","","",2,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"into_any","","",3,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"into_any_arc","","",3,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::cap","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"into_any","","",4,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"into_any_arc","","",4,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"into_any","","",5,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"into_any_arc","","",5,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"into_any","","",7,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"into_any_arc","","",7,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::events","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"into_any","","",8,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"into_any_arc","","",8,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"into_any","","",10,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"into_any_arc","","",10,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"into_any","","",11,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"into_any_arc","","",11,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::make::external","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"into_any","","",12,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",12,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"into_any_arc","","",12,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"into_any","","",13,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"into_any_arc","","",13,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"into_any","","",14,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"into_any_arc","","",14,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"into_any","","",15,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",15,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",15,[[],["any",8]]],[11,"as_any_mut","","",15,[[],["any",8]]],[11,"into_any_arc","","",15,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::make::generator","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"into_any","","",16,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",16,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"into_any_arc","","",16,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"into_any","","",17,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",17,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",17,[[],["any",8]]],[11,"as_any_mut","","",17,[[],["any",8]]],[11,"into_any_arc","","",17,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"into_any","","",18,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",18,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"into_any_arc","","",18,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::make::load","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"into_any","","",19,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",19,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",19,[[],["any",8]]],[11,"as_any_mut","","",19,[[],["any",8]]],[11,"into_any_arc","","",19,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::make::modifier","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"equivalent","","",20,[[],["bool",15]]],[11,"vzip","","",20,[[]]],[11,"into_any","","",20,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",20,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",20,[[],["any",8]]],[11,"as_any_mut","","",20,[[],["any",8]]],[11,"into_any_arc","","",20,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::make::scenario","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"into_any","","",22,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",22,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",22,[[],["any",8]]],[11,"as_any_mut","","",22,[[],["any",8]]],[11,"into_any_arc","","",22,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"into_any","","",23,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",23,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",23,[[],["any",8]]],[11,"as_any_mut","","",23,[[],["any",8]]],[11,"into_any_arc","","",23,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"into_any","","",24,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",24,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",24,[[],["any",8]]],[11,"as_any_mut","","",24,[[],["any",8]]],[11,"into_any_arc","","",24,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"into_any","","",25,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",25,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",25,[[],["any",8]]],[11,"as_any_mut","","",25,[[],["any",8]]],[11,"into_any_arc","","",25,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::make::spawner","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"into_any","","",26,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",26,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",26,[[],["any",8]]],[11,"as_any_mut","","",26,[[],["any",8]]],[11,"into_any_arc","","",26,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"into_any","","",27,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",27,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",27,[[],["any",8]]],[11,"as_any_mut","","",27,[[],["any",8]]],[11,"into_any_arc","","",27,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"equivalent","","",34,[[],["bool",15]]],[11,"vzip","","",34,[[]]],[11,"into_any","","",34,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",34,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",34,[[],["any",8]]],[11,"as_any_mut","","",34,[[],["any",8]]],[11,"into_any_arc","","",34,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::mechanics::car","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"into_any","","",35,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",35,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",35,[[],["any",8]]],[11,"as_any_mut","","",35,[[],["any",8]]],[11,"into_any_arc","","",35,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"into_any","","",36,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",36,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",36,[[],["any",8]]],[11,"as_any_mut","","",36,[[],["any",8]]],[11,"into_any_arc","","",36,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::mechanics::driving","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"into_any","","",39,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",39,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",39,[[],["any",8]]],[11,"as_any_mut","","",39,[[],["any",8]]],[11,"into_any_arc","","",39,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::mechanics::intersection","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"into_any","","",40,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",40,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",40,[[],["any",8]]],[11,"as_any_mut","","",40,[[],["any",8]]],[11,"into_any_arc","","",40,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"into_any","","",41,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",41,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",41,[[],["any",8]]],[11,"as_any_mut","","",41,[[],["any",8]]],[11,"into_any_arc","","",41,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"into_any","","",42,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",42,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",42,[[],["any",8]]],[11,"as_any_mut","","",42,[[],["any",8]]],[11,"into_any_arc","","",42,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"equivalent","","",43,[[],["bool",15]]],[11,"vzip","","",43,[[]]],[11,"into_any","","",43,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",43,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",43,[[],["any",8]]],[11,"as_any_mut","","",43,[[],["any",8]]],[11,"into_any_arc","","",43,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::mechanics::parking","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"into_any","","",45,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",45,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",45,[[],["any",8]]],[11,"as_any_mut","","",45,[[],["any",8]]],[11,"into_any_arc","","",45,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"into_any","","",46,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",46,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",46,[[],["any",8]]],[11,"as_any_mut","","",46,[[],["any",8]]],[11,"into_any_arc","","",46,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"into_any","","",47,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",47,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",47,[[],["any",8]]],[11,"as_any_mut","","",47,[[],["any",8]]],[11,"into_any_arc","","",47,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"into_any","","",48,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",48,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",48,[[],["any",8]]],[11,"as_any_mut","","",48,[[],["any",8]]],[11,"into_any_arc","","",48,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::mechanics::queue","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"into_any","","",49,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",49,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",49,[[],["any",8]]],[11,"as_any_mut","","",49,[[],["any",8]]],[11,"into_any_arc","","",49,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::mechanics::walking","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"into_any","","",50,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",50,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",50,[[],["any",8]]],[11,"as_any_mut","","",50,[[],["any",8]]],[11,"into_any_arc","","",50,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"into_any","","",51,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",51,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",51,[[],["any",8]]],[11,"as_any_mut","","",51,[[],["any",8]]],[11,"into_any_arc","","",51,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"into_any","","",52,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",52,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",52,[[],["any",8]]],[11,"as_any_mut","","",52,[[],["any",8]]],[11,"into_any_arc","","",52,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::pandemic::pandemic","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"into_any","","",53,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",53,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",53,[[],["any",8]]],[11,"as_any_mut","","",53,[[],["any",8]]],[11,"into_any_arc","","",53,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"equivalent","","",54,[[],["bool",15]]],[11,"get_hash","","",54,[[],["u64",15]]],[11,"vzip","","",54,[[]]],[11,"into_any","","",54,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",54,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",54,[[],["any",8]]],[11,"as_any_mut","","",54,[[],["any",8]]],[11,"into_any_arc","","",54,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"into_any","","",55,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",55,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",55,[[],["any",8]]],[11,"as_any_mut","","",55,[[],["any",8]]],[11,"into_any_arc","","",55,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::pandemic","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"into_any","","",56,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",56,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",56,[[],["any",8]]],[11,"as_any_mut","","",56,[[],["any",8]]],[11,"into_any_arc","","",56,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"into_any","","",57,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",57,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",57,[[],["any",8]]],[11,"as_any_mut","","",57,[[],["any",8]]],[11,"into_any_arc","","",57,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"into_any","","",58,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",58,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",58,[[],["any",8]]],[11,"as_any_mut","","",58,[[],["any",8]]],[11,"into_any_arc","","",58,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"into_any","","",59,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",59,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",59,[[],["any",8]]],[11,"as_any_mut","","",59,[[],["any",8]]],[11,"into_any_arc","","",59,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::recorder","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"into_any","","",60,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",60,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",60,[[],["any",8]]],[11,"as_any_mut","","",60,[[],["any",8]]],[11,"into_any_arc","","",60,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::render","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"into_any","","",61,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",61,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",61,[[],["any",8]]],[11,"as_any_mut","","",61,[[],["any",8]]],[11,"into_any_arc","","",61,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"into_any","","",62,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",62,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",62,[[],["any",8]]],[11,"as_any_mut","","",62,[[],["any",8]]],[11,"into_any_arc","","",62,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"into_any","","",63,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",63,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",63,[[],["any",8]]],[11,"as_any_mut","","",63,[[],["any",8]]],[11,"into_any_arc","","",63,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"into_any","","",64,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",64,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",64,[[],["any",8]]],[11,"as_any_mut","","",64,[[],["any",8]]],[11,"into_any_arc","","",64,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"equivalent","","",65,[[],["bool",15]]],[11,"vzip","","",65,[[]]],[11,"into_any","","",65,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",65,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",65,[[],["any",8]]],[11,"as_any_mut","","",65,[[],["any",8]]],[11,"into_any_arc","","",65,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"into_any","","",66,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",66,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",66,[[],["any",8]]],[11,"as_any_mut","","",66,[[],["any",8]]],[11,"into_any_arc","","",66,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::router","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"into_any","","",67,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",67,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",67,[[],["any",8]]],[11,"as_any_mut","","",67,[[],["any",8]]],[11,"into_any_arc","","",67,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"into_any","","",68,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",68,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",68,[[],["any",8]]],[11,"as_any_mut","","",68,[[],["any",8]]],[11,"into_any_arc","","",68,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"into_any","","",69,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",69,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",69,[[],["any",8]]],[11,"as_any_mut","","",69,[[],["any",8]]],[11,"into_any_arc","","",69,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::scheduler","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"into_any","","",74,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",74,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",74,[[],["any",8]]],[11,"as_any_mut","","",74,[[],["any",8]]],[11,"into_any_arc","","",74,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"equivalent","","",75,[[],["bool",15]]],[11,"get_hash","","",75,[[],["u64",15]]],[11,"vzip","","",75,[[]]],[11,"into_any","","",75,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",75,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",75,[[],["any",8]]],[11,"as_any_mut","","",75,[[],["any",8]]],[11,"into_any_arc","","",75,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"equivalent","","",76,[[],["bool",15]]],[11,"vzip","","",76,[[]]],[11,"into_any","","",76,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",76,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",76,[[],["any",8]]],[11,"as_any_mut","","",76,[[],["any",8]]],[11,"into_any_arc","","",76,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"equivalent","","",77,[[],["bool",15]]],[11,"vzip","","",77,[[]]],[11,"into_any","","",77,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",77,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",77,[[],["any",8]]],[11,"as_any_mut","","",77,[[],["any",8]]],[11,"into_any_arc","","",77,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"into_any","","",78,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",78,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",78,[[],["any",8]]],[11,"as_any_mut","","",78,[[],["any",8]]],[11,"into_any_arc","","",78,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::sim::queries","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"into_any","","",79,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",79,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",79,[[],["any",8]]],[11,"as_any_mut","","",79,[[],["any",8]]],[11,"into_any_arc","","",79,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"equivalent","","",80,[[],["bool",15]]],[11,"vzip","","",80,[[]]],[11,"into_any","","",80,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",80,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",80,[[],["any",8]]],[11,"as_any_mut","","",80,[[],["any",8]]],[11,"into_any_arc","","",80,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::sim","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"into_any","","",81,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",81,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",81,[[],["any",8]]],[11,"as_any_mut","","",81,[[],["any",8]]],[11,"into_any_arc","","",81,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"into_any","","",82,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",82,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",82,[[],["any",8]]],[11,"as_any_mut","","",82,[[],["any",8]]],[11,"into_any_arc","","",82,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"into_any","","",83,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",83,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",83,[[],["any",8]]],[11,"as_any_mut","","",83,[[],["any",8]]],[11,"into_any_arc","","",83,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"into_any","","",84,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",84,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",84,[[],["any",8]]],[11,"as_any_mut","","",84,[[],["any",8]]],[11,"into_any_arc","","",84,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::transit","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"into_any","","",86,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",86,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",86,[[],["any",8]]],[11,"as_any_mut","","",86,[[],["any",8]]],[11,"into_any_arc","","",86,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"into_any","","",87,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",87,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",87,[[],["any",8]]],[11,"as_any_mut","","",87,[[],["any",8]]],[11,"into_any_arc","","",87,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"into_any","","",88,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",88,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",88,[[],["any",8]]],[11,"as_any_mut","","",88,[[],["any",8]]],[11,"into_any_arc","","",88,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"into_any","","",89,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",89,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",89,[[],["any",8]]],[11,"as_any_mut","","",89,[[],["any",8]]],[11,"into_any_arc","","",89,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"into_any","","",90,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",90,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",90,[[],["any",8]]],[11,"as_any_mut","","",90,[[],["any",8]]],[11,"into_any_arc","","",90,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim::trips","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"into_any","","",91,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",91,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",91,[[],["any",8]]],[11,"as_any_mut","","",91,[[],["any",8]]],[11,"into_any_arc","","",91,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"into_any","","",92,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",92,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",92,[[],["any",8]]],[11,"as_any_mut","","",92,[[],["any",8]]],[11,"into_any_arc","","",92,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"into_any","","",93,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",93,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",93,[[],["any",8]]],[11,"as_any_mut","","",93,[[],["any",8]]],[11,"into_any_arc","","",93,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"into_any","","",94,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",94,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",94,[[],["any",8]]],[11,"as_any_mut","","",94,[[],["any",8]]],[11,"into_any_arc","","",94,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"equivalent","","",95,[[],["bool",15]]],[11,"vzip","","",95,[[]]],[11,"into_any","","",95,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",95,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",95,[[],["any",8]]],[11,"as_any_mut","","",95,[[],["any",8]]],[11,"into_any_arc","","",95,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"into_any","","",96,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",96,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",96,[[],["any",8]]],[11,"as_any_mut","","",96,[[],["any",8]]],[11,"into_any_arc","","",96,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"into_any","","",97,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",97,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",97,[[],["any",8]]],[11,"as_any_mut","","",97,[[],["any",8]]],[11,"into_any_arc","","",97,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"into_any","","",98,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",98,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",98,[[],["any",8]]],[11,"as_any_mut","","",98,[[],["any",8]]],[11,"into_any_arc","","",98,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"into_any","","",99,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",99,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",99,[[],["any",8]]],[11,"as_any_mut","","",99,[[],["any",8]]],[11,"into_any_arc","","",99,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","sim","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"to_string","","",100,[[],["string",3]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"equivalent","","",100,[[],["bool",15]]],[11,"get_hash","","",100,[[],["u64",15]]],[11,"vzip","","",100,[[]]],[11,"into_any","","",100,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",100,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",100,[[],["any",8]]],[11,"as_any_mut","","",100,[[],["any",8]]],[11,"into_any_arc","","",100,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"to_string","","",101,[[],["string",3]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"equivalent","","",101,[[],["bool",15]]],[11,"get_hash","","",101,[[],["u64",15]]],[11,"vzip","","",101,[[]]],[11,"into_any","","",101,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",101,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",101,[[],["any",8]]],[11,"as_any_mut","","",101,[[],["any",8]]],[11,"into_any_arc","","",101,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"to_string","","",102,[[],["string",3]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"equivalent","","",102,[[],["bool",15]]],[11,"get_hash","","",102,[[],["u64",15]]],[11,"vzip","","",102,[[]]],[11,"into_any","","",102,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",102,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",102,[[],["any",8]]],[11,"as_any_mut","","",102,[[],["any",8]]],[11,"into_any_arc","","",102,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"equivalent","","",103,[[],["bool",15]]],[11,"get_hash","","",103,[[],["u64",15]]],[11,"vzip","","",103,[[]]],[11,"into_any","","",103,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",103,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",103,[[],["any",8]]],[11,"as_any_mut","","",103,[[],["any",8]]],[11,"into_any_arc","","",103,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"to_string","","",104,[[],["string",3]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"equivalent","","",104,[[],["bool",15]]],[11,"get_hash","","",104,[[],["u64",15]]],[11,"vzip","","",104,[[]]],[11,"into_any","","",104,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",104,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",104,[[],["any",8]]],[11,"as_any_mut","","",104,[[],["any",8]]],[11,"into_any_arc","","",104,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"to_string","","",105,[[],["string",3]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"equivalent","","",105,[[],["bool",15]]],[11,"get_hash","","",105,[[],["u64",15]]],[11,"vzip","","",105,[[]]],[11,"into_any","","",105,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",105,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",105,[[],["any",8]]],[11,"as_any_mut","","",105,[[],["any",8]]],[11,"into_any_arc","","",105,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"equivalent","","",106,[[],["bool",15]]],[11,"get_hash","","",106,[[],["u64",15]]],[11,"vzip","","",106,[[]]],[11,"into_any","","",106,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",106,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",106,[[],["any",8]]],[11,"as_any_mut","","",106,[[],["any",8]]],[11,"into_any_arc","","",106,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"to_string","","",107,[[],["string",3]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"equivalent","","",107,[[],["bool",15]]],[11,"get_hash","","",107,[[],["u64",15]]],[11,"vzip","","",107,[[]]],[11,"into_any","","",107,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",107,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",107,[[],["any",8]]],[11,"as_any_mut","","",107,[[],["any",8]]],[11,"into_any_arc","","",107,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"vzip","","",108,[[]]],[11,"into_any","","",108,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",108,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",108,[[],["any",8]]],[11,"as_any_mut","","",108,[[],["any",8]]],[11,"into_any_arc","","",108,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"vzip","","",109,[[]]],[11,"into_any","","",109,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",109,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",109,[[],["any",8]]],[11,"as_any_mut","","",109,[[],["any",8]]],[11,"into_any_arc","","",109,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"equivalent","","",110,[[],["bool",15]]],[11,"vzip","","",110,[[]]],[11,"into_any","","",110,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",110,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",110,[[],["any",8]]],[11,"as_any_mut","","",110,[[],["any",8]]],[11,"into_any_arc","","",110,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"vzip","","",111,[[]]],[11,"into_any","","",111,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",111,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",111,[[],["any",8]]],[11,"as_any_mut","","",111,[[],["any",8]]],[11,"into_any_arc","","",111,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"equivalent","","",112,[[],["bool",15]]],[11,"vzip","","",112,[[]]],[11,"into_any","","",112,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",112,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",112,[[],["any",8]]],[11,"as_any_mut","","",112,[[],["any",8]]],[11,"into_any_arc","","",112,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"vzip","","",113,[[]]],[11,"into_any","","",113,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",113,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",113,[[],["any",8]]],[11,"as_any_mut","","",113,[[],["any",8]]],[11,"into_any_arc","","",113,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"equivalent","","",114,[[],["bool",15]]],[11,"vzip","","",114,[[]]],[11,"into_any","","",114,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",114,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",114,[[],["any",8]]],[11,"as_any_mut","","",114,[[],["any",8]]],[11,"into_any_arc","","",114,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"vzip","","",115,[[]]],[11,"into_any","","",115,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",115,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",115,[[],["any",8]]],[11,"as_any_mut","","",115,[[],["any",8]]],[11,"into_any_arc","","",115,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"vzip","","",116,[[]]],[11,"into_any","","",116,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",116,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",116,[[],["any",8]]],[11,"as_any_mut","","",116,[[],["any",8]]],[11,"into_any_arc","","",116,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"vzip","","",117,[[]]],[11,"into_any","","",117,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",117,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",117,[[],["any",8]]],[11,"as_any_mut","","",117,[[],["any",8]]],[11,"into_any_arc","","",117,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"vzip","","",118,[[]]],[11,"into_any","","",118,[[["global",3],["box",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",118,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",118,[[],["any",8]]],[11,"as_any_mut","","",118,[[],["any",8]]],[11,"into_any_arc","","",118,[[["arc",3]],[["any",8],["arc",3]]]],[11,"handle_live_edits","sim::mechanics::parking","Returns any cars that got very abruptly evicted from …",45,[[["map",3]]]],[11,"get_free_onstreet_spots","","",45,[[["laneid",3]],[["vec",3],["parkingspot",4]]]],[11,"get_free_offstreet_spots","","",45,[[["buildingid",3]],[["vec",3],["parkingspot",4]]]],[11,"get_free_lot_spots","","",45,[[["parkinglotid",3]],[["vec",3],["parkingspot",4]]]],[11,"reserve_spot","","",45,[[["parkingspot",4],["carid",3]]]],[11,"unreserve_spot","","Needed when abruptly deleting a car, in case they\'re …",45,[[["carid",3]]]],[11,"remove_parked_car","","",45,[[["parkedcar",3]]]],[11,"add_parked_car","","",45,[[["parkedcar",3]]]],[11,"get_draw_cars","","",45,[[["map",3],["laneid",3]],[["vec",3],["drawcarinput",3]]]],[11,"get_draw_cars_in_lots","","",45,[[["map",3],["laneid",3]],[["vec",3],["drawcarinput",3]]]],[11,"get_draw_car","","",45,[[["carid",3],["map",3]],[["drawcarinput",3],["option",4]]]],[11,"canonical_pt","","There\'s no DrawCarInput for cars parked offstreet, so we …",45,[[["carid",3],["map",3]],[["pt2d",3],["option",4]]]],[11,"get_all_draw_cars","","",45,[[["map",3]],[["vec",3],["drawcarinput",3]]]],[11,"is_free","","",45,[[["parkingspot",4]],["bool",15]]],[11,"get_car_at_spot","","",45,[[["parkingspot",4]],[["option",4],["parkedcar",3]]]],[11,"get_all_free_spots","","The vehicle\'s front is currently at the given …",45,[[["vehicle",3],["map",3],["buildingid",3],["position",3]],["vec",3]]],[11,"spot_to_driving_pos","","",45,[[["vehicle",3],["parkingspot",4],["map",3]],["position",3]]],[11,"spot_to_sidewalk_pos","","",45,[[["parkingspot",4],["map",3]],["position",3]]],[11,"get_owner_of_car","","",45,[[["carid",3]],[["personid",3],["option",4]]]],[11,"lookup_parked_car","","",45,[[["carid",3]],[["option",4],["parkedcar",3]]]],[11,"get_all_parking_spots","","(Filled, available)",45,[[]]],[11,"path_to_free_parking_spot","","Unrealistically assumes the driver has knowledge of …",45,[[["vehicle",3],["map",3],["buildingid",3],["laneid",3]],["option",4]]],[11,"collect_events","","",45,[[],[["event",4],["vec",3]]]],[11,"all_parked_car_positions","","",45,[[["map",3]],["vec",3]]],[11,"bldg_to_parked_cars","","",45,[[["buildingid",3]],[["carid",3],["vec",3]]]],[11,"handle_live_edits","","",46,[[["map",3]]]],[11,"get_free_onstreet_spots","","",46,[[["laneid",3]],[["vec",3],["parkingspot",4]]]],[11,"get_free_offstreet_spots","","",46,[[["buildingid",3]],[["vec",3],["parkingspot",4]]]],[11,"get_free_lot_spots","","",46,[[["parkinglotid",3]],[["vec",3],["parkingspot",4]]]],[11,"reserve_spot","","",46,[[["parkingspot",4],["carid",3]]]],[11,"unreserve_spot","","",46,[[["carid",3]]]],[11,"remove_parked_car","","",46,[[["parkedcar",3]]]],[11,"add_parked_car","","",46,[[["parkedcar",3]]]],[11,"get_draw_cars","","",46,[[["map",3],["laneid",3]],[["vec",3],["drawcarinput",3]]]],[11,"get_draw_cars_in_lots","","",46,[[["map",3],["laneid",3]],[["vec",3],["drawcarinput",3]]]],[11,"get_draw_car","","",46,[[["carid",3],["map",3]],[["drawcarinput",3],["option",4]]]],[11,"canonical_pt","","",46,[[["carid",3],["map",3]],[["pt2d",3],["option",4]]]],[11,"get_all_draw_cars","","",46,[[["map",3]],[["vec",3],["drawcarinput",3]]]],[11,"is_free","","",46,[[["parkingspot",4]],["bool",15]]],[11,"get_car_at_spot","","",46,[[["parkingspot",4]],[["option",4],["parkedcar",3]]]],[11,"get_all_free_spots","","",46,[[["vehicle",3],["map",3],["buildingid",3],["position",3]],["vec",3]]],[11,"spot_to_driving_pos","","",46,[[["vehicle",3],["parkingspot",4],["map",3]],["position",3]]],[11,"spot_to_sidewalk_pos","","",46,[[["parkingspot",4],["map",3]],["position",3]]],[11,"get_owner_of_car","","",46,[[["carid",3]],[["personid",3],["option",4]]]],[11,"lookup_parked_car","","",46,[[["carid",3]],[["option",4],["parkedcar",3]]]],[11,"get_all_parking_spots","","",46,[[]]],[11,"path_to_free_parking_spot","","",46,[[["vehicle",3],["map",3],["buildingid",3],["laneid",3]],["option",4]]],[11,"collect_events","","",46,[[],[["event",4],["vec",3]]]],[11,"all_parked_car_positions","","",46,[[["map",3]],["vec",3]]],[11,"bldg_to_parked_cars","","",46,[[["buildingid",3]],[["carid",3],["vec",3]]]],[11,"handle_live_edits","","",48,[[["map",3]]]],[11,"get_free_onstreet_spots","","",48,[[["laneid",3]],[["vec",3],["parkingspot",4]]]],[11,"get_free_offstreet_spots","","",48,[[["buildingid",3]],[["vec",3],["parkingspot",4]]]],[11,"get_free_lot_spots","","",48,[[["parkinglotid",3]],[["vec",3],["parkingspot",4]]]],[11,"reserve_spot","","",48,[[["parkingspot",4],["carid",3]]]],[11,"unreserve_spot","","",48,[[["carid",3]]]],[11,"remove_parked_car","","",48,[[["parkedcar",3]]]],[11,"add_parked_car","","",48,[[["parkedcar",3]]]],[11,"get_draw_cars","","",48,[[["map",3],["laneid",3]],[["vec",3],["drawcarinput",3]]]],[11,"get_draw_cars_in_lots","","",48,[[["map",3],["laneid",3]],[["vec",3],["drawcarinput",3]]]],[11,"get_draw_car","","",48,[[["carid",3],["map",3]],[["drawcarinput",3],["option",4]]]],[11,"canonical_pt","","",48,[[["carid",3],["map",3]],[["pt2d",3],["option",4]]]],[11,"get_all_draw_cars","","",48,[[["map",3]],[["vec",3],["drawcarinput",3]]]],[11,"is_free","","",48,[[["parkingspot",4]],["bool",15]]],[11,"get_car_at_spot","","",48,[[["parkingspot",4]],[["option",4],["parkedcar",3]]]],[11,"get_all_free_spots","","",48,[[["vehicle",3],["map",3],["buildingid",3],["position",3]],["vec",3]]],[11,"spot_to_driving_pos","","",48,[[["vehicle",3],["parkingspot",4],["map",3]],["position",3]]],[11,"spot_to_sidewalk_pos","","",48,[[["parkingspot",4],["map",3]],["position",3]]],[11,"get_owner_of_car","","",48,[[["carid",3]],[["personid",3],["option",4]]]],[11,"lookup_parked_car","","",48,[[["carid",3]],[["option",4],["parkedcar",3]]]],[11,"get_all_parking_spots","","",48,[[]]],[11,"path_to_free_parking_spot","","",48,[[["vehicle",3],["map",3],["buildingid",3],["laneid",3]],["option",4]]],[11,"collect_events","","",48,[[],[["event",4],["vec",3]]]],[11,"all_parked_car_positions","","",48,[[["map",3]],["vec",3]]],[11,"bldg_to_parked_cars","","",48,[[["buildingid",3]],[["carid",3],["vec",3]]]],[11,"from","","",45,[[["normalparkingsimstate",3]],["parkingsimstate",4]]],[11,"from","","",45,[[["infiniteparkingsimstate",3]],["parkingsimstate",4]]],[11,"from","sim::pandemic","",56,[[["time",3]],["anytime",3]]],[11,"from","","",56,[[["f64",15]],["anytime",3]]],[11,"into","","",56,[[],["time",3]]],[11,"clone","sim::analytics","",0,[[],["analytics",3]]],[11,"clone","","",2,[[],["timeseriescount",3]]],[11,"clone","sim::cap","",4,[[],["capsimstate",3]]],[11,"clone","","",7,[[],["zone",3]]],[11,"clone","sim::events","",8,[[],["event",4]]],[11,"clone","","",10,[[],["alertlocation",4]]],[11,"clone","","",11,[[],["tripphasetype",4]]],[11,"clone","sim::make::external","",15,[[],["mapborders",3]]],[11,"clone","sim::make::generator","",16,[[],["scenariogenerator",3]]],[11,"clone","","",17,[[],["spawnovertime",3]]],[11,"clone","","",18,[[],["borderspawnovertime",3]]],[11,"clone","sim::make::load","",19,[[],["simflags",3]]],[11,"clone","sim::make::modifier","",20,[[],["scenariomodifier",4]]],[11,"clone","sim::make::scenario","",22,[[],["scenario",3]]],[11,"clone","","",23,[[],["personspec",3]]],[11,"clone","","",24,[[],["individtrip",3]]],[11,"clone","","",25,[[],["trippurpose",4]]],[11,"clone","sim::make::spawner","",26,[[],["starttripargs",3]]],[11,"clone","","",27,[[],["tripspec",4]]],[11,"clone","","",34,[[],["tripendpoint",4]]],[11,"clone","sim::mechanics::car","",35,[[],["car",3]]],[11,"clone","","",36,[[],["carstate",4]]],[11,"clone","sim::mechanics::driving","",39,[[],["drivingsimstate",3]]],[11,"clone","sim::mechanics::intersection","",40,[[],["intersectionsimstate",3]]],[11,"clone","","",41,[[],["state",3]]],[11,"clone","","",42,[[],["signalstate",3]]],[11,"clone","","",43,[[],["request",3]]],[11,"clone","sim::mechanics::parking","",45,[[],["parkingsimstate",4]]],[11,"clone","","",46,[[],["normalparkingsimstate",3]]],[11,"clone","","",47,[[],["parkinglane",3]]],[11,"clone","","",48,[[],["infiniteparkingsimstate",3]]],[11,"clone","sim::mechanics::queue","",49,[[],["queue",3]]],[11,"clone","sim::mechanics::walking","",50,[[],["walkingsimstate",3]]],[11,"clone","","",51,[[],["pedestrian",3]]],[11,"clone","","",52,[[],["pedstate",4]]],[11,"clone","sim::pandemic::pandemic","",53,[[],["pandemicmodel",3]]],[11,"clone","","",54,[[],["cmd",4]]],[11,"clone","","",55,[[],["sharedspace",3]]],[11,"clone","sim::pandemic","",56,[[],["anytime",3]]],[11,"clone","","",57,[[],["stateevent",4]]],[11,"clone","","",58,[[],["event",3]]],[11,"clone","","",59,[[],["state",4]]],[11,"clone","sim::recorder","",60,[[],["trafficrecorder",3]]],[11,"clone","sim::render","",61,[[],["drawpedestrianinput",3]]],[11,"clone","","",63,[[],["pedcrowdlocation",4]]],[11,"clone","","",64,[[],["drawcarinput",3]]],[11,"clone","","",65,[[],["carstatus",4]]],[11,"clone","sim::router","",67,[[],["router",3]]],[11,"clone","","",69,[[],["goal",4]]],[11,"clone","sim::scheduler","",74,[[],["command",4]]],[11,"clone","","",75,[[],["commandtype",4]]],[11,"clone","","",76,[[],["simplecommandtype",4]]],[11,"clone","","",77,[[],["item",3]]],[11,"clone","","",78,[[],["scheduler",3]]],[11,"clone","sim::sim::queries","",80,[[],["delaycause",4]]],[11,"clone","sim::sim","",81,[[],["sim",3]]],[11,"clone","","",83,[[],["simoptions",3]]],[11,"clone","","",84,[[],["alerthandler",4]]],[11,"clone","sim::transit","",86,[[],["stop",3]]],[11,"clone","","",87,[[],["route",3]]],[11,"clone","","",88,[[],["bus",3]]],[11,"clone","","",89,[[],["busstate",4]]],[11,"clone","","",90,[[],["transitsimstate",3]]],[11,"clone","sim::trips","",91,[[],["tripmanager",3]]],[11,"clone","","",92,[[],["trip",3]]],[11,"clone","","",93,[[],["tripinfo",3]]],[11,"clone","","",94,[[],["tripleg",4]]],[11,"clone","","",95,[[],["tripmode",4]]],[11,"clone","","",97,[[],["person",3]]],[11,"clone","","",98,[[],["personstate",4]]],[11,"clone","sim","",100,[[],["carid",3]]],[11,"clone","","",101,[[],["pedestrianid",3]]],[11,"clone","","",102,[[],["agentid",4]]],[11,"clone","","",103,[[],["agenttype",4]]],[11,"clone","","",104,[[],["tripid",3]]],[11,"clone","","",105,[[],["personid",3]]],[11,"clone","","",106,[[],["origpersonid",3]]],[11,"clone","","",107,[[],["vehicletype",4]]],[11,"clone","","",108,[[],["vehicle",3]]],[11,"clone","","",109,[[],["vehiclespec",3]]],[11,"clone","","",110,[[],["parkingspot",4]]],[11,"clone","","",111,[[],["parkedcar",3]]],[11,"clone","","",112,[[],["drivinggoal",4]]],[11,"clone","","",113,[[],["sidewalkspot",3]]],[11,"clone","","",114,[[],["sidewalkpoi",4]]],[11,"clone","","",115,[[],["timeinterval",3]]],[11,"clone","","",116,[[],["distanceinterval",3]]],[11,"clone","","",117,[[],["createpedestrian",3]]],[11,"clone","","",118,[[],["createcar",3]]],[11,"default","sim::analytics","",0,[[],["analytics",3]]],[11,"default","sim::sim","",83,[[],["simoptions",3]]],[11,"default","","",84,[[],["alerthandler",4]]],[11,"cmp","sim::make::modifier","",20,[[["scenariomodifier",4]],["ordering",4]]],[11,"cmp","sim::make::spawner","",34,[[["tripendpoint",4]],["ordering",4]]],[11,"cmp","sim::mechanics::intersection","",43,[[["request",3]],["ordering",4]]],[11,"cmp","sim::pandemic::pandemic","",54,[[["cmd",4]],["ordering",4]]],[11,"cmp","sim::scheduler","",75,[[["commandtype",4]],["ordering",4]]],[11,"cmp","","",76,[[["simplecommandtype",4]],["ordering",4]]],[11,"cmp","","",77,[[["item",3]],["ordering",4]]],[11,"cmp","sim::sim::queries","",80,[[["delaycause",4]],["ordering",4]]],[11,"cmp","sim::trips","",95,[[["tripmode",4]],["ordering",4]]],[11,"cmp","sim","",100,[[["carid",3]],["ordering",4]]],[11,"cmp","","",101,[[["pedestrianid",3]],["ordering",4]]],[11,"cmp","","",102,[[["agentid",4]],["ordering",4]]],[11,"cmp","","",103,[[["agenttype",4]],["ordering",4]]],[11,"cmp","","",104,[[["tripid",3]],["ordering",4]]],[11,"cmp","","",105,[[["personid",3]],["ordering",4]]],[11,"cmp","","",106,[[["origpersonid",3]],["ordering",4]]],[11,"cmp","","",107,[[["vehicletype",4]],["ordering",4]]],[11,"cmp","","",110,[[["parkingspot",4]],["ordering",4]]],[11,"cmp","","",114,[[["sidewalkpoi",4]],["ordering",4]]],[11,"eq","sim::events","",8,[[["event",4]],["bool",15]]],[11,"ne","","",8,[[["event",4]],["bool",15]]],[11,"eq","","",10,[[["alertlocation",4]],["bool",15]]],[11,"ne","","",10,[[["alertlocation",4]],["bool",15]]],[11,"eq","","",11,[[["tripphasetype",4]],["bool",15]]],[11,"ne","","",11,[[["tripphasetype",4]],["bool",15]]],[11,"eq","sim::make::modifier","",20,[[["scenariomodifier",4]],["bool",15]]],[11,"ne","","",20,[[["scenariomodifier",4]],["bool",15]]],[11,"eq","sim::make::spawner","",26,[[["starttripargs",3]],["bool",15]]],[11,"ne","","",26,[[["starttripargs",3]],["bool",15]]],[11,"eq","","",27,[[["tripspec",4]],["bool",15]]],[11,"ne","","",27,[[["tripspec",4]],["bool",15]]],[11,"eq","","",34,[[["tripendpoint",4]],["bool",15]]],[11,"ne","","",34,[[["tripendpoint",4]],["bool",15]]],[11,"eq","sim::mechanics::intersection","",43,[[["request",3]],["bool",15]]],[11,"ne","","",43,[[["request",3]],["bool",15]]],[11,"eq","sim::pandemic::pandemic","",54,[[["cmd",4]],["bool",15]]],[11,"ne","","",54,[[["cmd",4]],["bool",15]]],[11,"eq","sim::pandemic","",56,[[["anytime",3]],["bool",15]]],[11,"ne","","",56,[[["anytime",3]],["bool",15]]],[11,"eq","sim::render","",65,[[["carstatus",4]],["bool",15]]],[11,"eq","sim::router","",67,[[["router",3]],["bool",15]]],[11,"ne","","",67,[[["router",3]],["bool",15]]],[11,"eq","","",69,[[["goal",4]],["bool",15]]],[11,"ne","","",69,[[["goal",4]],["bool",15]]],[11,"eq","sim::scheduler","",74,[[["command",4]],["bool",15]]],[11,"ne","","",74,[[["command",4]],["bool",15]]],[11,"eq","","",75,[[["commandtype",4]],["bool",15]]],[11,"ne","","",75,[[["commandtype",4]],["bool",15]]],[11,"eq","","",76,[[["simplecommandtype",4]],["bool",15]]],[11,"eq","","",77,[[["item",3]],["bool",15]]],[11,"ne","","",77,[[["item",3]],["bool",15]]],[11,"eq","sim::sim::queries","",80,[[["delaycause",4]],["bool",15]]],[11,"ne","","",80,[[["delaycause",4]],["bool",15]]],[11,"eq","sim::trips","",94,[[["tripleg",4]],["bool",15]]],[11,"ne","","",94,[[["tripleg",4]],["bool",15]]],[11,"eq","","",95,[[["tripmode",4]],["bool",15]]],[11,"eq","","",98,[[["personstate",4]],["bool",15]]],[11,"ne","","",98,[[["personstate",4]],["bool",15]]],[11,"eq","sim","",100,[[["carid",3]],["bool",15]]],[11,"ne","","",100,[[["carid",3]],["bool",15]]],[11,"eq","","",101,[[["pedestrianid",3]],["bool",15]]],[11,"ne","","",101,[[["pedestrianid",3]],["bool",15]]],[11,"eq","","",102,[[["agentid",4]],["bool",15]]],[11,"ne","","",102,[[["agentid",4]],["bool",15]]],[11,"eq","","",103,[[["agenttype",4]],["bool",15]]],[11,"eq","","",104,[[["tripid",3]],["bool",15]]],[11,"ne","","",104,[[["tripid",3]],["bool",15]]],[11,"eq","","",105,[[["personid",3]],["bool",15]]],[11,"ne","","",105,[[["personid",3]],["bool",15]]],[11,"eq","","",106,[[["origpersonid",3]],["bool",15]]],[11,"ne","","",106,[[["origpersonid",3]],["bool",15]]],[11,"eq","","",107,[[["vehicletype",4]],["bool",15]]],[11,"eq","","",108,[[["vehicle",3]],["bool",15]]],[11,"ne","","",108,[[["vehicle",3]],["bool",15]]],[11,"eq","","",109,[[["vehiclespec",3]],["bool",15]]],[11,"ne","","",109,[[["vehiclespec",3]],["bool",15]]],[11,"eq","","",110,[[["parkingspot",4]],["bool",15]]],[11,"ne","","",110,[[["parkingspot",4]],["bool",15]]],[11,"eq","","",111,[[["parkedcar",3]],["bool",15]]],[11,"ne","","",111,[[["parkedcar",3]],["bool",15]]],[11,"eq","","",112,[[["drivinggoal",4]],["bool",15]]],[11,"ne","","",112,[[["drivinggoal",4]],["bool",15]]],[11,"eq","","",113,[[["sidewalkspot",3]],["bool",15]]],[11,"ne","","",113,[[["sidewalkspot",3]],["bool",15]]],[11,"eq","","",114,[[["sidewalkpoi",4]],["bool",15]]],[11,"ne","","",114,[[["sidewalkpoi",4]],["bool",15]]],[11,"eq","","",115,[[["timeinterval",3]],["bool",15]]],[11,"ne","","",115,[[["timeinterval",3]],["bool",15]]],[11,"eq","","",116,[[["distanceinterval",3]],["bool",15]]],[11,"ne","","",116,[[["distanceinterval",3]],["bool",15]]],[11,"eq","","",117,[[["createpedestrian",3]],["bool",15]]],[11,"ne","","",117,[[["createpedestrian",3]],["bool",15]]],[11,"eq","","",118,[[["createcar",3]],["bool",15]]],[11,"ne","","",118,[[["createcar",3]],["bool",15]]],[11,"partial_cmp","sim::make::modifier","",20,[[["scenariomodifier",4]],[["option",4],["ordering",4]]]],[11,"lt","","",20,[[["scenariomodifier",4]],["bool",15]]],[11,"le","","",20,[[["scenariomodifier",4]],["bool",15]]],[11,"gt","","",20,[[["scenariomodifier",4]],["bool",15]]],[11,"ge","","",20,[[["scenariomodifier",4]],["bool",15]]],[11,"partial_cmp","sim::make::spawner","",34,[[["tripendpoint",4]],[["option",4],["ordering",4]]]],[11,"lt","","",34,[[["tripendpoint",4]],["bool",15]]],[11,"le","","",34,[[["tripendpoint",4]],["bool",15]]],[11,"gt","","",34,[[["tripendpoint",4]],["bool",15]]],[11,"ge","","",34,[[["tripendpoint",4]],["bool",15]]],[11,"partial_cmp","sim::mechanics::intersection","",43,[[["request",3]],[["option",4],["ordering",4]]]],[11,"lt","","",43,[[["request",3]],["bool",15]]],[11,"le","","",43,[[["request",3]],["bool",15]]],[11,"gt","","",43,[[["request",3]],["bool",15]]],[11,"ge","","",43,[[["request",3]],["bool",15]]],[11,"partial_cmp","sim::pandemic::pandemic","",54,[[["cmd",4]],[["option",4],["ordering",4]]]],[11,"lt","","",54,[[["cmd",4]],["bool",15]]],[11,"le","","",54,[[["cmd",4]],["bool",15]]],[11,"gt","","",54,[[["cmd",4]],["bool",15]]],[11,"ge","","",54,[[["cmd",4]],["bool",15]]],[11,"partial_cmp","sim::pandemic","",56,[[["anytime",3]],[["option",4],["ordering",4]]]],[11,"lt","","",56,[[["anytime",3]],["bool",15]]],[11,"le","","",56,[[["anytime",3]],["bool",15]]],[11,"gt","","",56,[[["anytime",3]],["bool",15]]],[11,"ge","","",56,[[["anytime",3]],["bool",15]]],[11,"partial_cmp","sim::scheduler","",75,[[["commandtype",4]],[["option",4],["ordering",4]]]],[11,"lt","","",75,[[["commandtype",4]],["bool",15]]],[11,"le","","",75,[[["commandtype",4]],["bool",15]]],[11,"gt","","",75,[[["commandtype",4]],["bool",15]]],[11,"ge","","",75,[[["commandtype",4]],["bool",15]]],[11,"partial_cmp","","",76,[[["simplecommandtype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",77,[[["item",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","sim::sim::queries","",80,[[["delaycause",4]],[["option",4],["ordering",4]]]],[11,"lt","","",80,[[["delaycause",4]],["bool",15]]],[11,"le","","",80,[[["delaycause",4]],["bool",15]]],[11,"gt","","",80,[[["delaycause",4]],["bool",15]]],[11,"ge","","",80,[[["delaycause",4]],["bool",15]]],[11,"partial_cmp","sim::trips","",95,[[["tripmode",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","sim","",100,[[["carid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",100,[[["carid",3]],["bool",15]]],[11,"le","","",100,[[["carid",3]],["bool",15]]],[11,"gt","","",100,[[["carid",3]],["bool",15]]],[11,"ge","","",100,[[["carid",3]],["bool",15]]],[11,"partial_cmp","","",101,[[["pedestrianid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",101,[[["pedestrianid",3]],["bool",15]]],[11,"le","","",101,[[["pedestrianid",3]],["bool",15]]],[11,"gt","","",101,[[["pedestrianid",3]],["bool",15]]],[11,"ge","","",101,[[["pedestrianid",3]],["bool",15]]],[11,"partial_cmp","","",102,[[["agentid",4]],[["option",4],["ordering",4]]]],[11,"lt","","",102,[[["agentid",4]],["bool",15]]],[11,"le","","",102,[[["agentid",4]],["bool",15]]],[11,"gt","","",102,[[["agentid",4]],["bool",15]]],[11,"ge","","",102,[[["agentid",4]],["bool",15]]],[11,"partial_cmp","","",103,[[["agenttype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",104,[[["tripid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",104,[[["tripid",3]],["bool",15]]],[11,"le","","",104,[[["tripid",3]],["bool",15]]],[11,"gt","","",104,[[["tripid",3]],["bool",15]]],[11,"ge","","",104,[[["tripid",3]],["bool",15]]],[11,"partial_cmp","","",105,[[["personid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",105,[[["personid",3]],["bool",15]]],[11,"le","","",105,[[["personid",3]],["bool",15]]],[11,"gt","","",105,[[["personid",3]],["bool",15]]],[11,"ge","","",105,[[["personid",3]],["bool",15]]],[11,"partial_cmp","","",106,[[["origpersonid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",106,[[["origpersonid",3]],["bool",15]]],[11,"le","","",106,[[["origpersonid",3]],["bool",15]]],[11,"gt","","",106,[[["origpersonid",3]],["bool",15]]],[11,"ge","","",106,[[["origpersonid",3]],["bool",15]]],[11,"partial_cmp","","",107,[[["vehicletype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",110,[[["parkingspot",4]],[["option",4],["ordering",4]]]],[11,"lt","","",110,[[["parkingspot",4]],["bool",15]]],[11,"le","","",110,[[["parkingspot",4]],["bool",15]]],[11,"gt","","",110,[[["parkingspot",4]],["bool",15]]],[11,"ge","","",110,[[["parkingspot",4]],["bool",15]]],[11,"partial_cmp","","",114,[[["sidewalkpoi",4]],[["option",4],["ordering",4]]]],[11,"lt","","",114,[[["sidewalkpoi",4]],["bool",15]]],[11,"le","","",114,[[["sidewalkpoi",4]],["bool",15]]],[11,"gt","","",114,[[["sidewalkpoi",4]],["bool",15]]],[11,"ge","","",114,[[["sidewalkpoi",4]],["bool",15]]],[11,"fmt","sim::analytics","",1,[[["formatter",3]],["result",6]]],[11,"fmt","sim::events","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","sim::make::generator","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","sim::make::scenario","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","sim::make::spawner","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","sim::mechanics::car","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","sim::mechanics::intersection","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","sim::mechanics::queue","",49,[[["formatter",3]],["result",6]]],[11,"fmt","sim::mechanics::walking","",52,[[["formatter",3]],["result",6]]],[11,"fmt","sim::pandemic::pandemic","",54,[[["formatter",3]],["result",6]]],[11,"fmt","sim::pandemic","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","sim::router","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","sim::scheduler","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","sim::sim::queries","",80,[[["formatter",3]],["result",6]]],[11,"fmt","sim::trips","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","sim","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","sim::make::scenario","",25,[[["formatter",3]],["result",6]]],[11,"fmt","sim","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"sub","sim::pandemic","",56,[[["duration",3]],["anytime",3]]],[11,"sub","","",56,[[["anytime",3]],["duration",3]]],[11,"add","","",56,[[["duration",3]],["anytime",3]]],[11,"add_assign","","",56,[[["duration",3]]]],[11,"hash","sim::pandemic::pandemic","",54,[[]]],[11,"hash","sim::scheduler","",75,[[]]],[11,"hash","sim","",100,[[]]],[11,"hash","","",101,[[]]],[11,"hash","","",102,[[]]],[11,"hash","","",103,[[]]],[11,"hash","","",104,[[]]],[11,"hash","","",105,[[]]],[11,"hash","","",106,[[]]],[11,"hash","","",107,[[]]],[11,"try_into","sim::mechanics::parking","",45,[[],[["result",4],["normalparkingsimstate",3]]]],[11,"try_into","","",45,[[],[["infiniteparkingsimstate",3],["result",4]]]],[11,"serialize","sim::analytics","",0,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","sim::cap","",4,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","sim::events","",8,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","sim::make::generator","",16,[[],["result",4]]],[11,"serialize","","",17,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","sim::make::modifier","",20,[[],["result",4]]],[11,"serialize","sim::make::scenario","",22,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","","",24,[[],["result",4]]],[11,"serialize","","",25,[[],["result",4]]],[11,"serialize","sim::make::spawner","",26,[[],["result",4]]],[11,"serialize","","",27,[[],["result",4]]],[11,"serialize","","",34,[[],["result",4]]],[11,"serialize","sim::mechanics::car","",35,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"serialize","sim::mechanics::driving","",39,[[],["result",4]]],[11,"serialize","sim::mechanics::intersection","",40,[[],["result",4]]],[11,"serialize","","",41,[[],["result",4]]],[11,"serialize","","",42,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","sim::mechanics::parking","",45,[[],["result",4]]],[11,"serialize","","",46,[[],["result",4]]],[11,"serialize","","",47,[[],["result",4]]],[11,"serialize","","",48,[[],["result",4]]],[11,"serialize","sim::mechanics::queue","",49,[[],["result",4]]],[11,"serialize","sim::mechanics::walking","",50,[[],["result",4]]],[11,"serialize","","",51,[[],["result",4]]],[11,"serialize","","",52,[[],["result",4]]],[11,"serialize","sim::pandemic::pandemic","",54,[[],["result",4]]],[11,"serialize","sim::router","",67,[[],["result",4]]],[11,"serialize","","",69,[[],["result",4]]],[11,"serialize","sim::scheduler","",74,[[],["result",4]]],[11,"serialize","","",75,[[],["result",4]]],[11,"serialize","","",77,[[],["result",4]]],[11,"serialize","","",78,[[],["result",4]]],[11,"serialize","sim::sim::queries","",80,[[],["result",4]]],[11,"serialize","sim::sim","",81,[[],["result",4]]],[11,"serialize","sim::transit","",86,[[],["result",4]]],[11,"serialize","","",87,[[],["result",4]]],[11,"serialize","","",88,[[],["result",4]]],[11,"serialize","","",89,[[],["result",4]]],[11,"serialize","","",90,[[],["result",4]]],[11,"serialize","sim::trips","",91,[[],["result",4]]],[11,"serialize","","",92,[[],["result",4]]],[11,"serialize","","",93,[[],["result",4]]],[11,"serialize","","",94,[[],["result",4]]],[11,"serialize","","",95,[[],["result",4]]],[11,"serialize","","",97,[[],["result",4]]],[11,"serialize","","",98,[[],["result",4]]],[11,"serialize","sim","",100,[[],["result",4]]],[11,"serialize","","",101,[[],["result",4]]],[11,"serialize","","",102,[[],["result",4]]],[11,"serialize","","",103,[[],["result",4]]],[11,"serialize","","",104,[[],["result",4]]],[11,"serialize","","",105,[[],["result",4]]],[11,"serialize","","",106,[[],["result",4]]],[11,"serialize","","",107,[[],["result",4]]],[11,"serialize","","",108,[[],["result",4]]],[11,"serialize","","",109,[[],["result",4]]],[11,"serialize","","",110,[[],["result",4]]],[11,"serialize","","",111,[[],["result",4]]],[11,"serialize","","",112,[[],["result",4]]],[11,"serialize","","",113,[[],["result",4]]],[11,"serialize","","",114,[[],["result",4]]],[11,"serialize","","",115,[[],["result",4]]],[11,"serialize","","",116,[[],["result",4]]],[11,"serialize","","",117,[[],["result",4]]],[11,"serialize","","",118,[[],["result",4]]],[11,"deserialize","sim::analytics","",0,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","sim::cap","",4,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","sim::events","",8,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","sim::make::external","",12,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","","",14,[[],["result",4]]],[11,"deserialize","sim::make::generator","",16,[[],["result",4]]],[11,"deserialize","","",17,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","sim::make::modifier","",20,[[],["result",4]]],[11,"deserialize","sim::make::scenario","",22,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","","",24,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"deserialize","sim::make::spawner","",26,[[],["result",4]]],[11,"deserialize","","",27,[[],["result",4]]],[11,"deserialize","","",34,[[],["result",4]]],[11,"deserialize","sim::mechanics::car","",35,[[],["result",4]]],[11,"deserialize","","",36,[[],["result",4]]],[11,"deserialize","sim::mechanics::driving","",39,[[],["result",4]]],[11,"deserialize","sim::mechanics::intersection","",40,[[],["result",4]]],[11,"deserialize","","",41,[[],["result",4]]],[11,"deserialize","","",42,[[],["result",4]]],[11,"deserialize","","",43,[[],["result",4]]],[11,"deserialize","sim::mechanics::parking","",45,[[],["result",4]]],[11,"deserialize","","",46,[[],["result",4]]],[11,"deserialize","","",47,[[],["result",4]]],[11,"deserialize","","",48,[[],["result",4]]],[11,"deserialize","sim::mechanics::queue","",49,[[],["result",4]]],[11,"deserialize","sim::mechanics::walking","",50,[[],["result",4]]],[11,"deserialize","","",51,[[],["result",4]]],[11,"deserialize","","",52,[[],["result",4]]],[11,"deserialize","sim::pandemic::pandemic","",54,[[],["result",4]]],[11,"deserialize","sim::router","",67,[[],["result",4]]],[11,"deserialize","","",69,[[],["result",4]]],[11,"deserialize","sim::scheduler","",74,[[],["result",4]]],[11,"deserialize","","",75,[[],["result",4]]],[11,"deserialize","","",77,[[],["result",4]]],[11,"deserialize","","",78,[[],["result",4]]],[11,"deserialize","sim::sim","",81,[[],["result",4]]],[11,"deserialize","sim::transit","",86,[[],["result",4]]],[11,"deserialize","","",87,[[],["result",4]]],[11,"deserialize","","",88,[[],["result",4]]],[11,"deserialize","","",89,[[],["result",4]]],[11,"deserialize","","",90,[[],["result",4]]],[11,"deserialize","sim::trips","",91,[[],["result",4]]],[11,"deserialize","","",92,[[],["result",4]]],[11,"deserialize","","",93,[[],["result",4]]],[11,"deserialize","","",94,[[],["result",4]]],[11,"deserialize","","",95,[[],["result",4]]],[11,"deserialize","","",97,[[],["result",4]]],[11,"deserialize","","",98,[[],["result",4]]],[11,"deserialize","sim","",100,[[],["result",4]]],[11,"deserialize","","",101,[[],["result",4]]],[11,"deserialize","","",102,[[],["result",4]]],[11,"deserialize","","",103,[[],["result",4]]],[11,"deserialize","","",104,[[],["result",4]]],[11,"deserialize","","",105,[[],["result",4]]],[11,"deserialize","","",106,[[],["result",4]]],[11,"deserialize","","",107,[[],["result",4]]],[11,"deserialize","","",108,[[],["result",4]]],[11,"deserialize","","",109,[[],["result",4]]],[11,"deserialize","","",110,[[],["result",4]]],[11,"deserialize","","",111,[[],["result",4]]],[11,"deserialize","","",112,[[],["result",4]]],[11,"deserialize","","",113,[[],["result",4]]],[11,"deserialize","","",114,[[],["result",4]]],[11,"deserialize","","",115,[[],["result",4]]],[11,"deserialize","","",116,[[],["result",4]]],[11,"deserialize","","",117,[[],["result",4]]],[11,"deserialize","","",118,[[],["result",4]]],[11,"index","","",100,[[],["usize",15]]],[11,"index","","",101,[[],["usize",15]]],[11,"proletariat_robot","sim::make::generator","Designed in …",16,[[["xorshiftrng",3],["map",3],["timer",3]],["scenario",3]]],[11,"time","sim::sim","",81,[[],["time",3]]],[11,"is_done","","",81,[[],["bool",15]]],[11,"is_empty","","",81,[[],["bool",15]]],[11,"num_trips","","(number of finished trips, number of unfinished trips)",81,[[]]],[11,"num_agents","","",81,[[],[["counter",3],["agenttype",4]]]],[11,"num_commuters_vehicles","","",81,[[],["commutersvehiclescounts",3]]],[11,"num_ppl","","(total number of people, just in buildings, just off map)",81,[[]]],[11,"debug_ped","","",81,[[["pedestrianid",3]]]],[11,"debug_car","","",81,[[["carid",3]]]],[11,"debug_car_ui","","Return a short string to debug a car in the UI.",81,[[["carid",3]],["string",3]]],[11,"debug_intersection","","",81,[[["map",3],["intersectionid",3]]]],[11,"debug_lane","","",81,[[["laneid",3]]]],[11,"agent_properties","","Only call for active agents, will panic otherwise",81,[[["map",3],["agentid",4]],["agentproperties",3]]],[11,"num_transit_passengers","","",81,[[["carid",3]],["usize",15]]],[11,"bus_route_id","","",81,[[["carid",3]],[["option",4],["busrouteid",3]]]],[11,"active_agents","","",81,[[],[["agentid",4],["vec",3]]]],[11,"num_active_agents","","",81,[[],["usize",15]]],[11,"agent_to_trip","","",81,[[["agentid",4]],[["tripid",3],["option",4]]]],[11,"trip_to_agent","","",81,[[["tripid",3]],[["agentid",4],["tripresult",4]]]],[11,"trip_info","","",81,[[["tripid",3]],["tripinfo",3]]],[11,"all_trip_info","","",81,[[],["vec",3]]],[11,"finished_trip_details","","If trip is finished, returns (total time, total waiting …",81,[[["tripid",3]],["option",4]]],[11,"trip_blocked_time","","",81,[[["tripid",3]],["duration",3]]],[11,"trip_to_person","","",81,[[["tripid",3]],[["personid",3],["option",4]]]],[11,"agent_to_person","","",81,[[["agentid",4]],[["personid",3],["option",4]]]],[11,"person_to_agent","","",81,[[["personid",3]],[["option",4],["agentid",4]]]],[11,"get_owner_of_car","","",81,[[["carid",3]],[["personid",3],["option",4]]]],[11,"lookup_parked_car","","",81,[[["carid",3]],[["option",4],["parkedcar",3]]]],[11,"all_parked_car_positions","","For every parked car, (position of parking spot, position …",81,[[["map",3]],["vec",3]]],[11,"lookup_person","","",81,[[["personid",3]],[["person",3],["option",4]]]],[11,"get_person","","",81,[[["personid",3]],["person",3]]],[11,"find_person_by_orig_id","","",81,[[["origpersonid",3]],[["personid",3],["option",4]]]],[11,"get_all_people","","",81,[[],["vec",3]]],[11,"lookup_car_id","","",81,[[["usize",15]],[["option",4],["carid",3]]]],[11,"get_path","","",81,[[["agentid",4]],[["option",4],["path",3]]]],[11,"get_all_driving_paths","","",81,[[],[["path",3],["vec",3]]]],[11,"trace_route","","",81,[[["agentid",4],["map",3]],[["polyline",3],["option",4]]]],[11,"get_canonical_pt_per_trip","","",81,[[["map",3],["tripid",3]],[["pt2d",3],["tripresult",4]]]],[11,"get_canonical_pt_per_person","","",81,[[["personid",3],["map",3]],[["pt2d",3],["option",4]]]],[11,"canonical_pt_for_agent","","",81,[[["agentid",4],["map",3]],[["pt2d",3],["option",4]]]],[11,"get_accepted_agents","","",81,[[["intersectionid",3]],["vec",3]]],[11,"get_waiting_agents","","",81,[[["intersectionid",3]],["vec",3]]],[11,"get_blocked_by_graph","","For every agent that\'s currently not moving, figure out …",81,[[["map",3]],[["agentid",4],["btreemap",3]]]],[11,"status_of_buses","","(bus, stop index it\'s coming from, percent to next stop, …",81,[[["map",3],["busrouteid",3]],["vec",3]]],[11,"get_analytics","","",81,[[],["analytics",3]]],[11,"delayed_intersections","","For intersections with an agent waiting beyond some …",81,[[["duration",3]],["vec",3]]],[11,"bldg_to_people","","",81,[[["buildingid",3]],[["personid",3],["vec",3]]]],[11,"get_pandemic_model","","",81,[[],[["option",4],["pandemicmodel",3]]]],[11,"get_end_of_day","","",81,[[],["time",3]]],[11,"current_stage_and_remaining_time","","",81,[[["intersectionid",3]]]],[11,"all_arrivals_at_border","","",81,[[["intersectionid",3]],["vec",3]]],[11,"target_lane_penalty","","(number of vehicles in the lane, penalty if a bike or …",81,[[["lane",3]]]],[11,"get_people_waiting_at_stop","","",81,[[["busstopid",3]],["vec",3]]],[11,"generate_scenario","","",81,[[["map",3],["string",3]],["scenario",3]]],[11,"get_cap_counter","","",81,[[["roadid",3]],["usize",15]]],[11,"infinite_parking","","",81,[[],["bool",15]]],[11,"all_waiting_people","","",81,[[],[["personid",3],["duration",3],["btreemap",3]]]],[11,"describe_internal_stats","","",81,[[],[["vec",3],["string",3]]]],[11,"debug_queue_lengths","","",81,[[["laneid",3]],["option",4]]],[11,"get_trip_time_lower_bound","","Returns the best-case time for a trip in a world with no …",81,[[["map",3],["tripid",3]],[["duration",3],["result",6]]]],[11,"get_highlighted_people","","",81,[[],["option",4]]],[11,"step_count","","",81,[[],["usize",15]]],[11,"get_draw_car","","",81,[[["carid",3],["map",3]],[["drawcarinput",3],["option",4]]]],[11,"get_draw_ped","","",81,[[["pedestrianid",3],["map",3]],[["drawpedestrianinput",3],["option",4]]]],[11,"get_draw_cars","","",81,[[["map",3],["traversable",4]],[["vec",3],["drawcarinput",3]]]],[11,"get_draw_peds","","",81,[[["map",3],["traversable",4]]]],[11,"get_all_draw_cars","","",81,[[["map",3]],[["vec",3],["drawcarinput",3]]]],[11,"get_all_draw_peds","","",81,[[["map",3]],[["drawpedestrianinput",3],["vec",3]]]],[11,"get_unzoomed_agents","","This does not include transit riders. Some callers need …",81,[[["map",3]],[["vec",3],["unzoomedagent",3]]]],[11,"get_unzoomed_transit_riders","","",81,[[["map",3]],[["vec",3],["unzoomedagent",3]]]]],"p":[[3,"Analytics"],[3,"TripPhase"],[3,"TimeSeriesCount"],[3,"Window"],[3,"CapSimState"],[4,"CapResult"],[13,"Cancel"],[3,"Zone"],[4,"Event"],[13,"TripFinished"],[4,"AlertLocation"],[4,"TripPhaseType"],[3,"ExternalPerson"],[3,"ExternalTrip"],[4,"ExternalTripEndpoint"],[3,"MapBorders"],[3,"ScenarioGenerator"],[3,"SpawnOverTime"],[3,"BorderSpawnOverTime"],[3,"SimFlags"],[4,"ScenarioModifier"],[13,"ChangeMode"],[3,"Scenario"],[3,"PersonSpec"],[3,"IndividTrip"],[4,"TripPurpose"],[3,"StartTripArgs"],[4,"TripSpec"],[13,"VehicleAppearing"],[13,"SpawningFailure"],[13,"UsingParkedCar"],[13,"JustWalking"],[13,"UsingBike"],[13,"UsingTransit"],[4,"TripEndpoint"],[3,"Car"],[4,"CarState"],[13,"Queued"],[13,"WaitingToAdvance"],[3,"DrivingSimState"],[3,"IntersectionSimState"],[3,"State"],[3,"SignalState"],[3,"Request"],[8,"ParkingSim"],[4,"ParkingSimState"],[3,"NormalParkingSimState"],[3,"ParkingLane"],[3,"InfiniteParkingSimState"],[3,"Queue"],[3,"WalkingSimState"],[3,"Pedestrian"],[4,"PedState"],[3,"PandemicModel"],[4,"Cmd"],[3,"SharedSpace"],[3,"AnyTime"],[4,"StateEvent"],[3,"Event"],[4,"State"],[3,"TrafficRecorder"],[3,"DrawPedestrianInput"],[3,"DrawPedCrowdInput"],[4,"PedCrowdLocation"],[3,"DrawCarInput"],[4,"CarStatus"],[3,"UnzoomedAgent"],[3,"Router"],[4,"ActionAtEnd"],[4,"Goal"],[13,"ParkNearBuilding"],[13,"EndAtBorder"],[13,"BikeThenStop"],[13,"FollowBusRoute"],[4,"Command"],[4,"CommandType"],[4,"SimpleCommandType"],[3,"Item"],[3,"Scheduler"],[3,"AgentProperties"],[4,"DelayCause"],[3,"Sim"],[3,"Ctx"],[3,"SimOptions"],[4,"AlertHandler"],[8,"SimCallback"],[3,"Stop"],[3,"Route"],[3,"Bus"],[4,"BusState"],[3,"TransitSimState"],[3,"TripManager"],[3,"Trip"],[3,"TripInfo"],[4,"TripLeg"],[4,"TripMode"],[4,"TripResult"],[3,"Person"],[4,"PersonState"],[3,"CommutersVehiclesCounts"],[3,"CarID"],[3,"PedestrianID"],[4,"AgentID"],[4,"AgentType"],[3,"TripID"],[3,"PersonID"],[3,"OrigPersonID"],[4,"VehicleType"],[3,"Vehicle"],[3,"VehicleSpec"],[4,"ParkingSpot"],[3,"ParkedCar"],[4,"DrivingGoal"],[3,"SidewalkSpot"],[4,"SidewalkPOI"],[3,"TimeInterval"],[3,"DistanceInterval"],[3,"CreatePedestrian"],[3,"CreateCar"]]},\
"sumo":{"doc":"This crate provides a Rust interface to different parts …","i":[[0,"normalize","sumo","Transforms a <code>raw::Network</code> into a <code>Network</code> that\'s easier to …",null,null],[0,"raw","","Parse SUMO networks from XML without making any …",null,null],[3,"Network","sumo::raw","",null,null],[12,"location","","",0,null],[12,"types","","",0,null],[12,"edges","","",0,null],[12,"junctions","","",0,null],[12,"connections","","",0,null],[3,"Location","","",null,null],[12,"converted_boundary","","",1,null],[12,"orig_boundary","","",1,null],[11,"parse","","",0,[[["timer",3],["str",15]],[["network",3],["result",6]]]],[3,"EdgeID","","",null,null],[12,"0","","",2,null],[3,"NodeID","","",null,null],[12,"0","","",3,null],[3,"LaneID","","",null,null],[12,"0","","",4,null],[3,"InternalLaneID","","",null,null],[12,"0","","",5,null],[3,"Type","","",null,null],[12,"id","","",6,null],[12,"priority","","",6,null],[12,"speed","","",6,null],[12,"width","","",6,null],[12,"allow","","",6,null],[12,"disallow","","",6,null],[3,"Edge","","",null,null],[12,"id","","",7,null],[12,"name","","",7,null],[12,"from","","",7,null],[12,"to","","",7,null],[12,"priority","","",7,null],[12,"function","","",7,null],[12,"lanes","","",7,null],[12,"edge_type","","",7,null],[12,"spread_type","","",7,null],[12,"shape","","",7,null],[4,"Function","","",null,null],[13,"Normal","","",8,null],[13,"Internal","","",8,null],[4,"SpreadType","","",null,null],[13,"Right","","",9,null],[13,"Center","","",9,null],[13,"RoadCenter","","",9,null],[3,"Lane","","",null,null],[12,"id","","This could be a LaneID or an InternalLaneID. It\'ll be …",10,null],[12,"index","","",10,null],[12,"speed","","",10,null],[12,"length","","",10,null],[12,"width","","",10,null],[12,"shape","","",10,null],[12,"allow","","",10,null],[12,"disallow","","",10,null],[3,"Junction","","",null,null],[12,"id","","",11,null],[12,"junction_type","","",11,null],[12,"x","","",11,null],[12,"y","","",11,null],[12,"incoming_lanes","","",11,null],[12,"internal_lanes","","",11,null],[12,"shape","","",11,null],[11,"pt","","",11,[[],["pt2d",3]]],[3,"Connection","","",null,null],[12,"from","","",12,null],[12,"from_lane","","",12,null],[12,"to","","",12,null],[12,"to_lane","","",12,null],[12,"via","","",12,null],[12,"dir","","",12,null],[11,"from_lane","","",12,[[],["laneid",3]]],[11,"to_lane","","",12,[[],["laneid",3]]],[4,"Direction","","",null,null],[13,"Straight","","",13,null],[13,"Turn","","",13,null],[13,"Left","","",13,null],[13,"Right","","",13,null],[13,"PartiallyLeft","","",13,null],[13,"PartiallyRight","","",13,null],[13,"Invalid","","",13,null],[5,"parse_f64s","","",null,[[["deserializer",8]],[["result",4],["vec",3]]]],[5,"parse_bounds","","",null,[[["deserializer",8]],[["bounds",3],["result",4]]]],[5,"parse_gps_bounds","","",null,[[["deserializer",8]],[["gpsbounds",3],["result",4]]]],[5,"parse_list_vehicles","","",null,[[["deserializer",8]],[["vec",3],["result",4]]]],[5,"parse_list_lanes","","",null,[[["deserializer",8]],[["vec",3],["result",4]]]],[5,"parse_list_internal_lanes","","",null,[[["deserializer",8]],[["vec",3],["result",4]]]],[5,"parse_pts","","",null,[[["deserializer",8]],[["vec",3],["result",4]]]],[5,"parse_pl","","",null,[[["deserializer",8]],[["result",6],["result",4]]]],[5,"must_parse_pl","","",null,[[["deserializer",8]],[["option",4],["result",4]]]],[5,"parse_polygon","","",null,[[["deserializer",8]],[["result",4],["option",4]]]],[5,"parse_pt","","",null,[[["str",15]],[["pt2d",3],["result",6]]]],[3,"Connection","sumo","",null,null],[12,"from","","",12,null],[12,"from_lane","","",12,null],[12,"to","","",12,null],[12,"to_lane","","",12,null],[12,"via","","",12,null],[12,"dir","","",12,null],[4,"Direction","","",null,null],[13,"Straight","","",13,null],[13,"Turn","","",13,null],[13,"Left","","",13,null],[13,"Right","","",13,null],[13,"PartiallyLeft","","",13,null],[13,"PartiallyRight","","",13,null],[13,"Invalid","","",13,null],[3,"EdgeID","","",null,null],[12,"0","","",2,null],[3,"InternalLaneID","","",null,null],[12,"0","","",5,null],[3,"LaneID","","",null,null],[12,"0","","",4,null],[3,"NodeID","","",null,null],[12,"0","","",3,null],[3,"Network","","A normalized form of a SUMO network. A <code>raw::Network</code> is a …",null,null],[12,"location","","",14,null],[12,"normal_edges","","",14,null],[12,"internal_edges","","",14,null],[12,"junctions","","",14,null],[12,"connections","","",14,null],[3,"Edge","","",null,null],[12,"id","","",15,null],[12,"edge_type","","",15,null],[12,"name","","",15,null],[12,"from","","",15,null],[12,"to","","",15,null],[12,"priority","","",15,null],[12,"lanes","","",15,null],[12,"center_line","","",15,null],[3,"Lane","","",null,null],[12,"id","","",16,null],[12,"index","","0 is the rightmost lane",16,null],[12,"speed","","",16,null],[12,"length","","",16,null],[12,"width","","",16,null],[12,"center_line","","",16,null],[12,"allow","","",16,null],[3,"InternalEdge","","See …",null,null],[12,"id","","",17,null],[12,"lanes","","",17,null],[3,"InternalLane","","",null,null],[12,"id","","",18,null],[12,"index","","",18,null],[12,"speed","","",18,null],[12,"length","","",18,null],[12,"center_line","","",18,null],[12,"allow","","",18,null],[3,"Junction","","",null,null],[12,"id","","",19,null],[12,"junction_type","","",19,null],[12,"pt","","",19,null],[12,"incoming_lanes","","",19,null],[12,"internal_lanes","","",19,null],[12,"shape","","",19,null],[4,"VehicleClass","","",null,null],[13,"Pedestrian","","",20,null],[13,"Bicycle","","",20,null],[13,"RailUrban","","",20,null],[13,"Other","","",20,null],[11,"from","sumo::raw","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"equivalent","","",2,[[],["bool",15]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"equivalent","","",3,[[],["bool",15]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"equivalent","","",4,[[],["bool",15]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"equivalent","","",5,[[],["bool",15]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","sumo","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"clone","sumo::raw","",2,[[],["edgeid",3]]],[11,"clone","","",3,[[],["nodeid",3]]],[11,"clone","","",4,[[],["laneid",3]]],[11,"clone","","",5,[[],["internallaneid",3]]],[11,"default","","",8,[[],["function",4]]],[11,"default","","",9,[[],["spreadtype",4]]],[11,"cmp","","",2,[[["edgeid",3]],["ordering",4]]],[11,"cmp","","",3,[[["nodeid",3]],["ordering",4]]],[11,"cmp","","",4,[[["laneid",3]],["ordering",4]]],[11,"cmp","","",5,[[["internallaneid",3]],["ordering",4]]],[11,"eq","","",2,[[["edgeid",3]],["bool",15]]],[11,"ne","","",2,[[["edgeid",3]],["bool",15]]],[11,"eq","","",3,[[["nodeid",3]],["bool",15]]],[11,"ne","","",3,[[["nodeid",3]],["bool",15]]],[11,"eq","","",4,[[["laneid",3]],["bool",15]]],[11,"ne","","",4,[[["laneid",3]],["bool",15]]],[11,"eq","","",5,[[["internallaneid",3]],["bool",15]]],[11,"ne","","",5,[[["internallaneid",3]],["bool",15]]],[11,"eq","","",8,[[["function",4]],["bool",15]]],[11,"eq","sumo","",20,[[["vehicleclass",4]],["bool",15]]],[11,"ne","","",20,[[["vehicleclass",4]],["bool",15]]],[11,"partial_cmp","sumo::raw","",2,[[["edgeid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["edgeid",3]],["bool",15]]],[11,"le","","",2,[[["edgeid",3]],["bool",15]]],[11,"gt","","",2,[[["edgeid",3]],["bool",15]]],[11,"ge","","",2,[[["edgeid",3]],["bool",15]]],[11,"partial_cmp","","",3,[[["nodeid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",3,[[["nodeid",3]],["bool",15]]],[11,"le","","",3,[[["nodeid",3]],["bool",15]]],[11,"gt","","",3,[[["nodeid",3]],["bool",15]]],[11,"ge","","",3,[[["nodeid",3]],["bool",15]]],[11,"partial_cmp","","",4,[[["laneid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["laneid",3]],["bool",15]]],[11,"le","","",4,[[["laneid",3]],["bool",15]]],[11,"gt","","",4,[[["laneid",3]],["bool",15]]],[11,"ge","","",4,[[["laneid",3]],["bool",15]]],[11,"partial_cmp","","",5,[[["internallaneid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",5,[[["internallaneid",3]],["bool",15]]],[11,"le","","",5,[[["internallaneid",3]],["bool",15]]],[11,"gt","","",5,[[["internallaneid",3]],["bool",15]]],[11,"ge","","",5,[[["internallaneid",3]],["bool",15]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"load","sumo","Reads a .net.xml file and return the normalized SUMO …",14,[[["timer",3],["str",15]],[["network",3],["result",6]]]],[11,"from_raw","","",14,[[["network",3]],["network",3]]],[11,"fix_coordinates","","Normalize coordinates to map-space, with Y increasing …",14,[[]]]],"p":[[3,"Network"],[3,"Location"],[3,"EdgeID"],[3,"NodeID"],[3,"LaneID"],[3,"InternalLaneID"],[3,"Type"],[3,"Edge"],[4,"Function"],[4,"SpreadType"],[3,"Lane"],[3,"Junction"],[3,"Connection"],[4,"Direction"],[3,"Network"],[3,"Edge"],[3,"Lane"],[3,"InternalEdge"],[3,"InternalLane"],[3,"Junction"],[4,"VehicleClass"]]},\
"tests":{"doc":"Integration tests","i":[[5,"main","tests","",null,[[],["result",6]]],[5,"test_map_importer","","Test the map pipeline by importing simple, handcrafted …",null,[[],["result",6]]],[5,"import_map","","Run the contents of a .osm through the full map importer …",null,[[["string",3]],["map",3]]],[5,"dump_turn_goldenfile","","Verify what turns are generated by writing (from lane, to …",null,[[["map",3]],["result",6]]],[5,"smoke_test","","Simulate an hour on every map.",null,[[],["result",6]]],[5,"dump_route_goldenfile","","Describe all public transit routes and keep under version …",null,[[["map",3]],["result",6]]],[5,"check_proposals","","Verify all edits under version control can be correctly …",null,[[],["result",6]]],[5,"test_lane_changing","","Verify lane-chaging behavior is overall reasonable, by …",null,[[["map",3]],["result",6]]]],"p":[]},\
"traffic_seitan":{"doc":"","i":[[5,"main","traffic_seitan","",null,[[]]],[5,"run","","",null,[[["map",3],["sim",3],["timer",3],["xorshiftrng",3]]]],[5,"alter_turn_destinations","","",null,[[["mapedits",3],["sim",3],["map",3],["xorshiftrng",3]]]],[5,"nuke_random_parking","","",null,[[["map",3],["mapedits",3],["xorshiftrng",3]]]]],"p":[]},\
"traffic_signal_data":{"doc":"A representation of traffic signal configuration that …","i":[[3,"TrafficSignal","traffic_signal_data","",null,null],[12,"intersection_osm_node_id","","The ID of the OSM node representing the intersection with …",0,null],[12,"plans","","The traffic signal uses configuration from one plan at a …",0,null],[3,"Plan","","A plan describes how a traffic signal is configured …",null,null],[12,"start_time_seconds","","This plan takes effect at this local time, measured in …",1,null],[12,"stages","","The traffic signal repeatedly cycles through these …",1,null],[12,"offset_seconds","","Relative to a central clock, delay the first stage by …",1,null],[3,"Stage","","A traffic signal is in one stage at any time. The stage …",null,null],[12,"protected_turns","","During this stage, these turns can be performed with the …",2,null],[12,"permitted_turns","","During this stage, these turns can be performed after …",2,null],[12,"stage_type","","The stage lasts this long before moving to the next one.",2,null],[4,"StageType","","How long a stage lasts before moving to the next one.",null,null],[13,"Fixed","","A fixed number of seconds.",3,null],[13,"Variable","","Minimum, Delay, Additional Minimum is the minimum cycle …",3,null],[3,"Turn","","A movement through an intersection.",null,null],[12,"from","","The movement begins at the end of this road segment.",4,null],[12,"to","","The movement ends at the beginning of this road segment.",4,null],[12,"intersection_osm_node_id","","The ID of the OSM node representing the intersection. …",4,null],[12,"is_crosswalk","","True iff the movement is along a crosswalk. Note that …",4,null],[3,"DirectedRoad","","A road segment connecting two intersections, and a …",null,null],[12,"osm_way_id","","The ID of the OSM way representing the road.",5,null],[12,"osm_node1","","The ID of the OSM node at the start of this road segment.",5,null],[12,"osm_node2","","The ID of the OSM node at the end of this road segment.",5,null],[12,"is_forwards","","The direction along the road segment. See …",5,null],[7,"DATA","","",null,null],[5,"load_all_data","","Returns all traffic signal data compiled into this build, …",null,[[],[["btreemap",3],["error",3],["result",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"clone","","",0,[[],["trafficsignal",3]]],[11,"clone","","",1,[[],["plan",3]]],[11,"clone","","",2,[[],["stage",3]]],[11,"clone","","",3,[[],["stagetype",4]]],[11,"clone","","",4,[[],["turn",3]]],[11,"clone","","",5,[[],["directedroad",3]]],[11,"cmp","","",4,[[["turn",3]],["ordering",4]]],[11,"cmp","","",5,[[["directedroad",3]],["ordering",4]]],[11,"eq","","",0,[[["trafficsignal",3]],["bool",15]]],[11,"ne","","",0,[[["trafficsignal",3]],["bool",15]]],[11,"eq","","",1,[[["plan",3]],["bool",15]]],[11,"ne","","",1,[[["plan",3]],["bool",15]]],[11,"eq","","",2,[[["stage",3]],["bool",15]]],[11,"ne","","",2,[[["stage",3]],["bool",15]]],[11,"eq","","",3,[[["stagetype",4]],["bool",15]]],[11,"ne","","",3,[[["stagetype",4]],["bool",15]]],[11,"eq","","",4,[[["turn",3]],["bool",15]]],[11,"ne","","",4,[[["turn",3]],["bool",15]]],[11,"eq","","",5,[[["directedroad",3]],["bool",15]]],[11,"ne","","",5,[[["directedroad",3]],["bool",15]]],[11,"partial_cmp","","",4,[[["turn",3]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["turn",3]],["bool",15]]],[11,"le","","",4,[[["turn",3]],["bool",15]]],[11,"gt","","",4,[[["turn",3]],["bool",15]]],[11,"ge","","",4,[[["turn",3]],["bool",15]]],[11,"partial_cmp","","",5,[[["directedroad",3]],[["option",4],["ordering",4]]]],[11,"lt","","",5,[[["directedroad",3]],["bool",15]]],[11,"le","","",5,[[["directedroad",3]],["bool",15]]],[11,"gt","","",5,[[["directedroad",3]],["bool",15]]],[11,"ge","","",5,[[["directedroad",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]]],"p":[[3,"TrafficSignal"],[3,"Plan"],[3,"Stage"],[4,"StageType"],[3,"Turn"],[3,"DirectedRoad"]]},\
"updater":{"doc":"","i":[[17,"MD5_BUF_READ_SIZE","updater","",null,null],[5,"main","","",null,[[]]],[5,"download_updates","","",null,[[["string",3]]]],[5,"just_compare","","",null,[[]]],[5,"upload","","",null,[[["string",3]]]],[5,"opt_into_all","","",null,[[]]],[5,"generate_manifest","","",null,[[],["manifest",3]]],[5,"md5sum","","Returns (checksum, uncompressed_size_bytes)",null,[[["str",15]]]],[5,"rm","","",null,[[["str",15]]]],[5,"download_file","","",null,[[["str",15]]]],[5,"remove_empty_directories","","",null,[[["str",15]]]]],"p":[]},\
"widgetry":{"doc":"WidgetsIf none of these do what you need, implementing a …","i":[[0,"table","widgetry","",null,null],[3,"Table","widgetry::table","",null,null],[12,"id","","",0,null],[12,"data","","",0,null],[12,"label_per_row","","",0,null],[12,"columns","","",0,null],[12,"filter","","",0,null],[12,"sort_by","","",0,null],[12,"descending","","",0,null],[12,"skip","","",0,null],[4,"Col","","",null,null],[13,"Static","","",1,null],[13,"Sortable","","",1,null],[3,"Filter","","",null,null],[12,"state","","",2,null],[12,"to_controls","","",2,null],[12,"from_controls","","",2,null],[12,"apply","","",2,null],[0,"app_state","widgetry","A widgetry application splits its state into two pieces: …",null,null],[8,"SharedAppState","widgetry::app_state","Any data that should last the entire lifetime of the …",null,null],[11,"before_event","","Before <code>State::event</code> is called, call this.",3,[[]]],[11,"draw_default","","When DrawBaselayer::DefaultDraw is called, run this.",3,[[["gfxctx",3]]]],[11,"dump_before_abort","","Will be called if <code>State::event</code> or <code>State::draw</code> panics.",3,[[["canvas",3]]]],[11,"before_quit","","Called before a normal exit, like window close",3,[[["canvas",3]]]],[3,"App","","",null,null],[12,"states","","A stack of states",4,null],[12,"shared_app_state","","",4,null],[11,"event","","",4,[[["eventctx",3]]]],[11,"draw","","",4,[[["gfxctx",3]]]],[11,"execute_transition","","If true, then the top-most state on the stack needs to be …",4,[[["eventctx",3],["transition",4]],["bool",15]]],[4,"DrawBaselayer","","Before <code>State::draw</code> is called, draw something else.",null,null],[13,"DefaultDraw","","Call <code>SharedAppState::draw_default</code>.",5,null],[13,"Custom","","Don\'t draw anything.",5,null],[13,"PreviousState","","Call the previous state\'s <code>draw</code>. This won\'t recurse, even …",5,null],[8,"State","","A temporary state of an application. There\'s a stack of …",null,null],[10,"event","","Respond to a UI event, such as input or time passing.",6,[[["eventctx",3]],["transition",4]]],[10,"draw","","Draw",6,[[["gfxctx",3]]]],[11,"draw_baselayer","","Specifies what to draw before draw()",6,[[],["drawbaselayer",4]]],[11,"on_destroy","","Before this state is popped or replaced, call this.",6,[[["eventctx",3]]]],[11,"is","","Returns true if the trait object wraps an object of type …",6,[[],["bool",15]]],[11,"downcast","","Returns a boxed object from a boxed trait object if the …",6,[[["box",3]],[["box",3],["box",3],["result",4]]]],[11,"downcast_rc","","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …",6,[[["rc",3]],[["result",4],["rc",3],["rc",3]]]],[11,"downcast_ref","","Returns a reference to the object within the trait object …",6,[[],["option",4]]],[11,"downcast_mut","","Returns a mutable reference to the object within the …",6,[[],["option",4]]],[4,"Transition","","When a state responds to an event, it can specify some …",null,null],[13,"Keep","","Don\'t do anything, keep the current state as the active …",7,null],[13,"KeepWithMouseover","","Keep the current state as the active one, but immediately …",7,null],[13,"Pop","","Destroy the current state, and resume from the previous …",7,null],[13,"ModifyState","","If a state needs to pass data back to its parent, use …",7,null],[13,"ReplaceWithData","","",7,null],[13,"Push","","Push a new active state on the top of the stack.",7,null],[13,"Replace","","Replace the current state with a new one. Equivalent to …",7,null],[13,"Clear","","Replace the entire stack of states with this stack.",7,null],[13,"Multi","","Execute a sequence of transitions in order.",7,null],[8,"SimpleState","","Many states fit a pattern of managing a single panel, …",null,null],[10,"on_click","","Called when something on the panel has been clicked. …",8,[[["eventctx",3],["panel",3],["str",15]],["transition",4]]],[11,"panel_changed","","Called when something on the panel has changed. If a …",8,[[["eventctx",3],["panel",3]],[["transition",4],["option",4]]]],[11,"on_mouseover","","Called when the mouse has moved.",8,[[["eventctx",3]]]],[11,"other_event","","If a panel <code>on_click</code> event didn\'t occur and <code>panel_changed</code> …",8,[[["eventctx",3]],["transition",4]]],[11,"draw","","",8,[[["gfxctx",3]]]],[11,"draw_baselayer","","",8,[[],["drawbaselayer",4]]],[11,"new","","",8,[[["panel",3],["simplestate",8],["box",3]],[["box",3],["state",8]]]],[3,"SimpleStateWrapper","","",null,null],[12,"panel","","",9,null],[12,"inner","","",9,null],[0,"assets","widgetry","",null,null],[3,"Assets","widgetry::assets","",null,null],[12,"default_line_height","","",10,null],[12,"text_cache","","",10,null],[12,"line_height_cache","","",10,null],[12,"svg_cache","","",10,null],[12,"font_to_id","","",10,null],[12,"extra_fonts","","",10,null],[12,"style","","",10,null],[12,"text_opts","","",10,null],[12,"read_svg","","",10,null],[12,"base_url","","",10,null],[12,"are_gzipped","","",10,null],[11,"new","","",10,[[["style",3],["string",3],["box",3],["option",4],["bool",15],["fn",8]],["assets",3]]],[11,"base_url","","",10,[[],[["option",4],["str",15]]]],[11,"are_gzipped","","",10,[[],["bool",15]]],[11,"is_font_loaded","","",10,[[["str",15]],["bool",15]]],[11,"load_font","","",10,[[["u8",15],["vec",3],["str",15]]]],[11,"line_height","","",10,[[["usize",15],["font",4]],["f64",15]]],[11,"get_cached_text","","",10,[[["string",3]],[["geombatch",3],["option",4]]]],[11,"cache_text","","",10,[[["string",3],["geombatch",3]]]],[11,"clear_text_cache","","",10,[[]]],[11,"get_cached_svg","","",10,[[["str",15]],["option",4]]],[11,"cache_svg","","",10,[[["string",3],["geombatch",3],["bounds",3]]]],[0,"backend_glow","widgetry","",null,null],[5,"build_program","widgetry::backend_glow","",null,[[["context",3],["str",15]],[["program",6],["result",6]]]],[5,"compile_shader","","",null,[[["u32",15],["context",3],["str",15]],[["shader",6],["result",6]]]],[3,"GfxCtxInnards","","",null,null],[12,"gl","","",11,null],[12,"program","","",11,null],[12,"current_clip","","",11,null],[11,"new","","",11,[[["context",3]]]],[11,"clear","","",11,[[["color",3]]]],[11,"redraw","","",11,[[["drawable",3],["prerenderinnards",3],["uniforms",3]]]],[11,"enable_clipping","","",11,[[["f64",15],["screenrectangle",3],["canvas",3]]]],[11,"disable_clipping","","",11,[[["f64",15],["canvas",3]]]],[11,"take_clip","","",11,[[["f64",15],["canvas",3]],["option",4]]],[11,"restore_clip","","",11,[[["option",4]]]],[3,"Drawable","","Geometry that\'s been uploaded to the GPU once and can be …",null,null],[12,"vert_array","","",12,null],[12,"vert_buffer","","",12,null],[12,"elem_buffer","","",12,null],[12,"num_indices","","",12,null],[12,"gl","","",12,null],[11,"empty","","This has no effect when drawn.",12,[[["eventctx",3]],["drawable",3]]],[3,"VertexArray","","",null,null],[12,"id","","",13,null],[12,"was_destroyed","","",13,null],[11,"new","","",13,[[["context",3]],["vertexarray",3]]],[11,"destroy","","",13,[[["context",3]]]],[3,"Buffer","","",null,null],[12,"id","","",14,null],[12,"was_destroyed","","",14,null],[11,"new","","",14,[[["context",3]],["buffer",3]]],[11,"destroy","","",14,[[["context",3]]]],[6,"WindowAdapter","","",null,null],[3,"PrerenderInnards","","",null,null],[12,"gl","","",15,null],[12,"window_adapter","","",15,null],[12,"program","","",15,null],[12,"total_bytes_uploaded","","",15,null],[11,"new","","",15,[[["windowadapter",3],["context",3]],["prerenderinnards",3]]],[11,"actually_upload","","",15,[[["bool",15],["geombatch",3]],["drawable",3]]],[11,"window","","",15,[[],["window",3]]],[11,"request_redraw","","",15,[[]]],[11,"set_cursor_icon","","",15,[[["cursoricon",4]]]],[11,"draw_new_frame","","",15,[[],["gfxctxinnards",3]]],[11,"window_resized","","",15,[[["f64",15],["screendims",3]]]],[11,"window_size","","",15,[[["f64",15]],["screendims",3]]],[11,"set_window_icon","","",15,[[["icon",3]]]],[11,"monitor_scale_factor","","",15,[[],["f64",15]]],[11,"draw_finished","","",15,[[["gfxctxinnards",3]]]],[11,"screencap","","",15,[[["string",3],["screendims",3]],["result",6]]],[3,"SpriteTexture","","Uploads a sprite sheet of textures to the GPU so they can …",null,null],[12,"texture_bytes","","",16,null],[12,"sprite_width","","",16,null],[12,"sprite_height","","",16,null],[12,"sprite_count","","",16,null],[11,"new","","",16,[[["u32",15],["vec",3],["u8",15]],["result",6]]],[11,"upload_webgl1","","",16,[[["context",3]],["result",6]]],[11,"upload_gl2","","",16,[[["context",3]],["result",6]]],[0,"backend_glow_native","widgetry","",null,null],[5,"setup","widgetry::backend_glow_native","",null,[[["settings",3],["timer",3]]]],[3,"WindowAdapter","","",null,null],[12,"0","","",17,null],[11,"window","","",17,[[],["window",3]]],[11,"window_resized","","",17,[[["f64",15],["screendims",3]]]],[11,"draw_finished","","",17,[[["gfxctxinnards",3]]]],[0,"canvas","widgetry","",null,null],[17,"DRAG_THRESHOLD","widgetry::canvas","",null,null],[17,"PAN_SPEED","","",null,null],[17,"PANNING_THRESHOLD","","",null,null],[3,"Canvas","","",null,null],[12,"cam_x","","",18,null],[12,"cam_y","","",18,null],[12,"cam_zoom","","",18,null],[12,"cursor","","",18,null],[12,"window_has_cursor","","",18,null],[12,"drag_canvas_from","","",18,null],[12,"drag_just_ended","","",18,null],[12,"window_width","","",18,null],[12,"window_height","","",18,null],[12,"map_dims","","",18,null],[12,"invert_scroll","","",18,null],[12,"touchpad_to_move","","",18,null],[12,"edge_auto_panning","","",18,null],[12,"keys_to_pan","","",18,null],[12,"gui_scroll_speed","","",18,null],[12,"covered_areas","","",18,null],[12,"keys_held","","",18,null],[11,"new","","",18,[[["screendims",3]],["canvas",3]]],[11,"min_zoom","","",18,[[],["f64",15]]],[11,"handle_event","","",18,[[["userinput",3]],[["updatetype",4],["option",4]]]],[11,"zoom","","",18,[[["f64",15],["screenpt",3]]]],[11,"start_drawing","","",18,[[]]],[11,"mark_covered_area","","",18,[[["screenrectangle",3]]]],[11,"get_cursor","","",18,[[],["screenpt",3]]],[11,"get_cursor_in_screen_space","","",18,[[],[["screenpt",3],["option",4]]]],[11,"get_cursor_in_map_space","","",18,[[],[["option",4],["pt2d",3]]]],[11,"screen_to_map","","",18,[[["screenpt",3]],["pt2d",3]]],[11,"center_to_screen_pt","","",18,[[],["screenpt",3]]],[11,"center_to_map_pt","","",18,[[],["pt2d",3]]],[11,"center_on_map_pt","","",18,[[["pt2d",3]]]],[11,"map_to_screen","","",18,[[["pt2d",3]],["screenpt",3]]],[11,"get_inner_bounds","","",18,[[],["bounds",3]]],[11,"get_window_dims","","",18,[[],["screendims",3]]],[11,"get_map_bounds","","",18,[[],["bounds",3]]],[11,"get_screen_bounds","","",18,[[],["bounds",3]]],[11,"align_window","","",18,[[["verticalalignment",4],["screendims",3],["horizontalalignment",4]],["screenpt",3]]],[17,"INSET","","",null,null],[4,"HorizontalAlignment","","",null,null],[13,"Left","","",19,null],[13,"LeftInset","","",19,null],[13,"Center","","",19,null],[13,"Right","","",19,null],[13,"RightInset","","",19,null],[13,"Percent","","",19,null],[13,"Centered","","",19,null],[4,"VerticalAlignment","","",null,null],[13,"Top","","",20,null],[13,"TopInset","","",20,null],[13,"Center","","",20,null],[13,"Bottom","","",20,null],[13,"BottomInset","","",20,null],[13,"BottomAboveOSD","","",20,null],[13,"Percent","","",20,null],[13,"Above","","",20,null],[13,"Below","","",20,null],[0,"color","widgetry","",null,null],[3,"Color","widgetry::color","",null,null],[12,"r","","",21,null],[12,"g","","",21,null],[12,"b","","",21,null],[12,"a","","",21,null],[4,"Fill","","",null,null],[13,"Color","","",22,null],[13,"LinearGradient","","",22,null],[13,"Texture","","Once uploaded, textures are addressed by their id, …",22,null],[13,"ColoredTexture","","The <code>color</code> parameter is multiplied by any color baked into …",22,null],[3,"Texture","","",null,null],[12,"0","","",23,null],[18,"NOOP","","",23,null],[18,"GRASS","","",23,null],[18,"STILL_WATER","","",23,null],[18,"RUNNING_WATER","","",23,null],[18,"CONCRETE","","",23,null],[18,"SAND","","",23,null],[18,"DIRT","","",23,null],[18,"SNOW","","",23,null],[18,"TREE","","",23,null],[18,"PINE_TREE","","",23,null],[18,"CACTUS","","",23,null],[18,"SHRUB","","",23,null],[18,"SNOW_PERSON","","",23,null],[18,"CLEAR","","",21,null],[18,"BLACK","","",21,null],[18,"WHITE","","",21,null],[18,"RED","","",21,null],[18,"GREEN","","",21,null],[18,"BLUE","","",21,null],[18,"CYAN","","",21,null],[18,"YELLOW","","",21,null],[18,"PURPLE","","",21,null],[18,"PINK","","",21,null],[18,"ORANGE","","",21,null],[11,"rgb","","",21,[[["usize",15]],["color",3]]],[11,"rgb_f","","",21,[[["f32",15]],["color",3]]],[11,"rgba","","",21,[[["usize",15],["f32",15]],["color",3]]],[11,"rgba_f","","",21,[[["f32",15]],["color",3]]],[11,"grey","","",21,[[["f32",15]],["color",3]]],[11,"alpha","","",21,[[["f32",15]],["color",3]]],[11,"hex","","",21,[[["str",15]],["color",3]]],[11,"to_hex","","",21,[[],["string",3]]],[11,"lerp","","",21,[[["f64",15],["color",3]],["color",3]]],[11,"shade","","",21,[[["f64",15]],["color",3]]],[11,"tint","","",21,[[["f64",15]],["color",3]]],[11,"dull","","",21,[[["f64",15]],["color",3]]],[3,"LinearGradient","","",null,null],[12,"line","","",24,null],[12,"stops","","",24,null],[11,"new","","",24,[[["lineargradient",3]],["fill",4]]],[11,"interp","","",24,[[["pt2d",3]],["color",3]]],[5,"to_pct","","",null,[[["f64",15]],["f64",15]]],[5,"lerp","","",null,[[["f64",15]],["f32",15]]],[11,"shader_style","","",22,[[["pt2d",3]]]],[0,"drawing","widgetry","",null,null],[17,"MAPSPACE_Z","widgetry::drawing","",null,null],[17,"SCREENSPACE_Z","","",null,null],[17,"MENU_Z","","",null,null],[17,"TOOLTIP_Z","","",null,null],[3,"Uniforms","","",null,null],[12,"transform","","",25,null],[12,"window","","",25,null],[11,"new","","",25,[[["canvas",3]],["uniforms",3]]],[3,"GfxCtx","","",null,null],[12,"inner","","",26,null],[12,"uniforms","","",26,null],[12,"screencap_mode","","",26,null],[12,"naming_hint","","",26,null],[12,"canvas","","",26,null],[12,"prerender","","",26,null],[12,"style","","",26,null],[12,"num_draw_calls","","",26,null],[12,"num_forks","","",26,null],[11,"new","","",26,[[["canvas",3],["style",3],["bool",15],["prerender",3]],["gfxctx",3]]],[11,"fork","","",26,[[["f64",15],["pt2d",3],["f32",15],["screenpt",3],["option",4]]]],[11,"fork_screenspace","","",26,[[]]],[11,"unfork","","",26,[[]]],[11,"clear","","",26,[[["color",3]]]],[11,"draw_polygon","","",26,[[["color",3],["polygon",3]]]],[11,"redraw","","",26,[[["drawable",3]]]],[11,"redraw_at","","",26,[[["screenpt",3],["drawable",3]]]],[11,"enable_clipping","","",26,[[["screenrectangle",3]]]],[11,"disable_clipping","","",26,[[]]],[11,"draw_mouse_tooltip","","",26,[[["text",3]]]],[11,"get_screen_bounds","","",26,[[],["bounds",3]]],[11,"screen_to_map","","",26,[[["screenpt",3]],["pt2d",3]]],[11,"get_cursor_in_map_space","","",26,[[],[["option",4],["pt2d",3]]]],[11,"get_num_uploads","","",26,[[],["usize",15]]],[11,"is_screencap","","",26,[[],["bool",15]]],[11,"set_screencap_naming_hint","","",26,[[["string",3]]]],[11,"upload","","",26,[[["geombatch",3]],["drawable",3]]],[11,"default_line_height","","",26,[[],["f64",15]]],[11,"style","","",26,[[],["style",3]]],[11,"is_key_down","","",26,[[["key",4]],["bool",15]]],[3,"Prerender","","",null,null],[12,"inner","","",27,null],[12,"assets","","",27,null],[12,"num_uploads","","",27,null],[12,"scale_factor","","",27,null],[11,"upload","","",27,[[["geombatch",3]],["drawable",3]]],[11,"upload_temporary","","",27,[[["geombatch",3]],["drawable",3]]],[11,"get_total_bytes_uploaded","","",27,[[],["usize",15]]],[11,"actually_upload","","",27,[[["bool",15],["geombatch",3]],["drawable",3]]],[11,"request_redraw","","",27,[[]]],[11,"get_scale_factor","","",27,[[],["f64",15]]],[11,"window_size","","",27,[[],["screendims",3]]],[11,"window_resized","","",27,[[["screendims",3]]]],[11,"assets_base_url","","",27,[[],[["option",4],["str",15]]]],[11,"assets_are_gzipped","","",27,[[],["bool",15]]],[0,"event","widgetry","",null,null],[4,"Event","widgetry::event","",null,null],[13,"NoOp","","",28,null],[13,"LeftMouseButtonDown","","",28,null],[13,"LeftMouseButtonUp","","",28,null],[13,"RightMouseButtonDown","","",28,null],[13,"RightMouseButtonUp","","",28,null],[13,"KeyPress","","",28,null],[13,"KeyRelease","","",28,null],[13,"Update","","",28,null],[13,"MouseMovedTo","","",28,null],[13,"WindowLostCursor","","",28,null],[13,"WindowGainedCursor","","",28,null],[13,"MouseWheelScroll","","",28,null],[13,"WindowResized","","",28,null],[11,"from_winit_event","","",28,[[["f64",15],["windowevent",4]],[["option",4],["event",4]]]],[4,"Key","","",null,null],[13,"A","","",29,null],[13,"B","","",29,null],[13,"C","","",29,null],[13,"D","","",29,null],[13,"E","","",29,null],[13,"F","","",29,null],[13,"G","","",29,null],[13,"H","","",29,null],[13,"I","","",29,null],[13,"J","","",29,null],[13,"K","","",29,null],[13,"L","","",29,null],[13,"M","","",29,null],[13,"N","","",29,null],[13,"O","","",29,null],[13,"P","","",29,null],[13,"Q","","",29,null],[13,"R","","",29,null],[13,"S","","",29,null],[13,"T","","",29,null],[13,"U","","",29,null],[13,"V","","",29,null],[13,"W","","",29,null],[13,"X","","",29,null],[13,"Y","","",29,null],[13,"Z","","",29,null],[13,"Num1","","",29,null],[13,"Num2","","",29,null],[13,"Num3","","",29,null],[13,"Num4","","",29,null],[13,"Num5","","",29,null],[13,"Num6","","",29,null],[13,"Num7","","",29,null],[13,"Num8","","",29,null],[13,"Num9","","",29,null],[13,"Num0","","",29,null],[13,"LeftBracket","","",29,null],[13,"RightBracket","","",29,null],[13,"Space","","",29,null],[13,"Slash","","",29,null],[13,"Dot","","",29,null],[13,"Comma","","",29,null],[13,"Semicolon","","",29,null],[13,"Colon","","",29,null],[13,"Equals","","",29,null],[13,"SingleQuote","","",29,null],[13,"Escape","","",29,null],[13,"Enter","","",29,null],[13,"Tab","","",29,null],[13,"Backspace","","",29,null],[13,"LeftShift","","",29,null],[13,"LeftControl","","",29,null],[13,"LeftAlt","","",29,null],[13,"RightAlt","","",29,null],[13,"LeftArrow","","",29,null],[13,"RightArrow","","",29,null],[13,"UpArrow","","",29,null],[13,"DownArrow","","",29,null],[13,"F1","","",29,null],[13,"F2","","",29,null],[13,"F3","","",29,null],[13,"F4","","",29,null],[13,"F5","","",29,null],[13,"F6","","",29,null],[13,"F7","","",29,null],[13,"F8","","",29,null],[13,"F9","","",29,null],[13,"F10","","",29,null],[13,"F11","","",29,null],[13,"F12","","",29,null],[18,"NUM_KEYS","","",29,null],[11,"to_char","","",29,[[["bool",15]],[["char",15],["option",4]]]],[11,"describe","","",29,[[],["string",3]]],[11,"from_winit_key","","",29,[[["keyboardinput",3]],[["option",4],["key",4]]]],[11,"txt","","",29,[[["eventctx",3]],["textspan",3]]],[4,"MultiKey","","",null,null],[13,"Normal","","",30,null],[13,"LCtrl","","",30,null],[13,"Any","","",30,null],[11,"describe","","",30,[[],["string",3]]],[5,"lctrl","","",null,[[["key",4]],["multikey",4]]],[5,"hotkeys","","",null,[[["key",4],["vec",3]],["multikey",4]]],[0,"event_ctx","widgetry","",null,null],[4,"UpdateType","widgetry::event_ctx","",null,null],[13,"InputOnly","","",31,null],[13,"Game","","",31,null],[13,"Pan","","",31,null],[13,"ScreenCaptureEverything","","",31,null],[12,"dir","widgetry::event_ctx::UpdateType","",32,null],[12,"zoom","","",32,null],[12,"dims","","",32,null],[12,"leaflet_naming","","If true, name files in a simple scheme intended for …",32,null],[3,"EventCtx","widgetry::event_ctx","",null,null],[12,"fake_mouseover","","",33,null],[12,"input","","",33,null],[12,"canvas","","",33,null],[12,"prerender","","",33,null],[12,"style","","",33,null],[12,"updates_requested","","",33,null],[11,"loading_screen","","",33,[[["fnonce",8],["into",8],["string",3]]]],[11,"request_update","","",33,[[["updatetype",4]]]],[11,"canvas_movement","","Allow panning and zooming on the canvas. Exactly which …",33,[[],["bool",15]]],[11,"no_op_event","","",33,[[["bool",15],["fnmut",8]]]],[11,"redo_mouseover","","",33,[[],["bool",15]]],[11,"normal_left_click","","",33,[[],["bool",15]]],[11,"is_dragging","","",33,[[],["bool",15]]],[11,"is_key_down","","",33,[[["key",4]],["bool",15]]],[11,"default_line_height","","",33,[[],["f64",15]]],[11,"upload","","",33,[[["geombatch",3]],["drawable",3]]],[11,"cursor_clickable","","",33,[[]]],[11,"style","","",33,[[],["style",3]]],[11,"set_style","","",33,[[["style",3]]]],[11,"make_loading_screen","","",33,[[["text",3]],["panel",3]]],[11,"is_font_loaded","","Checks if an extra font has previously been loaded with …",33,[[["str",15]],["bool",15]]],[11,"load_font","","Loads an extra font, used only for automatic fallback of …",33,[[["u8",15],["vec",3],["str",15]]]],[3,"LoadingScreen","","",null,null],[12,"canvas","","",34,null],[12,"style","","",34,null],[12,"prerender","","",34,null],[12,"lines","","",34,null],[12,"max_capacity","","",34,null],[12,"last_drawn","","",34,null],[12,"title","","",34,null],[11,"new","","",34,[[["style",3],["string",3],["screendims",3],["prerender",3]],["loadingscreen",3]]],[11,"redraw","","",34,[[]]],[0,"geom","widgetry","",null,null],[0,"geom_batch_stack","widgetry::geom","",null,null],[4,"Axis","widgetry::geom::geom_batch_stack","",null,null],[13,"Horizontal","","",35,null],[13,"Vertical","","",35,null],[3,"GeomBatchStack","","Similar to [<code>Widget::row</code>]/[<code>Widget::column</code>], but for […",null,null],[12,"batches","","",36,null],[12,"axis","","",36,null],[12,"spacing","","",36,null],[11,"horizontal","","",36,[[["vec",3],["geombatch",3]]]],[11,"vertical","","",36,[[["vec",3],["geombatch",3]]]],[11,"set_axis","","",36,[[["axis",4]]]],[11,"push","","",36,[[["geombatch",3]]]],[11,"append","","",36,[[["vec",3]]]],[11,"spacing","","",36,[[["f64",15]]]],[11,"batch","","",36,[[],["geombatch",3]]],[3,"GeomBatch","widgetry::geom","A mutable builder for a group of colored polygons.",null,null],[12,"list","","",37,null],[12,"autocrop_dims","","",37,null],[11,"new","","Creates an empty batch.",37,[[],["geombatch",3]]],[11,"push","","Adds a single polygon, painted according to <code>Fill</code>",37,[[["into",8],["fill",4],["polygon",3]]]],[11,"push_with_z","","Offset z value to render above/below other polygons. z …",37,[[["into",8],["fill",4],["f64",15],["polygon",3]]]],[11,"unshift","","Adds a single polygon to the front of the batch, painted …",37,[[["into",8],["fill",4],["polygon",3]]]],[11,"extend","","Applies one Fill to many polygons.",37,[[["into",8],["fill",4],["polygon",3],["vec",3]]]],[11,"append","","Appends all colored polygons from another batch to the …",37,[[["geombatch",3]]]],[11,"consume","","Returns the colored polygons in this batch, destroying …",37,[[],["vec",3]]],[11,"draw","","Draws the batch, consuming it. Only use this for drawing …",37,[[["gfxctx",3]]]],[11,"upload","","Upload the batch of polygons to the GPU, returning …",37,[[["eventctx",3]],["drawable",3]]],[11,"batch","","Wrap in a Widget for layouting, so this batch can become …",37,[[],["widget",3]]],[11,"into_widget","","Wrap in a Widget, so the batch can be drawn as part of a …",37,[[["eventctx",3]],["widget",3]]],[11,"get_bounds","","Compute the bounds of all polygons in this batch.",37,[[],["bounds",3]]],[11,"autocrop","","Sets the top-left to 0, 0. Not sure exactly when this …",37,[[],["geombatch",3]]],[11,"unioned_polygon","","Builds a single polygon covering everything in this …",37,[[],["polygon",3]]],[11,"is_empty","","True when the batch is empty.",37,[[],["bool",15]]],[11,"get_dims","","Returns the width and height of all geometry contained in …",37,[[],["screendims",3]]],[11,"load_svg","","Returns a batch containing an SVG from a file.",37,[[["asref",8],["str",15]],["geombatch",3]]],[11,"load_svg_bytes","","Returns a GeomBatch from the bytes of a utf8 encoded SVG …",37,[[],["geombatch",3]]],[11,"load_svg_bytes_uncached","","Returns a GeomBatch from the bytes of a utf8 encoded SVG …",37,[[],["geombatch",3]]],[11,"color","","Transforms all colors in a batch.",37,[[["rewritecolor",4]],["geombatch",3]]],[11,"centered_on","","Translates the batch to be centered on some point.",37,[[["pt2d",3]],["geombatch",3]]],[11,"translate","","Translates the batch by some offset.",37,[[["f64",15]],["geombatch",3]]],[11,"rotate","","Rotates each polygon in the batch relative to the center …",37,[[["angle",3]],["geombatch",3]]],[11,"rotate_around_batch_center","","Rotates each polygon in the batch relative to the center …",37,[[["angle",3]],["geombatch",3]]],[11,"scale","","Scales the batch by some factor.",37,[[["f64",15]],["geombatch",3]]],[11,"scale_xy","","",37,[[["f64",15]],["geombatch",3]]],[11,"set_z_offset","","Overrides the Z-ordering offset for the batch. Must be in …",37,[[["f64",15]],["geombatch",3]]],[11,"to_geojson","","Exports the batch to a list of GeoJSON features, labeling …",37,[[["gpsbounds",3],["option",4]],[["vec",3],["feature",3]]]],[4,"RewriteColor","","A way to transform all colors in a GeomBatch.",null,null],[13,"NoOp","","Don\'t do anything",38,null],[13,"Change","","Change every instance of the first color to the second",38,null],[13,"ChangeAll","","Change all colors to the specified value. For this to be …",38,null],[13,"ChangeAlpha","","Change the alpha value of all colors to this value.",38,null],[13,"MakeGrayscale","","Convert all colors to greyscale.",38,null],[11,"apply","","",38,[[["color",3]],["color",3]]],[0,"input","widgetry","",null,null],[3,"UserInput","widgetry::input","",null,null],[12,"event","","",39,null],[12,"event_consumed","","",39,null],[12,"lctrl_held","","",39,null],[11,"new","","",39,[[["event",4],["canvas",3]],["userinput",3]]],[11,"pressed","","",39,[[["into",8],["option",4]],["bool",15]]],[11,"any_pressed","","",39,[[],[["option",4],["key",4]]]],[11,"key_released","","",39,[[["key",4]],["bool",15]]],[11,"left_mouse_button_pressed","","",39,[[],["bool",15]]],[11,"left_mouse_button_released","","",39,[[],["bool",15]]],[11,"window_lost_cursor","","",39,[[],["bool",15]]],[11,"get_moved_mouse","","",39,[[],[["screenpt",3],["option",4]]]],[11,"get_mouse_scroll","","",39,[[],["option",4]]],[11,"is_window_resized","","",39,[[],["bool",15]]],[11,"nonblocking_is_update_event","","",39,[[],[["duration",3],["option",4]]]],[11,"use_update_event","","",39,[[]]],[11,"consume_event","","",39,[[]]],[11,"unconsume_event","","",39,[[]]],[11,"has_been_consumed","","",39,[[],["bool",15]]],[0,"runner","widgetry","",null,null],[17,"UPDATE_FREQUENCY","widgetry::runner","",null,null],[17,"DEBUG_PERFORMANCE","","",null,null],[3,"State","","",null,null],[12,"app","","",40,null],[12,"canvas","","",40,null],[12,"style","","",40,null],[11,"event","","",40,[[["prerender",3],["event",4]]]],[11,"draw","","Returns naming hint. Logically consumes the number of …",40,[[["prerender",3],["bool",15]],[["option",4],["string",3]]]],[3,"Settings","","Customize how widgetry works. These settings can\'t be …",null,null],[12,"window_title","","",41,null],[12,"assets_base_url","","",41,null],[12,"assets_are_gzipped","","",41,null],[12,"dump_raw_events","","",41,null],[12,"scale_factor","","",41,null],[12,"require_minimum_width","","",41,null],[12,"window_icon","","",41,null],[12,"loading_tips","","",41,null],[12,"read_svg","","",41,null],[11,"new","","Specify the title of the window to open.",41,[[["str",15]],["settings",3]]],[11,"dump_raw_events","","Log every raw winit event to the DEBUG level.",41,[[]]],[11,"scale_factor","","Override the initial HiDPI scale factor from whatever …",41,[[["f64",15]]]],[11,"require_minimum_width","","If the screen width using the monitor\'s detected scale …",41,[[["f64",15]]]],[11,"window_icon","","Sets the window icon. This should be a 32x32 image.",41,[[["string",3]]]],[11,"loading_tips","","Sets the text that\'ll appear during long …",41,[[["text",3]]]],[11,"read_svg","","When calling <code>Widget::draw_svg</code>, <code>ButtonBuilder::image_path</code>, …",41,[[["box",3],["fn",8]]]],[11,"assets_base_url","","",41,[[["string",3]]]],[11,"assets_are_gzipped","","",41,[[["bool",15]]]],[5,"run","","",null,[[["settings",3],["fnonce",8]]]],[0,"screen_geom","widgetry","",null,null],[3,"ScreenPt","widgetry::screen_geom","ScreenPt is in units of logical pixels, as opposed to …",null,null],[12,"x","","",42,null],[12,"y","","",42,null],[11,"new","","",42,[[["f64",15]],["screenpt",3]]],[11,"to_pt","","",42,[[],["pt2d",3]]],[11,"translated","","",42,[[["f64",15]]]],[3,"ScreenRectangle","","ScreenRectangle is in units of logical pixels, as opposed …",null,null],[12,"x1","","",43,null],[12,"y1","","",43,null],[12,"x2","","",43,null],[12,"y2","","",43,null],[11,"top_left","","",43,[[["screenpt",3],["screendims",3]],["screenrectangle",3]]],[11,"placeholder","","",43,[[],["screenrectangle",3]]],[11,"contains","","",43,[[["screenpt",3]],["bool",15]]],[11,"pt_to_percent","","",43,[[["screenpt",3]],["option",4]]],[11,"percent_to_pt","","",43,[[["f64",15]],["screenpt",3]]],[11,"width","","",43,[[],["f64",15]]],[11,"height","","",43,[[],["f64",15]]],[11,"dims","","",43,[[],["screendims",3]]],[11,"center","","",43,[[],["screenpt",3]]],[11,"to_polygon","","",43,[[],["polygon",3]]],[3,"ScreenDims","","ScreenDims is in units of logical pixels, as opposed to …",null,null],[12,"width","","",44,null],[12,"height","","",44,null],[11,"new","","",44,[[["f64",15]],["screendims",3]]],[11,"square","","",44,[[["f64",15]]]],[11,"pad","","",44,[[["edgeinsets",3]]]],[11,"top_left_for_corner","","",44,[[["screenpt",3],["canvas",3]],["screenpt",3]]],[0,"style","widgetry","",null,null],[0,"button_style","widgetry::style","",null,null],[3,"ButtonStyle","widgetry::style::button_style","",null,null],[12,"fg","","",45,null],[12,"fg_disabled","","",45,null],[12,"outline","","",45,null],[12,"bg","","",45,null],[12,"bg_hover","","",45,null],[12,"bg_disabled","","",45,null],[11,"btn","","",45,[[],["buttonbuilder",3]]],[11,"text","","",45,[[["into",8],["string",3]],["buttonbuilder",3]]],[11,"icon","","",45,[[["str",15]],["buttonbuilder",3]]],[11,"icon_bytes","","",45,[[],["buttonbuilder",3]]],[11,"icon_text","","",45,[[["str",15],["into",8],["string",3]],["buttonbuilder",3]]],[11,"dropdown","","",45,[[],["buttonbuilder",3]]],[11,"popup","","",45,[[["str",15]],["buttonbuilder",3]]],[5,"icon_button","","",null,[[["buttonbuilder",3]],["buttonbuilder",3]]],[3,"Style","widgetry::style","",null,null],[12,"panel_bg","","",46,null],[12,"field_bg","","",46,null],[12,"dropdown_border","","",46,null],[12,"icon_fg","","",46,null],[12,"primary_fg","","",46,null],[12,"text_fg_color","","",46,null],[12,"text_tooltip_color","","",46,null],[12,"text_hotkey_color","","",46,null],[12,"text_destructive_color","","",46,null],[12,"loading_tips","","",46,null],[12,"section_bg","","",46,null],[12,"section_outline","","",46,null],[12,"btn_plain","","",46,null],[12,"btn_outline","","",46,null],[12,"btn_floating","","",46,null],[12,"btn_solid","","",46,null],[12,"btn_tab","","",46,null],[12,"btn_solid_destructive","","",46,null],[12,"btn_plain_destructive","","",46,null],[12,"btn_solid_primary","","",46,null],[12,"btn_plain_primary","","",46,null],[6,"OutlineStyle","","",null,null],[7,"DEFAULT_OUTLINE_THICKNESS","","",null,null],[11,"solid_dark_fg","widgetry::style::button_style","",45,[[]]],[11,"outline_dark_fg","","",45,[[]]],[11,"plain_dark_fg","","",45,[[]]],[11,"solid_light_fg","","",45,[[]]],[11,"outline_light_fg","","",45,[[]]],[11,"plain_light_fg","","",45,[[]]],[11,"solid_primary","","",45,[[]]],[11,"plain_primary","","",45,[[]]],[11,"solid_destructive","","",45,[[]]],[11,"plain_destructive","","",45,[[],["buttonstyle",3]]],[11,"light_bg","widgetry::style","",46,[[],["style",3]]],[11,"pregame","","",46,[[],["style",3]]],[11,"dark_bg","","",46,[[],["style",3]]],[5,"hex","","",null,[[["str",15]],["color",3]]],[0,"svg","widgetry","",null,null],[17,"HIGH_QUALITY","widgetry::svg","",null,null],[17,"LOW_QUALITY","","",null,null],[5,"load_svg","","",null,[[["prerender",3],["str",15]]]],[5,"load_svg_bytes","","",null,[[["prerender",3],["str",15]],["result",6]]],[5,"load_svg_from_bytes_uncached","","",null,[[],["result",6]]],[5,"add_svg_inner","","",null,[[["f32",15],["geombatch",3],["tree",3]],[["string",3],["bounds",3],["result",4]]]],[5,"point","","",null,[[["f64",15]],["point",6]]],[3,"PathConvIter","","",null,null],[12,"iter","","",47,null],[12,"prev","","",47,null],[12,"first","","",47,null],[12,"needs_end","","",47,null],[12,"deferred","","",47,null],[5,"convert_path","","",null,[[["path",3]],["pathconviter",3]]],[5,"convert_stroke","","",null,[[["tree",3],["f32",15],["stroke",3]]]],[5,"convert_color","","",null,[[["f64",15],["tree",3],["paint",4]],["fill",4]]],[0,"text","widgetry","",null,null],[17,"DEFAULT_FONT","widgetry::text","",null,null],[17,"DEFAULT_FONT_SIZE","","",null,null],[17,"BG_COLOR","","",null,null],[17,"SCALE_LINE_HEIGHT","","",null,null],[17,"MAX_CHAR_WIDTH","","",null,null],[4,"Font","","",null,null],[13,"BungeeInlineRegular","","",48,null],[13,"BungeeRegular","","",48,null],[13,"OverpassBold","","",48,null],[13,"OverpassRegular","","",48,null],[13,"OverpassSemiBold","","",48,null],[13,"OverpassMonoBold","","",48,null],[11,"family","","",48,[[],["str",15]]],[3,"TextSpan","","",null,null],[12,"text","","",49,null],[12,"fg_color","","",49,null],[12,"size","","",49,null],[12,"font","","",49,null],[12,"underlined","","",49,null],[11,"fg","","",49,[[["color",3]],["textspan",3]]],[11,"maybe_fg","","",49,[[["color",3],["option",4]],["textspan",3]]],[11,"fg_color_for_style","","",49,[[["style",3]],["color",3]]],[11,"into_widget","","",49,[[["eventctx",3]],["widget",3]]],[11,"batch","","",49,[[["eventctx",3]],["widget",3]]],[11,"display_title","","",49,[[],["textspan",3]]],[11,"big_heading_styled","","",49,[[],["textspan",3]]],[11,"big_heading_plain","","",49,[[],["textspan",3]]],[11,"small_heading","","",49,[[],["textspan",3]]],[11,"body","","",49,[[],["textspan",3]]],[11,"bold_body","","",49,[[],["textspan",3]]],[11,"secondary","","",49,[[],["textspan",3]]],[11,"small","","",49,[[],["textspan",3]]],[11,"big_monospaced","","",49,[[],["textspan",3]]],[11,"small_monospaced","","",49,[[],["textspan",3]]],[11,"underlined","","",49,[[],["textspan",3]]],[11,"size","","",49,[[["usize",15]],["textspan",3]]],[11,"font","","",49,[[["font",4]],["textspan",3]]],[5,"Line","","",null,[[["into",8],["string",3]],["textspan",3]]],[3,"Text","","",null,null],[12,"lines","","",50,null],[12,"bg_color","","",50,null],[11,"new","","",50,[[],["text",3]]],[11,"from_all","","",50,[[["vec",3],["textspan",3]],["text",3]]],[11,"from_multiline","","",50,[[["vec",3],["textspan",3]],["text",3]]],[11,"with_bg","","",50,[[],["text",3]]],[11,"bg","","",50,[[["color",3]],["text",3]]],[11,"tooltip","","",50,[[["into",8],["eventctx",3],["option",4],["str",15]],["text",3]]],[11,"change_fg","","",50,[[["color",3]],["text",3]]],[11,"default_fg","","",50,[[["color",3]],["text",3]]],[11,"add_line","","",50,[[]]],[11,"highlight_last_line","","",50,[[["color",3]]]],[11,"append","","",50,[[["textspan",3]]]],[11,"add_appended","","",50,[[["vec",3],["textspan",3]]]],[11,"append_all","","",50,[[["vec",3],["textspan",3]]]],[11,"is_empty","","",50,[[],["bool",15]]],[11,"extend","","",50,[[["text",3]]]],[11,"dims","","",50,[[["assets",3]],["screendims",3]]],[11,"render","","Render the text, without any autocropping. You can pass …",50,[[],["geombatch",3]]],[11,"inner_render","","",50,[[["assets",3],["f32",15]],["geombatch",3]]],[11,"render_autocropped","","Render the text, autocropping blank space out of the …",50,[[],["geombatch",3]]],[11,"hash_key","","",50,[[],["string",3]]],[11,"into_widget","","",50,[[["eventctx",3]],["widget",3]]],[11,"batch","","",50,[[["eventctx",3]],["widget",3]]],[11,"wrap_to_pct","","",50,[[["usize",15],["eventctx",3]],["text",3]]],[11,"inner_wrap_to_pct","","",50,[[["f64",15],["assets",3]],["text",3]]],[5,"render_line","","",null,[[["vec",3],["f32",15],["assets",3],["textspan",3]],["geombatch",3]]],[8,"TextExt","","",null,null],[10,"text_widget","","",51,[[["eventctx",3]],["widget",3]]],[10,"batch_text","","",51,[[["eventctx",3]],["widget",3]]],[11,"render_curvey","","",49,[[["polyline",3],["f64",15]],["geombatch",3]]],[0,"tools","widgetry","",null,null],[0,"screenshot","widgetry::tools","",null,null],[5,"screenshot_everything","widgetry::tools::screenshot","Take a screenshot of the entire canvas, tiling it based …",null,[[["prerender",3],["state",3],["f64",15],["screendims",3],["bool",15],["str",15]],["result",6]]],[0,"warper","widgetry::tools","",null,null],[3,"Warper","widgetry::tools::warper","",null,null],[12,"started","","",52,null],[12,"line","","",52,null],[12,"cam_zoom","","",52,null],[11,"new","","",52,[[["f64",15],["option",4],["eventctx",3],["pt2d",3]],["warper",3]]],[11,"event","","",52,[[["eventctx",3]],["bool",15]]],[3,"Cached","widgetry::tools","Store a cached key/value pair, only recalculating when …",null,null],[12,"contents","","",53,null],[11,"new","","",53,[[],["cached",3]]],[11,"key","","Get the current key.",53,[[],["option",4]]],[11,"value","","Get the current value.",53,[[],["option",4]]],[11,"update","","Update the value if the key has changed.",53,[[["fnmut",8],["option",4]]]],[11,"clear","","",53,[[]]],[0,"widgets","widgetry","",null,null],[0,"autocomplete","widgetry::widgets","",null,null],[17,"NUM_SEARCH_RESULTS","widgetry::widgets::autocomplete","",null,null],[3,"Autocomplete","","",null,null],[12,"choices","","",54,null],[12,"tb","","",54,null],[12,"menu","","",54,null],[12,"current_line","","",54,null],[12,"chosen_values","","",54,null],[11,"new","","",54,[[["eventctx",3],["vec",3]],["widget",3]]],[11,"final_value","","",54,[[],[["vec",3],["option",4]]]],[11,"recalc_menu","","",54,[[["eventctx",3]]]],[0,"button","widgetry::widgets","",null,null],[3,"Button","widgetry::widgets::button","",null,null],[12,"action","","When a button is clicked, <code>Outcome::Clicked</code> with this …",55,null],[12,"draw_normal","","",55,null],[12,"draw_hovered","","",55,null],[12,"draw_disabled","","",55,null],[12,"hotkey","","",55,null],[12,"tooltip","","",55,null],[12,"hitbox","","",55,null],[12,"hovering","","",55,null],[12,"is_disabled","","",55,null],[12,"top_left","","",55,null],[12,"dims","","",55,null],[11,"new","","",55,[[["multikey",4],["text",3],["option",4],["bool",15],["str",15],["eventctx",3],["polygon",3],["geombatch",3],["option",4]],["button",3]]],[11,"is_enabled","","",55,[[],["bool",15]]],[3,"ButtonBuilder","","",null,null],[12,"padding","","",56,null],[12,"stack_spacing","","",56,null],[12,"hotkey","","",56,null],[12,"tooltip","","",56,null],[12,"stack_axis","","",56,null],[12,"is_label_before_image","","",56,null],[12,"corner_rounding","","",56,null],[12,"is_disabled","","",56,null],[12,"default_style","","",56,null],[12,"hover_style","","",56,null],[12,"disable_style","","",56,null],[3,"ButtonStateStyle","","",null,null],[12,"image","","",57,null],[12,"label","","",57,null],[12,"outline","","",57,null],[12,"bg_color","","",57,null],[12,"custom_batch","","",57,null],[11,"new","","",56,[[]]],[11,"padding","","Extra spacing around a button\'s items (label and/or …",56,[[["into",8],["edgeinsets",3]]]],[11,"padding_top","","Extra spacing around a button\'s items (label and/or …",56,[[["f64",15]]]],[11,"padding_left","","Extra spacing around a button\'s items (label and/or …",56,[[["f64",15]]]],[11,"padding_bottom","","Extra spacing around a button\'s items (label and/or …",56,[[["f64",15]]]],[11,"padding_right","","Extra spacing around a button\'s items (label and/or …",56,[[["f64",15]]]],[11,"label_text","","Set the text of the button\'s label.",56,[[["into",8],["string",3]]]],[11,"label_underlined_text","","Set the text of the button\'s label. The text will be …",56,[[["str",15]]]],[11,"label_styled_text","","Assign a pre-styled <code>Text</code> instance if your button need …",56,[[["text",3],["controlstate",4]]]],[11,"label_color","","Set the color of the button\'s label.",56,[[["controlstate",4],["color",3]]]],[11,"font","","Set the font used by the button\'s label.",56,[[["font",4]]]],[11,"font_size","","Set the size of the font of the button\'s label.",56,[[["usize",15]]]],[11,"image_path","","Set the image for the button. If not set, the button will …",56,[[["str",15]]]],[11,"image_bytes","","Set the image for the button. If not set, the button will …",56,[[]]],[11,"image_batch","","Set the image for the button. If not set, the button will …",56,[[["geombatch",3],["bounds",3]]]],[11,"image_color","","Rewrite the color of the button\'s image.",56,[[["rewritecolor",4],["into",8],["controlstate",4]]]],[11,"image_bg_color","","Set a background color for the image, other than the …",56,[[["controlstate",4],["color",3]]]],[11,"image_dims","","Scale the bounds containing the image. If <code>image_dims</code> are …",56,[[["into",8],["screendims",3]]]],[11,"image_content_mode","","If a custom <code>image_dims</code> was set, control how the image …",56,[[["contentmode",4]]]],[11,"image_corner_rounding","","Set independent rounding for each of the button\'s image\'s …",56,[[["into",8],["cornerrounding",4]]]],[11,"image_padding","","Set padding for the image",56,[[["into",8],["edgeinsets",3]]]],[11,"bg_color","","Set a background color for the button based on the …",56,[[["controlstate",4],["color",3]]]],[11,"outline","","Set an outline for the button based on the button\'s […",56,[[["controlstate",4],["outlinestyle",6]]]],[11,"custom_batch","","Set a pre-rendered [GeomBatch] to use for the button …",56,[[["geombatch",3],["controlstate",4]]]],[11,"hotkey","","Set a hotkey for the button",56,[[["into",8],["multikey",4]]]],[11,"tooltip","","Set a non-default tooltip [<code>Text</code>] to appear when hovering …",56,[[]]],[11,"no_tooltip","","If a <code>tooltip</code> is not specified, a default tooltip will be …",56,[[]]],[11,"vertical","","The button\'s items will be rendered in a vertical column",56,[[]]],[11,"horizontal","","The button\'s items will be rendered in a horizontal row",56,[[]]],[11,"disabled","","The button cannot be clicked and will be styled as […",56,[[["bool",15]]]],[11,"label_first","","Display the button\'s label before the button\'s image.",56,[[]]],[11,"image_first","","Display the button\'s image before the button\'s label.",56,[[]]],[11,"stack_spacing","","Spacing between the image and text of a button. Has no …",56,[[["f64",15]]]],[11,"corner_rounding","","Set independent rounding for each of the button\'s corners",56,[[["into",8],["cornerrounding",4]]]],[11,"build","","Build a button.",56,[[["eventctx",3],["str",15]],["button",3]]],[11,"build_widget","","Shorthand method to build a Button wrapped in a Widget",56,[[["asref",8],["eventctx",3],["str",15]],["widget",3]]],[11,"build_def","","Shorthand method to build a default widget whose <code>action</code> …",56,[[["eventctx",3]],["widget",3]]],[11,"style_mut","","",56,[[["controlstate",4]],["buttonstatestyle",3]]],[11,"style","","",56,[[["controlstate",4]],["buttonstatestyle",3]]],[11,"batch","","",56,[[["controlstate",4],["eventctx",3]],["geombatch",3]]],[3,"Label","","",null,null],[12,"text","","",58,null],[12,"color","","",58,null],[12,"styled_text","","",58,null],[12,"font_size","","",58,null],[12,"font","","",58,null],[3,"MultiButton","","",null,null],[12,"draw","","",59,null],[12,"hitboxes","","",59,null],[12,"hovering","","",59,null],[12,"top_left","","",59,null],[12,"dims","","",59,null],[11,"new","","",59,[[["geombatch",3],["eventctx",3],["vec",3]],["widget",3]]],[0,"compare_times","widgetry::widgets","",null,null],[3,"CompareTimes","widgetry::widgets::compare_times","",null,null],[12,"draw","","",60,null],[12,"max","","",60,null],[12,"top_left","","",60,null],[12,"dims","","",60,null],[11,"new","","",60,[[["eventctx",3],["asref",8],["vec",3],["str",15]],["widget",3]]],[0,"containers","widgetry::widgets","",null,null],[3,"Nothing","widgetry::widgets::containers","",null,null],[3,"Container","","",null,null],[12,"is_row","","",61,null],[12,"members","","",61,null],[11,"new","","",61,[[["bool",15],["vec",3],["widget",3]],["container",3]]],[0,"dropdown","widgetry::widgets","",null,null],[3,"Dropdown","widgetry::widgets::dropdown","",null,null],[12,"current_idx","","",62,null],[12,"btn","","",62,null],[12,"menu","","",62,null],[12,"label","","",62,null],[12,"is_persisten_split","","",62,null],[12,"choices","","",62,null],[11,"new","","",62,[[["vec",3],["eventctx",3],["bool",15],["choice",3],["str",15]],["dropdown",3]]],[11,"current_value","","",62,[[]]],[11,"current_value_label","","",62,[[],["str",15]]],[11,"open_menu","","",62,[[["eventctx",3]]]],[5,"make_btn","","",null,[[["bool",15],["eventctx",3],["str",15]],["button",3]]],[0,"fan_chart","widgetry::widgets","",null,null],[3,"FanChart","widgetry::widgets::fan_chart","",null,null],[12,"draw","","",63,null],[12,"top_left","","",63,null],[12,"dims","","",63,null],[11,"new","","",63,[[["axis",8],["plotoptions",3],["eventctx",3],["series",3],["hgramvalue",8],["vec",3],["time",3]],["widget",3]]],[5,"slidey_window","","",null,[[["duration",3],["vec",3]]]],[0,"filler","widgetry::widgets","",null,null],[3,"Filler","widgetry::widgets::filler","Doesn\'t do anything by itself, just used for widgetsing. …",null,null],[12,"dims","","",64,null],[12,"square_width_pct","","",64,null],[11,"square_width","","Creates a square filler, always some percentage of the …",64,[[["f64",15],["eventctx",3]],["widget",3]]],[0,"image","widgetry::widgets","",null,null],[3,"Image","widgetry::widgets::image","A stylable UI component builder which presents vector …",null,null],[12,"source","","",65,null],[12,"tooltip","","",65,null],[12,"color","","",65,null],[12,"content_mode","","",65,null],[12,"corner_rounding","","",65,null],[12,"padding","","",65,null],[12,"bg_color","","",65,null],[12,"dims","","",65,null],[4,"ImageSource","","The visual",null,null],[13,"Path","","Path to an SVG file",66,null],[13,"Bytes","","UTF-8 encoded bytes of an SVG",66,null],[12,"bytes","widgetry::widgets::image::ImageSource","",67,null],[12,"cache_key","","",67,null],[13,"GeomBatch","widgetry::widgets::image","Previously rendered graphics, in the form of a [<code>GeomBatch</code>]…",66,null],[11,"load","","Process <code>self</code> into a [<code>GeomBatch</code>].",66,[[["prerender",3]]]],[11,"empty","","An <code>Image</code> with no renderable content. Useful for starting …",65,[[]]],[11,"from_path","","Create an SVG <code>Image</code>, read from <code>filename</code>, which is colored …",65,[[["str",15]]]],[11,"untinted","","Create an SVG <code>Image</code>, read from <code>filename</code>.",65,[[["str",15]]]],[11,"from_bytes","","Create a new SVG <code>Image</code> from bytes.",65,[[]]],[11,"from_batch","","Create a new <code>Image</code> from a [<code>GeomBatch</code>].",65,[[["geombatch",3],["bounds",3]]]],[11,"source","","Set a new source for the <code>Image</code>\'s data.",65,[[["imagesource",4]]]],[11,"source_path","","Set the path to an SVG file for the image.",65,[[["str",15]]]],[11,"source_bytes","","Set the bytes for the image.",65,[[]]],[11,"source_batch","","Set the GeomBatch for the button.",65,[[["geombatch",3],["bounds",3]]]],[11,"tooltip","","Add a tooltip to appear when hovering over the image.",65,[[]]],[11,"merged_image_style","","Create a new <code>Image</code> based on <code>self</code>, but overriding with any …",65,[[]]],[11,"color","","Rewrite the color of the image.",65,[[["rewritecolor",4],["into",8]]]],[11,"bg_color","","Set a background color for the image.",65,[[["color",3]]]],[11,"dims","","Scale the bounds containing the image. If <code>image_dims</code> are …",65,[[["into",8],["screendims",3]]]],[11,"content_mode","","If a custom <code>dims</code> was set, control how the image should be …",65,[[["contentmode",4]]]],[11,"corner_rounding","","Set independent rounding for each of the image\'s corners",65,[[["into",8],["cornerrounding",4]]]],[11,"padding","","Set padding for the image",65,[[["into",8],["edgeinsets",3]]]],[11,"build_batch","","Render the <code>Image</code> and any styling (padding, background, …",65,[[["eventctx",3]],["option",4]]],[11,"into_widget","","",65,[[["eventctx",3]],["widget",3]]],[0,"just_draw","widgetry::widgets","",null,null],[3,"JustDraw","widgetry::widgets::just_draw","",null,null],[12,"draw","","",68,null],[12,"top_left","","",68,null],[12,"dims","","",68,null],[11,"wrap","","",68,[[["geombatch",3],["eventctx",3]],["widget",3]]],[3,"DrawWithTooltips","","",null,null],[12,"draw","","",69,null],[12,"tooltips","","",69,null],[12,"hover","","",69,null],[12,"top_left","","",69,null],[12,"dims","","",69,null],[11,"new","","<code>batch</code>: the <code>GeomBatch</code> to draw <code>tooltips</code>: (hitbox, text) …",69,[[["fn",8],["eventctx",3],["geombatch",3],["box",3],["vec",3]],["widget",3]]],[3,"DeferDraw","","",null,null],[12,"batch","","",70,null],[12,"top_left","","",70,null],[12,"dims","","",70,null],[11,"new","","",70,[[["geombatch",3]],["widget",3]]],[0,"line_plot","widgetry::widgets","",null,null],[3,"LinePlot","widgetry::widgets::line_plot","",null,null],[12,"draw","","",71,null],[12,"max_x","","",71,null],[12,"max_y","","",71,null],[12,"closest","","",71,null],[12,"top_left","","",71,null],[12,"dims","","",71,null],[11,"new","","",71,[[["eventctx",3],["vec",3],["plotoptions",3],["series",3]],["widget",3]]],[0,"menu","widgetry::widgets","",null,null],[3,"Menu","widgetry::widgets::menu","",null,null],[12,"choices","","",72,null],[12,"current_idx","","",72,null],[12,"top_left","","",72,null],[12,"dims","","",72,null],[11,"widget","","",72,[[["vec",3],["eventctx",3],["choice",3]],["widget",3]]],[11,"new","","",72,[[["vec",3],["eventctx",3],["choice",3]]]],[11,"take_current_choice","","",72,[[]]],[11,"calculate_txt","","",72,[[["style",3]],["text",3]]],[0,"panel","widgetry::widgets","",null,null],[3,"Panel","widgetry::widgets::panel","",null,null],[12,"top_level","","",73,null],[12,"horiz","","",73,null],[12,"vert","","",73,null],[12,"dims","","",73,null],[12,"scrollable_x","","",73,null],[12,"scrollable_y","","",73,null],[12,"contents_dims","","",73,null],[12,"container_dims","","",73,null],[12,"clip_rect","","",73,null],[11,"new","","",73,[[["widget",3]],["panelbuilder",3]]],[11,"empty","","Returns an empty panel. <code>event</code> and <code>draw</code> will have no …",73,[[["eventctx",3]],["panel",3]]],[11,"update_container_dims_for_canvas_dims","","",73,[[["screendims",3]]]],[11,"recompute_scrollbar_layout","","",73,[[["eventctx",3]]]],[11,"recompute_layout","","",73,[[["bool",15],["eventctx",3]]]],[11,"scroll_offset","","",73,[[]]],[11,"update_scroll_sliders","","",73,[[["eventctx",3]],["bool",15]]],[11,"set_scroll_offset","","",73,[[["eventctx",3]]]],[11,"event","","",73,[[["eventctx",3]],["outcome",4]]],[11,"draw","","",73,[[["gfxctx",3]]]],[11,"get_all_click_actions","","",73,[[],[["string",3],["hashset",3]]]],[11,"restore","","",73,[[["eventctx",3],["panel",3]]]],[11,"scroll_to_member","","",73,[[["string",3],["eventctx",3]]]],[11,"has_widget","","",73,[[["str",15]],["bool",15]]],[11,"slider","","",73,[[["str",15]],["slider",3]]],[11,"slider_mut","","",73,[[["str",15]],["slider",3]]],[11,"take_menu_choice","","",73,[[["str",15]]]],[11,"is_checked","","",73,[[["str",15]],["bool",15]]],[11,"maybe_is_checked","","",73,[[["str",15]],[["bool",15],["option",4]]]],[11,"text_box","","",73,[[["str",15]],["string",3]]],[11,"spinner","","",73,[[["str",15]],["isize",15]]],[11,"modify_spinner","","",73,[[["isize",15],["eventctx",3],["str",15]]]],[11,"dropdown_value","","",73,[[["asref",8],["str",15]],[["partialeq",8],["clone",8]]]],[11,"maybe_dropdown_value","","",73,[[["asref",8],["str",15]],[["clone",8],["option",4],["partialeq",8]]]],[11,"persistent_split_value","","",73,[[["str",15]],[["partialeq",8],["clone",8]]]],[11,"autocomplete_done","","",73,[[["str",15]],[["vec",3],["option",4]]]],[11,"stash","","Grab a stashed value, with the ability to pass it around …",73,[[["str",15]],[["refcell",3],["rc",3]]]],[11,"clone_stashed","","Grab a stashed value and clone it.",73,[[["str",15]],["clone",8]]],[11,"is_button_enabled","","",73,[[["str",15]],["bool",15]]],[11,"maybe_find","","",73,[[["str",15]],[["option",4],["widget",3]]]],[11,"find","","",73,[[["str",15]]]],[11,"find_mut","","",73,[[["str",15]]]],[11,"swap_inner_content","","Swap the inner content of a <code>container</code> widget with …",73,[[["widget",3],["eventctx",3],["str",15]]]],[11,"rect_of","","",73,[[["str",15]],["screenrectangle",3]]],[11,"center_of","","",73,[[["str",15]],["screenpt",3]]],[11,"center_of_panel","","",73,[[],["screenpt",3]]],[11,"panel_dims","","",73,[[],["screendims",3]]],[11,"align","","",73,[[["verticalalignment",4],["horizontalalignment",4]]]],[11,"replace","","All margins/padding/etc from the previous widget are …",73,[[["eventctx",3],["widget",3],["str",15]]]],[11,"take","","Removes a widget from the panel. Does not recalculate …",73,[[["str",15]],["widget",3]]],[11,"clicked_outside","","",73,[[["eventctx",3]],["bool",15]]],[11,"currently_hovering","","",73,[[],[["option",4],["string",3]]]],[3,"PanelBuilder","","",null,null],[12,"top_level","","",74,null],[12,"horiz","","",74,null],[12,"vert","","",74,null],[12,"dims","","",74,null],[4,"Dims","","",null,null],[13,"MaxPercent","","",75,null],[13,"ExactPercent","","",75,null],[13,"ExactHeight","","",75,null],[11,"build","","",74,[[["eventctx",3]],["panel",3]]],[11,"build_custom","","",74,[[["eventctx",3]],["panel",3]]],[11,"aligned","","",74,[[["verticalalignment",4],["horizontalalignment",4]],["panelbuilder",3]]],[11,"aligned_pair","","",74,[[],["panelbuilder",3]]],[11,"max_size","","",74,[[["percent",3]],["panelbuilder",3]]],[11,"exact_size_percent","","",74,[[["usize",15]],["panelbuilder",3]]],[11,"exact_height","","",74,[[["f64",15]],["panelbuilder",3]]],[0,"persistent_split","widgetry::widgets","",null,null],[3,"PersistentSplit","widgetry::widgets::persistent_split","",null,null],[12,"current_value","","",76,null],[12,"btn","","",76,null],[12,"spacer","","",76,null],[12,"dropdown","","",76,null],[11,"widget","","",76,[[["into",8],["vec",3],["eventctx",3],["option",4],["choice",3],["str",15]],["widget",3]]],[11,"new","","",76,[[["into",8],["vec",3],["eventctx",3],["option",4],["choice",3],["str",15]],["persistentsplit",3]]],[5,"button_builder","","",null,[[["eventctx",3]],["buttonbuilder",3]]],[11,"current_value","","",76,[[]]],[0,"plots","widgetry::widgets","",null,null],[3,"PlotOptions","widgetry::widgets::plots","",null,null],[12,"filterable","","",77,null],[12,"max_x","","",77,null],[12,"max_y","","",77,null],[12,"disabled","","",77,null],[11,"filterable","","",77,[[],["plotoptions",3]]],[11,"fixed","","",77,[[],["plotoptions",3]]],[8,"Axis","","",null,null],[10,"from_percent","","",78,[[["f64",15]]]],[10,"to_percent","","",78,[[],["f64",15]]],[10,"prettyprint","","",78,[[],["string",3]]],[10,"to_f64","","",78,[[],["f64",15]]],[10,"from_f64","","",78,[[["f64",15]]]],[10,"zero","","",78,[[]]],[3,"Series","","",null,null],[12,"label","","",79,null],[12,"color","","",79,null],[12,"pts","","",79,null],[5,"make_legend","","",null,[[["vec",3],["eventctx",3],["plotoptions",3]],["widget",3]]],[5,"thick_lineseries","","",null,[[["distance",3],["vec",3],["pt2d",3]],["polygon",3]]],[0,"scatter_plot","widgetry::widgets","",null,null],[3,"ScatterPlot","widgetry::widgets::scatter_plot","",null,null],[12,"draw","","",80,null],[12,"top_left","","",80,null],[12,"dims","","",80,null],[11,"new","","",80,[[["axis",8],["addassign",8],["f64",15],["plotoptions",3],["eventctx",3],["series",3],["time",3],["div",8],["vec",3]],["widget",3]]],[0,"slider","widgetry::widgets","",null,null],[3,"Slider","widgetry::widgets::slider","",null,null],[12,"current_percent","","",81,null],[12,"mouse_on_slider","","",81,null],[12,"dragging","","",81,null],[12,"style","","",81,null],[12,"draw","","",81,null],[12,"top_left","","",81,null],[12,"dims","","",81,null],[4,"Style","","",null,null],[13,"Horizontal","","",82,null],[12,"main_bg_len","widgetry::widgets::slider::Style","",83,null],[12,"dragger_len","","",83,null],[13,"Vertical","widgetry::widgets::slider","",82,null],[12,"main_bg_len","widgetry::widgets::slider::Style","",84,null],[12,"dragger_len","","",84,null],[13,"Area","widgetry::widgets::slider","",82,null],[12,"width","widgetry::widgets::slider::Style","",85,null],[17,"SCROLLBAR_BG_WIDTH","widgetry::widgets::slider","",null,null],[17,"AREA_SLIDER_BG_WIDTH","","",null,null],[11,"padding","","",82,[[],["edgeinsets",3]]],[11,"inner_dims","","",82,[[],["screendims",3]]],[11,"horizontal","","",81,[[["f64",15],["eventctx",3]],["widget",3]]],[11,"vertical","","",81,[[["f64",15],["eventctx",3]],["widget",3]]],[11,"area","","",81,[[["f64",15],["eventctx",3]],["widget",3]]],[11,"new","","",81,[[["style",4],["f64",15],["eventctx",3]],["widget",3]]],[11,"recalc","","",81,[[["eventctx",3]]]],[11,"button_geom","","",81,[[],["polygon",3]]],[11,"pt_to_percent","","",81,[[["screenpt",3]],["f64",15]]],[11,"get_percent","","",81,[[],["f64",15]]],[11,"get_value","","",81,[[["usize",15]],["usize",15]]],[11,"set_percent","","",81,[[["f64",15],["eventctx",3]]]],[11,"inner_event","","",81,[[["eventctx",3]],["bool",15]]],[0,"spinner","widgetry::widgets","",null,null],[17,"TEXT_WIDTH","widgetry::widgets::spinner","",null,null],[3,"Spinner","","",null,null],[12,"low","","",86,null],[12,"high","","",86,null],[12,"current","","",86,null],[12,"up","","",86,null],[12,"down","","",86,null],[12,"outline","","",86,null],[12,"drawable","","",86,null],[12,"top_left","","",86,null],[12,"dims","","",86,null],[11,"widget","","",86,[[["isize",15],["eventctx",3]],["widget",3]]],[11,"new","","",86,[[["isize",15],["eventctx",3]]]],[11,"modify","","",86,[[["isize",15],["eventctx",3]]]],[11,"drawable","","",86,[[["prerender",3],["style",3]],["drawable",3]]],[0,"stash","widgetry::widgets","",null,null],[3,"Stash","widgetry::widgets::stash","An invisible widget that stores some arbitrary data on …",null,null],[12,"value","","",87,null],[11,"new","","",87,[[["str",15]],["widget",3]]],[11,"get_value","","",87,[[],[["refcell",3],["rc",3]]]],[0,"table","widgetry::widgets","",null,null],[17,"ROWS","widgetry::widgets::table","",null,null],[3,"Table","","",null,null],[12,"id","","",0,null],[12,"data","","",0,null],[12,"label_per_row","","",0,null],[12,"columns","","",0,null],[12,"filter","","",0,null],[12,"sort_by","","",0,null],[12,"descending","","",0,null],[12,"skip","","",0,null],[4,"Col","","",null,null],[13,"Static","","",1,null],[13,"Sortable","","",1,null],[3,"Column","","",null,null],[12,"name","","",88,null],[12,"render","","",88,null],[12,"col","","",88,null],[3,"Filter","","",null,null],[12,"state","","",2,null],[12,"to_controls","","",2,null],[12,"from_controls","","",2,null],[12,"apply","","",2,null],[11,"new","widgetry::table","",0,[[["filter",3],["vec",3],["box",3],["fn",8],["str",15]],["table",3]]],[11,"column","","",0,[[["col",4],["fn",8],["box",3],["str",15]]]],[11,"replace_render","","",0,[[["eventctx",3],["panel",3]]]],[11,"render","","",0,[[["eventctx",3]],["widget",3]]],[11,"clicked","","",0,[[["str",15]],["bool",15]]],[11,"panel_changed","","",0,[[["panel",3]]]],[11,"empty","","",2,[[],["filter",3]]],[11,"static_col","","",0,[[["box",3],["fn",8],["str",15]]]],[5,"make_pagination","widgetry::widgets::table","",null,[[["eventctx",3],["usize",15]],["widget",3]]],[5,"make_table","","",null,[[["eventctx",3],["vec",3],["widget",3],["f64",15],["vec",3]],["widget",3]]],[0,"tabs","widgetry::widgets","",null,null],[3,"Tab","widgetry::widgets::tabs","",null,null],[12,"tab_id","","",89,null],[12,"bar_item","","",89,null],[12,"content","","",89,null],[11,"new","","",89,[[["string",3],["buttonbuilder",3],["widget",3]]]],[11,"build_bar_item_widget","","",89,[[["bool",15],["eventctx",3]],["widget",3]]],[3,"TabController","","",null,null],[12,"id","","",90,null],[12,"tabs","","",90,null],[12,"active_tab_idx","","",90,null],[11,"new","","",90,[[]]],[11,"push_tab","","Add a new tab.",90,[[["buttonbuilder",3],["widget",3]]]],[11,"build_widget","","A widget containing the tab bar and a content pane with …",90,[[["eventctx",3]],["widget",3]]],[11,"handle_action","","",90,[[["panel",3],["eventctx",3],["str",15]],["bool",15]]],[11,"active_tab_idx","","",90,[[],["usize",15]]],[11,"active_content_id","","",90,[[],["string",3]]],[11,"bar_items_id","","",90,[[],["string",3]]],[11,"tab_id","","",90,[[["usize",15]],["string",3]]],[11,"pop_active_content","","",90,[[],["widget",3]]],[11,"build_bar_items","","",90,[[["eventctx",3]],["widget",3]]],[11,"activate_tab","","",90,[[["usize",15],["panel",3],["eventctx",3]]]],[0,"text_box","widgetry::widgets","",null,null],[3,"TextBox","widgetry::widgets::text_box","",null,null],[12,"line","","",91,null],[12,"cursor_x","","",91,null],[12,"has_focus","","",91,null],[12,"hovering","","",91,null],[12,"autofocus","","",91,null],[12,"padding","","",91,null],[12,"top_left","","",91,null],[12,"dims","","",91,null],[11,"new","","",91,[[["usize",15],["string",3],["eventctx",3],["bool",15]],["textbox",3]]],[11,"calculate_text","","",91,[[["style",3]],["text",3]]],[11,"get_line","","",91,[[],["string",3]]],[0,"toggle","widgetry::widgets","",null,null],[3,"Toggle","widgetry::widgets::toggle","",null,null],[12,"enabled","","",92,null],[12,"btn","","",92,null],[12,"other_btn","","",92,null],[11,"new","","",92,[[["bool",15],["button",3]],["widget",3]]],[11,"switch","","",92,[[["into",8],["eventctx",3],["option",4],["bool",15],["str",15]],["widget",3]]],[11,"checkbox","","",92,[[["into",8],["eventctx",3],["option",4],["bool",15],["str",15]],["widget",3]]],[11,"custom_checkbox","","",92,[[["into",8],["vec",3],["eventctx",3],["option",4],["bool",15],["textspan",3],["str",15]],["widget",3]]],[11,"colored_checkbox","","",92,[[["color",3],["eventctx",3],["bool",15],["str",15]],["widget",3]]],[11,"choice","","",92,[[["into",8],["eventctx",3],["option",4],["bool",15],["str",15]],["widget",3]]],[17,"DEFAULT_CORNER_RADIUS","widgetry::widgets","",null,null],[8,"WidgetImpl","","Create a new widget by implementing this trait. You can …",null,null],[10,"get_dims","","What width and height does the widget occupy? If this …",93,[[],["screendims",3]]],[10,"set_pos","","Your widget\'s top left corner should be here. Handle …",93,[[["screenpt",3]]]],[10,"event","","Your chance to react to an event. Any side effects …",93,[[["eventctx",3],["widgetoutput",3]]]],[10,"draw","","Draw the widget. Be sure to draw relative to the top-left …",93,[[["gfxctx",3]]]],[11,"can_restore","","If a new Panel is being created to replace an older one, …",93,[[],["bool",15]]],[11,"restore","","Restore state from the previous version of this widget, …",93,[[["eventctx",3],["box",3]]]],[4,"Outcome","","",null,null],[13,"Clicked","","An action was done",94,null],[13,"Changed","","A dropdown, checkbox, spinner, etc changed values. …",94,null],[13,"Nothing","","Nothing happened",94,null],[3,"WidgetOutput","","",null,null],[12,"redo_layout","","This widget changed dimensions, so recalculate layout.",95,null],[12,"outcome","","This widget produced an Outcome, and event handling …",95,null],[11,"new","","",95,[[],["widgetoutput",3]]],[11,"is","","Returns true if the trait object wraps an object of type …",93,[[],["bool",15]]],[11,"downcast","","Returns a boxed object from a boxed trait object if the …",93,[[["box",3]],[["box",3],["box",3],["result",4]]]],[11,"downcast_rc","","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …",93,[[["rc",3]],[["result",4],["rc",3],["rc",3]]]],[11,"downcast_ref","","Returns a reference to the object within the trait object …",93,[[],["option",4]]],[11,"downcast_mut","","Returns a mutable reference to the object within the …",93,[[],["option",4]]],[3,"Widget","","",null,null],[12,"widget","","",96,null],[12,"layout","","",96,null],[12,"rect","","",96,null],[12,"bg","","",96,null],[12,"bg_batch","","",96,null],[12,"id","","",96,null],[4,"CornerRounding","","",null,null],[13,"CornerRadii","","",97,null],[13,"FullyRounded","","",97,null],[3,"LayoutStyle","","",null,null],[12,"bg_color","","",98,null],[12,"outline","","",98,null],[12,"corner_rounding","","",98,null],[12,"style","","",98,null],[11,"centered","","",96,[[],["widget",3]]],[11,"centered_horiz","","",96,[[],["widget",3]]],[11,"centered_vert","","",96,[[],["widget",3]]],[11,"centered_cross","","",96,[[],["widget",3]]],[11,"evenly_spaced","","",96,[[],["widget",3]]],[11,"fill_width","","",96,[[],["widget",3]]],[11,"fill_height","","",96,[[],["widget",3]]],[11,"flex_wrap","","",96,[[["eventctx",3],["percent",3]],["widget",3]]],[11,"force_width","","",96,[[["f64",15]],["widget",3]]],[11,"force_width_pct","","",96,[[["eventctx",3],["percent",3]],["widget",3]]],[11,"get_width_for_forcing","","",96,[[],["f64",15]]],[11,"bg","","",96,[[["color",3]],["widget",3]]],[11,"outline","","",96,[[["outlinestyle",6]],["widget",3]]],[11,"corner_rounding","","",96,[[["into",8],["cornerrounding",4]],["widget",3]]],[11,"container","","",96,[[],["widget",3]]],[11,"section","","",96,[[["eventctx",3]],["widget",3]]],[11,"tab_body","","",96,[[["eventctx",3]],["widget",3]]],[11,"padding","","",96,[[["into",8],["edgeinsets",3]],["widget",3]]],[11,"padding_top","","",96,[[["usize",15]],["widget",3]]],[11,"padding_left","","",96,[[["usize",15]],["widget",3]]],[11,"padding_bottom","","",96,[[["usize",15]],["widget",3]]],[11,"padding_right","","",96,[[["usize",15]],["widget",3]]],[11,"margin","","",96,[[["into",8],["edgeinsets",3]],["widget",3]]],[11,"margin_above","","",96,[[["usize",15]],["widget",3]]],[11,"margin_below","","",96,[[["usize",15]],["widget",3]]],[11,"margin_left","","",96,[[["usize",15]],["widget",3]]],[11,"margin_right","","",96,[[["usize",15]],["widget",3]]],[11,"margin_horiz","","",96,[[["usize",15]],["widget",3]]],[11,"margin_vert","","",96,[[["usize",15]],["widget",3]]],[11,"align_left","","",96,[[],["widget",3]]],[11,"align_right","","",96,[[],["widget",3]]],[11,"align_bottom","","",96,[[],["widget",3]]],[11,"align_vert_center","","",96,[[],["widget",3]]],[11,"abs","","",96,[[["f64",15]],["widget",3]]],[11,"named","","",96,[[["into",8],["string",3]],["widget",3]]],[11,"new","","",96,[[["box",3],["widgetimpl",8]],["widget",3]]],[11,"text_entry","","",96,[[["bool",15],["string",3],["eventctx",3]],["widget",3]]],[11,"dropdown","","",96,[[["clone",8],["str",15],["asref",8],["eventctx",3],["debug",8],["partialeq",8],["choice",3],["vec",3]],["widget",3]]],[11,"custom_row","","Creates a row with the specified widgets. No margins or …",96,[[["vec",3],["widget",3]],["widget",3]]],[11,"row","","Creates a row with the specified widgets. Every member …",96,[[["vec",3],["widget",3]],["widget",3]]],[11,"custom_col","","Creates a column with the specified widgets. No margins …",96,[[["vec",3],["widget",3]],["widget",3]]],[11,"col","","Creates a column with the specified widgets. Every member …",96,[[["vec",3],["widget",3]],["widget",3]]],[11,"nothing","","",96,[[],["widget",3]]],[11,"to_geom","","",96,[[["f64",15],["option",4],["eventctx",3]]]],[11,"horiz_separator","","",96,[[["eventctx",3],["f64",15]],["widget",3]]],[11,"vert_separator","","",96,[[["eventctx",3],["f64",15]],["widget",3]]],[11,"draw","","",96,[[["gfxctx",3]]]],[11,"get_flexbox","","",96,[[["stretch",3],["vec",3],["node",3]]]],[11,"apply_flexbox","","",96,[[["f64",15],["eventctx",3],["stretch",3],["vec",3],["bool",15]]]],[11,"get_all_click_actions","","",96,[[["hashset",3]]]],[11,"currently_hovering","","",96,[[],[["option",4],["string",3]]]],[11,"restore","","",96,[[["eventctx",3],["panel",3]]]],[11,"consume_geometry","","",96,[[["geombatch",3]]]],[11,"is_btn","","",96,[[["str",15]],["bool",15]]],[11,"find","","",96,[[["str",15]],[["option",4],["widget",3]]]],[11,"find_mut","","",96,[[["str",15]],[["widget",3],["option",4]]]],[11,"take","","",96,[[["str",15]],[["widget",3],["option",4]]]],[11,"take_just_draw","","",96,[[],["justdraw",3]]],[3,"EdgeInsets","","",null,null],[12,"top","","",99,null],[12,"left","","",99,null],[12,"bottom","","",99,null],[12,"right","","",99,null],[11,"zero","","",99,[[]]],[11,"uniform","","",99,[[["f64",15]]]],[0,"backend","widgetry","",null,null],[4,"DrawBaselayer","","Before <code>State::draw</code> is called, draw something else.",null,null],[13,"DefaultDraw","","Call <code>SharedAppState::draw_default</code>.",5,null],[13,"Custom","","Don\'t draw anything.",5,null],[13,"PreviousState","","Call the previous state\'s <code>draw</code>. This won\'t recurse, even …",5,null],[8,"SharedAppState","","Any data that should last the entire lifetime of the …",null,null],[11,"before_event","widgetry::app_state","Before <code>State::event</code> is called, call this.",3,[[]]],[11,"draw_default","","When DrawBaselayer::DefaultDraw is called, run this.",3,[[["gfxctx",3]]]],[11,"dump_before_abort","","Will be called if <code>State::event</code> or <code>State::draw</code> panics.",3,[[["canvas",3]]]],[11,"before_quit","","Called before a normal exit, like window close",3,[[["canvas",3]]]],[8,"SimpleState","widgetry","Many states fit a pattern of managing a single panel, …",null,null],[10,"on_click","","Called when something on the panel has been clicked. …",8,[[["eventctx",3],["panel",3],["str",15]],["transition",4]]],[11,"panel_changed","widgetry::app_state","Called when something on the panel has changed. If a …",8,[[["eventctx",3],["panel",3]],[["transition",4],["option",4]]]],[11,"on_mouseover","","Called when the mouse has moved.",8,[[["eventctx",3]]]],[11,"other_event","","If a panel <code>on_click</code> event didn\'t occur and <code>panel_changed</code> …",8,[[["eventctx",3]],["transition",4]]],[11,"draw","","",8,[[["gfxctx",3]]]],[11,"draw_baselayer","","",8,[[],["drawbaselayer",4]]],[8,"State","widgetry","A temporary state of an application. There\'s a stack of …",null,null],[10,"event","","Respond to a UI event, such as input or time passing.",6,[[["eventctx",3]],["transition",4]]],[10,"draw","","Draw",6,[[["gfxctx",3]]]],[11,"draw_baselayer","widgetry::app_state","Specifies what to draw before draw()",6,[[],["drawbaselayer",4]]],[11,"on_destroy","","Before this state is popped or replaced, call this.",6,[[["eventctx",3]]]],[4,"Transition","widgetry","When a state responds to an event, it can specify some …",null,null],[13,"Keep","","Don\'t do anything, keep the current state as the active …",7,null],[13,"KeepWithMouseover","","Keep the current state as the active one, but immediately …",7,null],[13,"Pop","","Destroy the current state, and resume from the previous …",7,null],[13,"ModifyState","","If a state needs to pass data back to its parent, use …",7,null],[13,"ReplaceWithData","","",7,null],[13,"Push","","Push a new active state on the top of the stack.",7,null],[13,"Replace","","Replace the current state with a new one. Equivalent to …",7,null],[13,"Clear","","Replace the entire stack of states with this stack.",7,null],[13,"Multi","","Execute a sequence of transitions in order.",7,null],[3,"Drawable","","Geometry that\'s been uploaded to the GPU once and can be …",null,null],[12,"vert_array","","",12,null],[12,"vert_buffer","","",12,null],[12,"elem_buffer","","",12,null],[12,"num_indices","","",12,null],[12,"gl","","",12,null],[3,"Canvas","","",null,null],[12,"cam_x","","",18,null],[12,"cam_y","","",18,null],[12,"cam_zoom","","",18,null],[12,"cursor","","",18,null],[12,"window_has_cursor","","",18,null],[12,"drag_canvas_from","","",18,null],[12,"drag_just_ended","","",18,null],[12,"window_width","","",18,null],[12,"window_height","","",18,null],[12,"map_dims","","",18,null],[12,"invert_scroll","","",18,null],[12,"touchpad_to_move","","",18,null],[12,"edge_auto_panning","","",18,null],[12,"keys_to_pan","","",18,null],[12,"gui_scroll_speed","","",18,null],[12,"covered_areas","","",18,null],[12,"keys_held","","",18,null],[4,"HorizontalAlignment","","",null,null],[13,"Left","","",19,null],[13,"LeftInset","","",19,null],[13,"Center","","",19,null],[13,"Right","","",19,null],[13,"RightInset","","",19,null],[13,"Percent","","",19,null],[13,"Centered","","",19,null],[4,"VerticalAlignment","","",null,null],[13,"Top","","",20,null],[13,"TopInset","","",20,null],[13,"Center","","",20,null],[13,"Bottom","","",20,null],[13,"BottomInset","","",20,null],[13,"BottomAboveOSD","","",20,null],[13,"Percent","","",20,null],[13,"Above","","",20,null],[13,"Below","","",20,null],[3,"Color","","",null,null],[12,"r","","",21,null],[12,"g","","",21,null],[12,"b","","",21,null],[12,"a","","",21,null],[4,"Fill","","",null,null],[13,"Color","","",22,null],[13,"LinearGradient","","",22,null],[13,"Texture","","Once uploaded, textures are addressed by their id, …",22,null],[13,"ColoredTexture","","The <code>color</code> parameter is multiplied by any color baked into …",22,null],[3,"LinearGradient","","",null,null],[12,"line","","",24,null],[12,"stops","","",24,null],[3,"Texture","","",null,null],[12,"0","","",23,null],[3,"GfxCtx","","",null,null],[12,"inner","","",26,null],[12,"uniforms","","",26,null],[12,"screencap_mode","","",26,null],[12,"naming_hint","","",26,null],[12,"canvas","","",26,null],[12,"prerender","","",26,null],[12,"style","","",26,null],[12,"num_draw_calls","","",26,null],[12,"num_forks","","",26,null],[3,"Prerender","","",null,null],[12,"inner","","",27,null],[12,"assets","","",27,null],[12,"num_uploads","","",27,null],[12,"scale_factor","","",27,null],[5,"hotkeys","","",null,[[["key",4],["vec",3]],["multikey",4]]],[5,"lctrl","","",null,[[["key",4]],["multikey",4]]],[4,"Event","","",null,null],[13,"NoOp","","",28,null],[13,"LeftMouseButtonDown","","",28,null],[13,"LeftMouseButtonUp","","",28,null],[13,"RightMouseButtonDown","","",28,null],[13,"RightMouseButtonUp","","",28,null],[13,"KeyPress","","",28,null],[13,"KeyRelease","","",28,null],[13,"Update","","",28,null],[13,"MouseMovedTo","","",28,null],[13,"WindowLostCursor","","",28,null],[13,"WindowGainedCursor","","",28,null],[13,"MouseWheelScroll","","",28,null],[13,"WindowResized","","",28,null],[4,"Key","","",null,null],[13,"A","","",29,null],[13,"B","","",29,null],[13,"C","","",29,null],[13,"D","","",29,null],[13,"E","","",29,null],[13,"F","","",29,null],[13,"G","","",29,null],[13,"H","","",29,null],[13,"I","","",29,null],[13,"J","","",29,null],[13,"K","","",29,null],[13,"L","","",29,null],[13,"M","","",29,null],[13,"N","","",29,null],[13,"O","","",29,null],[13,"P","","",29,null],[13,"Q","","",29,null],[13,"R","","",29,null],[13,"S","","",29,null],[13,"T","","",29,null],[13,"U","","",29,null],[13,"V","","",29,null],[13,"W","","",29,null],[13,"X","","",29,null],[13,"Y","","",29,null],[13,"Z","","",29,null],[13,"Num1","","",29,null],[13,"Num2","","",29,null],[13,"Num3","","",29,null],[13,"Num4","","",29,null],[13,"Num5","","",29,null],[13,"Num6","","",29,null],[13,"Num7","","",29,null],[13,"Num8","","",29,null],[13,"Num9","","",29,null],[13,"Num0","","",29,null],[13,"LeftBracket","","",29,null],[13,"RightBracket","","",29,null],[13,"Space","","",29,null],[13,"Slash","","",29,null],[13,"Dot","","",29,null],[13,"Comma","","",29,null],[13,"Semicolon","","",29,null],[13,"Colon","","",29,null],[13,"Equals","","",29,null],[13,"SingleQuote","","",29,null],[13,"Escape","","",29,null],[13,"Enter","","",29,null],[13,"Tab","","",29,null],[13,"Backspace","","",29,null],[13,"LeftShift","","",29,null],[13,"LeftControl","","",29,null],[13,"LeftAlt","","",29,null],[13,"RightAlt","","",29,null],[13,"LeftArrow","","",29,null],[13,"RightArrow","","",29,null],[13,"UpArrow","","",29,null],[13,"DownArrow","","",29,null],[13,"F1","","",29,null],[13,"F2","","",29,null],[13,"F3","","",29,null],[13,"F4","","",29,null],[13,"F5","","",29,null],[13,"F6","","",29,null],[13,"F7","","",29,null],[13,"F8","","",29,null],[13,"F9","","",29,null],[13,"F10","","",29,null],[13,"F11","","",29,null],[13,"F12","","",29,null],[4,"MultiKey","","",null,null],[13,"Normal","","",30,null],[13,"LCtrl","","",30,null],[13,"Any","","",30,null],[3,"EventCtx","","",null,null],[12,"fake_mouseover","","",33,null],[12,"input","","",33,null],[12,"canvas","","",33,null],[12,"prerender","","",33,null],[12,"style","","",33,null],[12,"updates_requested","","",33,null],[4,"UpdateType","","",null,null],[13,"InputOnly","","",31,null],[13,"Game","","",31,null],[13,"Pan","","",31,null],[13,"ScreenCaptureEverything","","",31,null],[12,"dir","widgetry::UpdateType","",32,null],[12,"zoom","","",32,null],[12,"dims","","",32,null],[12,"leaflet_naming","","If true, name files in a simple scheme intended for …",32,null],[4,"Axis","widgetry","",null,null],[13,"Horizontal","","",35,null],[13,"Vertical","","",35,null],[3,"GeomBatchStack","","Similar to [<code>Widget::row</code>]/[<code>Widget::column</code>], but for […",null,null],[12,"batches","","",36,null],[12,"axis","","",36,null],[12,"spacing","","",36,null],[3,"GeomBatch","","A mutable builder for a group of colored polygons.",null,null],[12,"list","","",37,null],[12,"autocrop_dims","","",37,null],[4,"RewriteColor","","A way to transform all colors in a GeomBatch.",null,null],[13,"NoOp","","Don\'t do anything",38,null],[13,"Change","","Change every instance of the first color to the second",38,null],[13,"ChangeAll","","Change all colors to the specified value. For this to be …",38,null],[13,"ChangeAlpha","","Change the alpha value of all colors to this value.",38,null],[13,"MakeGrayscale","","Convert all colors to greyscale.",38,null],[3,"UserInput","","",null,null],[12,"event","","",39,null],[12,"event_consumed","","",39,null],[12,"lctrl_held","","",39,null],[5,"run","","",null,[[["settings",3],["fnonce",8]]]],[3,"Settings","","Customize how widgetry works. These settings can\'t be …",null,null],[12,"window_title","","",41,null],[12,"assets_base_url","","",41,null],[12,"assets_are_gzipped","","",41,null],[12,"dump_raw_events","","",41,null],[12,"scale_factor","","",41,null],[12,"require_minimum_width","","",41,null],[12,"window_icon","","",41,null],[12,"loading_tips","","",41,null],[12,"read_svg","","",41,null],[3,"ScreenDims","","ScreenDims is in units of logical pixels, as opposed to …",null,null],[12,"width","","",44,null],[12,"height","","",44,null],[3,"ScreenPt","","ScreenPt is in units of logical pixels, as opposed to …",null,null],[12,"x","","",42,null],[12,"y","","",42,null],[3,"ScreenRectangle","","ScreenRectangle is in units of logical pixels, as opposed …",null,null],[12,"x1","","",43,null],[12,"y1","","",43,null],[12,"x2","","",43,null],[12,"y2","","",43,null],[3,"ButtonStyle","","",null,null],[12,"fg","","",45,null],[12,"fg_disabled","","",45,null],[12,"outline","","",45,null],[12,"bg","","",45,null],[12,"bg_hover","","",45,null],[12,"bg_disabled","","",45,null],[6,"OutlineStyle","","",null,null],[3,"Style","","",null,null],[12,"panel_bg","","",46,null],[12,"field_bg","","",46,null],[12,"dropdown_border","","",46,null],[12,"icon_fg","","",46,null],[12,"primary_fg","","",46,null],[12,"text_fg_color","","",46,null],[12,"text_tooltip_color","","",46,null],[12,"text_hotkey_color","","",46,null],[12,"text_destructive_color","","",46,null],[12,"loading_tips","","",46,null],[12,"section_bg","","",46,null],[12,"section_outline","","",46,null],[12,"btn_plain","","",46,null],[12,"btn_outline","","",46,null],[12,"btn_floating","","",46,null],[12,"btn_solid","","",46,null],[12,"btn_tab","","",46,null],[12,"btn_solid_destructive","","",46,null],[12,"btn_plain_destructive","","",46,null],[12,"btn_solid_primary","","",46,null],[12,"btn_plain_primary","","",46,null],[4,"Font","","",null,null],[13,"BungeeInlineRegular","","",48,null],[13,"BungeeRegular","","",48,null],[13,"OverpassBold","","",48,null],[13,"OverpassRegular","","",48,null],[13,"OverpassSemiBold","","",48,null],[13,"OverpassMonoBold","","",48,null],[5,"Line","","",null,[[["into",8],["string",3]],["textspan",3]]],[3,"Text","","",null,null],[12,"lines","","",50,null],[12,"bg_color","","",50,null],[8,"TextExt","","",null,null],[10,"text_widget","","",51,[[["eventctx",3]],["widget",3]]],[10,"batch_text","","",51,[[["eventctx",3]],["widget",3]]],[3,"TextSpan","","",null,null],[12,"text","","",49,null],[12,"fg_color","","",49,null],[12,"size","","",49,null],[12,"font","","",49,null],[12,"underlined","","",49,null],[3,"Warper","","",null,null],[12,"started","","",52,null],[12,"line","","",52,null],[12,"cam_zoom","","",52,null],[3,"Cached","","Store a cached key/value pair, only recalculating when …",null,null],[12,"contents","","",53,null],[3,"Autocomplete","","",null,null],[12,"choices","","",54,null],[12,"tb","","",54,null],[12,"menu","","",54,null],[12,"current_line","","",54,null],[12,"chosen_values","","",54,null],[3,"ButtonBuilder","","",null,null],[12,"padding","","",56,null],[12,"stack_spacing","","",56,null],[12,"hotkey","","",56,null],[12,"tooltip","","",56,null],[12,"stack_axis","","",56,null],[12,"is_label_before_image","","",56,null],[12,"corner_rounding","","",56,null],[12,"is_disabled","","",56,null],[12,"default_style","","",56,null],[12,"hover_style","","",56,null],[12,"disable_style","","",56,null],[3,"MultiButton","","",null,null],[12,"draw","","",59,null],[12,"hitboxes","","",59,null],[12,"hovering","","",59,null],[12,"top_left","","",59,null],[12,"dims","","",59,null],[3,"CompareTimes","","",null,null],[12,"draw","","",60,null],[12,"max","","",60,null],[12,"top_left","","",60,null],[12,"dims","","",60,null],[3,"FanChart","","",null,null],[12,"draw","","",63,null],[12,"top_left","","",63,null],[12,"dims","","",63,null],[3,"Filler","","Doesn\'t do anything by itself, just used for widgetsing. …",null,null],[12,"dims","","",64,null],[12,"square_width_pct","","",64,null],[3,"Image","","A stylable UI component builder which presents vector …",null,null],[12,"source","","",65,null],[12,"tooltip","","",65,null],[12,"color","","",65,null],[12,"content_mode","","",65,null],[12,"corner_rounding","","",65,null],[12,"padding","","",65,null],[12,"bg_color","","",65,null],[12,"dims","","",65,null],[4,"ImageSource","","The visual",null,null],[13,"Path","","Path to an SVG file",66,null],[13,"Bytes","","UTF-8 encoded bytes of an SVG",66,null],[12,"bytes","widgetry::ImageSource","",67,null],[12,"cache_key","","",67,null],[13,"GeomBatch","widgetry","Previously rendered graphics, in the form of a [<code>GeomBatch</code>]…",66,null],[3,"DrawWithTooltips","","",null,null],[12,"draw","","",69,null],[12,"tooltips","","",69,null],[12,"hover","","",69,null],[12,"top_left","","",69,null],[12,"dims","","",69,null],[3,"LinePlot","","",null,null],[12,"draw","","",71,null],[12,"max_x","","",71,null],[12,"max_y","","",71,null],[12,"closest","","",71,null],[12,"top_left","","",71,null],[12,"dims","","",71,null],[3,"Menu","","",null,null],[12,"choices","","",72,null],[12,"current_idx","","",72,null],[12,"top_left","","",72,null],[12,"dims","","",72,null],[3,"PersistentSplit","","",null,null],[12,"current_value","","",76,null],[12,"btn","","",76,null],[12,"spacer","","",76,null],[12,"dropdown","","",76,null],[3,"PlotOptions","","",null,null],[12,"filterable","","",77,null],[12,"max_x","","",77,null],[12,"max_y","","",77,null],[12,"disabled","","",77,null],[3,"Series","","",null,null],[12,"label","","",79,null],[12,"color","","",79,null],[12,"pts","","",79,null],[3,"ScatterPlot","","",null,null],[12,"draw","","",80,null],[12,"top_left","","",80,null],[12,"dims","","",80,null],[3,"Slider","","",null,null],[12,"current_percent","","",81,null],[12,"mouse_on_slider","","",81,null],[12,"dragging","","",81,null],[12,"style","","",81,null],[12,"draw","","",81,null],[12,"top_left","","",81,null],[12,"dims","","",81,null],[3,"Spinner","","",null,null],[12,"low","","",86,null],[12,"high","","",86,null],[12,"current","","",86,null],[12,"up","","",86,null],[12,"down","","",86,null],[12,"outline","","",86,null],[12,"drawable","","",86,null],[12,"top_left","","",86,null],[12,"dims","","",86,null],[3,"Stash","","An invisible widget that stores some arbitrary data on …",null,null],[12,"value","","",87,null],[3,"TabController","","",null,null],[12,"id","","",90,null],[12,"tabs","","",90,null],[12,"active_tab_idx","","",90,null],[3,"Toggle","","",null,null],[12,"enabled","","",92,null],[12,"btn","","",92,null],[12,"other_btn","","",92,null],[17,"DEFAULT_CORNER_RADIUS","","",null,null],[4,"CornerRounding","","",null,null],[13,"CornerRadii","","",97,null],[13,"FullyRounded","","",97,null],[3,"EdgeInsets","","",null,null],[12,"top","","",99,null],[12,"left","","",99,null],[12,"bottom","","",99,null],[12,"right","","",99,null],[4,"Outcome","","",null,null],[13,"Clicked","","An action was done",94,null],[13,"Changed","","A dropdown, checkbox, spinner, etc changed values. …",94,null],[13,"Nothing","","Nothing happened",94,null],[3,"Panel","","",null,null],[12,"top_level","","",73,null],[12,"horiz","","",73,null],[12,"vert","","",73,null],[12,"dims","","",73,null],[12,"scrollable_x","","",73,null],[12,"scrollable_y","","",73,null],[12,"contents_dims","","",73,null],[12,"container_dims","","",73,null],[12,"clip_rect","","",73,null],[3,"Widget","","",null,null],[12,"widget","","",96,null],[12,"layout","","",96,null],[12,"rect","","",96,null],[12,"bg","","",96,null],[12,"bg_batch","","",96,null],[12,"id","","",96,null],[8,"WidgetImpl","","Create a new widget by implementing this trait. You can …",null,null],[10,"get_dims","","What width and height does the widget occupy? If this …",93,[[],["screendims",3]]],[10,"set_pos","","Your widget\'s top left corner should be here. Handle …",93,[[["screenpt",3]]]],[10,"event","","Your chance to react to an event. Any side effects …",93,[[["eventctx",3],["widgetoutput",3]]]],[10,"draw","","Draw the widget. Be sure to draw relative to the top-left …",93,[[["gfxctx",3]]]],[11,"can_restore","widgetry::widgets","If a new Panel is being created to replace an older one, …",93,[[],["bool",15]]],[11,"restore","","Restore state from the previous version of this widget, …",93,[[["eventctx",3],["box",3]]]],[3,"WidgetOutput","widgetry","",null,null],[12,"redo_layout","","This widget changed dimensions, so recalculate layout.",95,null],[12,"outcome","","This widget produced an Outcome, and event handling …",95,null],[4,"ControlState","","",null,null],[13,"Default","","",100,null],[13,"Hovered","","",100,null],[13,"Disabled","","",100,null],[4,"ContentMode","","Rules for how content should stretch to fill its bounds",null,null],[13,"ScaleToFill","","Stretches content to fit its bounds exactly, breaking …",101,null],[13,"ScaleAspectFit","","Maintaining aspect ratio, content grows until it touches …",101,null],[13,"ScaleAspectFill","","Maintaining aspect ratio, content grows until both bounds …",101,null],[3,"Choice","","",null,null],[12,"label","","",102,null],[12,"data","","",102,null],[12,"hotkey","","",102,null],[12,"active","","",102,null],[12,"tooltip","","",102,null],[12,"fg","","",102,null],[11,"new","","",102,[[["into",8],["string",3]],["choice",3]]],[11,"from","","",102,[[["vec",3]],[["choice",3],["vec",3]]]],[11,"key","","",102,[[["key",4]],["choice",3]]],[11,"multikey","","",102,[[["multikey",4]],["choice",3]]],[11,"active","","",102,[[["bool",15]],["choice",3]]],[11,"tooltip","","",102,[[["into",8],["string",3]],["choice",3]]],[11,"fg","","",102,[[["color",3]],["choice",3]]],[11,"with_value","","",102,[[],["choice",3]]],[11,"string","","",102,[[["str",15]],[["choice",3],["string",3]]]],[11,"strings","","",102,[[["vec",3],["into",8],["string",3]],[["choice",3],["vec",3]]]],[14,"include_labeled_bytes","","Like [<code>std::include_bytes!</code>], but also returns its …",null,null],[11,"from","widgetry::table","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any","","",0,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_any","","",1,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_any","","",2,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"from","widgetry::app_state","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_any","","",4,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_any","","",5,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"into_any_arc","","",5,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_any","","",7,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_any","","",9,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"from","widgetry::assets","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"into_any","","",10,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"from","widgetry::backend_glow","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"into_any","","",11,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"into_any_arc","","",11,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_any","","",12,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",12,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"into_any_arc","","",12,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_any","","",13,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"into_any_arc","","",13,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_any","","",14,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"into_any_arc","","",14,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_any","","",15,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",15,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",15,[[],["any",8]]],[11,"as_any_mut","","",15,[[],["any",8]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"into_any","","",16,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",16,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"into_any_arc","","",16,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::backend_glow_native","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"into_any","","",17,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",17,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",17,[[],["any",8]]],[11,"as_any_mut","","",17,[[],["any",8]]],[11,"from","widgetry::canvas","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"into_any","","",18,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",18,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"into_any_arc","","",18,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_any","","",19,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",19,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",19,[[],["any",8]]],[11,"as_any_mut","","",19,[[],["any",8]]],[11,"into_any_arc","","",19,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"into_any","","",20,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",20,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",20,[[],["any",8]]],[11,"as_any_mut","","",20,[[],["any",8]]],[11,"into_any_arc","","",20,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::color","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_any","","",21,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",21,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",21,[[],["any",8]]],[11,"as_any_mut","","",21,[[],["any",8]]],[11,"into_any_arc","","",21,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"into_any","","",22,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",22,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",22,[[],["any",8]]],[11,"as_any_mut","","",22,[[],["any",8]]],[11,"into_any_arc","","",22,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"into_any","","",23,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",23,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",23,[[],["any",8]]],[11,"as_any_mut","","",23,[[],["any",8]]],[11,"into_any_arc","","",23,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"into_any","","",24,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",24,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",24,[[],["any",8]]],[11,"as_any_mut","","",24,[[],["any",8]]],[11,"into_any_arc","","",24,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::drawing","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_any","","",25,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",25,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",25,[[],["any",8]]],[11,"as_any_mut","","",25,[[],["any",8]]],[11,"into_any_arc","","",25,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"into_any","","",26,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",26,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",26,[[],["any",8]]],[11,"as_any_mut","","",26,[[],["any",8]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"into_any","","",27,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",27,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",27,[[],["any",8]]],[11,"as_any_mut","","",27,[[],["any",8]]],[11,"from","widgetry::event","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"into_any","","",28,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",28,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",28,[[],["any",8]]],[11,"as_any_mut","","",28,[[],["any",8]]],[11,"into_any_arc","","",28,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"get_hash","","",29,[[],["u64",15]]],[11,"into_any","","",29,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",29,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",29,[[],["any",8]]],[11,"as_any_mut","","",29,[[],["any",8]]],[11,"into_any_arc","","",29,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"get_hash","","",30,[[],["u64",15]]],[11,"into_any","","",30,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",30,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",30,[[],["any",8]]],[11,"as_any_mut","","",30,[[],["any",8]]],[11,"into_any_arc","","",30,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::event_ctx","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"into_any","","",31,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",31,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",31,[[],["any",8]]],[11,"as_any_mut","","",31,[[],["any",8]]],[11,"into_any_arc","","",31,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"into_any","","",33,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",33,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",33,[[],["any",8]]],[11,"as_any_mut","","",33,[[],["any",8]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"into_any","","",34,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",34,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",34,[[],["any",8]]],[11,"as_any_mut","","",34,[[],["any",8]]],[11,"from","widgetry::geom::geom_batch_stack","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"into_any","","",35,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",35,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",35,[[],["any",8]]],[11,"as_any_mut","","",35,[[],["any",8]]],[11,"into_any_arc","","",35,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"into_any","","",36,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",36,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",36,[[],["any",8]]],[11,"as_any_mut","","",36,[[],["any",8]]],[11,"into_any_arc","","",36,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::geom","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"into_any","","",37,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",37,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",37,[[],["any",8]]],[11,"as_any_mut","","",37,[[],["any",8]]],[11,"into_any_arc","","",37,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"into_any","","",38,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",38,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",38,[[],["any",8]]],[11,"as_any_mut","","",38,[[],["any",8]]],[11,"into_any_arc","","",38,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::input","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"into_any","","",39,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",39,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",39,[[],["any",8]]],[11,"as_any_mut","","",39,[[],["any",8]]],[11,"into_any_arc","","",39,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::runner","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"into_any","","",40,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",40,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",40,[[],["any",8]]],[11,"as_any_mut","","",40,[[],["any",8]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"into_any","","",41,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",41,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",41,[[],["any",8]]],[11,"as_any_mut","","",41,[[],["any",8]]],[11,"from","widgetry::screen_geom","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"into_any","","",42,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",42,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",42,[[],["any",8]]],[11,"as_any_mut","","",42,[[],["any",8]]],[11,"into_any_arc","","",42,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"into_any","","",43,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",43,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",43,[[],["any",8]]],[11,"as_any_mut","","",43,[[],["any",8]]],[11,"into_any_arc","","",43,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"into_any","","",44,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",44,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",44,[[],["any",8]]],[11,"as_any_mut","","",44,[[],["any",8]]],[11,"into_any_arc","","",44,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::style::button_style","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"into_any","","",45,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",45,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",45,[[],["any",8]]],[11,"as_any_mut","","",45,[[],["any",8]]],[11,"into_any_arc","","",45,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::style","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_any","","",46,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",46,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",46,[[],["any",8]]],[11,"as_any_mut","","",46,[[],["any",8]]],[11,"into_any_arc","","",46,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::svg","",47,[[]]],[11,"into","","",47,[[]]],[11,"into_iter","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"into_any","","",47,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",47,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",47,[[],["any",8]]],[11,"as_any_mut","","",47,[[],["any",8]]],[11,"into_any_arc","","",47,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::text","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"get_hash","","",48,[[],["u64",15]]],[11,"into_any","","",48,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",48,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",48,[[],["any",8]]],[11,"as_any_mut","","",48,[[],["any",8]]],[11,"into_any_arc","","",48,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_any","","",49,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",49,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",49,[[],["any",8]]],[11,"as_any_mut","","",49,[[],["any",8]]],[11,"into_any_arc","","",49,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"into_any","","",50,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",50,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",50,[[],["any",8]]],[11,"as_any_mut","","",50,[[],["any",8]]],[11,"into_any_arc","","",50,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::tools::warper","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"into_any","","",52,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",52,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",52,[[],["any",8]]],[11,"as_any_mut","","",52,[[],["any",8]]],[11,"into_any_arc","","",52,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::tools","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"into_any","","",53,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",53,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",53,[[],["any",8]]],[11,"as_any_mut","","",53,[[],["any",8]]],[11,"into_any_arc","","",53,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::widgets::autocomplete","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"into_any","","",54,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",54,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",54,[[],["any",8]]],[11,"as_any_mut","","",54,[[],["any",8]]],[11,"into_any_arc","","",54,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::widgets::button","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"into_any","","",55,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",55,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",55,[[],["any",8]]],[11,"as_any_mut","","",55,[[],["any",8]]],[11,"into_any_arc","","",55,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"into_any","","",56,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",56,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",56,[[],["any",8]]],[11,"as_any_mut","","",56,[[],["any",8]]],[11,"into_any_arc","","",56,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"into_any","","",57,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",57,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",57,[[],["any",8]]],[11,"as_any_mut","","",57,[[],["any",8]]],[11,"into_any_arc","","",57,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"into_any","","",58,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",58,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",58,[[],["any",8]]],[11,"as_any_mut","","",58,[[],["any",8]]],[11,"into_any_arc","","",58,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"into_any","","",59,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",59,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",59,[[],["any",8]]],[11,"as_any_mut","","",59,[[],["any",8]]],[11,"into_any_arc","","",59,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::widgets::compare_times","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"into_any","","",60,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",60,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",60,[[],["any",8]]],[11,"as_any_mut","","",60,[[],["any",8]]],[11,"into_any_arc","","",60,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::widgets::containers","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"into_any","","",103,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",103,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",103,[[],["any",8]]],[11,"as_any_mut","","",103,[[],["any",8]]],[11,"into_any_arc","","",103,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"into_any","","",61,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",61,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",61,[[],["any",8]]],[11,"as_any_mut","","",61,[[],["any",8]]],[11,"from","widgetry::widgets::dropdown","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"into_any","","",62,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",62,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",62,[[],["any",8]]],[11,"as_any_mut","","",62,[[],["any",8]]],[11,"from","widgetry::widgets::fan_chart","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"into_any","","",63,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",63,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",63,[[],["any",8]]],[11,"as_any_mut","","",63,[[],["any",8]]],[11,"into_any_arc","","",63,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::widgets::filler","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"into_any","","",64,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",64,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",64,[[],["any",8]]],[11,"as_any_mut","","",64,[[],["any",8]]],[11,"into_any_arc","","",64,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::widgets::image","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"into_any","","",65,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",65,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",65,[[],["any",8]]],[11,"as_any_mut","","",65,[[],["any",8]]],[11,"into_any_arc","","",65,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"into_any","","",66,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",66,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",66,[[],["any",8]]],[11,"as_any_mut","","",66,[[],["any",8]]],[11,"into_any_arc","","",66,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::widgets::just_draw","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"into_any","","",68,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",68,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",68,[[],["any",8]]],[11,"as_any_mut","","",68,[[],["any",8]]],[11,"into_any_arc","","",68,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"into_any","","",69,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",69,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",69,[[],["any",8]]],[11,"as_any_mut","","",69,[[],["any",8]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"into_any","","",70,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",70,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",70,[[],["any",8]]],[11,"as_any_mut","","",70,[[],["any",8]]],[11,"into_any_arc","","",70,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::widgets::line_plot","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"into_any","","",71,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",71,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",71,[[],["any",8]]],[11,"as_any_mut","","",71,[[],["any",8]]],[11,"from","widgetry::widgets::menu","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"into_any","","",72,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",72,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",72,[[],["any",8]]],[11,"as_any_mut","","",72,[[],["any",8]]],[11,"into_any_arc","","",72,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::widgets::panel","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"into_any","","",73,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",73,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",73,[[],["any",8]]],[11,"as_any_mut","","",73,[[],["any",8]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"into_any","","",74,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",74,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",74,[[],["any",8]]],[11,"as_any_mut","","",74,[[],["any",8]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"into_any","","",75,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",75,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",75,[[],["any",8]]],[11,"as_any_mut","","",75,[[],["any",8]]],[11,"into_any_arc","","",75,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::widgets::persistent_split","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"into_any","","",76,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",76,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",76,[[],["any",8]]],[11,"as_any_mut","","",76,[[],["any",8]]],[11,"from","widgetry::widgets::plots","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"into_any","","",77,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",77,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",77,[[],["any",8]]],[11,"as_any_mut","","",77,[[],["any",8]]],[11,"into_any_arc","","",77,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"into_any","","",79,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",79,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",79,[[],["any",8]]],[11,"as_any_mut","","",79,[[],["any",8]]],[11,"into_any_arc","","",79,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::widgets::scatter_plot","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"into_any","","",80,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",80,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",80,[[],["any",8]]],[11,"as_any_mut","","",80,[[],["any",8]]],[11,"into_any_arc","","",80,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::widgets::slider","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"into_any","","",81,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",81,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",81,[[],["any",8]]],[11,"as_any_mut","","",81,[[],["any",8]]],[11,"into_any_arc","","",81,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"into_any","","",82,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",82,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",82,[[],["any",8]]],[11,"as_any_mut","","",82,[[],["any",8]]],[11,"into_any_arc","","",82,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::widgets::spinner","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"into_any","","",86,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",86,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",86,[[],["any",8]]],[11,"as_any_mut","","",86,[[],["any",8]]],[11,"into_any_arc","","",86,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::widgets::stash","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"into_any","","",87,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",87,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",87,[[],["any",8]]],[11,"as_any_mut","","",87,[[],["any",8]]],[11,"from","widgetry::widgets::table","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"into_any","","",88,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",88,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",88,[[],["any",8]]],[11,"as_any_mut","","",88,[[],["any",8]]],[11,"from","widgetry::widgets::tabs","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"into_any","","",89,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",89,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",89,[[],["any",8]]],[11,"as_any_mut","","",89,[[],["any",8]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"into_any","","",90,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",90,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",90,[[],["any",8]]],[11,"as_any_mut","","",90,[[],["any",8]]],[11,"from","widgetry::widgets::text_box","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"into_any","","",91,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",91,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",91,[[],["any",8]]],[11,"as_any_mut","","",91,[[],["any",8]]],[11,"into_any_arc","","",91,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::widgets::toggle","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"into_any","","",92,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",92,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",92,[[],["any",8]]],[11,"as_any_mut","","",92,[[],["any",8]]],[11,"into_any_arc","","",92,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry::widgets","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"into_any","","",94,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",94,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",94,[[],["any",8]]],[11,"as_any_mut","","",94,[[],["any",8]]],[11,"into_any_arc","","",94,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"into_any","","",95,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",95,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",95,[[],["any",8]]],[11,"as_any_mut","","",95,[[],["any",8]]],[11,"into_any_arc","","",95,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"into_any","","",96,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",96,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",96,[[],["any",8]]],[11,"as_any_mut","","",96,[[],["any",8]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"into_any","","",97,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",97,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",97,[[],["any",8]]],[11,"as_any_mut","","",97,[[],["any",8]]],[11,"into_any_arc","","",97,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"into_any","","",98,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",98,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",98,[[],["any",8]]],[11,"as_any_mut","","",98,[[],["any",8]]],[11,"into_any_arc","","",98,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"is_default","","",99,[[],["bool",15]]],[11,"into_any","","",99,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",99,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",99,[[],["any",8]]],[11,"as_any_mut","","",99,[[],["any",8]]],[11,"into_any_arc","","",99,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","widgetry","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"into_any","","",100,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",100,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",100,[[],["any",8]]],[11,"as_any_mut","","",100,[[],["any",8]]],[11,"into_any_arc","","",100,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"into_any","","",101,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",101,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",101,[[],["any",8]]],[11,"as_any_mut","","",101,[[],["any",8]]],[11,"into_any_arc","","",101,[[["arc",3]],[["arc",3],["any",8]]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"into_any","","",102,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",102,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",102,[[],["any",8]]],[11,"as_any_mut","","",102,[[],["any",8]]],[11,"into_any_arc","","",102,[[["arc",3]],[["arc",3],["any",8]]]],[11,"event","widgetry::app_state","",9,[[["eventctx",3]],["transition",4]]],[11,"draw","","",9,[[["gfxctx",3]]]],[11,"draw_baselayer","","",9,[[],["drawbaselayer",4]]],[11,"get_dims","widgetry::widgets::autocomplete","",54,[[],["screendims",3]]],[11,"set_pos","","",54,[[["screenpt",3]]]],[11,"event","","",54,[[["eventctx",3],["widgetoutput",3]]]],[11,"draw","","",54,[[["gfxctx",3]]]],[11,"get_dims","widgetry::widgets::button","",55,[[],["screendims",3]]],[11,"set_pos","","",55,[[["screenpt",3]]]],[11,"event","","",55,[[["eventctx",3],["widgetoutput",3]]]],[11,"draw","","",55,[[["gfxctx",3]]]],[11,"get_dims","","",59,[[],["screendims",3]]],[11,"set_pos","","",59,[[["screenpt",3]]]],[11,"event","","",59,[[["eventctx",3],["widgetoutput",3]]]],[11,"draw","","",59,[[["gfxctx",3]]]],[11,"get_dims","widgetry::widgets::compare_times","",60,[[],["screendims",3]]],[11,"set_pos","","",60,[[["screenpt",3]]]],[11,"event","","",60,[[["eventctx",3],["widgetoutput",3]]]],[11,"draw","","",60,[[["gfxctx",3]]]],[11,"get_dims","widgetry::widgets::containers","",103,[[],["screendims",3]]],[11,"set_pos","","",103,[[["screenpt",3]]]],[11,"event","","",103,[[["eventctx",3],["widgetoutput",3]]]],[11,"draw","","",103,[[["gfxctx",3]]]],[11,"get_dims","","",61,[[],["screendims",3]]],[11,"set_pos","","",61,[[["screenpt",3]]]],[11,"event","","",61,[[["eventctx",3],["widgetoutput",3]]]],[11,"draw","","",61,[[["gfxctx",3]]]],[11,"get_dims","widgetry::widgets::dropdown","",62,[[],["screendims",3]]],[11,"set_pos","","",62,[[["screenpt",3]]]],[11,"event","","",62,[[["eventctx",3],["widgetoutput",3]]]],[11,"draw","","",62,[[["gfxctx",3]]]],[11,"can_restore","","",62,[[],["bool",15]]],[11,"restore","","",62,[[["eventctx",3],["box",3]]]],[11,"get_dims","widgetry::widgets::fan_chart","",63,[[],["screendims",3]]],[11,"set_pos","","",63,[[["screenpt",3]]]],[11,"event","","",63,[[["eventctx",3],["widgetoutput",3]]]],[11,"draw","","",63,[[["gfxctx",3]]]],[11,"get_dims","widgetry::widgets::filler","",64,[[],["screendims",3]]],[11,"set_pos","","",64,[[["screenpt",3]]]],[11,"event","","",64,[[["eventctx",3],["widgetoutput",3]]]],[11,"draw","","",64,[[["gfxctx",3]]]],[11,"get_dims","widgetry::widgets::just_draw","",68,[[],["screendims",3]]],[11,"set_pos","","",68,[[["screenpt",3]]]],[11,"event","","",68,[[["eventctx",3],["widgetoutput",3]]]],[11,"draw","","",68,[[["gfxctx",3]]]],[11,"get_dims","","",69,[[],["screendims",3]]],[11,"set_pos","","",69,[[["screenpt",3]]]],[11,"event","","",69,[[["eventctx",3],["widgetoutput",3]]]],[11,"draw","","",69,[[["gfxctx",3]]]],[11,"get_dims","","",70,[[],["screendims",3]]],[11,"set_pos","","",70,[[["screenpt",3]]]],[11,"event","","",70,[[["eventctx",3],["widgetoutput",3]]]],[11,"draw","","",70,[[["gfxctx",3]]]],[11,"get_dims","widgetry::widgets::line_plot","",71,[[],["screendims",3]]],[11,"set_pos","","",71,[[["screenpt",3]]]],[11,"event","","",71,[[["eventctx",3],["widgetoutput",3]]]],[11,"draw","","",71,[[["gfxctx",3]]]],[11,"get_dims","widgetry::widgets::menu","",72,[[],["screendims",3]]],[11,"set_pos","","",72,[[["screenpt",3]]]],[11,"event","","",72,[[["eventctx",3],["widgetoutput",3]]]],[11,"draw","","",72,[[["gfxctx",3]]]],[11,"get_dims","widgetry::widgets::persistent_split","",76,[[],["screendims",3]]],[11,"set_pos","","",76,[[["screenpt",3]]]],[11,"event","","",76,[[["eventctx",3],["widgetoutput",3]]]],[11,"draw","","",76,[[["gfxctx",3]]]],[11,"get_dims","widgetry::widgets::scatter_plot","",80,[[],["screendims",3]]],[11,"set_pos","","",80,[[["screenpt",3]]]],[11,"event","","",80,[[["eventctx",3],["widgetoutput",3]]]],[11,"draw","","",80,[[["gfxctx",3]]]],[11,"get_dims","widgetry::widgets::slider","",81,[[],["screendims",3]]],[11,"set_pos","","",81,[[["screenpt",3]]]],[11,"event","","",81,[[["eventctx",3],["widgetoutput",3]]]],[11,"draw","","",81,[[["gfxctx",3]]]],[11,"get_dims","widgetry::widgets::spinner","",86,[[],["screendims",3]]],[11,"set_pos","","",86,[[["screenpt",3]]]],[11,"event","","",86,[[["eventctx",3],["widgetoutput",3]]]],[11,"draw","","",86,[[["gfxctx",3]]]],[11,"get_dims","widgetry::widgets::stash","",87,[[],["screendims",3]]],[11,"set_pos","","",87,[[["screenpt",3]]]],[11,"event","","",87,[[["eventctx",3],["widgetoutput",3]]]],[11,"draw","","",87,[[["gfxctx",3]]]],[11,"get_dims","widgetry::widgets::text_box","",91,[[],["screendims",3]]],[11,"set_pos","","",91,[[["screenpt",3]]]],[11,"event","","",91,[[["eventctx",3],["widgetoutput",3]]]],[11,"draw","","",91,[[["gfxctx",3]]]],[11,"get_dims","widgetry::widgets::toggle","",92,[[],["screendims",3]]],[11,"set_pos","","",92,[[["screenpt",3]]]],[11,"event","","",92,[[["eventctx",3],["widgetoutput",3]]]],[11,"draw","","",92,[[["gfxctx",3]]]],[11,"drop","widgetry::backend_glow","",12,[[]]],[11,"drop","","",13,[[]]],[11,"drop","","",14,[[]]],[11,"as_ref","widgetry::drawing","",26,[[],["assets",3]]],[11,"as_ref","widgetry::event_ctx","",33,[[],["assets",3]]],[11,"as_ref","widgetry::drawing","",27,[[],["assets",3]]],[11,"as_ref","widgetry::assets","",10,[[],["assets",3]]],[11,"as_ref","widgetry::drawing","",26,[[],["prerender",3]]],[11,"as_ref","widgetry::event_ctx","",33,[[],["prerender",3]]],[11,"as_ref","widgetry::drawing","",27,[[],["prerender",3]]],[11,"from","widgetry::color","",22,[[["color",3]],["fill",4]]],[11,"from","","",22,[[["texture",3]],["fill",4]]],[11,"from","widgetry::event","",30,[[["key",4]],["multikey",4]]],[11,"from","widgetry::geom","Creates a batch of filled polygons.",37,[[["vec",3]],["geombatch",3]]],[11,"from","","",38,[[["color",3]],["rewritecolor",4]]],[11,"from","widgetry::screen_geom","",42,[[["f64",15],["logicalposition",3]],["screenpt",3]]],[11,"from","","",44,[[["logicalsize",3],["f64",15]],["screendims",3]]],[11,"from","","",44,[[["f64",15]],["screendims",3]]],[11,"from","","",44,[[],["screendims",3]]],[11,"from","widgetry::text","",49,[[]]],[11,"from","","",50,[[["textspan",3]],["text",3]]],[11,"from","","",50,[[],["text",3]]],[11,"from","widgetry::widgets","",97,[[["f64",15]]]],[11,"from","","",97,[[["cornerradii",3]]]],[11,"from","","",99,[[["usize",15]],["edgeinsets",3]]],[11,"from","","",99,[[["f64",15]],["edgeinsets",3]]],[11,"next","widgetry::svg","",47,[[],[["pathevent",6],["option",4]]]],[11,"clone","widgetry::canvas","",19,[[],["horizontalalignment",4]]],[11,"clone","","",20,[[],["verticalalignment",4]]],[11,"clone","widgetry::color","",21,[[],["color",3]]],[11,"clone","","",22,[[],["fill",4]]],[11,"clone","","",23,[[],["texture",3]]],[11,"clone","","",24,[[],["lineargradient",3]]],[11,"clone","widgetry::event","",28,[[],["event",4]]],[11,"clone","","",29,[[],["key",4]]],[11,"clone","","",30,[[],["multikey",4]]],[11,"clone","widgetry::event_ctx","",31,[[],["updatetype",4]]],[11,"clone","widgetry::geom::geom_batch_stack","",35,[[],["axis",4]]],[11,"clone","widgetry::geom","",37,[[],["geombatch",3]]],[11,"clone","","",38,[[],["rewritecolor",4]]],[11,"clone","widgetry::screen_geom","",42,[[],["screenpt",3]]],[11,"clone","","",43,[[],["screenrectangle",3]]],[11,"clone","","",44,[[],["screendims",3]]],[11,"clone","widgetry::style::button_style","",45,[[],["buttonstyle",3]]],[11,"clone","widgetry::style","",46,[[],["style",3]]],[11,"clone","widgetry::text","",48,[[],["font",4]]],[11,"clone","","",49,[[],["textspan",3]]],[11,"clone","","",50,[[],["text",3]]],[11,"clone","widgetry::widgets::button","",56,[[],["buttonbuilder",3]]],[11,"clone","","",57,[[],["buttonstatestyle",3]]],[11,"clone","","",58,[[],["label",3]]],[11,"clone","widgetry::widgets::image","",65,[[],["image",3]]],[11,"clone","","",66,[[],["imagesource",4]]],[11,"clone","widgetry::widgets","",97,[[],["cornerrounding",4]]],[11,"clone","","",99,[[],["edgeinsets",3]]],[11,"clone","widgetry","",100,[[],["controlstate",4]]],[11,"clone","","",101,[[],["contentmode",4]]],[11,"default","widgetry::geom::geom_batch_stack","",36,[[]]],[11,"default","widgetry::widgets::button","",56,[[],["buttonbuilder",3]]],[11,"default","","",57,[[],["buttonstatestyle",3]]],[11,"default","","",58,[[],["label",3]]],[11,"default","widgetry::widgets::image","",65,[[],["image",3]]],[11,"default","widgetry::widgets","",97,[[]]],[11,"default","","",99,[[],["edgeinsets",3]]],[11,"default","widgetry","",101,[[]]],[11,"cmp","widgetry::event","",29,[[["key",4]],["ordering",4]]],[11,"cmp","","",30,[[["multikey",4]],["ordering",4]]],[11,"eq","widgetry::canvas","",19,[[["horizontalalignment",4]],["bool",15]]],[11,"ne","","",19,[[["horizontalalignment",4]],["bool",15]]],[11,"eq","","",20,[[["verticalalignment",4]],["bool",15]]],[11,"ne","","",20,[[["verticalalignment",4]],["bool",15]]],[11,"eq","widgetry::color","",21,[[["color",3]],["bool",15]]],[11,"ne","","",21,[[["color",3]],["bool",15]]],[11,"eq","","",22,[[["fill",4]],["bool",15]]],[11,"ne","","",22,[[["fill",4]],["bool",15]]],[11,"eq","","",23,[[["texture",3]],["bool",15]]],[11,"ne","","",23,[[["texture",3]],["bool",15]]],[11,"eq","","",24,[[["lineargradient",3]],["bool",15]]],[11,"ne","","",24,[[["lineargradient",3]],["bool",15]]],[11,"eq","widgetry::event","",28,[[["event",4]],["bool",15]]],[11,"ne","","",28,[[["event",4]],["bool",15]]],[11,"eq","","",29,[[["key",4]],["bool",15]]],[11,"eq","","",30,[[["multikey",4]],["bool",15]]],[11,"ne","","",30,[[["multikey",4]],["bool",15]]],[11,"eq","widgetry::event_ctx","",31,[[["updatetype",4]],["bool",15]]],[11,"ne","","",31,[[["updatetype",4]],["bool",15]]],[11,"eq","widgetry::geom::geom_batch_stack","",35,[[["axis",4]],["bool",15]]],[11,"eq","widgetry::geom","",38,[[["rewritecolor",4]],["bool",15]]],[11,"ne","","",38,[[["rewritecolor",4]],["bool",15]]],[11,"eq","widgetry::screen_geom","",42,[[["screenpt",3]],["bool",15]]],[11,"ne","","",42,[[["screenpt",3]],["bool",15]]],[11,"eq","","",44,[[["screendims",3]],["bool",15]]],[11,"ne","","",44,[[["screendims",3]],["bool",15]]],[11,"eq","widgetry::text","",48,[[["font",4]],["bool",15]]],[11,"eq","widgetry::widgets","",94,[[["outcome",4]],["bool",15]]],[11,"ne","","",94,[[["outcome",4]],["bool",15]]],[11,"eq","","",99,[[["edgeinsets",3]],["bool",15]]],[11,"ne","","",99,[[["edgeinsets",3]],["bool",15]]],[11,"partial_cmp","widgetry::event","",29,[[["key",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",30,[[["multikey",4]],[["option",4],["ordering",4]]]],[11,"lt","","",30,[[["multikey",4]],["bool",15]]],[11,"le","","",30,[[["multikey",4]],["bool",15]]],[11,"gt","","",30,[[["multikey",4]],["bool",15]]],[11,"ge","","",30,[[["multikey",4]],["bool",15]]],[11,"fmt","widgetry::canvas","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","widgetry::color","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","widgetry::drawing","",25,[[["formatter",3]],["result",6]]],[11,"fmt","widgetry::event","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","widgetry::event_ctx","",31,[[["formatter",3]],["result",6]]],[11,"fmt","widgetry::geom::geom_batch_stack","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","widgetry::geom","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","widgetry::screen_geom","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","widgetry::text","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","widgetry::widgets::button","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","widgetry::widgets::image","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","widgetry::widgets","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","widgetry","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","widgetry::color","",21,[[["formatter",3]],["result",6]]],[11,"hash","widgetry::event","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","widgetry::text","",48,[[]]],[11,"deserialize","widgetry::color","",21,[[],["result",4]]],[11,"deserialize","widgetry::geom","",38,[[],["result",4]]],[11,"deserialize","widgetry::screen_geom","",44,[[],["result",4]]],[11,"serialize","widgetry::color","",21,[[],["result",4]]],[11,"serialize","widgetry::geom","",38,[[],["result",4]]],[11,"serialize","widgetry::screen_geom","",44,[[],["result",4]]],[11,"println","widgetry::event_ctx","",34,[[["string",3]]]],[11,"reprintln","","",34,[[["string",3]]]],[11,"btn_back","widgetry::style","title: name of previous screen, which you\'ll return to",46,[[["str",15]],["buttonbuilder",3]]],[11,"btn_next","","A right facing caret, like \\\">\\\", suitable for paging to …",46,[[],["buttonbuilder",3]]],[11,"btn_prev","","A left facing caret, like \\\"<\\\", suitable for paging to the …",46,[[],["buttonbuilder",3]]],[11,"btn_close","","An \\\"X\\\" button to close the current state. Bound to the …",46,[[],["buttonbuilder",3]]],[11,"btn_close_widget","","An \\\"X\\\" button to close the current state. Bound to the …",46,[[["eventctx",3]],["widget",3]]],[11,"btn_popup_icon_text","","",46,[[["str",15]],["buttonbuilder",3]]]],"p":[[3,"Table"],[4,"Col"],[3,"Filter"],[8,"SharedAppState"],[3,"App"],[4,"DrawBaselayer"],[8,"State"],[4,"Transition"],[8,"SimpleState"],[3,"SimpleStateWrapper"],[3,"Assets"],[3,"GfxCtxInnards"],[3,"Drawable"],[3,"VertexArray"],[3,"Buffer"],[3,"PrerenderInnards"],[3,"SpriteTexture"],[3,"WindowAdapter"],[3,"Canvas"],[4,"HorizontalAlignment"],[4,"VerticalAlignment"],[3,"Color"],[4,"Fill"],[3,"Texture"],[3,"LinearGradient"],[3,"Uniforms"],[3,"GfxCtx"],[3,"Prerender"],[4,"Event"],[4,"Key"],[4,"MultiKey"],[4,"UpdateType"],[13,"ScreenCaptureEverything"],[3,"EventCtx"],[3,"LoadingScreen"],[4,"Axis"],[3,"GeomBatchStack"],[3,"GeomBatch"],[4,"RewriteColor"],[3,"UserInput"],[3,"State"],[3,"Settings"],[3,"ScreenPt"],[3,"ScreenRectangle"],[3,"ScreenDims"],[3,"ButtonStyle"],[3,"Style"],[3,"PathConvIter"],[4,"Font"],[3,"TextSpan"],[3,"Text"],[8,"TextExt"],[3,"Warper"],[3,"Cached"],[3,"Autocomplete"],[3,"Button"],[3,"ButtonBuilder"],[3,"ButtonStateStyle"],[3,"Label"],[3,"MultiButton"],[3,"CompareTimes"],[3,"Container"],[3,"Dropdown"],[3,"FanChart"],[3,"Filler"],[3,"Image"],[4,"ImageSource"],[13,"Bytes"],[3,"JustDraw"],[3,"DrawWithTooltips"],[3,"DeferDraw"],[3,"LinePlot"],[3,"Menu"],[3,"Panel"],[3,"PanelBuilder"],[4,"Dims"],[3,"PersistentSplit"],[3,"PlotOptions"],[8,"Axis"],[3,"Series"],[3,"ScatterPlot"],[3,"Slider"],[4,"Style"],[13,"Horizontal"],[13,"Vertical"],[13,"Area"],[3,"Spinner"],[3,"Stash"],[3,"Column"],[3,"Tab"],[3,"TabController"],[3,"TextBox"],[3,"Toggle"],[8,"WidgetImpl"],[4,"Outcome"],[3,"WidgetOutput"],[3,"Widget"],[4,"CornerRounding"],[3,"LayoutStyle"],[3,"EdgeInsets"],[4,"ControlState"],[4,"ContentMode"],[3,"Choice"],[3,"Nothing"]]},\
"widgetry_demo":{"doc":"","i":[[5,"main","widgetry_demo","",null,[[]]],[5,"run","","",null,[[["settings",3]]]],[3,"App","","",null,null],[3,"Demo","","",null,null],[12,"controls","","",0,null],[12,"timeseries_panel","","",0,null],[12,"scrollable_canvas","","",0,null],[12,"texture_demo","","",0,null],[12,"elapsed","","",0,null],[12,"tabs","","",0,null],[11,"new","","",0,[[["eventctx",3]]]],[11,"make_timeseries_panel","","",0,[[["eventctx",3]],["panel",3]]],[11,"redraw_stopwatch","","",0,[[["eventctx",3]]]],[5,"setup_texture_demo","","",null,[[["eventctx",3],["texture",3]],["drawable",3]]],[5,"setup_scrollable_canvas","","",null,[[["eventctx",3]],["drawable",3]]],[5,"make_tabs","","",null,[[["eventctx",3]],["tabcontroller",3]]],[5,"make_controls","","",null,[[["tabcontroller",3],["eventctx",3]],["panel",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"into_any","","",1,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_any","","",0,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"event","","",0,[[["eventctx",3],["app",3]],[["transition",4],["app",3]]]],[11,"draw","","",0,[[["gfxctx",3],["app",3]]]]],"p":[[3,"Demo"],[3,"App"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);