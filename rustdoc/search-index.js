var searchIndex = JSON.parse('{\
"abstio":{"doc":"A/B Street organizes data files in a particular way. This …","t":[3,3,3,3,3,3,0,0,12,12,12,12,12,5,0,5,5,12,5,5,5,0,5,5,12,12,0,0,12,5,5,5,12,5,5,5,5,5,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,5,5,5,12,5,5,12,12,12,5,5,3,3,3,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,5,11,11,5,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,11,11,5,11,11,5,11,12,5,11,11,12,5,5,5,5,11,12,12,11,11,5,12,12,11,11,11,5,5],"n":["CityName","DataPacks","Entry","FileWithProgress","Manifest","MapName","abst_data","abst_paths","checksum","city","city","compressed_size_bytes","country","delete_file","download","download_bytes","download_to_file","entries","file_exists","find_next_file","find_prev_file","http","http_get","http_post","inner","input","io","io_native","last_printed_at","list_all_objects","list_dir","load_all_objects","map","maybe_read_binary","maybe_read_json","must_read_object","parse_scenario_path","path","path","path_all_edits","path_all_ltn_proposals","path_all_saves","path_all_scenarios","path_camera_state","path_edits","path_ltn_proposals","path_player","path_popdat","path_prebaked_results","path_raw_map","path_save","path_scenario","path_shared_input","path_trips","print_download_progress","processed_bytes","read_binary","read_json","read_object","runtime","slurp_bytes","slurp_file","started_at","total_bytes","uncompressed_size_bytes","write_binary","write_json","DataPacks","Entry","Manifest","all_data_packs","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","checksum","compressed_size_bytes","deserialize","deserialize","deserialize","entries","filter","from","from","from","get_entry","input","into","into","into","is_file_part_of_huge_seattle","load","load_or_create","path_to_city","runtime","save","serialize","serialize","serialize","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uncompressed_size_bytes","CityName","MapName","ROOT_DIR","ROOT_PLAYER_DIR","__private_field","__private_field","as_any","as_filename","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","city","city","clone","clone","clone_box","clone_into","clone_into","cmp","cmp","country","deref","deref","describe","describe","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","from_city","from_path","input_path","into","into","into","into","list_all_cities_from_importer_config","list_all_cities_from_manifest","list_all_cities_locally","list_all_cities_merged","list_all_maps_from_manifest","list_all_maps_in_city_from_importer_config","list_all_maps_in_city_from_manifest","list_all_maps_in_city_locally","list_all_maps_in_city_merged","list_all_maps_locally","list_all_maps_merged","map","ne","ne","new","new","parse","parse_scenario_path","partial_cmp","partial_cmp","path","path","path_all_edits","path_all_ltn_proposals","path_all_saves","path_all_scenarios","path_camera_state","path_edits","path_ltn_proposals","path_player","path_popdat","path_prebaked_results","path_raw_map","path_save","path_scenario","path_shared_input","path_trips","seattle","seattle","serialize","serialize","to_data_pack_name","to_owned","to_owned","to_path","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","download_bytes","download_to_file","print_download_progress","http_get","http_post","find_next_file","find_prev_file","list_all_objects","load_all_objects","maybe_read_json","must_read_object","read_binary","read_json","read_object","FileWithProgress","borrow","borrow_mut","delete_file","events","events_and_raw","file_exists","from","inner","inner_slurp_file","into","keys","last_printed_at","list_dir","maybe_read_binary","maybe_write_binary","maybe_write_json","new","path","processed_bytes","read","read_line","slurp_file","started_at","total_bytes","try_from","try_into","type_id","write_binary","write_json"],"q":["abstio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abstio::abst_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abstio::abst_paths","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abstio::download","","","abstio::http","","abstio::io","","","","","","","","","abstio::io_native","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A single city is identified using this.","Player-chosen groups of files to opt into downloading","A single file","","A list of all canonical data files for A/B Street that’…","A single map is identified using this.","","Generate paths for different A/B Street files","md5sum of the file","The name of the city, in filename-friendly form – for …","","Compressed size in bytes","A two letter lowercase country code, from …","Idempotent","","Downloads bytes from a URL. This must be called with a …","Download a file from a URL. This must be called with a …","Keyed by path, starting with “data/”","","","Keeps file extensions","","Performs an HTTP GET request and returns the raw response. …","Performs an HTTP POST request and returns the response.","","A list of cities to download for running the map importer.","","Normal file IO using the filesystem","","Just list all things from a directory, return sorted by …","Returns full paths","Load all serialized things from a directory, return sorted …","The name of the map within the city, in filename-friendly …","","","May be a JSON or binary file. Panics on failure.","Extract the map and scenario name from a path. Crashes if …","","","","","","","","","","","","","","","","","","Print download progress to STDOUT. Pass this the receiver, …","","","","May be a JSON or binary file","A list of cities to download for using in A/B Street. …","An adapter for widgetry::Settings::read_svg to read SVGs …","","","","Uncompressed size in bytes. Because we have some massive …","","","Player-chosen groups of files to opt into downloading","A single file","A list of all canonical data files for A/B Street that’…","Fill out all data packs based on the local manifest.","","","","","","","md5sum of the file","Compressed size in bytes","","","","Keyed by path, starting with “data/”","Removes entries from the Manifest to match the DataPacks …","","","","Look up an entry.","A list of cities to download for running the map importer.","","","","Because there are so many Seattle maps and they get …","","Load the player’s config for what files to download, or …","If an entry’s path is system data, return the city.","A list of cities to download for using in A/B Street. …","Saves the player’s config for what files to download.","","","","","","","","","","","","","Uncompressed size in bytes. Because we have some massive …","A single city is identified using this.","A single map is identified using this.","","","","","","Stringify the map name for filenames.","","","","","","","","","The name of the city, in filename-friendly form – for …","","","","","","","","","A two letter lowercase country code, from …","","","Stringify the city name for debug messages. Don’t …","Stringify the map name for debug messages. Don’t …","","","","","","","","","","","","","Create a MapName from a city and map within that city.","Transforms a path to a map back to a MapName. Returns <code>None</code> …","Constructs the path to some city-scoped data/input.","","","","","Returns all city names based on importer config.","Returns all city names based on the manifest of available …","Returns all city names available locally.","Returns all city names either available locally or based …","Returns all maps from all cities based on the manifest of …","Returns all maps in a city based on importer config.","Returns all maps from one city based on the manifest of …","Returns all maps from one city that’re available locally.","Returns all maps from one city that’re available either …","Returns all maps from all cities available locally.","Returns all maps from all cities either available locally …","The name of the map within the city, in filename-friendly …","","","Create a CityName from a country code and city.","Create a MapName from a country code, city, and map name.","Parses a CityName from something like “gb/london”; the …","Extract the map and scenario name from a path. Crashes if …","","","","Returns the filesystem path to this map.","","","","","","","","","","","","","","","","Convenient constructor for the main city of the game.","Convenient constructor for the main city of the game.","","","Returns the string to opt into runtime or input files for …","","","Expresses the city as a path, like “gb/london”; the …","","","","","","","","","","","","","Downloads bytes from a URL. This must be called with a …","Download a file from a URL. This must be called with a …","Print download progress to STDOUT. Pass this the receiver, …","Performs an HTTP GET request and returns the raw response. …","Performs an HTTP POST request and returns the response.","","Keeps file extensions","Just list all things from a directory, return sorted by …","Load all serialized things from a directory, return sorted …","","May be a JSON or binary file. Panics on failure.","","","May be a JSON or binary file","","","","Idempotent","","","","","","","","","","Returns full paths","","","","Also hands back a callback that’ll add the final result …","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,2,3,1,2,0,0,0,0,4,0,0,0,0,0,0,5,6,0,0,5,0,0,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,6,0,0,5,5,1,0,0,0,0,0,6,4,1,6,4,1,6,1,1,4,1,6,4,4,4,1,6,4,6,4,1,6,4,4,6,4,6,6,4,1,6,4,1,6,4,1,6,4,1,6,1,0,0,0,0,7,8,3,3,7,8,2,3,7,8,2,3,2,3,2,3,3,2,3,2,3,2,7,8,2,3,2,3,2,3,2,3,2,3,7,8,2,3,3,3,2,7,8,2,3,2,2,2,2,3,2,3,3,3,3,3,3,2,3,2,3,2,0,2,3,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,2,3,3,2,3,2,7,8,2,3,7,8,2,3,7,8,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,5,5,0,5,5,0,5,5,5,0,0,0,0,5,5,5,5,5,0,5,5,5,5,5,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[["asref",8,[["str",15]]]]],null,[[["asref",8,[["str",15]]],["option",4,[["string",3]]],["sender",3]]],[[["asref",8,[["str",15]]],["option",4,[["string",3]]],["asref",8,[["str",15]]]]],null,[[["asref",8,[["str",15]]]],["bool",15]],[[["string",3]],["option",4,[["string",3]]]],[[["string",3]],["option",4,[["string",3]]]],null,[[["asref",8,[["str",15]]]]],[[["asref",8,[["str",15]]],["string",3]]],null,null,null,null,null,[[["string",3]],["vec",3,[["string",3]]]],[[["string",3]],["vec",3,[["string",3]]]],[[["string",3]],["vec",3]],null,[[["string",3],["timer",3]],["result",6,[["deserializeowned",8]]]],[[["string",3],["timer",3]],["result",6,[["deserializeowned",8]]]],[[["string",3],["timer",3]],["deserializeowned",8]],[[["str",15]]],[[["asref",8,[["str",15]]]],["string",3]],null,[[["mapname",3]],["string",3]],[[["mapname",3]],["string",3]],[[["mapname",3],["str",15],["str",15]],["string",3]],[[["mapname",3]],["string",3]],[[["mapname",3]],["string",3]],[[["mapname",3],["str",15]],["string",3]],[[["mapname",3],["str",15]],["string",3]],[[["asref",8,[["str",15]]]],["string",3]],[[],["string",3]],[[["mapname",3],["str",15]],["string",3]],[[["mapname",3]],["string",3]],[[["mapname",3],["str",15],["str",15],["string",3]],["string",3]],[[["mapname",3],["str",15]],["string",3]],[[["asref",8,[["str",15]]]],["string",3]],[[["mapname",3]],["string",3]],[[["receiver",3,[["string",3]]]]],null,[[["string",3],["timer",3]],["deserializeowned",8]],[[["string",3],["timer",3]],["deserializeowned",8]],[[["string",3],["timer",3]],["result",6,[["deserializeowned",8]]]],null,[[["str",15]],["vec",3,[["u8",15]]]],[[["asref",8,[["str",15]]]],["result",6,[["vec",3,[["u8",15]]]]]],null,null,null,[[["string",3]]],[[["string",3]]],null,null,null,[[],["datapacks",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["datapacks",3]],["manifest",3]],[[]],[[]],[[]],[[["str",15]],["option",4,[["entry",3]]]],null,[[]],[[]],[[]],[[["str",15]],["bool",15]],[[],["manifest",3]],[[],["datapacks",3]],[[["str",15]],["option",4,[["cityname",3]]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[],["any",8]],[[],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["cityname",3]],[[],["mapname",3]],[[],["box",3,[["cloneableany",8],["global",3]]]],[[]],[[]],[[["cityname",3]],["ordering",4]],[[["mapname",3]],["ordering",4]],null,[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[["cityname",3]],["bool",15]],[[["mapname",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["cityname",3],["str",15]],["mapname",3]],[[["str",15]],["option",4,[["mapname",3]]]],[[["asref",8,[["str",15]]]],["string",3]],[[]],[[]],[[]],[[]],[[],["vec",3,[["cityname",3]]]],[[["manifest",3]],["vec",3,[["cityname",3]]]],[[],["vec",3,[["cityname",3]]]],[[["manifest",3]],["vec",3,[["cityname",3]]]],[[["manifest",3]],["vec",3,[["mapname",3]]]],[[],["vec",3,[["mapname",3]]]],[[["cityname",3],["manifest",3]],["vec",3,[["mapname",3]]]],[[["cityname",3]],["vec",3,[["mapname",3]]]],[[["cityname",3],["manifest",3]],["vec",3,[["mapname",3]]]],[[],["vec",3,[["mapname",3]]]],[[["manifest",3]],["vec",3,[["mapname",3]]]],null,[[["cityname",3]],["bool",15]],[[["mapname",3]],["bool",15]],[[["str",15],["str",15]],["cityname",3]],[[["str",15],["str",15],["str",15]],["mapname",3]],[[["str",15]],["result",6,[["cityname",3]]]],[[["str",15]]],[[["cityname",3]],["option",4,[["ordering",4]]]],[[["mapname",3]],["option",4,[["ordering",4]]]],[[["asref",8,[["str",15]]]],["string",3]],[[],["string",3]],[[["mapname",3]],["string",3]],[[["mapname",3]],["string",3]],[[["mapname",3],["str",15],["str",15]],["string",3]],[[["mapname",3]],["string",3]],[[["mapname",3]],["string",3]],[[["mapname",3],["str",15]],["string",3]],[[["mapname",3],["str",15]],["string",3]],[[["asref",8,[["str",15]]]],["string",3]],[[],["string",3]],[[["mapname",3],["str",15]],["string",3]],[[["mapname",3]],["string",3]],[[["mapname",3],["str",15],["str",15],["string",3]],["string",3]],[[["mapname",3],["str",15]],["string",3]],[[["asref",8,[["str",15]]]],["string",3]],[[["mapname",3]],["string",3]],[[],["cityname",3]],[[["str",15]],["mapname",3]],[[],["result",4]],[[],["result",4]],[[],["string",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["asref",8,[["str",15]]],["option",4,[["string",3]]],["sender",3]]],[[["asref",8,[["str",15]]],["option",4,[["string",3]]],["asref",8,[["str",15]]]]],[[["receiver",3,[["string",3]]]]],[[["asref",8,[["str",15]]]]],[[["asref",8,[["str",15]]],["string",3]]],[[["string",3]],["option",4,[["string",3]]]],[[["string",3]],["option",4,[["string",3]]]],[[["string",3]],["vec",3,[["string",3]]]],[[["string",3]],["vec",3]],[[["string",3],["timer",3]],["result",6,[["deserializeowned",8]]]],[[["string",3],["timer",3]],["deserializeowned",8]],[[["string",3],["timer",3]],["deserializeowned",8]],[[["string",3],["timer",3]],["deserializeowned",8]],[[["string",3],["timer",3]],["result",6,[["deserializeowned",8]]]],null,[[]],[[]],[[["asref",8,[["str",15]]]]],[[],["events",3]],[[],["eventsandraw",3]],[[["asref",8,[["str",15]]]],["bool",15]],[[]],null,[[["str",15]],["result",6,[["vec",3,[["u8",15]]]]]],[[]],[[],["keys",3]],null,[[["string",3]],["vec",3,[["string",3]]]],[[["string",3],["timer",3]],["result",6,[["deserializeowned",8]]]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],null,null,[[],["result",6,[["usize",15],["error",3]]]],[[],["result",4,[["option",4,[["string",3]]],["error",3]]]],[[["asref",8,[["str",15]]]],["result",6,[["vec",3,[["u8",15]]]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["string",3]]],[[["string",3]]]],"p":[[3,"Entry"],[3,"CityName"],[3,"MapName"],[3,"Manifest"],[3,"FileWithProgress"],[3,"DataPacks"],[3,"ROOT_DIR"],[3,"ROOT_PLAYER_DIR"]]},\
"abstutil":{"doc":"The contents of this crate need to be organized better:","t":[12,8,8,3,3,8,3,17,3,3,5,5,10,5,0,5,0,10,0,5,5,5,5,5,12,5,5,5,5,10,12,12,12,0,12,12,5,5,5,5,5,0,0,5,5,5,5,5,12,0,5,5,5,0,5,5,5,8,8,10,10,12,3,3,8,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,13,3,13,4,3,3,8,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,5,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,12,11,11,12,5,10,12,12,11,11,11,10,12,12,12,11,11,12,12,12,11,5,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,5,5,5,5,5],"n":["0","CloneableAny","CloneableImpl","Counter","FixedMap","IndexableKey","MultiMap","PROGRESS_FREQUENCY_SECONDS","Tags","VecMap","abbreviated_format","args_to_query_string","as_any","basename","cli","cli_args","clone","clone_box","collections","contains_duplicates","deserialize_btreemap","deserialize_hashmap","deserialize_multimap","deserialize_usize","empty","from_binary","from_binary_reader","from_json","from_json_reader","index","inner","inner","key_type","logger","map","map","must_run_cmd","parent_path","plain_list_names","prettyprint_bytes","prettyprint_usize","process","serde","serialize_btreemap","serialize_hashmap","serialize_multimap","serialize_usize","serialized_size_bytes","sum","time","to_binary","to_json","to_json_terse","utils","wraparound_get","args_to_query_string","cli_args","CloneableAny","CloneableImpl","as_any","clone_box","0","Counter","FixedMap","IndexableKey","MultiMap","Tags","VecMap","add","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compare","consume","consume","consume","contains_duplicates","contains_key","contains_key","default","default","default","default","deserialize","deserialize","deserialize","diff","empty","empty","eq","eq","eq","extend","fmt","from","from","from","from","from","get","get","get","get","get","get_mut","get_result","highest_n","inc","index","index","inner","inner","inner","insert","insert","insert","into","into","into","into","into","into_inner","is","is_any","is_empty","is_empty","is_empty","is_empty","key_type","len","len","map","map","max","mut_or_insert","ne","ne","ne","new","new","new","new","new","push","remove","remove","remove","serialize","serialize","serialize","set","sorted_asc","sum","sum","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","values","wraparound_get","setup","must_run_cmd","deserialize_btreemap","deserialize_hashmap","deserialize_multimap","deserialize_usize","from_binary","from_binary_reader","from_json","from_json_reader","serialize_btreemap","serialize_hashmap","serialize_multimap","serialize_usize","serialized_size_bytes","to_binary","to_json","to_json_terse","File","Progress","Progress","StackEntry","TimedFileReader","Timer","TimerSink","TimerSpan","TimerSpan","add_result","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel_iter_early","cancel_iter_early","clear_current_line","done","drop","elapsed_seconds","events","events_and_raw","finalized_println","first_update","fmt","from","from","from","from","from","inner","inner_parallelize","into","into","into","into","into","keys","label","last_printed_at","last_printed_at","name","nested_results","nested_time","new","new","new","new_with_sink","next","next","outermost_name","parallelize","parallelize_polite","path","prettyprint_time","println","processed_bytes","processed_items","read","read_file","read_line","reprintln","results","sink","stack","start","start_iter","started_at","started_at","started_at","stop","temporary_println","temporary_println","throwaway","total_bytes","total_items","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","0","0","0","abbreviated_format","basename","parent_path","plain_list_names","prettyprint_bytes","prettyprint_usize"],"q":["abstutil","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abstutil::cli","","abstutil::clone","","","","abstutil::collections","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abstutil::logger","abstutil::process","abstutil::serde","","","","","","","","","","","","","","","","abstutil::time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abstutil::time::StackEntry","","","abstutil::utils","","","","",""],"d":["","Trick to make a cloneable Any from …","","A counter per key","A drop-in replacement for <code>BTreeMap</code>, where the keys have …","Use with <code>FixedMap</code>. From a particular key, extract a <code>usize</code>. …","","","Convenience functions around a string-&gt;string map","Use when your key is just PartialEq, not Ord or Hash.","","Transforms some command-line arguments into URL query …","","","","Returns arguments passed in from the command-line, …","","","","","Deserializes a BTreeMap from a list of tuples. Necessary …","Deserializes a HashMap from a list of tuples.","Deserializes a MultiMap.","Deserializes a <code>usize</code> from a <code>u32</code>.","","Deserializes an object from the bincode format.","Deserializes an object from the bincode format, from a …","Deserializes an object from a JSON string.","Deserializes an object from JSON, from a reader.","","","","","","","","Runs a command, asserts success. STDOUT and STDERR aren’…","","","","","","","Serializes a BTreeMap as a list of tuples. Necessary when …","Serializes a HashMap as a list of tuples, first sorting by …","Serializes a MultiMap.","Serializes a <code>usize</code> as a <code>u32</code> to save space. Useful when you …","The number of bytes for an object serialized to bincode.","","","Transforms an object to bincoded bytes.","Stringifies an object to nicely formatted JSON.","Stringifies an object to terse JSON.","","","Transforms some command-line arguments into URL query …","Returns arguments passed in from the command-line, …","Trick to make a cloneable Any from …","","","","","A counter per key","A drop-in replacement for <code>BTreeMap</code>, where the keys have …","Use with <code>FixedMap</code>. From a particular key, extract a <code>usize</code>. …","","Convenience functions around a string-&gt;string map","Use when your key is just PartialEq, not Ord or Hash.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Find all values that differ. Returns (key, value1, …","","","","","","","","","","","","","","","If the key is missing, returns 0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Doesn’t dedupe","","","","","","","","Values with the same count are grouped together","","","","","","","","","","","","","","","","","","","","","","","","On native: uses env_log","Runs a command, asserts success. STDOUT and STDERR aren’…","Deserializes a BTreeMap from a list of tuples. Necessary …","Deserializes a HashMap from a list of tuples.","Deserializes a MultiMap.","Deserializes a <code>usize</code> from a <code>u32</code>.","Deserializes an object from the bincode format.","Deserializes an object from the bincode format, from a …","Deserializes an object from a JSON string.","Deserializes an object from JSON, from a reader.","Serializes a BTreeMap as a list of tuples. Necessary when …","Serializes a HashMap as a list of tuples, first sorting by …","Serializes a MultiMap.","Serializes a <code>usize</code> as a <code>u32</code> to save space. Useful when you …","The number of bytes for an object serialized to bincode.","Transforms an object to bincoded bytes.","Stringifies an object to nicely formatted JSON.","Stringifies an object to terse JSON.","","","","","","Hierarchial magic","","","","","","","","","","","","","","","","","","Used to end the scope of a timer early.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Execute the callback over all requests, using all CPUs …","Like <code>parallelize</code>, but leave one CPU free, to avoid …","","","","","","","Then the caller passes this in as a reader","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,3,0,0,0,0,4,5,6,6,0,3,7,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,2,2,1,0,0,0,0,0,0,7,5,3,3,7,7,1,6,5,3,7,1,6,5,3,7,1,6,3,7,1,6,7,5,3,7,0,1,6,5,3,7,6,7,1,6,1,1,3,3,7,1,7,1,5,3,7,1,6,5,3,7,1,6,6,1,7,7,4,6,1,5,6,3,1,6,5,3,7,1,6,1,1,1,5,3,7,1,6,5,3,3,7,7,5,3,7,1,5,3,7,1,6,5,3,1,6,7,1,6,3,7,7,7,3,7,1,6,5,3,7,1,6,5,3,7,1,6,5,3,7,1,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,0,8,9,8,9,10,11,12,8,9,10,11,12,9,12,0,9,9,0,9,9,0,12,12,8,9,10,11,12,11,9,8,9,10,11,12,9,12,11,12,10,10,10,9,11,12,9,9,12,9,9,9,11,0,13,11,12,9,9,9,13,9,9,9,9,9,10,11,12,9,0,9,9,11,12,8,9,10,11,12,8,9,10,11,12,8,9,10,11,12,14,15,16,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,[[["usize",15]],["string",3]],[[["vec",3,[["string",3]]]],["string",3]],[[],["any",8]],[[["asref",8,[["str",15]]]],["string",3]],null,[[]],null,[[],["box",3,[["cloneableany",8]]]],null,[[],["bool",15]],[[["deserializer",8]],["result",6,[["btreemap",3,[["",26,[["deserialize",8],["ord",8]]],["deserialize",8]]]]]],[[["deserializer",8]],["result",6,[["hashmap",3,[["",26,[["deserialize",8],["hash",8],["eq",8]]],["deserialize",8]]]]]],[[["deserializer",8]],["result",6,[["multimap",3,[["",26,[["deserialize",8],["eq",8],["ord",8],["clone",8]]],["",26,[["deserialize",8],["eq",8],["ord",8],["clone",8]]]]]]]],[[["deserializer",8]],["result",6,[["usize",15]]]],null,[[],["result",6,[["deserializeowned",8]]]],[[["read",8]],["result",6,[["deserializeowned",8]]]],[[],["result",6,[["deserializeowned",8]]]],[[["read",8]],["result",6,[["deserializeowned",8]]]],[[],["usize",15]],null,null,null,null,null,null,[[["command",3]]],[[["str",15]],["string",3]],[[["btreeset",3,[["string",3]]]],["string",3]],[[["u64",15]],["string",3]],[[["usize",15]],["string",3]],null,null,[[["btreemap",3],["serializer",8]],["result",6]],[[["hashmap",3],["serializer",8]],["result",6]],[[["multimap",3],["serializer",8]],["result",6]],[[["usize",15],["serializer",8]],["result",6]],[[],["usize",15]],null,null,[[],["vec",3,[["u8",15]]]],[[],["string",3]],[[],["string",3]],null,[[["isize",15]]],[[["vec",3,[["string",3]]]],["string",3]],[[]],null,null,[[],["any",8]],[[],["box",3,[["cloneableany",8]]]],null,null,null,null,null,null,null,[[["usize",15]],["usize",15]],[[]],[[],["btreemap",3]],[[]],[[],["btreemap",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["multimap",3]],[[],["counter",3]],[[],["tags",3]],[[],["fixedmap",3]],[[]],[[]],[[]],[[]],[[["counter",3]],["vec",3]],[[],["vec",3]],[[],["btreemap",3,[["btreeset",3]]]],[[],["btreemap",3,[["usize",15]]]],[[],["bool",15]],[[["str",15]],["bool",15]],[[],["bool",15]],[[]],[[],["multimap",3]],[[],["counter",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["tags",3]],["vec",3]],[[],["tags",3]],null,[[["multimap",3]],["bool",15]],[[["counter",3]],["bool",15]],[[["tags",3]],["bool",15]],[[["counter",3]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["btreeset",3]],[[],["usize",15]],[[["str",15]],["option",4,[["string",3]]]],[[],["option",4]],[[],["option",4]],[[["str",15]],["result",6,[["string",3]]]],[[["usize",15]],["vec",3]],[[],["usize",15]],[[],["usize",15]],[[]],[[],["btreemap",3]],null,null,[[]],[[["into",8,[["string",3]]],["into",8,[["string",3]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["btreemap",3,[["string",3],["string",3]]]],[[["str",15],["str",15]],["bool",15]],[[["str",15],["vec",3,[["str",15]]]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["usize",15]],[[],["usize",15]],null,null,[[],["usize",15]],[[["fn",8]]],[[["multimap",3]],["bool",15]],[[["counter",3]],["bool",15]],[[["tags",3]],["bool",15]],[[],["vecmap",3]],[[],["multimap",3]],[[],["counter",3]],[[["btreemap",3,[["string",3],["string",3]]]],["tags",3]],[[],["fixedmap",3]],[[]],[[]],[[["str",15]],["option",4,[["string",3]]]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["btreeset",3]]],[[],["vec",3,[["vec",3]]]],[[],["usize",15]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["flatten",3,[["iter",3,[["option",4]]]]]],[[["isize",15]]],[[]],[[["command",3]]],[[["deserializer",8]],["result",6,[["btreemap",3,[["",26,[["deserialize",8],["ord",8]]],["deserialize",8]]]]]],[[["deserializer",8]],["result",6,[["hashmap",3,[["",26,[["deserialize",8],["hash",8],["eq",8]]],["deserialize",8]]]]]],[[["deserializer",8]],["result",6,[["multimap",3,[["",26,[["deserialize",8],["eq",8],["ord",8],["clone",8]]],["",26,[["deserialize",8],["eq",8],["ord",8],["clone",8]]]]]]]],[[["deserializer",8]],["result",6,[["usize",15]]]],[[],["result",6,[["deserializeowned",8]]]],[[["read",8]],["result",6,[["deserializeowned",8]]]],[[],["result",6,[["deserializeowned",8]]]],[[["read",8]],["result",6,[["deserializeowned",8]]]],[[["btreemap",3],["serializer",8]],["result",6]],[[["hashmap",3],["serializer",8]],["result",6]],[[["multimap",3],["serializer",8]],["result",6]],[[["usize",15],["serializer",8]],["result",6]],[[],["usize",15]],[[],["vec",3,[["u8",15]]]],[[],["string",3]],[[],["string",3]],null,null,null,null,null,null,null,null,null,[[["f64",15],["string",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["f64",15]],[[]],[[]],[[]],[[["instant",6]],["f64",15]],[[],["events",3]],[[],["eventsandraw",3]],[[["option",4],["string",3]]],null,[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],null,[[["str",15],["vec",3],["fn",8],["u32",15]],["vec",3]],[[]],[[]],[[]],[[]],[[]],[[],["keys",3]],null,null,null,null,null,null,[[["into",8,[["string",3]]]],["timer",3]],[[["str",15]],["result",6,[["timedfilereader",3]]]],[[["string",3],["usize",15]],["progress",3]],[[["str",15],["box",3,[["timersink",8]]]],["timer",3]],[[]],[[["option",4]],["option",4]],null,[[["str",15],["vec",3],["fn",8]],["vec",3]],[[["str",15],["vec",3],["fn",8]],["vec",3]],null,[[["f64",15]],["string",3]],[[["string",3]]],null,null,[[],["result",6,[["usize",15],["error",3]]]],[[["str",15]],["result",6]],[[],["result",4,[["option",4,[["string",3]]],["error",3]]]],[[["string",3]]],null,null,null,[[["into",8,[["string",3]]]]],[[["into",8,[["string",3]]],["usize",15]]],null,null,null,[[["into",8,[["string",3]]]]],[[["option",4],["string",3]]],[[["string",3]]],[[],["timer",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[["usize",15]],["string",3]],[[["asref",8,[["str",15]]]],["string",3]],[[["str",15]],["string",3]],[[["btreeset",3,[["string",3]]]],["string",3]],[[["u64",15]],["string",3]],[[["usize",15]],["string",3]]],"p":[[3,"Tags"],[8,"CloneableImpl"],[3,"MultiMap"],[8,"IndexableKey"],[3,"VecMap"],[3,"FixedMap"],[3,"Counter"],[4,"StackEntry"],[3,"Timer"],[3,"TimerSpan"],[3,"TimedFileReader"],[3,"Progress"],[8,"TimerSink"],[13,"TimerSpan"],[13,"Progress"],[13,"File"]]},\
"cli":{"doc":"A collection of tools, mostly related to importing maps …","t":[13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,0,11,11,11,0,5,11,11,0,0,0,5,0,11,11,11,11,5,5,0,0,5,5,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,3,12,11,11,11,11,12,11,11,11,12,11,11,11,11,5,5,5,5,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,12,5,12,11,11,11,11,5,3,3,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,12,5,11,11,5,12,5,11,11,11,11,11,11,11,11,12],"n":["AugmentScenario","ClipOSM","Command","DumpJSON","GenerateHouses","GeoJSONToOsmosis","Import","ImportGrid2Demand","ImportJSONMap","ImportScenario","MinifyMap","OSM2Lanes","OneStepImport","OneshotImport","PickGeofabrik","RandomScenario","RegenerateEverything","RegenerateEverythingExternally","as_any","as_any_mut","augment_scenario","borrow","borrow_mut","clap","clip_osm","dump_json","from","from_clap","generate_houses","geojson_to_osmosis","import_grid2demand","import_json_map","import_scenario","into","into_any","into_any_arc","into_any_rc","main","minify_map","one_step_import","osm2lanes","random_scenario","regenerate_everything_externally","try_from","try_into","type_id","vzip","add_lunch_trips","add_return_trips","clip_path","clip_path","create_uk_travel_demand_model","create_uk_travel_demand_model","drive_on_left","drive_on_left","filter_crosswalks","filter_crosswalks","geojson_path","input","input","input","input","input","input_scenario","job","map","map","map","map","map","map_name","map_path","num_required","num_shards","opts","osm_input","out_path","output","output","path","pbf_path","rng_seed","rng_seed","rng_seed","scenario_name","shard_num","skip_problems","use_geofabrik","add_lunch_trips","add_return_trips","pick_lunch_spot","rand_duration","run","clip","run","to_pt","generate_buildings_on_empty_residential_roads","rand_dist","run","run","Record","agent_type","as_any","as_any_mut","borrow","borrow_mut","departure_time","deserialize","fmt","from","geometry","into","into_any","into_any_arc","into_any_rc","parse_linestring","parse_time","parse_trips","run","try_from","try_into","type_id","vzip","Input","as_any","as_any_mut","borrow","borrow_mut","deserialize","from","into","into_any","into_any_arc","into_any_rc","people","run","scenario_name","try_from","try_into","type_id","vzip","run","LaneSpec","TestCase","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","direction","driving_side","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","lane_type","output","run","serialize","serialize","strip_tags","tags","transform","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","way"],"q":["cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cli::Command","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cli::augment_scenario","","","","","cli::clip_osm","","","cli::generate_houses","","","cli::geojson_to_osmosis","cli::import_grid2demand","","","","","","","","","","","","","","","","","","","","","","","cli::import_scenario","","","","","","","","","","","","","","","","","","cli::one_step_import","cli::osm2lanes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Modifies the schedule of every person in an existing …","Clips an OSM file to a boundary. This is a simple Rust …","","Print a binary map or scenario file as JSON","Procedurally generates houses along empty residential …","Reads a GeoJSON file, extracts a polygon from every …","Import RawMaps, maps, scenarios, and city overviews for a …","Import a scenario from …","Transform a JSON map that’s been manually edited into …","Import a JSON scenario in the …","Removes nonessential parts of a Map, for the bike network …","Generates JSON test cases for osm2lanes.","Imports a one-shot A/B Street map from a GeoJSON boundary …","Imports a one-shot A/B Street map from an .osm file in a …","Prints the osm.pbf file from download.geofabrik.de that …","Generates a random scenario using the proletariat robot …","Regenerate all maps and scenarios from scratch.","Generate a shell script to regenerate all cities that uses …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Before a person’s final trp home, insert a round-trip to …","For people with only a single trip, add a return trip back …","The path to an Osmosis boundary polygon","The path to an Osmosis boundary polygon. If omitted, a …","Generate a simple travel demand model based on 2011 UK …","Generate a simple travel demand model based on 2011 UK …","Do people drive on the left side of the road in this map?","Do people drive on the left side of the road in this map?","Downgrade crosswalks not matching a <code>highway=crossing</code> OSM …","Downgrade crosswalks not matching a <code>highway=crossing</code> OSM …","The path to a GeoJSON file with a boundary","The path to a grid2demand CSV file","The path to a JSON scenario file","The path to a JSON map file to import","The path to an osmosis polygon boundary file","The path to a GeoJSON file","The path to a scenario to augment. This will be modified …","","The path to a map to generate a scenario for","The path to a map matching the grid2demand data","The path to a map matching the scenario data","The path to a map to shrink. The map is modified in-place.","The path to a map to generate houses for","What to name the new imported map. The country will always …","The path to a map file","If the tool doesn’t generate at least this many houses, …","If this command is being run in the cloud, parallelize the …","","","The path to write the XML results","The path to write","The GeoJSON file to write","","The path to the input .osm.pbf file","A seed for generating random numbers","A seed for generating random numbers","A seed for generating random numbers","The name of the scenario to generate","If this command is being run in the cloud, parallelize the …","Problems occur when a position is within the map boundary, …","Use Geofabrik to grab OSM input if true, or Overpass if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This matches the test case format used by …","","","","","","","","","","","","","","","","","","","","","","","Given a map, print a JSON array of test cases for …","","","","","","","","","","","","","",""],"i":[1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,1,1,2,2,3,4,5,4,5,4,5,4,5,6,7,8,9,10,2,11,12,6,7,13,14,5,15,14,16,4,4,3,8,14,17,3,12,2,14,12,16,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,18,18,18,18,0,19,19,19,19,19,19,19,19,19,19,19,0,19,19,19,19,19,0,0,0,20,21,20,21,20,21,20,21,21,20,20,21,20,21,20,21,20,21,20,21,21,20,0,20,21,0,20,0,20,21,20,21,20,21,20,21,20],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[],["app",3]],null,[[["string",3]]],[[]],[[["argmatches",3]]],null,null,null,[[["string",3],["string",3]]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["result",6]],[[["string",3]]],null,null,[[["u64",15],["string",3],["string",3]]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["scenario",3],["map",3],["xorshiftrng",3],["timer",3]]],[[["scenario",3],["xorshiftrng",3]]],[[["buildingid",3],["bool",15],["findclosest",3],["map",3],["xorshiftrng",3]],["option",4]],[[["xorshiftrng",3],["duration",3],["duration",3]],["duration",3]],[[["string",3],["bool",15],["bool",15],["u64",15]]],[[["str",15],["polygon",3],["str",15]],["result",6]],[[["string",3],["string",3],["string",3]],["result",6]],[[],["point",3,[["f64",15]]]],[[["map",3],["xorshiftrng",3],["timer",3]],["vec",3,[["polygon",3]]]],[[["xorshiftrng",3],["f64",15],["f64",15]],["distance",3]],[[["string",3],["usize",15],["u64",15],["string",3]]],[[["string",3]],["result",6]],null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,[[],["result",4]],[[["formatter",3]],["result",6]],[[]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["str",15]],["option",4]],[[["string",3]],["result",6,[["time",3]]]],[[["string",3]],["result",6,[["vec",3,[["externalperson",3]]]]]],[[["string",3],["string",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["result",4]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["string",3],["string",3],["bool",15]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["string",3],["string",3],["bool",15],["bool",15],["bool",15],["bool",15]]],null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[["string",3]]],[[],["result",4]],[[],["result",4]],[[["btreemap",3,[["string",3],["string",3]]]],["btreemap",3,[["string",3],["string",3]]]],null,[[["road",3],["str",15]],["option",4,[["testcase",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null],"p":[[4,"Command"],[13,"AugmentScenario"],[13,"ClipOSM"],[13,"OneshotImport"],[13,"OneStepImport"],[13,"ImportGrid2Demand"],[13,"ImportScenario"],[13,"ImportJSONMap"],[13,"PickGeofabrik"],[13,"GeoJSONToOsmosis"],[13,"Import"],[13,"RandomScenario"],[13,"MinifyMap"],[13,"GenerateHouses"],[13,"OSM2Lanes"],[13,"RegenerateEverything"],[13,"DumpJSON"],[3,"Record"],[3,"Input"],[3,"TestCase"],[3,"LaneSpec"]]},\
"collisions":{"doc":"A simple data format to list collisions that’ve occurred …","t":[3,3,13,13,4,13,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,5,5,11,11,11,12,5,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11],"n":["Collision","CollisionDataset","Fatal","Serious","Severity","Slight","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","collisions","deserialize","deserialize","deserialize","eq","equivalent","fmt","from","from","from","import_seattle","import_stats19","into","into","into","location","parse_incdttm","serialize","serialize","serialize","severity","source_url","time","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["collisions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A single collision that occurred in the real world.","A single dataset describing some collisions that happened.","","","A simple ranking for how severe the collision was. …","","","","","","","","","","The collisions imported from the data source.","","","","","","","","","","Import data from Seattle GeoData …","Import data from the UK STATS19 dataset. See …","","","","A single point describing where the collision occurred.","","","","","The severity reported in the original data source.","A URL pointing to the original data source.","The local time the collision occurred.","","","","","","","","","",""],"i":[0,0,1,1,0,1,2,3,1,2,3,1,1,1,2,2,3,1,1,1,1,2,3,1,0,0,2,3,1,3,0,2,3,1,3,2,3,1,2,3,1,2,3,1,2,3,1],"f":[null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["severity",4]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["severity",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["extrashapes",3],["str",15]],["collisiondataset",3]],[[["extrashapes",3],["str",15]],["collisiondataset",3]],[[]],[[]],[[]],null,[[["str",15]],["option",4,[["duration",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"Severity"],[3,"CollisionDataset"],[3,"Collision"]]},\
"convert_osm":{"doc":"","t":[13,13,13,13,13,4,3,4,4,13,5,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,5,11,11,11,0,12,0,5,12,11,11,11,11,0,12,12,11,11,11,11,12,12,0,0,12,12,0,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,12,12,12,12,5,5,5,5,3,12,11,11,12,12,5,5,11,5,5,11,5,5,12,12,5,12,12,11,11,11,11,12,12,12,12,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,17,5,5,5,5,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,12,5,5,12,5,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,12,11,11,12,11,11,12,5,5,5,11,11,11,11],"n":["Blockface","FixedPerBldg","Gis","JustOSM","None","OnstreetParking","Options","PrivateOffstreetParking","PublicOffstreetParking","SomeAdditionalWhereNoData","add_extra_buildings","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clip","clone","clone","clone","clone_into","clone_into","clone_into","convert","deserialize","deserialize","deserialize","elevation","extra_buildings","extract","filter_crosswalks","filter_crosswalks","from","from","from","from","gtfs","gtfs_url","include_railroads","into","into","into","into","map_config","onstreet_parking","osm_geom","parking","private_offstreet_parking","public_offstreet_parking","reader","serialize","serialize","serialize","skip_local_roads","split_ways","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","use_amenities","vzip","vzip","vzip","vzip","0","pct","0","0","clip_map","add_data","generate_input","scrape_output","OsmExtract","amenities","borrow","borrow_mut","complicated_turn_restrictions","crosswalks","extract_osm","find_parking_aisles","from","get_area_type","get_bldg_amenities","into","is_bldg","is_road","osm_node_ids","roads","service_road_crosses_parking_lot","simple_turn_restrictions","traffic_signals","try_from","try_into","type_id","vzip","0","0","0","0","Route","RouteID","Shape","ShapeID","Stop","StopID","StopTime","Trip","TripID","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dump_kml","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","import","into","into","into","into","into","into","into","into","into","ne","ne","ne","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","route_desc","route_id","route_id","route_long_name","route_short_name","route_type","shape_id","shape_id","shape_pt_lat","shape_pt_lon","shape_pt_sequence","stop_id","stop_id","stop_lat","stop_lon","stop_name","stop_sequence","to_owned","to_owned","to_owned","to_owned","trip_id","trip_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","get_multipolygon_members","glue_multipolygon","glue_to_boundary","multipoly_geometry","DIRECTED_ROAD_THICKNESS","apply_parking","apply_private_offstreet_parking","use_offstreet_parking","use_parking_hints","Document","Node","Relation","Way","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","gps_bounds","into","into","into","into","members","nodes","nodes","pt","pts","read","read_tags","relations","scrape_bounds","tags","tags","tags","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","ways","Output","amenities","borrow","borrow_mut","crosswalks","from","into","pt_to_road","should_collapse_roundabout","simplify_linestring","split_up_roads","try_from","try_into","type_id","vzip"],"q":["convert_osm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","convert_osm::OnstreetParking","","convert_osm::PrivateOffstreetParking","convert_osm::PublicOffstreetParking","convert_osm::clip","convert_osm::elevation","","","convert_osm::extract","","","","","","","","","","","","","","","","","","","","","","","convert_osm::gtfs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","convert_osm::osm_geom","","","","convert_osm::parking","","","","","convert_osm::reader","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","convert_osm::split_ways","","","","","","","","","","","","","",""],"d":["If OSM data is missing, then try to match data from …","","Pull data from …","If not tagged, there won’t be parking.","","What roads will have on-street parking lanes? Data from …","Configures the creation of a RawMap from OSM and other …","If a building doesn’t have anything from …","How many spots are available in public parking garages?","If OSM data is missing, then infer parking lanes on some …","","","","","","","","","","","","","","","","","Create a RawMap from OSM and other input data.","","","","","If provided, read polygons from this GeoJSON file and add …","","","Only include crosswalks that match a <code>highway=crossing</code> OSM …","","","","","","Configure public transit using this URL to a static GTFS …","OSM railway=rail will be included as light rail if so. …","","","","","","","Utilities for extracting concrete geometry from OSM …","","","","","","","","Only include highways and arterials. This may make sense …","","","","","","","","","","","","","","","","","","","","","","","[0, 100]","","","","","","","","(location, amenity)","","","(relation ID, from way ID, via way ID, to way ID)","Crosswalks located at these points, which should be on a …","","","","","","","","","","Unsplit roads","","(ID, restriction type, from way ID, via node ID, to way ID)","Traffic signals to the direction they apply","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Take a bunch of partial PolyLines and attempt to glue them …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Role, member","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A mapping of all points to the split road. Some internal …","Many “roundabouts” like …","","","","","",""],"i":[1,2,3,1,3,0,0,0,0,1,0,4,1,3,2,4,1,3,2,0,1,3,2,1,3,2,0,1,3,2,0,4,0,0,4,4,1,3,2,0,4,4,4,1,3,2,4,4,0,0,4,4,0,1,3,2,4,0,1,3,2,4,1,3,2,4,1,3,2,4,1,3,2,0,4,1,3,2,5,6,7,8,0,0,0,0,0,9,9,9,9,9,0,0,9,0,0,9,0,0,9,9,0,9,9,9,9,9,9,10,11,12,13,0,0,0,0,0,0,0,0,0,10,11,12,13,14,15,16,17,18,10,11,12,13,14,15,16,17,18,10,11,12,13,10,11,12,13,10,11,12,13,10,11,12,13,14,15,16,17,18,0,10,11,12,13,10,11,12,13,10,11,12,13,10,11,12,13,14,15,16,17,18,10,11,12,13,10,11,12,13,0,10,11,12,13,14,15,16,17,18,10,11,12,13,10,11,12,13,14,14,15,14,14,14,15,16,16,16,16,17,18,17,17,17,18,10,11,12,13,15,18,10,11,12,13,14,15,16,17,18,10,11,12,13,14,15,16,17,18,10,11,12,13,14,15,16,17,18,10,11,12,13,14,15,16,17,18,0,0,0,0,0,0,0,0,0,0,0,0,0,19,20,21,22,19,20,21,22,19,20,21,22,19,19,20,21,22,22,19,21,20,21,0,0,19,0,20,21,22,19,20,21,22,19,20,21,22,19,20,21,22,19,20,21,22,19,0,23,23,23,23,23,23,23,0,0,0,23,23,23,23],"f":[null,null,null,null,null,null,null,null,null,null,[[["rawmap",3],["str",15]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["onstreetparking",4]],[[],["publicoffstreetparking",4]],[[],["privateoffstreetparking",4]],[[]],[[]],[[]],[[["string",3],["mapname",3],["option",4,[["string",3]]],["options",3],["timer",3]],["rawmap",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[["rawmap",3],["hashset",3,[["hashablept2d",3]]],["hashmap",3,[["hashablept2d",3],["originalroad",3]]],["timer",3]]],null,[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["rawmap",3],["vec",3],["timer",3]]],[[]],[[]],[[]],[[]],null,null,null,null,[[["rawmap",3],["timer",3]]],[[["rawmap",3]],["result",6]],[[["str",15],["rawmap",3]],["result",6,[["vec",3,[["originalroad",3]]]]]],[[["str",15],["rawmap",3],["vec",3,[["originalroad",3]]]],["result",6]],null,null,[[]],[[]],null,null,[[["rawmap",3],["str",15],["option",4,[["string",3]]],["options",3],["timer",3]],["osmextract",3]],[[["rawmap",3],["vec",3]]],[[]],[[["tags",3]],["option",4,[["areatype",4]]]],[[["tags",3]],["vec",3,[["amenity",3]]]],[[]],[[["tags",3]],["bool",15]],[[["tags",3],["options",3]],["bool",15]],null,null,[[["rawmap",3],["rawroad",3],["vec",3,[["usize",15]]]],["bool",15]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["shapeid",3]],[[],["tripid",3]],[[],["stopid",3]],[[],["routeid",3]],[[]],[[]],[[]],[[]],[[["shapeid",3]],["ordering",4]],[[["tripid",3]],["ordering",4]],[[["stopid",3]],["ordering",4]],[[["routeid",3]],["ordering",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["rawmap",3]]],[[["shapeid",3]],["bool",15]],[[["tripid",3]],["bool",15]],[[["stopid",3]],["bool",15]],[[["routeid",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[["rawmap",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["shapeid",3]],["bool",15]],[[["tripid",3]],["bool",15]],[[["stopid",3]],["bool",15]],[[["routeid",3]],["bool",15]],[[["shapeid",3]],["option",4,[["ordering",4]]]],[[["tripid",3]],["option",4,[["ordering",4]]]],[[["stopid",3]],["option",4,[["ordering",4]]]],[[["routeid",3]],["option",4,[["ordering",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["relationid",3],["relation",3],["document",3]],["vec",3]],[[["relationid",3],["vec",3],["option",4,[["ring",3]]]],["vec",3,[["polygon",3]]]],[[["polyline",3],["ring",3]],["option",4,[["polygon",3]]]],[[["relationid",3],["relation",3],["document",3]],["result",6,[["polygon",3]]]],null,[[["rawmap",3],["options",3],["timer",3]]],[[["rawmap",3],["privateoffstreetparking",4]]],[[["rawmap",3],["string",3],["timer",3]]],[[["rawmap",3],["string",3],["timer",3]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],null,null,null,null,null,[[["str",15],["gpsbounds",3],["timer",3]],["result",6,[["document",3]]]],[[["node",3]],["tags",3]],null,[[["document",3]],["gpsbounds",3]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],null,[[]],[[]],null,[[["rawroad",3]],["bool",15]],[[["vec",3,[["pt2d",3]]]],["vec",3,[["pt2d",3]]]],[[["rawmap",3],["osmextract",3],["timer",3]],["output",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[4,"OnstreetParking"],[4,"PrivateOffstreetParking"],[4,"PublicOffstreetParking"],[3,"Options"],[13,"Blockface"],[13,"SomeAdditionalWhereNoData"],[13,"FixedPerBldg"],[13,"Gis"],[3,"OsmExtract"],[3,"ShapeID"],[3,"TripID"],[3,"StopID"],[3,"RouteID"],[3,"Route"],[3,"Trip"],[3,"Shape"],[3,"Stop"],[3,"StopTime"],[3,"Document"],[3,"Node"],[3,"Way"],[3,"Relation"],[3,"Output"]]},\
"fifteen_min":{"doc":"","t":[6,0,0,0,5,5,0,3,3,11,11,11,11,11,11,11,11,5,5,11,12,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,11,11,11,11,11,11,11,13,3,3,4,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,6,3,3,12,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,11,11,12,5,5,12,12,12,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,5,5,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["App","find_amenities","find_home","isochrone","main","run","viewer","FindAmenity","Results","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","create_border_isochrone","create_multi_isochrone","draw","draw","from","from","hovering_on_bldg","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","isochrone","new_state","new_state","on_click","other_event","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FindHome","Results","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","draw","draw_houses","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","new_state","new_state","on_click","on_click","options","other_event","score_houses","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Biking","BorderIsochrone","Isochrone","Options","Walking","amenities_reachable","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","colors","colors","draw","draw","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new","new","onstreet_parking_spots","options","options","path_to","population","start","start","thresholds","thresholds","time_to_reach_building","time_to_reach_building","times_from","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","Entry","ExploreAmenities","HoverKey","HoverOnBuilding","Viewer","address","amenity_idx","amenity_type","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bldg","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_panel","draw","draw","draw","draw_star","draw_unwalkable_roads","draw_unwalkable_roads","drawn_route","duration_away","event","event","from","from","from","from","highlight_start","hovering_on_bldg","hovering_on_category","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","isochrone","key","name","new_state","new_state","options_from_controls","options_to_controls","panel","panel","random_start","table","tooltip","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip"],"q":["fifteen_min","","","","","","","fifteen_min::find_amenities","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fifteen_min::find_home","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fifteen_min::isochrone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fifteen_min::isochrone::Options","fifteen_min::viewer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","This is a tool to experiment with the concept of 15-minute …","Calculate isochrones around each amenity on a map and …","","","","","","","","","","Draw an isochrone from every intersection border","For every one of the requested amenity on the map, draw an …","","","","","","","","","","","","","","","","","","","","","","","","","","","Ask what types of amenities are necessary to be within a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","For every house in the map, return the percent of …","","","","","","","","","","Represents the area reachable from all intersections on …","Represents the area reachable from a single building.","The constraints on how we’re moving.","","Per category of amenity, what buildings have that?","","","","","","","","","","","","","","","Colors used to draw the isochrone","Colors used to draw the isochrone","Colored polygon contours, uploaded to the GPU and ready …","Colored polygon contours, uploaded to the GPU and ready …","","","","","","","","","","","","","","","","","","How many sreet parking spots are on the same road as any …","The options used to generate this isochrone","The options used to generate this isochrone","","How many people live in the returned area, according to …","The center of the isochrone (can be multiple points)","The center of the isochrone (can be multiple points)","Thresholds used to draw the isochrone","Thresholds used to draw the isochrone","How far away is each building from the start?","How far away is each building from the start?","Calculate the quickest time to reach buildings across the …","","","","","","","","","","","","","","","","","(building, scale factor)","","This is the UI state for exploring the isochrone/walkshed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Start with a random building","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,0,0,2,2,1,2,2,1,2,1,2,1,2,1,2,2,1,2,2,2,1,2,1,2,1,2,1,2,0,0,3,4,3,4,3,4,3,4,4,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,0,3,4,3,4,3,4,3,4,5,0,0,0,5,6,6,7,5,6,7,5,6,7,5,6,7,5,5,5,6,7,6,7,6,7,5,6,7,5,6,7,5,6,7,5,6,7,5,6,7,6,6,7,6,6,6,7,6,7,6,7,5,5,6,7,5,6,7,5,6,7,5,6,7,5,8,0,0,0,0,0,9,9,9,10,11,12,9,10,11,12,9,9,10,11,12,9,10,11,12,9,0,10,12,12,0,0,10,11,9,10,12,10,11,12,9,10,10,10,10,11,12,9,10,11,12,9,11,9,10,11,12,9,10,11,9,10,12,0,0,10,12,10,12,11,10,11,12,9,10,11,12,9,10,11,12,9,11,10,11,12,9],"f":[null,null,null,null,[[]],[[["settings",3]]],null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["eventctx",3],["simpleapp",3],["options",4]],["borderisochrone",3]],[[["eventctx",3],["simpleapp",3],["amenitytype",4],["options",4]],["isochrone",3]],[[["gfxctx",3],["simpleapp",3]]],null,[[]],[[]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["options",4]],["box",3,[["state",8]]]],[[["eventctx",3],["simpleapp",3],["isochrone",3],["borderisochrone",3],["amenitytype",4]],["box",3,[["state",8]]]],[[["eventctx",3],["simpleapp",3],["str",15],["panel",3]],["transition",4,[["simpleapp",3]]]],[[["eventctx",3],["simpleapp",3]],["transition",4,[["simpleapp",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["gfxctx",3],["simpleapp",3]]],null,[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["options",4]],["box",3,[["state",8]]]],[[["eventctx",3],["simpleapp",3],["hashmap",3,[["buildingid",3],["percent",3]]],["vec",3,[["amenitytype",4]]]],["box",3,[["state",8]]]],[[["eventctx",3],["simpleapp",3],["str",15],["panel",3]],["transition",4,[["simpleapp",3]]]],[[["eventctx",3],["simpleapp",3],["str",15],["panel",3]],["transition",4,[["simpleapp",3]]]],null,[[["eventctx",3],["simpleapp",3]],["transition",4,[["simpleapp",3]]]],[[["simpleapp",3],["vec",3,[["amenitytype",4]]],["options",4],["timer",3]],["hashmap",3,[["buildingid",3],["percent",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["options",4]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["simpleapp",3],["vec",3,[["buildingid",3]]],["options",4]],["isochrone",3]],[[["eventctx",3],["simpleapp",3],["vec",3,[["intersectionid",3]]],["options",4]],["borderisochrone",3]],null,null,null,[[["map",3],["buildingid",3]],["option",4,[["path",3]]]],null,null,null,null,null,null,null,[[["map",3],["vec",3,[["spot",4]]]],["hashmap",3,[["buildingid",3],["duration",3]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["eventctx",3],["simpleapp",3],["building",3],["isochrone",3]],["panel",3]],[[["gfxctx",3],["simpleapp",3]]],[[["gfxctx",3],["simpleapp",3]]],null,[[["eventctx",3],["building",3]],["geombatch",3]],[[["eventctx",3],["simpleapp",3],["options",4]],["drawable",3]],null,null,null,[[["eventctx",3],["simpleapp",3]],["transition",4,[["simpleapp",3]]]],[[["eventctx",3],["simpleapp",3]],["transition",4,[["simpleapp",3]]]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["simpleapp",3]],["option",4]],null,[[["eventctx",3],["simpleapp",3],["buildingid",3]],["box",3,[["state",8]]]],[[["eventctx",3],["simpleapp",3],["isochrone",3],["amenitytype",4]],["box",3,[["state",8]]]],[[["panel",3]],["options",4]],[[["eventctx",3],["options",4]],["widget",3]],null,null,[[["eventctx",3],["simpleapp",3]],["box",3,[["state",8]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["eventctx",3],["simpleapp",3],["isochrone",3]],["hoveronbuilding",3]],[[]],[[]],[[]],[[]]],"p":[[3,"FindAmenity"],[3,"Results"],[3,"FindHome"],[3,"Results"],[4,"Options"],[3,"Isochrone"],[3,"BorderIsochrone"],[13,"Walking"],[3,"Entry"],[3,"Viewer"],[3,"HoverOnBuilding"],[3,"ExploreAmenities"]]},\
"game":{"doc":"","t":[3,13,13,13,13,13,4,13,13,3,13,13,13,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,0,12,11,12,0,12,5,0,12,0,12,12,12,12,0,11,5,12,12,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,0,12,5,12,12,11,12,12,0,12,5,0,12,12,5,12,12,12,12,11,11,11,11,11,11,12,12,11,11,11,0,12,11,11,11,12,12,12,12,3,3,3,3,3,3,3,3,8,6,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,12,12,12,12,12,12,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,10,11,12,11,12,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,12,11,12,11,12,12,12,11,10,11,12,12,12,12,12,12,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,12,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,0,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,13,4,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,12,12,12,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,12,12,11,11,11,11,11,12,5,5,12,11,12,11,11,11,11,3,11,11,11,11,12,5,5,5,11,11,11,11,11,11,12,11,11,11,11,5,11,5,11,11,0,0,0,5,11,11,11,11,0,13,13,17,4,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,13,4,13,13,3,13,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,12,12,17,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,5,11,11,11,11,11,11,12,12,11,11,3,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,12,3,3,3,3,11,12,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,5,12,5,11,11,12,5,5,5,11,11,11,11,5,5,5,0,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,0,12,12,0,0,12,5,11,0,12,5,12,0,0,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,3,12,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,12,3,17,17,3,3,17,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,3,13,4,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,12,11,11,12,11,11,11,11,11,12,12,11,11,11,11,4,13,13,3,13,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,12,12,12,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,5,5,12,12,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,5,11,12,12,11,11,11,11,5,5,5,5,5,5,5,3,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,0,0,0,11,11,11,11,11,0,11,11,0,0,0,11,11,11,11,3,3,5,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,12,5,12,12,12,11,11,11,11,11,11,11,11,12,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,11,11,3,17,17,3,11,11,11,11,12,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,5,5,5,11,12,12,12,5,12,12,12,11,11,11,11,11,11,11,11,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,12,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,11,11,11,12,11,11,11,12,12,12,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,5,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,5,12,12,0,11,11,11,11,12,12,12,12,12,12,11,11,12,0,0,5,0,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,0,5,5,5,3,11,11,12,12,11,11,12,12,11,12,11,11,11,11,11,11,12,11,12,11,12,11,11,11,11,3,11,11,11,11,5,5,11,11,11,5,12,11,5,12,11,12,11,11,11,11,12,5,12,5,5,11,11,11,12,12,12,11,11,11,12,12,5,12,11,11,11,11,5,3,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,3,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,11,11,12,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,11,12,11,11,12,5,0,11,11,5,12,11,11,11,0,11,11,11,11,11,11,11,5,5,12,12,12,12,11,11,0,12,0,0,11,12,12,12,5,11,11,12,12,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,5,11,11,11,11,11,11,11,11,5,11,11,11,11,12,11,12,5,5,11,11,11,11,11,11,11,11,12,12,11,12,5,5,12,12,12,12,12,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,5,12,12,11,12,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,5,11,12,12,11,11,11,11,5,5,3,12,11,11,11,11,11,12,5,11,11,11,11,11,5,11,12,12,12,11,11,11,11,13,13,13,8,13,3,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,11,11,11,11,11,0,11,12,11,12,12,11,11,10,11,11,11,11,11,11,10,5,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,0,5,5,11,11,11,12,0,0,12,12,12,5,12,12,12,11,11,11,11,12,12,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,11,11,11,11,12,5,11,11,5,5,5,11,5,11,5,11,11,11,11,5,5,5,11,5,12,11,11,11,11,11,11,13,8,4,17,3,13,13,11,11,11,11,11,11,11,11,10,11,11,10,0,10,11,0,11,11,5,11,11,11,11,11,11,0,10,0,12,0,11,0,0,11,0,0,11,11,11,11,11,11,11,11,11,12,12,17,3,17,3,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,13,13,13,3,3,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,4,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,5,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,5,12,11,11,11,11,11,12,12,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,12,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,3,11,11,11,11,5,11,11,11,11,11,11,0,11,11,11,11,3,11,11,11,11,12,11,11,11,11,11,5,11,11,12,11,11,11,11,3,3,13,13,13,4,13,13,13,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,0,11,11,11,11,11,11,11,12,11,11,11,11,11,11,0,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,12,5,0,12,0,12,5,11,11,12,11,12,11,0,12,11,12,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,13,13,4,13,13,13,13,13,13,13,11,11,11,11,11,11,0,11,11,11,0,11,11,11,11,11,0,0,0,11,0,0,11,11,0,11,0,0,0,11,11,11,11,3,6,4,4,13,3,3,13,13,3,13,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,12,12,12,11,12,11,11,11,12,11,11,11,11,11,11,11,12,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,12,5,12,11,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,5,5,3,3,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,11,12,5,5,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,12,12,5,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,3,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,11,11,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,12,5,11,11,5,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,12,5,5,5,11,11,11,11,11,11,11,11,13,3,13,13,3,3,13,4,8,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,12,11,11,11,12,11,11,11,12,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,12,12,12,12,12,11,12,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,12,12,12,12,12,12,11,12,12,12,12,5,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,13,3,13,13,13,4,8,4,13,13,13,13,13,13,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,0,11,11,11,11,10,11,11,11,10,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,0,10,12,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,12,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,5,12,11,11,5,11,5,12,11,11,11,12,11,12,12,11,12,12,12,11,11,11,11,3,17,11,11,11,11,11,5,12,11,11,5,11,11,11,11,12,11,11,11,12,12,11,11,11,11,12,3,3,5,0,11,11,11,11,11,11,11,11,11,11,11,5,11,11,0,11,11,11,11,11,11,11,11,11,11,11,5,0,12,11,11,11,11,11,11,11,11,12,3,3,13,4,13,3,13,3,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,11,11,11,11,11,11,5,5,5,11,11,11,11,12,12,11,11,11,11,3,11,11,11,11,12,11,11,11,12,11,11,11,11,12,12,11,11,11,11,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,12,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,13,13,17,13,13,13,13,3,13,13,3,4,13,3,3,3,13,5,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,12,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,11,5,11,12,11,11,11,12,11,12,11,11,11,11,11,11,12,12,12,11,11,12,11,11,11,11,11,11,12,11,12,12,11,12,11,11,12,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,12,12,11,11,11,11,11,11,11,11,13,13,13,13,4,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,3,3,5,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,13,13,13,4,8,13,11,11,0,11,11,11,0,11,11,11,11,11,11,0,11,0,0,10,0,11,11,11,11,3,3,3,3,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,3,11,11,12,11,11,11,12,11,12,11,11,11,11,11,12,11,5,11,5,12,12,11,12,12,11,12,11,11,11,11,11,5,12,3,3,3,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,12,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,12,11,12,5,11,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,12,5,12,5,11,5,12,11,12,11,11,11,11,11,13,4,13,3,3,13,12,11,11,11,11,11,11,11,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,12,12,11,12,12,12,12,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Args","Challenges","CompareCounts","Devtools","Gameplay","LoadKML","Mode","Proposals","Sandbox","Setup","SomethingElse","TutorialIntro","Ungap","actdev","actdev_scenario","app","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cam","center_camera","challenge","challenges","challenges","clap","color_scheme","common","compare_counts","continue_app_setup","debug","dev","devtools","devtools","diff_map","diff_map","dump_raw_events","edit","eq","finish_app_setup","flags","flags","from","from","from","from_clap","info","initialize_tutorial","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","layer","load_kml","main","minimal_controls","mode","ne","opts","prebake","pregame","proposals","run","sandbox","sandbox","scale_factor","setup_app","start_time","start_time","start_with_edits","start_with_edits","try_from","try_from","try_from","try_into","try_into","try_into","tutorial","tutorial_intro","type_id","type_id","type_id","ungap","ungap","vzip","vzip","vzip","0","0","0","1","App","FindDelayedIntersections","Flags","PerMap","PerObjectActions","SessionState","ShowEverything","ShowLayers","ShowObject","Transition","add_study_area","agents","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","before_event","before_quit","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_lane_type","calculate_current_selection","canonical_point","clap","clear_everything","clear_sim","click_action","click_on_intersection","clone","clone_into","cs","cs","current_flags","current_selection","currently_delayed","dash_tab","dirty_from_edits","draw","draw_default","draw_map","draw_map","draw_with_opts","dump_before_abort","elevation_contours","empty","free_memory","from","from","from","from","from","from","from","from","from_clap","get_renderables_back_to_front","halt_limit","has_modified_trips","has_prebaked","high_scores","info_panel_tab","init_camera_for_loaded_map","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_secondary","last_gmns_timing_csv","last_warped_from","layer","layers","layers","layers","left_click","live_map_edits","make_warper","map","map","map_loaded","map_switched","mode_shift","mouseover_debug_mode","mouseover_unzoomed_buildings","mouseover_unzoomed_everything","mouseover_unzoomed_intersections","mouseover_unzoomed_roads_and_intersections","mut_cs","mut_draw_map","mut_opts","new","new","new","opts","opts","per_obj","prebaked","prebaked","primary","recalculate_current_selection","report_limit","reset","routing_preferences","run","scenario","secondary","session","set_prebaked","show","show","show_areas","show_buildings","show_intersections","show_labels","show_lanes","show_parking_lots","sim","sim","sim_cb","sim_flags","store_unedited_map_in_secondary","study_area","suspended_sim","swap_map","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tutorial","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unedited_map","ungap_current_trip_name","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Challenge","ChallengesPicker","HighScore","alias","all","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","challenge","cutscene","cutscene","description","edits_name","find","from","from","from","gameplay","goal","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","links","make","new_state","on_click","prebake","record","score","title","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BossSpeaking","CutsceneBuilder","CutscenePlayer","Extra","Layout","PlayerSpeaking","Scene","ShowMessage","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boss","build","draw","draw","event","event","extra","fg_color","from","from","from","from","from","idx","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","layout","make_panel","make_task","msg","name","name","new","new_state","panel","panel","player","scenes","scenes","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","1","PrebakeSummary","as_any","as_any_mut","borrow","borrow_mut","cancelled_trips","finished_trips","from","into","into_any","into_any_arc","into_any_rc","map","prebake","prebake_all","scenario","serialize","total_trip_duration_seconds","try_from","try_into","type_id","vzip","CommonState","as_any","as_any_mut","borrow","borrow_mut","cached_actions","cmp_duration_shorter","color_for_agent_type","color_for_trip_phase","debug_actions","draw","draw_custom_osd","draw_osd","event","from","info_panel","info_panel_open","into","into_any","into_any_rc","jump_to_time_upon_startup","launch_info_panel","list_names","new","osd_for","route_sketcher","select","share","tool_panel","try_from","try_into","type_id","vzip","warp","Dragging","Hovering","INTERSECTON_RADIUS","Mode","Neutral","Route","RouteSketcher","add_waypoint","all_roads","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","draw","eq","eq","event","from","from","from","full_path","get_widget_to_describe","idx","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_route_started","is_route_valid","mode","mouseover_i","move_waypoint","ne","ne","new","new","on_click","preview","route","snap_to_intersections","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_mode","update_preview","vzip","vzip","vzip","waypoints","0","at","idx","Erase","Mode","Paint","Pan","RoadSelector","Route","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","dragging","draw","event","from","from","intersections","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","make_controls","mode","new","preview","roads","roads_changed","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","i1","preview_path","PROPOSAL_HOST_URL","ShareProposal","UploadedProposals","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","deserialize","draw","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","load","md5sums","new_state","on_click","proposal_uploaded","serialize","set_clipboard","try_from","try_from","try_into","try_into","type_id","type_id","url","url_flag","vzip","vzip","DebugWarp","WARP_TO_CAM_ZOOM","Warping","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","draw","draw","event","event","from","from","id","inner_warp_to_id","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","new_state","new_state","panel","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","warp_to_id","warper","Actions","DebugMode","ScreenshotTest","SearchResults","actions","all_routes","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blocked_by","blockfinder","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calc_all_routes","common","diff_tags","draw","draw","draw","draw_arterial_crosswalks","draw_bad_intersections","draw_banned_turns","draw_baselayer","event","event","execute","find_bad_signals","find_degenerate_roads","find_large_intersections","floodfill","from","from","from","from","gameplay_mode","hidden","highlighted_agents","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_paused","layers","layers","new_state","new_state","num_matches","objects","objects","panel","path_counter","polygons","query","reimport_map","reset_info","routes","screenshot_done","search_osm","search_results","select_roads","shared_row","show","streetmix","todo_maps","tool_panel","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","uber_turns","vzip","vzip","vzip","vzip","Viewer","agent_positions","arrow_for","arrows","as_any","as_any_mut","borrow","borrow_mut","draw","event","find_worst_problems","from","graph","into","into_any","into_any_rc","new_state","panel","root_cause","simple_root_cause","trace_root_cause","try_from","try_into","type_id","vzip","0","Blockfinder","COLORS","MODIFIED","Obj","OneBlock","TO_MERGE","add_block","add_blocks_with_coloring","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","block","blocks","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","draw","draw","draw","eq","equivalent","event","fmt","from","from","from","get_hash","hash","id_counter","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","make_panel","ne","new_id","new_state","new_state","on_click","other_event","panel","partial_cmp","partitions","to_merge","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","world","Floodfill","Floodfiller","Scc","Source","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","calculate","clone","clone_into","draw","draw","event","floodfill","from","from","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","new_state","panel","scc","source","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","ObjectDebugger","as_any","as_any_mut","borrow","borrow_mut","debug_json","draw","dump_debug","from","into","into_any","into_any_arc","into_any_rc","try_from","try_into","type_id","vzip","PathCounter","as_any","as_any_mut","borrow","borrow_mut","cnt","demand_across_intersection","draw","draw","event","from","into","into_any","into_any_rc","panel","tooltip","try_from","try_into","type_id","vzip","Item","Point","Polygon","PolygonDebugger","Triangle","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","center","draw","event","from","from","idx","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","items","new_state","noun","panel","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","AllRoutesExplorer","PathCostDebugger","RouteExplorer","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","baseline_counts","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate_demand","controls_to_params","costs","current_counts","draw","draw","draw","draw","draw_path","event","event","event","from","from","from","goal","into","into","into","into_any","into_any","into_any","into_any_rc","into_any_rc","into_any_rc","maybe_new","new_state","new_state","panel","panel","panel","params_to_controls","recalc_paths","requests","start","tooltip","tooltip","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BulkSelect","as_any","as_any_mut","borrow","borrow_mut","draw","event","from","into","into_any","into_any_rc","make_select_panel","new_state","panel","selector","try_from","try_into","type_id","vzip","export","intersection","lane","road","export","lane","road","UberTurnPicker","UberTurnViewer","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","draw","draw","draw","draw_baselayer","from","from","ic","idx","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","legal_turns","members","new_state","new_state","on_click","on_click","on_mouseover","other_event","other_event","panel_changed","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DevToolsMode","as_any","as_any_mut","borrow","borrow_mut","collisions","compare_counts","destinations","from","into","into_any","into_any_arc","into_any_rc","kml","new_state","on_click","polygon","scenario","story","try_from","try_into","type_id","vzip","CollisionsViewer","Filters","aggregated","apply","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","data","draw","eq","event","from","from","from_controls","individual","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","make_controls","ne","new","new_state","panel","pct","severity","show_individual","time_range","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","world","GenericCompareCounts","as_any","as_any_mut","borrow","borrow_mut","compare","draw","from","into","into_any","into_any_arc","into_any_rc","new_state","on_click","other_event","try_from","try_into","type_id","vzip","PopularDestinations","as_any","as_any_mut","borrow","borrow_mut","draw","draw","event","from","into","into_any","into_any_rc","make","new_state","panel","per_bldg","try_from","try_into","type_id","vzip","Object","RADIUS","THICKNESS","ViewKML","as_any","as_any","as_any_mut","as_any_mut","attribs","borrow","borrow","borrow_mut","borrow_mut","color","draw","draw","draw_query","event","from","from","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","load_objects","make_object","make_query","new_state","objects","osm_bldg","panel","pick_file","polygon","quadtree","selected","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Obj","Point","Polygon","PolygonEditor","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","draw","eq","equivalent","event","fmt","from","from","get_hash","hash","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","name","ne","new_state","panel","points","rebuild_world","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","world","0","ScenarioManager","as_any","as_any_mut","borrow","borrow_mut","draw","draw","event","from","into","into_any","into_any_rc","new_state","panel","scenario","try_from","try_into","type_id","vzip","0","DrawFreehand","EditingMarker","Lasso","Marker","MarkerID","RecordedStoryMap","StoryMap","StoryMapEditor","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","dirty","draw","draw","draw","draw_baselayer","draw_baselayer","draw_baselayer","eq","equivalent","event","event","event","fmt","from","from","from","from","from","from","from","from","from_story","get_hash","hash","idx","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","label","lasso","load","markers","markers","name","name","ne","new","new","new_idx","new_state","new_state","on_click","panel","pl","pts","rebuild_panel","rebuild_world","save","serialize","simplify","story","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","world","ConfirmDiscard","EditMode","LoadEdits","SaveEdits","apply_map_edits","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_edit_lane","cancel","changelist","cmd_to_id","current_name","discard","draw","draw","draw","draw","draw","event","event","event","event","from","from","from","from","heuristics","into","into","into","into","into_any","into_any","into_any","into_any","into_any_rc","into_any_rc","into_any_rc","into_any_rc","make_changelist","make_topcenter","map_edit_key","maybe_edit_intersection","mode","mode","multiple_roads","new_state","new_state","new_state","new_state","on_success","orig_dirty","orig_edits","panel","panel","panel","quit","recalc_btn","reset","roads","routes","speed_limit_choices","stop_signs","tool_panel","top_center","traffic_signals","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate","vzip","vzip","vzip","vzip","zones","add_new_lane","default_outside_lane_placement","determine_lane_dir","SelectSegments","as_any","as_any_mut","base_edits","base_road","borrow","borrow_mut","candidates","current","draw","draw","event","from","into","into_any","into_any_rc","new_state","new_state","on_destroy","panel","recalculate","selected","try_from","try_into","type_id","vzip","RoadEditor","as_any","as_any_mut","borrow","borrow_mut","build_lane_highlights","can_reverse","compress_edits","create","draw","draw_drop_position","draw_drop_position","event","fade_irrelevant","fade_irrelevant","from","hovering_on_lane","into","into_any","into_any_rc","lane_for_idx","lane_highlights","lane_type_to_icon","main_panel","make_main_panel","make_top_panel","modify_current_lane","new_state","new_state_without_lane","num_edit_cmds_originally","orig_road_state","r","recalc_all_panels","recalc_hovering","recalc_lane_highlights","redo_stack","selected_lane","selected_lane_bg","top_panel","try_from","try_into","type_id","vzip","width_choices","RouteEditor","as_any","as_any_mut","borrow","borrow_mut","draw","event","from","into","into_any","into_any_rc","new_state","panel","route","try_from","try_into","type_id","vzip","StopSignEditor","as_any","as_any_mut","borrow","borrow_mut","draw","from","geom","id","into","into_any","into_any_arc","into_any_rc","mode","new_state","on_click","on_mouseover","other_event","selected_sign","try_from","try_into","type_id","vzip","BundleEdits","TrafficSignalEditor","add_new_edit","apply","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","change_stage","check_for_missing_turns","clone","clone_into","command_stack","commit","current_stage","draw","draw_baselayer","draw_current","draw_multiple_signals","edits","eq","event","fade_irrelevant","fade_irrelevant","from","from","get_current","gmns","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","make_side_panel","make_top_panel","members","mode","movement_selected","movements","ne","new_state","offsets","original","picker","preview","recalc_draw_current","redo_stack","side_panel","signals","squish_polygons_together","synchronize","to_owned","tooltip","top_panel","try_from","try_from","try_into","try_into","type_id","type_id","validate_all_members","vzip","vzip","warn_changed","ChangeDuration","as_any","as_any_mut","borrow","borrow_mut","draw_baselayer","edit_entire_signal","from","idx","into","into_any","into_any_arc","into_any_rc","new_state","on_click","other_event","panel_changed","try_from","try_into","type_id","vzip","Record","Snapper","add_crosswalks","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","cardinal_direction","deserialize","fmt","from","from","geometry","get_mvmnt","green_time","import","import_all","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","movements","mvmt_txt_id","new","osm_ids","parse_linestring","parse_osm_ids","protection","roads_incoming","roads_outgoing","stage","timing_plan_id","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ShowAbsolute","ShowRelative","TuneRelative","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","base","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","draw","draw","draw","from","from","from","i1","i2","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","labels","labels","labels","members","members","members","new_state","new_state","new_state","on_click","on_click","on_click","on_mouseover","on_mouseover","other_event","other_event","other_event","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","SignalPicker","as_any","as_any_mut","borrow","borrow_mut","draw","event","from","into","into_any","into_any_rc","make_btn","members","mode","new_state","panel","try_from","try_into","type_id","vzip","PreviewTrafficSignal","as_any","as_any_mut","borrow","borrow_mut","draw","event","from","into","into_any","into_any_rc","make_previewer","new_state","panel","time_panel","try_from","try_into","type_id","vzip","check_blackholes","check_sidewalk_connectivity","ZoneEditor","allow_through_traffic","as_any","as_any_mut","borrow","borrow_mut","draw","draw","draw_zone","event","from","into","into_any","into_any_rc","make_instructions","new_state","orig_members","panel","selector","try_from","try_into","type_id","vzip","Area","BldgInfo","BldgPeople","ContextualActions","Crowd","DataOptions","Details","InfoPanel","IntersectionArrivals","IntersectionDelay","IntersectionDemand","IntersectionInfo","IntersectionTraffic","IntersectionTrafficSignal","LaneDebug","LaneInfo","LaneTraffic","ParkedCar","ParkingLot","PersonBio","PersonSchedule","PersonTrips","Tab","TransitRoute","TransitStop","TransitVehicleStatus","actions","active_id","active_keys","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","building","cached_actions","can_jump_to_time","changed_settings","clone","clone","clone_into","clone_into","debug","disabled_series","disabled_types","draw","draw_extra","draw_extra","eq","event","execute","from","from","from","from","from_controls","from_id","gameplay_mode","header_btns","hyperlinks","hyperlinks","intersection","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_paused","is_paused","lane","make_table","make_tabs","ne","new","new","panel","parking_lot","person","show_before","show_end_of_day","tab","throughput","time","time_warpers","time_warpers","to_controls","to_id","to_owned","to_owned","tooltips","tooltips","transit","trip","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","variant","vzip","vzip","vzip","vzip","warpers","warpers","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","2","draw_occupants","header","info","info_body","people","people_body","area","area_body","arrivals","current_demand","current_demand_body","delay","delay_body","delay_plot","header","info","info_body","traffic","traffic_body","traffic_signal","traffic_signal_body","debug","debug_body","header","info","info_body","traffic","traffic_body","header","info","info_body","bio","bio_body","cmp_duration_shorter","crowd","crowd_body","current_status","header","parked_car","parked_car_body","schedule","schedule_body","trips","trips_body","bus_header","bus_status","bus_status_body","describe_schedule","route","route_body","stop","stop_body","OpenTrip","as_any","as_any_mut","borrow","borrow_mut","cached_routes","cancelled","clone","clone_into","describe_problems","draw_problems","endpoint","eq","finished","from","future","into","into_any","into_any_arc","into_any_rc","make_elevation","make_timeline","make_trip_details","new","ongoing","show_after","single","to_owned","try_from","try_into","type_id","vzip","Close","Layer","LayerOutcome","PANEL_PLACEMENT","PickLayer","Replace","Transition","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","draw","draw","draw_baselayer","draw_minimap","elevation","event","event","favorites","from","from","header","into","into","into_any","into_any","into_any_rc","into_any_rc","map","name","pandemic","panel","parking","pick","population","problems","simple_event","traffic","transit","try_from","try_from","try_into","try_into","type_id","type_id","update","vzip","vzip","0","0","CONTOUR_STEP_SIZE","ElevationContours","INTERSECTION_SEARCH_RADIUS","SteepStreets","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","closest_elevation","draw","draw","draw","draw","draw_minimap","draw_minimap","event","event","from","from","into","into","into_any","into_any","into_any_rc","into_any_rc","make_colorer","make_contours","make_legend","name","name","new","new","panel","panel","tooltip","tooltip","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Favorites","ShowFavorites","add","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","buildings","contains","deserialize","draw","draw","draw_minimap","event","from","from","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","load","name","new","panel","path","remove","serialize","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BikeActivity","Static","amenities","as_any","as_any","as_any_mut","as_any_mut","blackholes","borrow","borrow","borrow_mut","borrow_mut","draw","draw","draw","draw","draw_minimap","draw_minimap","edits","event","event","from","from","high_stress","into","into","into_any","into_any","into_any_rc","into_any_rc","name","name","name","new","new","no_sidewalks","panel","panel","time","tooltip","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Dead","Exposed","Infected","Options","Pandemic","Recovered","Sane","Seir","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","draw","draw","draw_minimap","eq","eq","event","fmt","from","from","from","heatmap","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","make_controls","name","ne","new","options","opts","panel","state","time","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Bldg","Efficiency","Loc","Lot","Occupancy","Road","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","draw","draw","draw","draw","draw_minimap","draw_minimap","eq","equivalent","event","event","from","from","from","garages","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","looking_for_parking","lots","name","name","ne","new","new","new","onstreet","panel","panel","partial_cmp","private_bldgs","time","time","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","Options","PopulationMap","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","draw","draw","draw_minimap","eq","event","from","from","heatmap","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","make_controls","name","ne","new","options","opts","panel","time","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Options","ProblemMap","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","draw","draw","draw_minimap","eq","event","from","from","heatmap","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","make_controls","modes","name","ne","new","new","options","opts","panel","show","show_arterial_crossings","show_complex_crossings","show_delays","show_overtakes","time","time1","time2","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Backpressure","CompareThroughput","Delay","Jam","Throughput","TrafficJams","adjacent_to","agent_types","all_polygons","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cluster_jams","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw","draw_minimap","draw_minimap","draw_minimap","draw_minimap","draw_minimap","epicenter","event","event","event","event","event","export_throughput","from","from","from","from","from","from","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","members","name","name","name","name","name","new","new","new","new","new","panel","panel","panel","panel","panel","time","time","time","time","time","tooltip","tooltip","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","TransitNetwork","as_any","as_any_mut","borrow","borrow_mut","draw","draw","draw_minimap","event","from","into","into_any","into_any_rc","name","new","panel","try_from","try_into","type_id","vzip","TitleScreen","as_any","as_any_mut","borrow","borrow_mut","enter_state","from","into","into_any","into_any_arc","into_any_rc","new_state","proposals","try_from","try_into","type_id","vzip","Proposals","as_any","as_any_mut","borrow","borrow_mut","current","from","into","into_any","into_any_arc","into_any_rc","launch","new_state","on_click","proposals","try_from","try_into","type_id","vzip","Actions","BackToTitleScreen","Finalizing","GotPrebaked","GotScenario","LoadStage","LoadingMap","LoadingPrebaked","LoadingScenario","SandboxControls","SandboxLoader","SandboxMode","actions","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","async_new","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_interact","common","contextual_actions","controls","dashboards","draw","draw","draw","event","event","event","execute","finalize","from","from","from","from","from","from","gameplay","gameplay","gameplay","gameplay_mode","gameplay_mode","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_daytime","is_paused","is_paused","last_cs","maybe_exit_sandbox","minimap","minimap","misc_tools","mode","mouseover_unzoomed_agent_circle","new","on_destroy","recalc_unzoomed_agent","recreate_panels","route_preview","simple_new","speed","stage","start_from_savestate","time_panel","time_warp","tool_panel","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","1","ActiveTraffic","CommuterPatterns","DashTab","ModeShift","ParkingOverhead","RiskSummaries","TrafficSignals","TransitRoutes","TravelTimes","TripTable","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","commuter","eq","fmt","from","generic_trip_table","into","into_any","into_any_arc","into_any_rc","launch","misc","mode_shift","parking_overhead","picker","risks","selector","tab_changed","to_owned","traffic_signals","transition","travel_times","trip_problems","trip_table","try_from","try_into","type_id","vzip","Block","BlockID","BlockSelection","BorderType","Both","CommuterPatterns","Filter","Incoming","Locked","Loop","NothingSelected","Outgoing","PanelState","Unlocked","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bldg_to_block","bldgs","bldgs","blocks","border_to_block","borders","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_block_drawable","build_shape_for_border","building_counts","clone","clone_into","count_per_block","current_block","depart_from","depart_until","draw","draw_all_blocks","eq","eq","event","filter","from","from","from","from","from","from","from","from_block","group_bldgs","id","include_borders","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","make_panel","max_count","modes","ne","ne","new_state","panel","partition_sidewalk_loops","proper","redraw_panel","roads","shape","to_owned","total_trips","trips_from_block","trips_to_block","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","base","compare_to","open_trip_transition","preview_route","preview_trip","ActiveTraffic","TransitRoutes","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","downsample","draw","draw","event","event","from","from","into","into","into_any","into_any","into_any_rc","into_any_rc","new_state","new_state","panel","panel","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Entry","Filters","ModeShift","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","distance","draw","estimated_biking_time","estimated_driving_time","event","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","make_table","max_biking_time","max_distance","max_driving_time","max_elevation_gain","new_state","panel","produce_raw_data","show_route_gaps","show_route_gaps","tab","table","total_elevation_gain","total_elevation_loss","trip","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Entry","Filters","ParkingOverhead","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","draw","driving_duration","ends_off_map","ends_off_map","event","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","make_table","new_state","panel","parking_duration","percent_overhead","produce_raw_data","starts_off_map","starts_off_map","tab","table","total_duration","trip","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","walking_duration","Filter","RiskSummaries","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","draw","event","export_problems","from","from","include_no_changes","include_no_changes","includes_mode","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","modes","new_state","panel","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","RectangularSelector","as_any","as_any_mut","borrow","borrow_mut","corners","draw","event","from","into","into_any","into_any_rc","new_state","panel","region","try_from","try_into","type_id","vzip","Demand","TrafficSignalDemand","all_demand","all_demand","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","count","draw","draw_baselayer","event","from","from","hour","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","new_state","panel","raw","rebuild_world","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","world","Filter","TravelTimes","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","changes_pct","contingency_table","draw","event","export_times","from","from","get_trips","include_no_changes","include_no_changes","includes_mode","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","make_panel","modes","new","new_state","panel","pct_diff","scatter_plot","summary_boxes","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ArterialIntersectionCrossing","CLEAR_COLOR_SCALE","ComplexIntersectionCrossing","IntersectionDelay","Matrix","MatrixOptions","OvertakeDesired","ProblemType","TripProblemFilter","__private_field","add_pt","all","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bucketize_isizes","buckets_x","buckets_y","clone","clone_into","color_scale_for_bucket","count","deref","draw","entries","eq","finished_trip_count","fmt","fmt_y_axis","from","from","from","from","from","idx","include_no_changes","includes_mode","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","problem_matrix","to_owned","tooltip_for_bucket","total_height","total_width","trip_problems","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","CancelledTrip","Filters","FinishedTrip","TripTable","UnfinishedTrip","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancelled_trips_table","departure","departure","departure","draw","duration_after","duration_before","duration_before","duration_before","end","end","ends_in","event","finished_trips_table","from","from","from","from","from","id","id","id","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","make_table_cancelled_trips","make_table_finished_trips","make_table_unfinished_trips","mode","mode","mode","modes","modified","modified_trips","new","off_map_ends","off_map_starts","panel","percent_waiting","produce_raw_data","reason","recompute_filters","start","start","starts_in","tab","table_tabs","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unfinished_trips_table","unmodified_trips","vzip","vzip","vzip","vzip","vzip","waiting","Actdev","FinalScore","FixTrafficSignals","Freeform","Future","GameplayMode","GameplayState","LoadScenario","Nothing","OptimizeCommute","Path","PlayScenario","Scenario","Tutorial","actdev","allows","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","can_edit_roads","can_edit_stop_signs","can_examine_objects","can_jump_to_time","can_move_canvas","challenge_header","chose_back_to_challenges","chose_next","clone","clone_into","cmp","commute","downcast","downcast_mut","downcast_rc","downcast_ref","draw","draw","eq","equivalent","event","event","fix_traffic_signals","freeform","from","from","from","has_common","has_minimap","has_time_panel","has_tool_panel","initialize","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is","map_name","ne","new_state","next_mode","on_destroy","panel","partial_cmp","play_scenario","recreate_panels","retry","scenario","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tutorial","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","0","0","1","1","1","2","2","0","0","0","About","Actdev","as_any","as_any","as_any_mut","as_any_mut","bg_traffic","borrow","borrow","borrow_mut","borrow_mut","draw","draw","event","find_active_trip","from","from","has_tool_panel","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","new_state","on_click","once","recreate_panels","scenario_name","top_right","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","OptimizeCommute","as_any","as_any_mut","borrow","borrow_mut","cutscene_pt1","cutscene_pt2","cutscene_task","done","draw","event","final_score","from","get_score","goal","into","into_any","into_any_rc","mode","new_state","once","person","recreate_panels","time","top_right","trips","try_from","try_into","type_id","vzip","FixTrafficSignals","THRESHOLD","as_any","as_any_mut","borrow","borrow_mut","cutscene_pt1","cutscene_pt1_task","done_at","draw","event","final_score","from","into","into_any","into_any_rc","mode","new_state","on_destroy","recreate_panels","time","top_right","try_from","try_into","type_id","vzip","worst","ChangeScenario","Freeform","actions","area_spawner","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","draw","draw","event","execute","from","from","importers","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","new_state","new_state","on_click","recreate_panels","spawn_agents_around","spawner","top_right","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","Area","AreaSpawner","DrawingArea","Mode","Neutral","Obj","PickingDestination","SelectRectangle","areas","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borders","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buildings","clone","clone_into","draw","draw","eq","equivalent","event","event","fmt","from","from","from","from","from","get_hash","hash","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","mode","ne","new","new","new_state","panel","polygon","preview","pt1","rebuild_world","rect","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","world","0","source","Input","as_any","as_any_mut","borrow","borrow_mut","deserialize","from","import_grid2demand","import_json","import_json_scenario","into","into_any","into_any_arc","into_any_rc","people","scenario_name","try_from","try_into","type_id","vzip","AgentSpawner","as_any","as_any_mut","borrow","borrow_mut","confirmed","draw","event","from","goal","into","into_any","into_any_rc","new_state","panel","start","try_from","try_into","type_id","vzip","ChangeMode","CountTrips","DepartureSummary","EditScenarioModifiers","PlayScenario","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","count","count_trips","departures_per_mode","draw","draw","draw","event","event","event","first_trip","from","from","from","from","from","get_filters","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","modifiers","modifiers","modifiers","new","new_state","new_state","new_state","new_state","on_click","on_destroy","panel","panel","recalc_count","recreate_panels","scenario_name","scenario_name","scenario_name","top_right","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","CAR_BIKE_CONTENTION_GOAL","Camera","Done","ESCORT","Escort","FixBikes","InspectObjects","LowParking","Message","Nil","PauseResume","Stage","Task","TimeControls","Tutorial","TutorialPointer","TutorialState","WatchBikes","actions","aligned","arrow","arrow","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bldg","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_examine_objects","can_move_canvas","car_parked","clone","clone","clone_into","clone_into","cmp","current","custom_spawn","custom_spawn","draw","dynamic_arrow","eq","eq","equivalent","event","execute","fire_station","following_car","from","from","from","from","from","from","has_common","has_minimap","has_time_panel","has_tool_panel","icon","icon","initialize","inner_event","inspected_bike_lane","inspected_border","inspected_building","inspected_stop_sign","interaction","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","intro_story","label","last_finished_task","left_aligned","make_bike_lane_scenario","make_gameplay","make_scenario","make_state","make_top_right","message","messages","msg","msg_panel","ne","new","new","new","new","next","num_pauses","parking_found","part","partial_cmp","partial_cmp","prank_done","prev","recreate_panels","reset_state","scenario","scenario","scenarios_to_prebake","score_delivered","stage","stage","stages","start","task","to_owned","to_owned","top_right","top_txt","transition","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","txt","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","warp_to","warp_to","warped","was_paused","window_dims","MinimapController","as_any","as_any_mut","borrow","borrow_mut","draw_extra","from","has_layer","has_zorder","into","into_any","into_any_arc","into_any_rc","make_agent_toggles","make_legend","make_tool_panel","make_unzoomed_panel","make_zoomed_side_panel","panel_changed","panel_clicked","try_from","try_into","type_id","vzip","RoutePreview","TrafficRecorder","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","draw","draw","event","event","from","from","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","make_btn","members","new","new_state","panel","preview","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Fast","Faster","Fastest","Realtime","SpeedSetting","TimePanel","as_any","as_any","as_any_mut","as_any_mut","baseline_finished_trips","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_time_panel","draw","eq","event","from","from","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","is_paused","new","override_height","panel","partial_cmp","pause","paused","recreate_panel","resume","setting","time","to_owned","trips_completion_bar","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","JumpToTime","TimeWarpScreen","area_under_curve","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","build_jump_to_delay_button","build_jump_to_time_btn","compare_count","draw","draw","draw_baselayer","event","event","from","from","halt_upon_delay","into","into","into_any","into_any","into_any_rc","into_any_rc","maybe_mode","new_state","new_state","on_destroy","panel","panel","sim_time_started","tabs","target","target","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wall_time_started","AddLanes","Explore","PredictImpact","Tab","TakeLayers","Trip","as_any","as_any_mut","bike_network","borrow","borrow_mut","eq","explore","from","handle_action","into","into_any","into_any_arc","into_any_rc","layers","make_left_panel","predict","quick_sketch","take_layers","trip","try_from","try_into","type_id","vzip","DEDICATED_TRAIL","DrawNetworkLayer","GREENWAY","PAINTED_BIKE_LANE","PROTECTED_BIKE_LANE","__private_field","__private_field","__private_field","__private_field","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","draw","draw_intersections","draw_roads","from","from","from","from","from","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_greenway","new","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","ExploreMap","as_any","as_any_mut","borrow","borrow_mut","draw","event","from","into","into_any","into_any_rc","layers","new_state","take_layers","top_panel","try_from","try_into","type_id","vzip","Layers","as_any","as_any_mut","bike_network","borrow","borrow_mut","draw","elevation","event","fade_map","from","highlight_road_type","into","into_any","into_any_rc","labels","layer_icon_pos","legend_btn","make_legend","make_zoom_controls","map_edit_key","minimized","new","panel","road_types","show_panel","steep_streets","try_from","try_into","type_id","update_panel","vzip","zoom_enabled_cache_key","zoom_enabled_cache_key","CandidateTrip","Filters","ModeShiftData","NetworkGaps","Results","ShowGaps","all_candidate_trips","annual_co2_emissions_tons","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bike_req","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","count_per_road","default","default","describe","draw","draw","driving_distance","empty","estimated_biking_time","event","filtered_trips","filters","from","from","from","from","from","from","from_controls","from_scenario","gaps","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","layers","make_top_panel","max_biking_time","max_elevation_gain","new_state","num_trips","pct","recalculate_gaps","results","take_layers","to_controls","tooltip","top_panel","total_driving_distance","total_elevation_gain","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","QuickSketch","as_any","as_any_mut","borrow","borrow_mut","draw","event","from","into","into_any","into_any_rc","layers","make_quick_changes","map_edit_key","maybe_add_bike_lanes","new_state","proposal_management","route_sketcher","take_layers","top_panel","try_from","try_into","type_id","update_top_panel","vzip","AltRoute","ID","MainRoute","RoutingPreferences","TripPlanner","Waypoint","alt_routes","app_session_current_trip_name","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","avoid_hills","avoid_stressful_roads","before_after_button","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","draw","eq","eq","equivalent","event","files","fmt","from","from","from","get_hash","hash","input_panel","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","layers","main_route","mut_files","name","ne","ne","new_state","on_destroy","recalculate_routes","results","routing_params","sync_from_file_management","take_layers","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_input_panel","vzip","vzip","vzip","waypoints","world","0","0","BuiltRoute","RouteDetails","RouteStats","alt_route","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","closest_path_segment","compare_routes","details","details_widget","dist_along_high_stress_roads","draw","draw","draw_high_stress","draw_traffic_signals","draw_unprotected_turns","eq","event","from","from","from","hitbox","hover_on_line_plot","hover_on_route_tooltip","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","main_route","make_detail_widget","ne","new_route","num_traffic_signals","num_unprotected_turns","paths","preferences","stats","tooltip_for_alt","total_distance","total_down","total_time","total_up","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["game","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::Mode","","","","game::appgame::challenges","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::challenges::cutscene","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::challenges::cutscene::Layout","","game::challenges::prebake","","","","","","","","","","","","","","","","","","","","","","game::common","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::common::route_sketcher","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::common::route_sketcher::Mode","","","game::common::select","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::common::select::Mode","","game::common::share","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::common::warp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::debug","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::debug::blocked_by","","","","","","","","","","","","","","","","","","","","","","","","","game::debug::blockfinder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::debug::floodfill","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::debug::floodfill::Source","game::debug::objects","","","","","","","","","","","","","","","","","game::debug::path_counter","","","","","","","","","","","","","","","","","","","","game::debug::polygons","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::debug::polygons::Item","","","game::debug::routes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::debug::select_roads","","","","","","","","","","","","","","","","","","","game::debug::shared_row","","","","game::debug::streetmix","","","game::debug::uber_turns","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::devtools","","","","","","","","","","","","","","","","","","","","","","","game::devtools::collisions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::devtools::compare_counts","","","","","","","","","","","","","","","","","","","game::devtools::destinations","","","","","","","","","","","","","","","","","","","","game::devtools::kml","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::devtools::polygon","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::devtools::polygon::Obj","game::devtools::scenario","","","","","","","","","","","","","","","","","","","game::devtools::story","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::edit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::edit::heuristics","","","game::edit::multiple_roads","","","","","","","","","","","","","","","","","","","","","","","","","","game::edit::roads","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::edit::routes","","","","","","","","","","","","","","","","","","game::edit::stop_signs","","","","","","","","","","","","","","","","","","","","","","","game::edit::traffic_signals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::edit::traffic_signals::edits","","","","","","","","","","","","","","","","","","","","","game::edit::traffic_signals::gmns","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::edit::traffic_signals::offsets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::edit::traffic_signals::picker","","","","","","","","","","","","","","","","","","","","game::edit::traffic_signals::preview","","","","","","","","","","","","","","","","","","","game::edit::validate","","game::edit::zones","","","","","","","","","","","","","","","","","","","","","","","game::info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::info::Tab","","","","","","","","","","","","","","","","","","","","","","","","","","","game::info::building","","","","","","game::info::debug","","game::info::intersection","","","","","","","","","","","","","game::info::lane","","","","","","","game::info::parking_lot","","","game::info::person","","","","","","","","","","","","","game::info::transit","","","","","","","","game::info::trip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::LayerOutcome","","game::layer::elevation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::favorites","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::pandemic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::parking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::parking::Loc","","","game::layer::population","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::problems","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::traffic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::layer::transit","","","","","","","","","","","","","","","","","","","","game::pregame","","","","","","","","","","","","","","","","","game::pregame::proposals","","","","","","","","","","","","","","","","","","","game::sandbox","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::LoadStage","","","","game::sandbox::dashboards","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::commuter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::commuter::BlockSelection","","","game::sandbox::dashboards::generic_trip_table","","","game::sandbox::dashboards::misc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::mode_shift","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::parking_overhead","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::risks","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::selector","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::traffic_signals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::travel_times","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::trip_problems","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::dashboards::trip_table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay::GameplayMode","","","","","","","","","","game::sandbox::gameplay::LoadScenario","","","game::sandbox::gameplay::actdev","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay::commute","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay::fix_traffic_signals","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay::freeform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay::freeform::area_spawner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay::freeform::area_spawner::Mode","","game::sandbox::gameplay::freeform::importers","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay::freeform::spawner","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay::play_scenario","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::gameplay::tutorialgame::sandbox::minimap","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::misc_tools","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::speed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::sandbox::time_warp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::ungap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::ungap::bike_network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::ungap::explore","","","","","","","","","","","","","","","","","","","game::ungap::layers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::ungap::predict","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::ungap::quick_sketch","","","","","","","","","","","","","","","","","","","","","","","","","game::ungap::trip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","game::ungap::trip::ID","","game::ungap::trip::results","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","Start in ActDev mode for a particular site name.","Start by showing an ActDev scenario. Either “base” or …","","","","","","","","","","","","","","Initially position the camera here. The format is an …","","Start playing a particular challenge","","Start by listing gameplay challenges","","The color scheme for map elements, agents, and the UI.","","Start in a tool for comparing traffic counts","","","Dev mode exposes experimental tools useful for debugging, …","This directory contains extra/experimental tools not …","Start by listing internal developer tools","","Load the map at this path as a secondary debug map to …","Print raw widgetry events to the console for debugging","","","","","","","","","","","","","","","","","","","","","","","","","Start by showing this KMl file in a debug viewer","","When making a screen recording, enable this option to hide …","","","","Run a configured set of simulations and record prebaked …","","Start by showing community proposals","","","Start in the simulation sandbox mode","Override the monitor’s auto-detected scale factor","","","Start the simulation at this time","","Start with these map edits loaded. This should be the name …","","","","","","","Start on a particular tutorial stage","Start at the tutorial intro screen","","","","","Launch Ungap the Map, a bike network planning tool","","","","","","","","The top-level data that lasts through the entire game, no …","","","All of the state that’s bound to a specific map.","","","","","","","Load an extra GeoJSON file, and add the area to the map …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensure the map edits are blank, reset the simulation, and …","Returns whatever was there","","If an intersection was clicked, return its ID.","","","","","","","","","If we ever left edit mode and resumed without restarting …","","","","","","","","","","","","","","","","","","","","","Any ScenarioModifiers in effect?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Is this the original “secondary” state, loaded via –…","","","","","","","","If true, all map edits immediately apply to the live …","","","","","","","","","","","","","","","","","","","","","","Only exists in some gameplay modes. Must be carefully …","State (like the simulation and drawing stuff) associated …","Assumes some defaults.","","","","","The most recent Scenario loaded from a file. Don’t …","Represents state for a different version of the <code>primary</code> …","Static data that lasts the entire session. Use sparingly.","","","","","","","","","","","","","","","Display an extra area with this name on the map. This gets …","Only filled out in edit mode. Stored here once to avoid …","This swaps the primary and secondary PerMaps. Depending on …","","","","","","","","","","","","","","","","","","","","","","","","","","","If the map has been edited and …imulate a curated list of scenarios to completion, and …","","","","","","","","","","","","","","","","","Allow toggling of dev mode and warping to an object by ID.","","","","","","","","","","","If you want a simulation to start after midnight, pass the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","True if the route changed","","","","","","","","","","","","","","","","","","","Has the user even picked a start point?","Has the user specified a full route?","","","","","","","","True if something changed. False if this component doesn’…","","","","","","","","","","","","","","","","","","","","","","","","Click and drag to unselect roads","","Click and drag to select roads","No selecting, just normal click-and-drag controls.","A tool for selecting multiple roads.","The user is choosing two intersections, to select the …","","","","","","","","","","","","","","Intersections can’t be selected directly. If all roads …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This will point to a URL with the new edits and the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Visualize the graph of what agents are blocked by others.","","","","","","","","","","Trace the root cause for everyone, find the most common …","","","","","","","","","","Figure out why some agent is blocked. Draws an arrow for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A state to count the number of trips that will cross …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See how live-tuned routing parameters affect all requests …","Evaluate why an alternative path wasn’t chosen, by …","See how live-tuned routing parameters affect a single …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Exports to https://github.com/d-wasserman/shared-row/, …","","","","Exports a single road to Streetmix’s format, returns the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the indices of all matching collisions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Loads and clips objects to the current map. Also returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A simple tool to place markers and free-hand shapes over a …fter a single road has been edited, these states let the …","","","Mode is just used for <code>allows</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the index where the new lane was inserted","Place the new lane according to its direction on the …","If there are more lanes of type lt pointing forward, then …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Always starts focused on a certain lane.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Snaps a line to a vehicle movement across an intersection. …","","","","","","","","","","","","","","","","","","This imports timing.csv from …raw extra things when unzoomed or zoomed.","","","","","","","","","","","","","When a button with this label is clicked, open this info …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","When a button with this label is clicked, time-warp and …","","","","","","Show these tooltips over the map.","","","","","","","","","","","","","","","","","","","","","When a button with this label is clicked, warp to this ID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draws the timeline for a single trip, with tooltips","Creates the timeline, location warp, and time warp buttons …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates the top row for any layer panel.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Also returns the steepest street and a row explaining the …","","Returns the colored categories used and a row explaining …","","","","","","","","","","","","","","","","","A set of buildings that the player has starred, persisted …his does not immediately initialize anything (like …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If you don’t need to chain any transitions after the …","","","Assumes that the map and simulation have already been set …ka a 2D histogram. Tracks matching IDs in each cell.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The caller should handle Outcome::ClickCustom with Vec for …eturns a boxed object from a boxed trait object if the …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","","","","","","","","","","","","","","","","Must be called after the scenario has been setup. The …","","","","","","","","","","","Returns true if the trait object wraps an object of type …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A gameplay mode with specific controls for integration withrue if donedempotent. This must be called before <code>make_gameplay</code> or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Launches the tutorial gameplay along with its cutscene","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>is_enabled</code>: are (car, bike, bus, pedestrian) toggles …","","","","","","","","","","","Draws a preview of the path for the agent under the mouse …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","5 sim seconds per real second","30 sim seconds per real second","1 sim hour per real second","1 sim second per real second","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shows the bike network while unzoomed. Handles thickening …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A bottom-right panel for managing a bunch of toggleable …temporary structure that the caller should unpack and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","“main” is determined by <code>app.session.routing_preferences</code>","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,0,1,1,0,1,1,1,2,2,0,3,2,1,3,2,1,3,2,1,3,2,1,2,3,2,0,2,2,2,0,2,0,0,2,0,2,3,2,2,0,1,0,3,2,3,2,1,2,0,3,3,2,1,3,2,1,3,2,1,3,2,1,0,2,0,2,3,1,3,2,0,2,0,0,2,2,0,3,2,3,2,3,2,1,3,2,1,2,2,3,2,1,0,2,3,2,1,4,5,6,5,0,0,0,0,0,0,0,0,0,0,0,7,8,9,10,7,11,12,13,14,8,9,10,7,11,12,13,14,8,8,8,9,10,7,11,12,13,14,8,9,10,7,11,12,13,14,11,8,7,14,8,7,12,8,14,14,8,8,7,7,13,11,7,8,8,8,7,8,8,11,11,8,8,9,10,7,11,12,13,14,14,8,13,7,8,11,11,7,8,9,10,7,11,12,13,14,8,9,10,7,11,12,13,14,9,10,12,13,14,8,9,10,7,11,12,13,14,7,11,7,7,15,10,10,12,14,8,8,7,7,8,11,8,8,8,8,8,8,8,8,9,10,12,8,8,8,8,7,8,8,13,12,11,13,7,8,8,8,15,10,9,9,9,9,9,9,8,7,7,14,8,14,7,8,14,8,9,10,7,11,12,13,14,8,9,10,7,11,12,13,14,11,8,9,10,7,11,12,13,14,7,11,8,9,10,7,11,12,13,14,0,0,0,16,16,16,17,18,16,17,18,16,17,18,16,17,18,18,0,16,16,17,16,16,17,18,16,17,16,17,18,16,17,18,16,17,18,16,17,18,18,18,18,18,0,17,17,16,16,17,18,16,17,18,16,17,18,16,17,18,19,0,0,19,0,19,0,0,20,19,21,22,23,20,19,21,22,23,20,19,21,22,23,20,19,21,22,23,20,20,22,23,22,23,20,20,20,19,21,22,23,22,20,19,21,22,23,20,19,21,22,23,20,19,21,20,19,21,22,23,21,0,22,21,20,22,20,23,22,23,20,20,22,20,19,21,22,23,20,19,21,22,23,20,19,21,22,23,20,19,21,22,23,24,24,0,25,25,25,25,25,25,25,25,25,25,25,25,0,0,25,25,25,25,25,25,25,0,26,26,26,26,26,0,0,0,26,26,26,26,26,26,26,26,26,26,26,0,26,0,26,26,0,0,0,0,26,26,26,26,0,27,27,0,0,27,0,0,28,29,29,28,27,29,28,27,29,28,27,29,28,27,28,27,28,27,29,28,27,29,29,28,27,28,29,28,29,28,27,29,28,27,29,28,27,29,28,27,29,29,29,29,28,28,27,29,28,29,29,29,29,28,27,29,28,27,29,28,27,29,28,27,29,29,29,28,27,28,30,31,31,32,0,32,32,0,32,33,32,33,32,33,32,33,32,33,33,33,33,32,33,33,32,33,32,33,32,33,32,33,33,33,33,33,33,33,32,33,32,33,32,33,32,34,34,0,0,0,35,36,35,36,35,36,35,36,36,35,36,35,36,35,36,35,36,35,36,35,36,36,36,35,35,36,36,0,35,36,35,36,35,36,35,35,35,36,0,0,0,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,0,37,38,37,38,37,37,38,37,38,38,37,38,37,38,37,38,37,38,0,37,0,0,0,0,39,40,40,41,39,42,40,41,39,42,0,0,40,41,39,42,40,41,39,42,0,40,0,40,42,41,0,0,0,40,40,42,39,0,0,0,0,40,41,39,42,39,40,40,40,41,39,42,40,41,39,42,41,39,42,40,41,39,42,39,40,40,40,42,41,0,40,40,0,0,41,0,40,0,42,0,40,0,0,40,0,42,40,40,41,39,42,40,41,39,42,40,41,39,42,0,40,41,39,42,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,44,0,0,0,0,0,0,45,45,45,46,44,45,46,44,46,45,45,46,44,45,46,44,44,44,44,45,46,46,44,44,45,44,45,46,44,44,44,45,45,46,44,45,46,44,46,44,45,46,44,0,44,45,45,46,46,46,45,44,45,45,44,45,46,44,45,46,44,45,46,44,45,46,44,45,47,0,47,0,48,47,48,47,48,47,48,47,47,47,47,48,48,48,48,48,47,48,47,48,47,47,48,47,48,48,48,48,47,48,47,48,47,48,47,48,47,49,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,52,52,0,52,53,52,53,52,53,52,53,52,53,53,53,53,52,53,53,52,53,52,52,53,52,53,53,53,53,53,52,53,52,53,52,53,52,54,55,56,0,0,0,57,58,59,57,58,59,58,57,58,59,57,58,59,0,0,59,58,57,58,59,58,59,57,58,59,57,58,59,57,57,58,59,57,58,59,57,58,59,59,57,58,57,58,59,0,57,58,57,58,59,57,58,59,57,58,59,57,58,59,57,58,59,0,60,60,60,60,60,60,60,60,60,60,0,60,60,60,60,60,60,60,0,0,0,0,0,0,0,0,0,61,62,61,62,61,62,61,62,61,62,62,62,61,62,62,62,61,62,61,62,61,62,61,62,62,61,61,62,61,62,61,61,62,62,61,62,61,62,61,62,61,62,0,63,63,63,63,0,0,0,63,63,63,63,63,0,63,63,0,0,0,63,63,63,63,0,0,0,64,65,64,65,64,65,64,65,64,65,65,64,65,65,64,64,0,65,64,65,64,64,65,64,64,64,64,65,65,0,64,64,64,65,64,65,64,65,64,65,64,65,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,0,0,0,0,68,69,68,69,69,68,69,68,69,69,68,68,68,68,68,69,68,69,68,69,69,68,69,0,0,0,68,68,69,68,0,69,68,68,68,69,68,69,68,69,68,69,0,70,70,0,71,70,71,70,71,70,71,70,70,70,71,70,70,71,70,71,70,70,70,71,70,71,70,70,71,70,71,70,71,71,71,71,70,71,70,71,70,71,70,71,70,71,72,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,74,0,0,0,0,0,0,0,0,75,76,77,78,79,80,74,81,75,76,77,78,79,80,74,81,75,76,77,78,79,80,74,81,75,76,77,78,79,80,74,81,74,81,74,81,81,75,75,79,80,75,78,79,74,74,75,79,80,74,75,76,77,78,79,80,74,81,75,74,74,78,75,76,77,78,79,80,74,81,75,76,77,78,79,80,74,81,76,77,78,79,80,74,81,75,76,77,78,79,80,74,81,77,79,76,76,81,76,81,74,76,80,79,75,78,78,75,80,77,75,75,76,81,0,75,74,81,75,76,77,78,79,80,74,81,75,76,77,78,79,80,74,81,75,76,77,78,79,80,74,81,75,76,77,78,79,80,74,81,75,0,0,0,0,0,82,83,84,85,82,83,84,85,82,83,84,85,82,83,84,85,0,83,82,0,83,85,82,83,84,85,82,82,83,84,85,82,83,84,85,0,82,83,84,85,82,83,84,85,82,83,84,85,0,0,82,0,82,84,0,82,83,84,85,83,82,82,83,84,85,82,83,83,0,0,0,0,82,82,0,82,83,84,85,82,83,84,85,82,83,84,85,0,82,83,84,85,0,0,0,0,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,87,87,87,87,0,0,87,87,87,0,87,87,0,87,87,87,87,87,87,87,87,0,87,0,0,87,87,87,87,87,87,87,87,87,87,87,0,87,87,87,87,87,0,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,0,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,0,0,90,91,90,91,90,91,90,91,90,91,90,0,91,91,90,91,90,90,90,90,0,0,91,90,0,90,90,91,91,0,90,91,90,91,91,90,91,0,0,90,90,90,90,91,90,0,90,0,0,90,90,90,91,0,91,91,90,90,90,91,90,91,90,91,90,90,91,90,0,92,92,92,92,92,0,92,92,92,92,92,92,92,92,92,92,92,92,92,92,0,0,0,93,94,93,94,93,94,93,94,0,94,94,93,94,94,93,94,0,0,93,94,93,94,93,94,93,94,93,94,93,94,0,0,94,93,93,94,94,93,94,93,94,93,94,93,94,0,0,0,95,96,97,95,96,97,96,95,96,97,95,96,97,95,96,97,95,96,97,97,97,95,96,97,95,96,97,95,96,97,95,96,97,95,96,97,95,96,97,95,96,97,95,96,97,95,96,95,96,97,95,96,97,95,96,97,95,96,97,95,96,97,0,98,98,98,98,98,98,98,98,98,98,0,98,98,98,98,98,98,98,98,0,99,99,99,99,99,99,99,99,99,99,0,99,99,99,99,99,99,99,0,0,0,100,100,100,100,100,100,100,0,100,100,100,100,100,0,100,100,100,100,100,100,100,100,101,101,101,0,101,0,0,0,101,101,101,101,101,101,101,101,101,101,101,101,101,101,0,101,101,101,102,103,103,103,104,101,105,103,104,101,105,103,104,101,105,103,104,101,105,0,103,104,101,101,105,101,105,0,105,105,103,103,104,105,103,102,103,104,101,105,105,101,102,0,103,104,0,103,104,101,105,103,104,101,105,104,101,105,103,104,101,105,102,103,0,0,0,105,103,105,103,0,0,105,105,103,0,103,103,104,105,101,101,105,103,104,0,0,103,104,101,105,103,104,101,105,103,104,101,105,101,103,104,101,105,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,106,119,120,122,126,120,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,127,127,127,127,0,127,127,0,0,0,127,0,127,0,127,127,127,127,0,0,0,127,0,127,127,127,127,127,127,127,128,0,0,0,0,128,128,128,129,128,129,128,129,128,129,130,129,129,130,0,130,129,0,128,129,0,128,129,128,129,128,129,0,130,0,129,0,129,0,0,130,0,0,128,129,128,129,128,129,129,128,129,131,132,0,0,0,0,133,134,133,134,133,134,133,134,134,133,134,133,134,133,134,133,134,133,134,133,134,133,134,133,134,133,134,133,133,134,133,134,133,134,133,134,133,134,133,134,133,134,133,134,0,0,135,136,135,136,135,136,135,136,135,135,135,135,136,136,136,136,136,135,136,135,136,135,135,136,135,135,136,136,136,135,135,135,136,135,136,135,136,135,136,135,0,0,137,138,137,138,137,137,138,137,138,137,138,137,138,137,138,137,137,138,137,138,137,137,138,137,138,137,138,137,138,137,137,138,137,137,138,137,138,138,138,137,138,137,138,137,138,137,139,139,139,0,0,139,139,0,140,139,141,140,139,141,140,139,141,140,139,141,139,141,139,141,140,140,140,139,141,140,139,140,139,141,141,140,139,141,140,139,141,139,141,140,139,141,0,140,141,140,140,140,140,141,140,139,141,140,139,141,140,139,141,140,139,141,140,139,141,142,0,0,142,0,142,143,144,142,143,144,142,143,144,142,143,144,142,142,142,142,143,144,143,144,143,144,142,142,143,144,143,144,142,143,143,144,142,143,144,142,142,143,144,142,143,143,143,144,142,143,144,142,143,143,144,142,143,143,144,142,143,144,142,143,144,142,143,144,142,143,144,142,145,146,147,0,0,148,149,148,149,148,149,148,149,149,149,148,148,148,149,148,148,149,149,148,149,148,149,149,148,149,0,148,149,148,148,148,148,148,149,148,149,148,149,148,149,148,149,0,0,150,151,150,151,150,151,150,151,151,151,150,150,150,151,150,150,151,151,150,151,150,151,151,150,151,0,151,150,151,150,151,150,150,150,151,151,151,151,151,150,151,151,151,150,151,150,151,150,151,150,151,0,0,0,0,0,0,152,153,152,154,153,155,156,152,157,154,153,155,156,152,157,154,153,155,156,152,157,154,153,155,156,152,157,0,154,153,155,156,157,154,153,155,156,157,154,153,155,156,157,152,154,153,155,156,157,0,154,153,155,156,152,157,154,153,155,156,152,157,154,153,155,156,152,157,152,154,153,155,156,152,157,152,154,153,155,156,157,154,153,155,156,157,154,153,155,156,157,154,153,155,156,157,153,155,154,153,155,156,152,157,154,153,155,156,152,157,154,153,155,156,152,157,154,153,155,156,152,157,0,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,0,159,159,159,159,0,159,159,159,159,159,159,0,159,159,159,159,0,160,160,160,160,160,160,160,160,160,160,0,160,160,160,160,160,160,160,0,0,161,161,161,0,161,161,161,0,0,0,162,163,164,165,162,161,166,163,164,165,162,161,166,163,163,164,165,162,161,166,163,164,165,162,161,166,162,164,163,163,0,163,165,166,163,165,166,162,166,163,164,165,162,161,166,0,163,162,162,163,163,164,165,162,161,166,163,164,165,162,161,166,165,162,161,163,164,165,162,161,166,0,162,162,163,0,0,164,0,166,0,164,163,163,164,164,163,0,166,163,164,0,164,163,164,165,162,161,166,163,164,165,162,161,166,163,164,165,162,161,166,163,164,165,162,161,166,167,168,169,169,170,170,0,170,170,170,170,170,170,170,170,170,170,170,170,170,0,170,170,170,0,170,170,170,170,170,0,0,0,170,0,0,170,170,0,170,0,0,0,170,170,170,170,0,0,0,0,171,0,0,171,172,0,172,171,0,172,173,174,175,171,176,172,177,173,174,175,171,176,172,177,173,175,176,173,173,175,173,174,175,171,176,172,177,173,174,175,171,176,172,177,173,0,174,172,172,173,173,177,177,173,173,172,177,173,173,173,174,175,171,176,172,177,177,0,175,177,173,174,175,171,176,172,177,173,174,175,171,176,172,177,174,175,171,176,172,177,173,174,175,171,176,172,177,0,174,177,172,177,173,173,0,176,173,176,175,172,174,173,173,173,174,175,171,176,172,177,173,174,175,171,176,172,177,173,174,175,171,176,172,177,173,174,175,171,176,172,177,178,179,179,0,0,0,0,0,180,181,180,181,180,181,180,181,0,180,181,180,181,180,181,180,181,180,181,180,181,180,181,180,181,180,181,180,181,180,181,180,181,0,0,0,182,183,184,182,183,184,182,183,184,182,183,184,183,182,183,183,182,182,183,184,182,183,184,182,183,184,183,184,182,183,184,0,184,184,184,184,182,182,0,0,182,182,182,183,183,183,182,183,184,182,183,184,182,183,184,182,183,184,0,0,0,185,186,187,185,186,187,185,186,187,185,186,187,185,186,186,187,185,185,186,187,185,186,187,185,186,187,186,187,185,186,187,0,185,185,186,186,0,186,187,185,185,186,186,185,186,187,185,186,187,185,186,187,185,186,187,186,0,0,188,189,188,189,188,189,188,189,188,188,0,188,189,189,189,189,188,189,188,189,189,188,189,189,188,188,188,189,188,189,188,189,188,189,0,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,0,0,191,192,192,191,192,191,192,191,192,191,191,192,192,192,192,191,192,192,191,192,191,191,192,191,192,192,191,192,192,191,192,191,192,191,192,191,192,0,0,193,194,193,194,193,194,193,194,194,0,193,193,0,193,194,194,194,194,194,193,194,193,194,194,193,194,193,194,194,193,193,0,0,0,193,194,193,194,193,194,193,194,195,0,195,195,0,0,195,0,0,196,197,195,197,198,195,196,197,198,195,196,197,198,195,196,197,198,195,196,0,197,197,195,195,198,195,196,197,197,195,199,195,198,197,198,195,195,196,197,199,199,197,198,195,196,197,198,195,196,197,195,196,197,198,195,196,197,0,195,198,198,198,199,197,198,195,196,197,198,195,196,197,198,195,196,197,198,195,196,0,0,0,0,0,200,201,202,203,204,200,201,202,203,204,200,201,202,203,204,200,201,202,203,204,200,201,202,203,200,201,201,202,203,201,202,204,200,200,200,201,202,203,204,201,202,203,200,201,202,203,204,200,201,202,203,204,201,202,203,204,200,201,202,203,204,0,0,0,201,202,203,204,201,204,200,204,204,200,201,0,202,200,201,202,204,200,200,200,201,202,203,204,200,201,202,203,204,200,201,202,203,204,200,204,200,201,202,203,204,201,205,0,205,205,206,0,0,0,206,205,206,205,206,205,0,205,206,207,205,206,207,205,206,207,205,206,207,205,205,205,208,205,208,0,207,207,205,205,205,0,208,208,208,208,208,207,205,205,208,207,0,0,206,207,205,208,208,208,208,205,206,207,205,206,207,205,205,206,207,205,208,205,205,207,207,208,207,205,0,208,207,205,205,206,207,205,206,207,205,0,206,207,205,206,207,205,209,210,211,212,213,210,211,212,210,212,214,215,216,0,0,217,218,217,218,217,217,218,217,218,217,218,217,0,217,218,217,217,218,217,218,218,217,218,217,218,217,217,217,217,217,218,217,218,217,218,217,218,0,219,219,219,219,219,219,0,219,219,219,0,219,0,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,0,0,220,220,220,220,220,0,220,220,220,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,0,0,0,221,222,221,222,221,222,221,222,221,222,221,0,221,222,0,221,222,221,222,222,221,222,221,222,222,221,0,0,221,221,222,221,222,221,222,221,222,223,0,0,224,0,224,0,224,0,225,225,224,226,227,223,225,224,226,227,223,227,225,224,226,227,223,225,224,226,227,223,227,223,223,225,226,223,223,225,226,223,225,224,226,227,223,223,223,225,224,226,227,223,225,224,226,227,223,224,226,227,223,225,224,226,227,223,225,223,226,227,225,225,227,226,226,225,226,223,225,224,226,227,223,225,224,226,227,223,225,224,226,227,223,225,224,226,227,223,225,228,229,0,230,230,230,230,230,230,0,0,0,230,230,230,230,230,230,230,230,230,230,0,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,0,0,0,0,0,232,233,234,235,236,232,233,234,235,236,232,233,234,235,236,232,233,234,235,236,236,234,236,232,233,234,232,233,234,235,232,233,234,235,236,234,232,233,234,235,236,232,233,234,235,236,235,236,232,233,234,235,236,232,233,234,236,232,233,234,235,235,232,233,234,234,232,232,233,234,232,232,233,234,235,236,232,233,234,235,236,232,233,234,235,236,232,233,234,235,236,0,237,237,0,237,237,237,237,0,237,237,0,0,237,0,0,0,237,0,238,238,238,239,240,238,241,242,237,239,240,238,241,242,237,0,239,240,238,241,242,237,239,240,238,241,242,237,239,239,241,242,237,242,237,242,241,240,240,239,238,242,237,242,239,0,241,241,239,240,238,241,242,237,239,239,239,239,238,238,239,239,241,241,241,241,241,239,240,238,241,242,237,239,240,238,241,242,237,242,237,239,240,238,241,242,237,0,237,239,238,0,239,240,241,241,241,240,240,239,242,240,238,241,242,241,241,241,242,242,237,241,241,239,241,239,240,241,241,241,242,241,239,240,242,237,239,237,0,239,240,238,241,242,237,239,240,238,241,242,237,238,239,240,238,241,242,237,239,240,238,241,242,237,240,240,239,241,241,0,243,243,243,243,243,243,243,243,243,243,243,243,0,243,0,243,243,243,243,243,243,243,243,0,0,244,245,244,245,244,245,244,245,244,245,244,245,244,245,244,245,244,245,244,244,245,0,245,244,245,245,244,244,245,244,245,244,245,244,245,246,246,246,246,0,0,247,246,247,246,247,247,246,247,246,246,246,247,247,246,247,247,246,247,246,247,246,246,247,246,247,247,247,247,246,247,247,247,247,247,247,246,247,247,246,247,246,247,246,247,246,0,0,0,248,249,248,249,248,249,248,249,0,0,0,248,249,249,248,249,248,249,249,248,249,248,249,248,249,248,248,249,249,248,249,249,248,248,249,248,249,248,249,248,249,248,249,249,250,250,250,0,0,250,250,250,0,250,250,250,0,250,250,250,250,250,250,0,250,0,0,251,0,250,250,250,250,0,0,0,0,0,252,253,254,255,256,252,253,254,255,256,252,253,254,255,256,252,253,254,255,256,252,253,254,255,252,253,254,255,256,256,256,256,252,253,254,255,256,252,253,254,255,256,252,253,254,255,256,252,253,254,255,256,252,253,254,255,0,256,256,252,253,254,255,256,252,253,254,255,256,252,253,254,255,256,252,253,254,255,0,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,0,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,0,258,0,258,258,258,258,258,258,258,258,258,258,258,258,0,258,0,0,0,0,0,0,259,260,261,262,259,263,261,264,260,262,259,263,261,264,260,263,262,259,263,261,264,260,262,259,263,261,264,260,264,261,260,260,262,264,263,259,263,262,259,259,262,259,263,261,264,260,261,259,259,262,259,263,261,264,260,262,259,263,261,264,260,259,263,261,264,260,262,259,263,261,264,260,262,0,261,261,262,260,0,259,259,262,261,262,262,260,263,262,259,263,261,264,260,262,259,263,261,264,260,262,259,263,261,264,260,262,259,263,261,264,260,0,265,265,265,265,265,265,265,265,265,265,265,0,265,0,265,0,265,265,265,265,265,265,265,265,266,0,266,0,0,266,267,267,267,266,268,267,266,268,268,268,0,267,266,268,267,266,268,266,268,266,268,268,267,266,268,266,267,267,266,267,266,268,266,266,267,267,266,268,267,266,268,266,268,267,266,268,267,267,267,268,266,268,267,267,267,0,268,267,267,266,268,267,266,268,267,266,268,267,266,268,267,267,266,268,267,267,269,270,0,0,0,271,272,271,273,272,271,273,272,271,273,272,271,273,271,0,272,272,273,271,272,271,271,271,273,271,272,271,273,272,271,271,272,271,273,272,271,273,271,273,272,271,273,271,0,273,271,273,273,271,271,271,272,273,273,273,273,272,271,273,272,271,273,272,271,273,272,271,273],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[],["app",3]],null,null,null,[[["eventctx",3],["app",3],["bool",15],["setup",3],["option",4,[["permap",3]]]],["vec",3,[["box",3,[["state",8]]]]]],null,null,null,null,null,null,null,null,[[["mode",4]],["bool",15]],[[["eventctx",3],["app",3],["bool",15],["option",4,[["sim",3]]],["option",4,[["mapedits",3]]],["setup",3]],["vec",3,[["box",3,[["state",8]]]]]],null,null,[[]],[[]],[[]],[[["argmatches",3]]],null,null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[]],null,null,[[["mode",4]],["bool",15]],null,null,null,null,[[["settings",3]]],null,null,null,[[["eventctx",3],["setup",3]]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["map",3],["str",15]],["result",6]],null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[["canvas",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["eventctx",3],["showobject",8],["bool",15],["bool",15],["bool",15]],["option",4,[["id",4]]]],[[["id",4]],["option",4,[["pt2d",3]]]],[[],["app",3]],[[["eventctx",3]]],[[],["sim",3]],null,[[["eventctx",3],["into",8,[["string",3]]]],["option",4,[["intersectionid",3]]]],[[],["flags",3]],[[]],[[],["colorscheme",3]],null,null,null,null,null,null,[[["gfxctx",3],["drawoptions",3],["showobject",8]]],[[["gfxctx",3]]],[[],["drawmap",3]],null,[[["gfxctx",3],["drawoptions",3]]],[[["canvas",3]]],null,[[],["sessionstate",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["argmatches",3]]],[[["bounds",3],["prerender",3],["agentcache",3],["showobject",8]],["vec",3,[["renderable",8]]]],null,null,[[],["option",4]],null,null,[[["eventctx",3],["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,null,null,[[],["showlayers",3]],[[],["showlayers",3]],null,[[["eventctx",3],["into",8,[["string",3]]]],["bool",15]],null,[[["eventctx",3],["pt2d",3],["option",4,[["f64",15]]],["option",4,[["id",4]]]],["box",3,[["state",8]]]],[[],["map",3]],null,[[["map",3],["sim",3],["flags",3],["options",3],["colorscheme",3],["eventctx",3],["timer",3]],["permap",3]],[[["eventctx",3],["map",3],["timer",3]]],null,[[["eventctx",3],["showobject",8]],["option",4,[["id",4]]]],[[["eventctx",3]],["option",4,[["id",4]]]],[[["eventctx",3]],["option",4,[["id",4]]]],[[["eventctx",3]],["option",4,[["id",4]]]],[[["eventctx",3]],["option",4,[["id",4]]]],[[],["colorscheme",3]],[[],["drawmap",3]],[[],["options",3]],[[],["showlayers",3]],[[],["showeverything",3]],[[],["perobjectactions",3]],[[],["options",3]],null,null,[[],["analytics",3]],null,null,[[["eventctx",3]]],null,[[]],null,[[["sim",3],["map",3]],["bool",15]],null,null,null,[[["option",4]]],[[["id",4]],["bool",15]],[[["id",4]],["bool",15]],null,null,null,null,null,null,[[],["sim",3]],null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[],["btreemap",3,[["string",3],["vec",3,[["challenge",3]]]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["gameplaymode",4]]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["app",3],["option",4]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["str",15],["panel",3]],["transition",4,[["app",3]]]],null,[[["app",3],["gameplaymode",4]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["into",8,[["string",3]]]],["cutscenebuilder",3]],[[["eventctx",3],["box",3,[["fn",8]]]],["box",3,[["state",8]]]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["str",15],["f64",15],["into",8,[["string",3]]]],["cutscenebuilder",3]],[[],["color",3]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["str",15],["fn",8],["usize",15]],["panel",3]],null,null,null,null,[[["str",15]],["cutscenebuilder",3]],[[["eventctx",3],["widget",3],["color",3]],["box",3,[["state",8]]]],null,null,[[["into",8,[["string",3]]]],["cutscenebuilder",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["map",3],["scenario",3],["timer",3]],["prebakesummary",3]],[[]],null,[[],["result",4]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,[[["app",3],["duration",3],["duration",3]],["vec",3,[["textspan",3]]]],[[["app",3],["agenttype",4]],["color",3]],[[["app",3],["tripphasetype",4]],["color",3]],[[["eventctx",3],["app",3]],["option",4,[["transition",4,[["app",3]]]]]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3],["text",3]]],[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3],["contextualactions",8]],["option",4,[["transition",4,[["app",3]]]]]],[[]],null,[[["app",3]],["option",4,[["id",4]]]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["duration",3]],["box",3,[["fnonce",8]]]],[[["eventctx",3],["app",3],["tab",4],["contextualactions",8]]],[[["text",3],["fn",8],["btreeset",3,[["string",3]]]]],[[],["commonstate",3]],[[["app",3],["id",4]],["text",3]],null,null,null,[[["eventctx",3]],["panel",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,[[["app",3],["intersectionid",3]]],[[["app",3]],["vec",3,[["roadid",3]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["route",3]],[[],["mode",4]],[[]],[[]],[[["gfxctx",3]]],[[["route",3]],["bool",15]],[[["mode",4]],["bool",15]],[[["eventctx",3],["app",3]],["bool",15]],[[]],[[]],[[]],null,[[["eventctx",3]],["widget",3]],[[["intersectionid",3]],["option",4,[["usize",15]]]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["bool",15]],[[],["bool",15]],null,[[["eventctx",3]],["option",4,[["intersectionid",3]]]],[[["map",3],["usize",15],["intersectionid",3]],["usize",15]],[[["route",3]],["bool",15]],[[["mode",4]],["bool",15]],[[["app",3]],["routesketcher",3]],[[],["route",3]],[[["str",15]],["bool",15]],null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["eventctx",3],["app",3]]],[[["app",3]]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],null,[[["gfxctx",3],["app",3],["bool",15]]],[[["eventctx",3],["app",3],["option",4,[["str",15]]]],["bool",15]],[[]],[[]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3]],["widget",3]],null,[[["eventctx",3],["app",3],["btreeset",3,[["roadid",3]]]],["roadselector",3]],null,null,[[["eventctx",3],["app",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[["gfxctx",3],["app",3]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["uploadedproposals",3]],null,[[["eventctx",3],["app",3],["str",15]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["str",15],["panel",3]],["transition",4,[["app",3]]]],[[["string",3]]],[[],["result",4]],[[["string",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],null,[[["eventctx",3],["app",3],["str",15]],["option",4,[["transition",4,[["app",3]]]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["pt2d",3],["option",4,[["f64",15]]],["option",4,[["id",4]]],["permap",3]],["box",3,[["state",8]]]],[[["eventctx",3]],["box",3,[["state",8]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["eventctx",3],["app",3],["str",15]],["transition",4,[["app",3]]]],null,null,null,null,null,[[["app",3],["id",4]],["vec",3]],null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["eventctx",3],["app",3]]],null,[[["tags",3],["tags",3]]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],null,[[["eventctx",3],["app",3]],["drawable",3]],[[["eventctx",3],["app",3]],["drawable",3]],[[["eventctx",3],["app",3]],["drawable",3]],[[],["drawbaselayer",4]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3],["id",4],["string",3],["bool",15]],["transition",4,[["app",3]]]],[[["app",3]]],[[["app",3]]],[[["app",3]]],null,[[]],[[]],[[]],[[]],[[],["gameplaymode",4]],null,null,[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["bool",15]],[[],["showlayers",3]],null,[[["eventctx",3],["app",3]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["vec",3,[["mapname",3]]]],["box",3,[["state",8]]]],null,null,null,null,null,null,null,[[["eventctx",3],["app",3],["option",4,[["vec",3,[["originalroad",3]]]]]],["box",3,[["state",8]]]],[[["eventctx",3]]],null,null,[[["string",3],["eventctx",3],["app",3]],["transition",4,[["app",3]]]],null,null,null,[[["id",4]],["bool",15]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],null,null,[[["app",3],["agentid",4]],["option",4]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]]],[[]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3]],["box",3,[["state",8]]]],null,null,[[["agentid",4]],["delaycause",4]],[[["app",3],["agentid",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,[[["eventctx",3],["app",3],["obj",3],["color",3],["block",3]]],[[["eventctx",3],["app",3],["vec",3,[["perimeter",3]]],["timer",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["obj",3]],[[]],[[["obj",3]],["ordering",4]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],null,[[["obj",3]],["bool",15]],[[],["bool",15]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["u64",15]],[[]],null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3]],["panel",3]],[[["obj",3]],["bool",15]],[[],["obj",3]],[[["eventctx",3],["app",3]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["block",3]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["str",15],["panel",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],null,[[["obj",3]],["option",4,[["ordering",4]]]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["map",3],["pathconstraints",4]]],[[],["source",4]],[[]],[[["gfxctx",3],["app",3]]],null,[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3],["laneid",3]],["box",3,[["state",8]]]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3],["source",4],["pathconstraints",4]],["box",3,[["state",8]]]],null,[[["eventctx",3],["app",3],["laneid",3]],["box",3,[["state",8]]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["id",4],["map",3],["sim",3]]],[[["gfxctx",3],["app",3]]],[[["id",4],["map",3],["sim",3]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,[[["eventctx",3],["app",3],["intersectionid",3]],["box",3,[["state",8]]]],[[["gfxctx",3],["app",3]]],null,[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],null,[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["str",15],["vec",3,[["item",4]]],["option",4,[["pt2d",3]]]],["box",3,[["state",8]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["app",3],["timer",3]],["counter",3,[["roadid",3]]]],[[["panel",3]]],null,null,[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],null,null,[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3],["pathrequest",3],["polygon",3]],["option",4,[["box",3,[["state",8]]]]]],[[["eventctx",3],["app",3],["tripendpoint",4]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3]],["box",3,[["state",8]]]],null,null,null,[[["eventctx",3],["tripmode",4],["routingparams",3]],["widget",3]],[[["eventctx",3],["app",3]]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["roadselector",3]],["panel",3]],[[["eventctx",3],["app",3],["roadid",3]],["box",3,[["state",8]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["vec",3,[["roadid",3]]],["vec",3,[["intersectionid",3]]],["map",3]],["string",3]],[[["intersectionid",3],["map",3]],["feature",3]],[[["lane",3]],["option",4,[["map",3,[["string",3],["value",4]]]]]],[[["roadid",3],["map",3]],["feature",3]],[[["roadid",3],["map",3]],["string",3]],[[["lane",3],["direction",4]],["map",3,[["string",3],["value",4]]]],[[["roadid",3],["map",3]],["map",3,[["string",3],["value",4]]]],null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],null,[[],["drawbaselayer",4]],[[]],[[]],null,null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[["eventctx",3],["app",3],["intersectionid",3]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["btreeset",3,[["intersectionid",3]]],["usize",15],["bool",15]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["str",15],["panel",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3],["str",15],["panel",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3],["panel",3]],["option",4,[["transition",4,[["app",3]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,null,null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["app",3]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["str",15],["panel",3]],["transition",4,[["app",3]]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[["eventctx",3],["app",3],["collisiondataset",3],["vec",3,[["usize",15]]]],["world",3,[["dummyid",3]]]],[[["collisiondataset",3]],["vec",3,[["usize",15]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],null,[[["gfxctx",3],["app",3]]],[[["filters",3]],["bool",15]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[["panel",3]],["filters",3]],[[["eventctx",3],["app",3],["collisiondataset",3],["vec",3,[["usize",15]]]],["world",3,[["dummyid",3]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3]],["widget",3]],[[["filters",3]],["bool",15]],[[],["filters",3]],[[["eventctx",3],["app",3]],["box",3,[["state",8]]]],null,[[["usize",15],["usize",15]],["f64",15]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,[[["gfxctx",3],["app",3]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3],["string",3],["string",3]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["str",15],["panel",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["gfxctx",3],["app",3]]],null,[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3],["counter",3,[["buildingid",3]]],["option",4,[["heatmapoptions",3]]]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["scenario",3]],["box",3,[["state",8]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],null,[[["gfxctx",3],["app",3]]],null,null,[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["app",3],["option",4,[["string",3]]],["bool",15],["timer",3]]],[[["colorscheme",3],["hashmap",3],["btreemap",3,[["string",3],["string",3]]],["vec",3,[["pt2d",3]]],["str",15],["usize",15]],["object",3]],[[["app",3],["str",15]]],[[["eventctx",3],["app",3],["option",4,[["string",3]]]],["box",3,[["state",8]]]],null,null,null,[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["obj",4]],[[]],[[["gfxctx",3],["app",3]]],[[["obj",4]],["bool",15]],[[],["bool",15]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["obj",4]],["bool",15]],[[["eventctx",3],["app",3],["string",3],["vec",3,[["lonlat",3]]]],["box",3,[["state",8]]]],null,null,[[["eventctx",3],["app",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["gfxctx",3],["app",3]]],null,[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["scenario",3],["eventctx",3],["app",3]],["box",3,[["state",8]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["markerid",3]],[[],["recordedstorymap",3]],[[]],[[]],[[],["result",4]],null,[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3]]],[[],["drawbaselayer",4]],[[],["drawbaselayer",4]],[[],["drawbaselayer",4]],[[["markerid",3]],["bool",15]],[[],["bool",15]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3]],["option",4,[["ring",3]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["eventctx",3],["app",3],["storymap",3]],["box",3,[["state",8]]]],[[],["u64",15]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[["app",3],["recordedstorymap",3]],["option",4,[["storymap",3]]]],null,null,null,null,[[["markerid",3]],["bool",15]],[[],["storymap",3]],[[],["lasso",3]],null,[[["eventctx",3],["app",3]],["box",3,[["state",8]]]],[[["eventctx",3],["usize",15],["str",15]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["str",15],["panel",3]],["transition",4,[["app",3]]]],null,null,null,[[["eventctx",3]]],[[["eventctx",3],["app",3]]],[[["app",3]]],[[],["result",4]],[[["vec",3,[["pt2d",3]]]],["ring",3]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["eventctx",3],["app",3],["mapedits",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["app",3],["laneid",3]],["bool",15]],null,null,[[["editcmd",4]],["option",4,[["id",4]]]],null,null,[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],null,[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3]],["panel",3]],[[["eventctx",3],["app",3]],["panel",3]],null,[[["eventctx",3],["app",3],["intersectionid",3],["gameplaymode",4]],["option",4,[["box",3,[["state",8]]]]]],null,null,null,[[["eventctx",3],["app",3],["gameplaymode",4]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["into",8,[["string",3]]],["bool",15],["option",4,[["transition",4,[["app",3]]]]],["box",3,[["fn",8]]]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["gameplaymode",4]],["box",3,[["state",8]]]],[[["eventctx",3],["box",3,[["fn",8]]]],["box",3,[["state",8]]]],null,null,null,null,null,null,[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]]],null,null,null,[[["app",3],["option",4,[["speed",3]]]],["vec",3,[["choice",3,[["speed",3]]]]]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],null,[[["editroad",3],["lanetype",4],["tags",3]],["usize",15]],[[["editroad",3],["direction",4]],["usize",15]],[[["editroad",3],["lanetype",4],["bool",15]],["direction",4]],null,[[],["any",8]],[[],["any",8]],null,null,[[]],[[]],null,null,[[["gfxctx",3],["app",3]]],null,[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3],["roadid",3],["editroad",3],["editroad",3],["mapedits",3]],["box",3,[["state",8]]]],null,[[["eventctx",3],["app",3]]],null,[[["eventctx",3],["app",3]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["eventctx",3],["app",3],["option",4,[["laneid",3]]],["option",4,[["laneid",3]]]]],[[["lanetype",4]],["bool",15]],[[["app",3]],["option",4,[["mapedits",3]]]],[[["eventctx",3],["app",3],["roadid",3],["option",4,[["laneid",3]]]],["box",3,[["state",8]]]],[[["gfxctx",3],["app",3]]],[[["app",3],["roadid",3],["usize",15],["usize",15]],["geombatch",3]],null,[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["app",3],["roadid",3]],["geombatch",3]],null,[[]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["app",3],["usize",15]],["laneid",3]],null,[[["lanetype",4]],["option",4,[["str",15]]]],null,[[["eventctx",3],["app",3],["road",3],["option",4,[["laneid",3]]],["option",4,[["laneid",3]]]],["panel",3]],[[["eventctx",3],["app",3],["usize",15],["bool",15],["roadid",3],["editroad",3]],["panel",3]],[[["eventctx",3],["app",3],["option",4,[["isize",15]]],["fn",8]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3],["laneid",3]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["roadid",3]],["box",3,[["state",8]]]],null,null,null,[[["eventctx",3],["app",3]]],[[["eventctx",3],["app",3]]],[[["eventctx",3],["app",3]]],null,null,[[["eventctx",3]],["color",3]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["app",3],["laneid",3]],["vec",3,[["choice",3,[["distance",3]]]]]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3],["transitrouteid",3]],["box",3,[["state",8]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["gfxctx",3],["app",3]]],[[]],null,null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["app",3],["intersectionid",3],["gameplaymode",4]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["str",15],["panel",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[["eventctx",3],["app",3],["usize",15],["fn",8]]],[[["app",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["eventctx",3],["app",3],["usize",15]]],[[["app",3],["btreeset",3]],["option",4,[["bundleedits",3]]]],[[],["bundleedits",3]],[[]],null,[[["eventctx",3],["app",3]]],null,[[["gfxctx",3],["app",3]]],[[],["drawbaselayer",4]],null,[[["eventctx",3],["app",3],["btreeset",3],["usize",15]],["geombatch",3]],null,[[["bundleedits",3]],["bool",15]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["app",3],["btreeset",3]],["geombatch",3]],null,[[]],[[]],[[["app",3],["btreeset",3]],["bundleedits",3]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3],["btreeset",3],["usize",15]],["panel",3]],[[["eventctx",3],["app",3],["bool",15],["bool",15]],["panel",3]],null,null,null,null,[[["bundleedits",3]],["bool",15]],[[["eventctx",3],["app",3],["btreeset",3,[["intersectionid",3]]],["gameplaymode",4]],["box",3,[["state",8]]]],null,null,null,null,[[["eventctx",3],["app",3]]],null,null,null,[[["vec",3,[["polygon",3]]]],["vec",3]],[[["app",3],["btreeset",3]],["bundleedits",3]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["app",3]],["result",6]],[[]],[[]],null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["drawbaselayer",4]],[[["eventctx",3],["app",3],["intersectionid",3],["gameplaymode",4],["bundleedits",3]],["box",3,[["state",8]]]],[[]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3],["controltrafficsignal",3],["usize",15]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["str",15],["panel",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3],["panel",3]],["option",4,[["transition",4,[["app",3]]]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[["controltrafficsignal",3],["map",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["angle",3]],["str",15]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[["str",15],["map",3]],["result",6,[["movementid",3]]]],null,[[["map",3],["intersectionid",3],["str",15]],["result",6,[["controltrafficsignal",3]]]],[[["eventctx",3],["app",3],["str",15]],["box",3,[["state",8]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[["map",3],["intersectionid",3]],["result",6,[["snapper",3]]]],null,[[["deserializer",8]],["result",6]],[[["deserializer",8]],["result",6,[["vec",3,[["nodeid",3]]]]]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,null,null,null,null,[[["eventctx",3],["app",3],["btreeset",3,[["intersectionid",3]]]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["intersectionid",3],["btreeset",3,[["intersectionid",3]]]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["intersectionid",3],["intersectionid",3],["btreeset",3,[["intersectionid",3]]]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["str",15],["panel",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3],["str",15],["panel",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3],["str",15],["panel",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]]],[[["eventctx",3],["app",3]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["usize",15]],["widget",3]],null,null,[[["eventctx",3],["btreeset",3,[["intersectionid",3]]],["gameplaymode",4]],["box",3,[["state",8]]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3],["btreeset",3,[["intersectionid",3]]],["usize",15]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3]],["box",3,[["state",8]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["eventctx",3],["app",3],["editcmd",4]],["option",4,[["box",3,[["state",8]]]]]],[[["eventctx",3],["app",3],["editcmd",4]],["option",4,[["box",3,[["state",8]]]]]],null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["gfxctx",3],["app",3]]],null,[[["eventctx",3],["app",3],["btreeset",3]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["btreeset",3]],["widget",3]],[[["eventctx",3],["app",3],["roadid",3]],["box",3,[["state",8]]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["app",3],["id",4]],["vec",3]],[[["app",3]],["option",4,[["id",4]]]],[[],["vec",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["panel",3]],["option",4,[["tab",4]]]],[[],["tab",4]],[[],["dataoptions",3]],[[]],[[]],null,[[],["hashset",3,[["string",3]]]],null,[[["gfxctx",3],["app",3]]],null,null,[[["dataoptions",3]],["bool",15]],[[["eventctx",3],["app",3],["contextualactions",8]]],[[["eventctx",3],["app",3],["id",4],["string",3],["bool",15]],["transition",4,[["app",3]]]],[[]],[[]],[[]],[[]],[[["panel",3]],["dataoptions",3]],[[["app",3],["id",4]],["tab",4]],[[],["gameplaymode",4]],[[["eventctx",3]],["widget",3]],null,null,null,[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["bool",15]],null,null,[[["eventctx",3],["vec",3]],["vec",3,[["widget",3]]]],[[["eventctx",3],["hashmap",3],["tab",4],["vec",3]],["widget",3]],[[["dataoptions",3]],["bool",15]],[[["eventctx",3],["app",3],["tab",4],["contextualactions",8]],["infopanel",3]],[[],["dataoptions",3]],null,null,null,null,null,null,[[["eventctx",3],["app",3],["str",15],["fn",8],["dataoptions",3]],["widget",3]],null,null,null,[[["eventctx",3],["app",3]],["widget",3]],[[["app",3]],["option",4,[["id",4]]]],[[]],[[]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["details",3],["app",3],["buildingid",3],["option",4,[["personid",3]]]]],[[["eventctx",3],["app",3],["details",3],["buildingid",3],["tab",4]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["buildingid",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["buildingid",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["buildingid",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["buildingid",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["areaid",3]],["widget",3]],[[["eventctx",3],["app",3],["areaid",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["intersectionid",3],["dataoptions",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["intersectionid",3]],["widget",3]],[[["eventctx",3],["app",3],["intersectionid",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["intersectionid",3],["dataoptions",3],["bool",15]],["widget",3]],[[["eventctx",3],["app",3],["intersectionid",3],["dataoptions",3],["bool",15]],["widget",3]],[[["eventctx",3],["app",3],["intersectionid",3],["dataoptions",3],["bool",15]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["intersectionid",3],["tab",4]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["intersectionid",3]],["widget",3]],[[["eventctx",3],["app",3],["intersectionid",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["intersectionid",3],["dataoptions",3]],["widget",3]],[[["eventctx",3],["app",3],["intersectionid",3],["dataoptions",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["intersectionid",3]],["widget",3]],[[["eventctx",3],["app",3],["intersectionid",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["laneid",3]],["widget",3]],[[["eventctx",3],["app",3],["laneid",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["laneid",3],["tab",4]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["laneid",3]],["widget",3]],[[["eventctx",3],["app",3],["laneid",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["laneid",3],["dataoptions",3]],["widget",3]],[[["eventctx",3],["app",3],["laneid",3],["dataoptions",3]],["widget",3]],[[["eventctx",3],["details",3],["parkinglotid",3],["tab",4]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["parkinglotid",3]],["widget",3]],[[["eventctx",3],["app",3],["parkinglotid",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["personid",3],["bool",15]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["personid",3]],["widget",3]],[[["duration",3],["duration",3]],["textspan",3]],[[["eventctx",3],["app",3],["details",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3]],["widget",3]],[[["eventctx",3],["person",3],["map",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["personid",3],["tab",4],["bool",15]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["carid",3],["bool",15]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["carid",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["personid",3],["bool",15]],["widget",3]],[[["eventctx",3],["app",3],["personid",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["personid",3],["btreemap",3],["bool",15]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["personid",3],["btreemap",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["carid",3],["tab",4]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["carid",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["carid",3]],["widget",3]],[[["transitroute",3]],["text",3]],[[["eventctx",3],["app",3],["details",3],["transitrouteid",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["transitrouteid",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["transitstopid",3]],["widget",3]],[[["eventctx",3],["app",3],["details",3],["transitstopid",3]],["widget",3]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,[[["eventctx",3],["app",3],["tripid",3],["opentrip",3],["details",3]],["widget",3]],[[],["opentrip",3]],[[]],[[["eventctx",3],["analytics",3],["tripid",3],["tripinfo",3],["percent",3]],["widget",3]],[[["eventctx",3],["app",3],["analytics",3],["details",3],["tripid",3]]],[[["tripendpoint",4],["app",3]]],[[["opentrip",3]],["bool",15]],[[["eventctx",3],["app",3],["personid",3],["btreemap",3],["tripid",3],["details",3]],["widget",3]],[[]],[[["eventctx",3],["app",3],["tripid",3],["opentrip",3],["details",3]],["widget",3]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["color",3],["bool",15],["path",3],["map",3],["unitfmt",3]],["widget",3]],[[["eventctx",3],["app",3],["tripid",3],["option",4,[["f64",15]]]],["widget",3]],[[["eventctx",3],["app",3],["tripid",3],["opentrip",3],["details",3],["vec",3,[["tripphase",3]]],["map",3],["option",4,[["f64",15]]]],["widget",3]],[[],["opentrip",3]],[[["eventctx",3],["app",3],["tripid",3],["agentid",4],["opentrip",3],["details",3]],["widget",3]],null,[[["tripid",3]],["btreemap",3,[["tripid",3],["opentrip",3]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],[[],["drawbaselayer",4]],[[["gfxctx",3]]],null,[[["eventctx",3],["app",3]],["option",4,[["layeroutcome",4]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],null,[[]],[[]],[[["eventctx",3],["str",15]],["widget",3]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[],["option",4,[["str",15]]]],null,null,null,[[["eventctx",3],["app",3]],["box",3,[["state",8]]]],null,null,[[["eventctx",3],["panel",3]],["option",4,[["layeroutcome",4]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["eventctx",3],["app",3]],["option",4,[["transition",4,[["app",3]]]]]],[[]],[[]],null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],null,[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],null,null,[[["gfxctx",3]]],[[["gfxctx",3]]],[[["eventctx",3],["app",3]],["option",4,[["layeroutcome",4]]]],[[["eventctx",3],["app",3]],["option",4,[["layeroutcome",4]]]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3]]],[[["eventctx",3],["app",3],["distance",3],["distance",3]]],[[["eventctx",3]]],[[],["option",4,[["str",15]]]],[[],["option",4,[["str",15]]]],[[["eventctx",3],["app",3]],["steepstreets",3]],[[["eventctx",3],["app",3]],["elevationcontours",3]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[["app",3],["buildingid",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],null,[[["app",3],["buildingid",3]],["bool",15]],[[],["result",4]],[[["gfxctx",3],["app",3]]],null,[[["gfxctx",3]]],[[["eventctx",3],["app",3]],["option",4,[["layeroutcome",4]]]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["app",3]],["favorites",3]],[[],["option",4,[["str",15]]]],[[["eventctx",3],["app",3]],["showfavorites",3]],null,[[["app",3]],["string",3]],[[["app",3],["buildingid",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[["eventctx",3],["app",3]],["static",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["eventctx",3],["app",3]],["static",3]],[[]],[[]],[[]],[[]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],null,null,[[["gfxctx",3]]],[[["gfxctx",3]]],[[["eventctx",3],["app",3]],["static",3]],[[["eventctx",3],["app",3]],["option",4,[["layeroutcome",4]]]],[[["eventctx",3],["app",3]],["option",4,[["layeroutcome",4]]]],[[]],[[]],[[["eventctx",3],["app",3]],["static",3]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["option",4,[["str",15]]]],[[],["option",4,[["str",15]]]],null,[[["eventctx",3],["app",3]],["bikeactivity",3]],[[["eventctx",3],["colordiscrete",3],["str",15],["string",3],["widget",3]],["static",3]],[[["eventctx",3],["app",3]],["static",3]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["seir",4]],[[],["options",3]],[[]],[[]],[[["gfxctx",3],["app",3]]],null,[[["gfxctx",3]]],[[["seir",4]],["bool",15]],[[["options",3]],["bool",15]],[[["eventctx",3],["app",3]],["option",4,[["layeroutcome",4]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3],["options",3],["option",4,[["widget",3]]]],["panel",3]],[[],["option",4,[["str",15]]]],[[["options",3]],["bool",15]],[[["eventctx",3],["app",3],["options",3]],["pandemic",3]],[[],["options",3]],null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["loc",4]],[[]],[[["loc",4]],["ordering",4]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],null,null,[[["gfxctx",3]]],[[["gfxctx",3]]],[[["loc",4]],["bool",15]],[[],["bool",15]],[[["eventctx",3],["app",3]],["option",4,[["layeroutcome",4]]]],[[["eventctx",3],["app",3]],["option",4,[["layeroutcome",4]]]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[],["option",4,[["str",15]]]],[[],["option",4,[["str",15]]]],[[["loc",4]],["bool",15]],[[["eventctx",3],["app",3],["bool",15],["bool",15],["bool",15],["bool",15],["bool",15]],["occupancy",3]],[[["eventctx",3],["app",3]],["efficiency",3]],[[["parkingspot",4]],["loc",4]],null,null,null,[[["loc",4]],["option",4,[["ordering",4]]]],null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["options",3]],[[]],[[["gfxctx",3],["app",3]]],null,[[["gfxctx",3]]],[[["options",3]],["bool",15]],[[["eventctx",3],["app",3]],["option",4,[["layeroutcome",4]]]],[[]],[[]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3],["options",3],["option",4,[["widget",3]]]],["panel",3]],[[],["option",4,[["str",15]]]],[[["options",3]],["bool",15]],[[["eventctx",3],["app",3],["options",3]],["populationmap",3]],[[],["options",3]],null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["options",3]],[[]],[[["gfxctx",3],["app",3]]],null,[[["gfxctx",3]]],[[["options",3]],["bool",15]],[[["eventctx",3],["app",3]],["option",4,[["layeroutcome",4]]]],[[]],[[]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3],["options",3],["option",4,[["widget",3]]],["usize",15]],["panel",3]],null,[[],["option",4,[["str",15]]]],[[["options",3]],["bool",15]],[[["eventctx",3],["app",3],["options",3]],["problemmap",3]],[[["app",3]],["options",3]],[[["app",3]],["options",3]],null,null,[[["tripinfo",3],["time",3],["problem",4]],["bool",15]],null,null,null,null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,[[["map",3],["intersectionid",3]],["bool",15]],null,[[["map",3]],["vec",3,[["polygon",3]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["map",3],["vec",3]],["vec",3]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],null,null,null,null,null,[[["gfxctx",3]]],[[["gfxctx",3]]],[[["gfxctx",3]]],[[["gfxctx",3]]],[[["gfxctx",3]]],null,[[["eventctx",3],["app",3]],["option",4,[["layeroutcome",4]]]],[[["eventctx",3],["app",3]],["option",4,[["layeroutcome",4]]]],[[["eventctx",3],["app",3]],["option",4,[["layeroutcome",4]]]],[[["eventctx",3],["app",3]],["option",4,[["layeroutcome",4]]]],[[["eventctx",3],["app",3]],["option",4,[["layeroutcome",4]]]],[[["app",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[],["option",4,[["str",15]]]],[[],["option",4,[["str",15]]]],[[],["option",4,[["str",15]]]],[[],["option",4,[["str",15]]]],[[],["option",4,[["str",15]]]],[[["eventctx",3],["app",3]],["backpressure",3]],[[["eventctx",3],["app",3],["btreeset",3,[["agenttype",4]]]],["throughput",3]],[[["eventctx",3],["app",3]],["comparethroughput",3]],[[["eventctx",3],["app",3]],["trafficjams",3]],[[["eventctx",3],["app",3]],["delay",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["gfxctx",3],["app",3]]],null,[[["gfxctx",3]]],[[["eventctx",3],["app",3]],["option",4,[["layeroutcome",4]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["option",4,[["str",15]]]],[[["eventctx",3],["app",3],["bool",15],["bool",15],["bool",15]],["transitnetwork",3]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["eventctx",3],["app",3],["vec",3,[["str",15]]]],["box",3,[["state",8]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3]],["box",3,[["state",8]]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3],["permanentmapedits",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["option",4,[["string",3]]]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["str",15],["panel",3]],["transition",4,[["app",3]]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[["app",3],["id",4]],["vec",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["app",3],["gameplaymode",4],["box",3,[["fnonce",8]]]],["box",3,[["state",8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["actions",3]],null,null,[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3],["id",4],["string",3],["bool",15]],["transition",4,[["app",3]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["gameplaymode",4]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["app",3]],["bool",15]],[[],["bool",15]],null,null,[[["eventctx",3]],["transition",4,[["app",3]]]],null,null,null,null,[[["eventctx",3],["app",3]]],[[["eventctx",3],["app",3],["gameplaystate",8]],["sandboxcontrols",3]],[[["eventctx",3],["app",3]]],null,[[["eventctx",3],["app",3]]],null,[[["app",3],["gameplaymode",4]],["box",3,[["state",8]]]],null,null,[[["app",3]],["box",3,[["state",8]]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["dashtab",4]],[[]],null,[[["dashtab",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3]],["box",3,[["state",8]]]],null,null,null,[[["eventctx",3],["app",3]],["widget",3]],null,null,[[["app",3],["panel",3]],["option",4,[["dashtab",4]]]],[[]],null,[[["eventctx",3],["app",3],["panel",3]],["option",4,[["transition",4,[["app",3]]]]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["blockselection",4],["eventctx",3],["app",3]]],[[["intersection",3],["bordertype",4],["map",3]],["polygon",3]],null,[[],["blockselection",4]],[[]],[[["block",3]],["vec",3]],null,null,null,[[["gfxctx",3],["app",3]]],null,[[["blockselection",4]],["bool",15]],[[["filter",3]],["bool",15]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["app",3],["timer",3]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3]],["panel",3]],null,null,[[["blockselection",4]],["bool",15]],[[["filter",3]],["bool",15]],[[["eventctx",3],["app",3]],["box",3,[["state",8]]]],null,[[["app",3]],["vec",3,[["loop",3]]]],null,[[["option",4,[["panelstate",3]]],["eventctx",3],["app",3]]],null,null,[[]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["app",3],["usize",15]],["transition",4,[["app",3]]]],[[["gfxctx",3],["app",3],["tripid",3],["geombatch",3]]],[[["gfxctx",3],["app",3],["panel",3],["geombatch",3],["option",4,[["drawable",3]]]]],null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["vec",3]],["vec",3]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3]],["box",3,[["state",8]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["gfxctx",3],["app",3]]],null,null,[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3]],["table",3,[["app",3],["entry",3],["filters",3]]]],null,null,null,null,[[["eventctx",3],["app",3]],["box",3,[["state",8]]]],null,[[["eventctx",3],["app",3]],["vec",3,[["entry",3]]]],[[["eventctx",3],["app",3],["table",3]],["drawable",3]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[["gfxctx",3],["app",3]]],null,null,null,[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["app",3]],["table",3,[["app",3],["entry",3],["filters",3]]]],[[["eventctx",3],["app",3]],["box",3,[["state",8]]]],null,null,null,[[["app",3]],["vec",3,[["entry",3]]]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["app",3]],["result",6,[["string",3]]]],[[]],[[]],[[],["bool",15]],null,[[["tripmode",4]],["bool",15]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["app",3],["bool",15]],["box",3,[["state",8]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["rc",3,[["refcell",3,[["option",4,[["polygon",3]]]]]]]],["box",3,[["state",8]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[["app",3],["timer",3]],["hashmap",3,[["intersectionid",3],["demand",3]]]],null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["time",3]],["counter",3,[["movementid",3]]]],[[["gfxctx",3],["app",3]]],[[],["drawbaselayer",4]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3]],["box",3,[["state",8]]]],null,null,[[["eventctx",3],["app",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],null,[[["eventctx",3],["app",3],["filter",3]],["widget",3]],[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["app",3]],["result",6,[["string",3]]]],[[]],[[]],[[["app",3]],["vec",3]],[[],["bool",15]],null,[[["tripmode",4]],["bool",15]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3],["filter",3]],["panel",3]],null,[[],["filter",3]],[[["eventctx",3],["app",3],["filter",3]],["box",3,[["state",8]]]],null,[[["duration",3],["duration",3]],["f64",15]],[[["eventctx",3],["app",3],["filter",3]],["widget",3]],[[["eventctx",3],["app",3],["filter",3]],["widget",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[],["vec",3,[["problemtype",4]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["vec",3,[["isize",15]]]],null,null,[[],["problemtype",4]],[[]],null,[[],["usize",15]],[[],["colorscale",3]],[[["eventctx",3],["app",3],["matrixoptions",3]],["widget",3]],null,[[["problemtype",4]],["bool",15]],[[["app",3]],["usize",15]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[["problem",4]]],[[]],[[["usize",15],["usize",15]],["usize",15]],[[],["bool",15]],[[["tripmode",4]],["bool",15]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["vec",3],["vec",3]],["matrix",3]],[[["eventctx",3],["app",3],["vec",3]],["widget",3]],[[]],null,null,null,[[["app",3],["problemtype",4]],["vec",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["gfxctx",3],["app",3]]],null,null,null,null,null,null,null,[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],null,[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["app",3]],["table",3,[["app",3],["cancelledtrip",3],["filters",3]]]],[[["app",3]],["table",3,[["app",3],["finishedtrip",3],["filters",3]]]],[[["app",3]],["table",3,[["app",3],["unfinishedtrip",3],["filters",3]]]],null,null,null,null,null,null,[[["eventctx",3],["app",3]]],null,null,null,null,[[["app",3]]],null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["mapedits",3]],["bool",15]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["eventctx",3],["str",15]],["widget",3]],null,null,[[],["gameplaymode",4]],[[]],[[["gameplaymode",4]],["ordering",4]],null,[[["box",3]],["result",4,[["box",3,[["gameplaystate",8]]],["box",3]]]],[[],["option",4]],[[["rc",3]],["result",4,[["rc",3,[["gameplaystate",8]]],["rc",3]]]],[[],["option",4]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],[[["gameplaymode",4]],["bool",15]],[[],["bool",15]],[[["eventctx",3],["app",3],["sandboxcontrols",3],["actions",3]],["option",4,[["transition",4,[["app",3]]]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],null,null,[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["eventctx",3],["app",3]],["box",3,[["gameplaystate",8]]]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["bool",15]],[[],["mapname",3]],[[["gameplaymode",4]],["bool",15]],[[["eventctx",3],["string",3],["gameplaymode",4],["option",4,[["gameplaymode",4]]]],["box",3,[["state",8]]]],null,[[["app",3]]],null,[[["gameplaymode",4]],["option",4,[["ordering",4]]]],null,[[["eventctx",3],["app",3]]],null,[[["app",3],["xorshiftrng",3],["timer",3]],["loadscenario",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3],["sandboxcontrols",3],["actions",3]],["option",4,[["transition",4,[["app",3]]]]]],[[["app",3]],["option",4]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["string",3],["bool",15]],["box",3,[["gameplaystate",8]]]],[[["eventctx",3],["app",3],["str",15],["panel",3]],["transition",4,[["app",3]]]],null,[[["eventctx",3],["app",3]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["eventctx",3],["app",3],["gameplaymode",4]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["gameplaymode",4]],["box",3,[["state",8]]]],[[["gameplaymode",4]],["box",3,[["fn",8]]]],null,[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3],["sandboxcontrols",3],["actions",3]],["option",4,[["transition",4,[["app",3]]]]]],[[["eventctx",3],["app",3],["gameplaymode",4],["duration",3],["duration",3],["duration",3]],["box",3,[["state",8]]]],[[]],[[["app",3]]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["app",3],["origpersonid",3],["duration",3]],["box",3,[["gameplaystate",8]]]],null,null,[[["eventctx",3],["app",3]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["eventctx",3],["app",3],["gameplaymode",4]],["box",3,[["state",8]]]],[[["eventctx",3]],["widget",3]],null,[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3],["sandboxcontrols",3],["actions",3]],["option",4,[["transition",4,[["app",3]]]]]],[[["eventctx",3],["app",3],["gameplaymode",4],["bool",15]],["box",3,[["state",8]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3]],["box",3,[["gameplaystate",8]]]],[[["app",3]]],[[["eventctx",3],["app",3]]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[["app",3],["id",4]],["vec",3]],null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3],["sandboxcontrols",3],["actions",3]],["option",4,[["transition",4,[["app",3]]]]]],[[["eventctx",3],["app",3],["id",4],["str",15]],["transition",4,[["app",3]]]],[[]],[[]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3]],["box",3,[["gameplaystate",8]]]],[[["eventctx",3],["app",3],["str",15]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["str",15],["panel",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]]],[[["intersectionid",3],["app",3]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["obj",3]],[[]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3]]],[[["obj",3]],["bool",15]],[[],["bool",15]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["obj",3]],["bool",15]],[[["eventctx",3]],["selectrectangle",3]],[[["app",3],["polygon",3]],["area",3]],[[["eventctx",3]],["box",3,[["state",8]]]],null,null,null,null,[[["eventctx",3],["app",3]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["result",4]],[[]],[[["eventctx",3]],["transition",4,[["app",3]]]],[[["eventctx",3]],["transition",4,[["app",3]]]],[[["map",3],["string",3],["timer",3]],["result",6,[["string",3]]]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3],["option",4,[["buildingid",3]]]],["box",3,[["state",8]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["tripmode",4],["time",3],["time",3]],["usize",15]],null,null,[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3],["sandboxcontrols",3],["actions",3]],["option",4,[["transition",4,[["app",3]]]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],null,[[]],[[]],[[]],[[]],[[]],[[["app",3]]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,null,[[["app",3]],["counttrips",3]],[[["eventctx",3],["app",3],["str",15],["vec",3,[["scenariomodifier",4]]]],["box",3,[["gameplaystate",8]]]],[[["eventctx",3],["string",3],["vec",3,[["scenariomodifier",4]]]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["string",3],["vec",3,[["scenariomodifier",4]]]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["str",15],["panel",3]],["transition",4,[["app",3]]]],[[["app",3]]],null,null,[[["eventctx",3],["app",3]]],[[["eventctx",3],["app",3]]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["app",3],["id",4]],["vec",3]],null,[[["screenpt",3]],["message",3]],null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["i64",15]],["osmid",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],null,[[],["tutorialpointer",3]],[[],["task",4]],[[]],[[]],[[["tutorialpointer",3]],["ordering",4]],null,[[["box",3,[["fn",8]]]],["stage",3]],null,[[["gfxctx",3],["app",3]]],[[["box",3,[["fn",8]]]],["message",3]],[[["tutorialpointer",3]],["bool",15]],[[["task",4]],["bool",15]],[[],["bool",15]],[[["eventctx",3],["app",3],["sandboxcontrols",3],["actions",3]],["option",4,[["transition",4,[["app",3]]]]]],[[["eventctx",3],["app",3],["id",4],["str",15]],["transition",4,[["app",3]]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["str",15]],["message",3]],null,[[["eventctx",3],["app",3]]],[[["eventctx",3],["app",3],["sandboxcontrols",3],["tutorialstate",3]],["option",4,[["transition",4,[["app",3]]]]]],null,null,null,null,[[],["task",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3]],["box",3,[["state",8]]]],[[],["str",15]],null,[[],["message",3]],[[["map",3]],["scenariogenerator",3]],[[["eventctx",3],["app",3],["tutorialpointer",3]],["box",3,[["gameplaystate",8]]]],null,[[["eventctx",3],["app",3]],["box",3,[["gameplaystate",8]]]],[[["eventctx",3],["bool",15]],["panel",3]],[[],["option",4,[["message",3]]]],null,[[["message",3]],["stage",3]],null,[[["tutorialpointer",3]],["bool",15]],[[["task",4]],["stage",3]],[[["text",3]],["message",3]],[[["eventctx",3],["app",3]],["tutorialstate",3]],[[["usize",15],["usize",15]],["tutorialpointer",3]],[[]],null,null,null,[[["tutorialpointer",3]],["option",4,[["ordering",4]]]],[[["task",4]],["option",4,[["ordering",4]]]],null,[[]],[[["eventctx",3],["app",3]]],[[]],[[["app",3],["tutorialpointer",3]],["option",4,[["scenariogenerator",3]]]],[[["scenariogenerator",3]],["stage",3]],[[["map",3]],["vec",3,[["scenariogenerator",3]]]],null,[[],["stage",3]],null,null,[[["eventctx",3],["app",3]],["box",3,[["state",8]]]],null,[[]],[[]],null,[[["eventctx",3],["tutorialstate",3]],["text",3]],[[["app",3],["tutorialstate",3]],["transition",4,[["app",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["id",4],["option",4,[["f64",15]]]],["stage",3]],null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["gfxctx",3],["app",3]]],[[]],[[["app",3]],["bool",15]],[[["app",3]],["bool",15]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3]],["vec",3,[["widget",3]]]],[[["eventctx",3],["app",3]],["widget",3]],[[["eventctx",3],["app",3]],["widget",3]],[[["eventctx",3],["app",3]],["panel",3]],[[["eventctx",3],["app",3]],["widget",3]],[[["eventctx",3],["app",3],["panel",3]]],[[["eventctx",3],["app",3],["str",15]],["option",4,[["transition",4,[["app",3]]]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["gfxctx",3]]],[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3]],["option",4,[["transition",4,[["app",3]]]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["usize",15]],["widget",3]],null,[[],["routepreview",3]],[[["eventctx",3],["btreeset",3,[["intersectionid",3]]]],["box",3,[["state",8]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[],["speedsetting",4]],[[]],[[["eventctx",3],["app",3]],["widget",3]],[[["gfxctx",3]]],[[["speedsetting",4]],["bool",15]],[[["eventctx",3],["app",3],["option",4,[["gameplaymode",4]]]],["option",4,[["transition",4,[["app",3]]]]]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["bool",15]],[[["eventctx",3],["app",3]],["timepanel",3]],null,null,[[["speedsetting",4]],["option",4,[["ordering",4]]]],[[["eventctx",3],["app",3]]],null,[[["eventctx",3],["app",3]]],[[["eventctx",3],["app",3],["speedsetting",4]]],null,null,[[]],[[["eventctx",3],["app",3]],["widget",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[["vec",3],["f64",15],["f64",15]],["polygon",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["eventctx",3],["duration",3]],["widget",3]],[[["eventctx",3],["time",3]],["widget",3]],[[["usize",15],["usize",15]],["string",3]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3],["app",3]]],[[],["drawbaselayer",4]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["app",3],["option",4,[["gameplaymode",4]]]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["time",3],["option",4,[["duration",3]]]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3]]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[["tab",4]],["bool",15]],null,[[]],[[["eventctx",3],["app",3],["str",15]],["option",4,[["transition",4,[["app",3]]]]]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["app",3],["widget",3]],["panel",3]],null,null,[[],["layers",3]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["color",3]],[[],["color",3]],[[],["color",3]],[[],["color",3]],[[["gfxctx",3]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["road",3]],["bool",15]],[[["eventctx",3],["app",3]],["drawnetworklayer",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["app",3],["layers",3]],["box",3,[["state",8]]]],[[],["layers",3]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[["gfxctx",3],["app",3]]],null,[[["eventctx",3],["app",3]],["option",4,[["transition",4,[["app",3]]]]]],null,[[]],[[["eventctx",3],["app",3],["str",15]]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[],["screenpt",3]],[[["color",3],["str",15]],["buttonbuilder",3]],[[["eventctx",3],["app",3]],["widget",3]],[[["eventctx",3]],["widget",3]],null,null,[[["eventctx",3],["app",3]],["layers",3]],null,null,[[["eventctx",3],["app",3]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["eventctx",3],["app",3]]],[[]],[[["eventctx",3]]],null,null,null,null,null,null,null,null,null,[[["candidatetrip",3]],["bool",15]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[],["text",3]],[[["gfxctx",3],["app",3]]],null,null,[[["eventctx",3]]],null,[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["panel",3]],["filters",3]],[[["eventctx",3],["app",3],["scenario",3],["timer",3]],["modeshiftdata",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["app",3]],["panel",3]],null,null,[[["eventctx",3],["app",3],["layers",3]],["box",3,[["state",8]]]],null,[[["usize",15],["usize",15]],["f64",15]],[[["eventctx",3],["app",3],["timer",3]]],null,[[],["layers",3]],[[["eventctx",3]],["widget",3]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["app",3],["vec",3,[["roadid",3]]],["option",4,[["buffertype",4]]]],["vec",3,[["string",3]]]],null,[[["editroad",3],["option",4,[["buffertype",4]]],["drivingside",4]]],[[["eventctx",3],["app",3],["layers",3]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3]],["widget",3]],null,[[],["layers",3]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["eventctx",3],["app",3]]],[[]],null,null,null,null,null,null,null,[[["app",3]],["option",4]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,[[["eventctx",3],["app",3]],["widget",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["id",4]],[[],["routingpreferences",3]],[[]],[[]],[[]],[[["gfxctx",3],["app",3]]],[[["id",4]],["bool",15]],[[["routingpreferences",3]],["bool",15]],[[],["bool",15]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],null,[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["u64",15]],[[]],null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[],["tripmanagement",3]],[[],["str",15]],[[["id",4]],["bool",15]],[[["routingpreferences",3]],["bool",15]],[[["eventctx",3],["app",3],["layers",3]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3]]],[[["eventctx",3],["app",3]]],null,[[],["routingparams",3]],[[["eventctx",3],["app",3]]],[[],["layers",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["eventctx",3],["app",3],["widget",3]]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["eventctx",3],["app",3],["vec",3,[["tripendpoint",4]]],["routedetails",3],["routingpreferences",3]],["builtroute",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["app",3],["routestats",3],["routestats",3],["routingpreferences",3]],["text",3]],null,null,null,[[["gfxctx",3],["panel",3]]],null,null,null,null,[[["routestats",3]],["bool",15]],[[["eventctx",3],["app",3],["outcome",4],["panel",3]],["option",4,[["transition",4,[["app",3]]]]]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3],["vec",3,[["tripendpoint",4]]]],["builtroute",3]],[[["eventctx",3],["app",3],["routestats",3],["vec",3]],["widget",3]],[[["routestats",3]],["bool",15]],[[["eventctx",3],["app",3],["vec",3,[["tripendpoint",4]]],["color",3],["option",4,[["color",3]]],["routingpreferences",3]],["builtroute",3]],null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[4,"Mode"],[3,"Args"],[3,"Setup"],[13,"LoadKML"],[13,"CompareCounts"],[13,"Gameplay"],[3,"PerMap"],[3,"App"],[3,"ShowLayers"],[3,"ShowEverything"],[3,"SessionState"],[3,"PerObjectActions"],[3,"FindDelayedIntersections"],[3,"Flags"],[8,"ShowObject"],[3,"Challenge"],[3,"HighScore"],[3,"ChallengesPicker"],[4,"Layout"],[3,"CutsceneBuilder"],[3,"Scene"],[3,"CutscenePlayer"],[3,"ShowMessage"],[13,"Extra"],[3,"PrebakeSummary"],[3,"CommonState"],[4,"Mode"],[3,"Route"],[3,"RouteSketcher"],[13,"Hovering"],[13,"Dragging"],[4,"Mode"],[3,"RoadSelector"],[13,"Route"],[3,"ShareProposal"],[3,"UploadedProposals"],[3,"Warping"],[3,"DebugWarp"],[3,"Actions"],[3,"DebugMode"],[3,"SearchResults"],[3,"ScreenshotTest"],[3,"Viewer"],[3,"Obj"],[3,"Blockfinder"],[3,"OneBlock"],[4,"Source"],[3,"Floodfiller"],[13,"Floodfill"],[3,"ObjectDebugger"],[3,"PathCounter"],[4,"Item"],[3,"PolygonDebugger"],[13,"Point"],[13,"Triangle"],[13,"Polygon"],[3,"RouteExplorer"],[3,"AllRoutesExplorer"],[3,"PathCostDebugger"],[3,"BulkSelect"],[3,"UberTurnPicker"],[3,"UberTurnViewer"],[3,"DevToolsMode"],[3,"Filters"],[3,"CollisionsViewer"],[3,"GenericCompareCounts"],[3,"PopularDestinations"],[3,"ViewKML"],[3,"Object"],[4,"Obj"],[3,"PolygonEditor"],[13,"Point"],[3,"ScenarioManager"],[3,"MarkerID"],[3,"StoryMapEditor"],[3,"StoryMap"],[3,"Marker"],[3,"EditingMarker"],[3,"DrawFreehand"],[3,"Lasso"],[3,"RecordedStoryMap"],[3,"EditMode"],[3,"SaveEdits"],[3,"LoadEdits"],[3,"ConfirmDiscard"],[3,"SelectSegments"],[3,"RoadEditor"],[3,"RouteEditor"],[3,"StopSignEditor"],[3,"TrafficSignalEditor"],[3,"BundleEdits"],[3,"ChangeDuration"],[3,"Snapper"],[3,"Record"],[3,"ShowAbsolute"],[3,"ShowRelative"],[3,"TuneRelative"],[3,"SignalPicker"],[3,"PreviewTrafficSignal"],[3,"ZoneEditor"],[4,"Tab"],[8,"ContextualActions"],[3,"InfoPanel"],[3,"Details"],[3,"DataOptions"],[13,"PersonTrips"],[13,"PersonBio"],[13,"PersonSchedule"],[13,"TransitVehicleStatus"],[13,"TransitStop"],[13,"TransitRoute"],[13,"ParkedCar"],[13,"BldgInfo"],[13,"BldgPeople"],[13,"ParkingLot"],[13,"Crowd"],[13,"Area"],[13,"IntersectionInfo"],[13,"IntersectionTraffic"],[13,"IntersectionDelay"],[13,"IntersectionDemand"],[13,"IntersectionArrivals"],[13,"IntersectionTrafficSignal"],[13,"LaneInfo"],[13,"LaneDebug"],[13,"LaneTraffic"],[3,"OpenTrip"],[4,"LayerOutcome"],[3,"PickLayer"],[8,"Layer"],[13,"Replace"],[13,"Transition"],[3,"SteepStreets"],[3,"ElevationContours"],[3,"Favorites"],[3,"ShowFavorites"],[3,"Static"],[3,"BikeActivity"],[4,"Seir"],[3,"Pandemic"],[3,"Options"],[4,"Loc"],[3,"Occupancy"],[3,"Efficiency"],[13,"Road"],[13,"Bldg"],[13,"Lot"],[3,"PopulationMap"],[3,"Options"],[3,"ProblemMap"],[3,"Options"],[3,"Jam"],[3,"Throughput"],[3,"Backpressure"],[3,"CompareThroughput"],[3,"TrafficJams"],[3,"Delay"],[3,"TransitNetwork"],[3,"TitleScreen"],[3,"Proposals"],[4,"LoadStage"],[3,"Actions"],[3,"SandboxMode"],[3,"SandboxControls"],[3,"BackToTitleScreen"],[3,"SandboxLoader"],[13,"GotScenario"],[13,"LoadingPrebaked"],[13,"GotPrebaked"],[4,"DashTab"],[4,"BorderType"],[4,"BlockSelection"],[3,"CommuterPatterns"],[3,"PanelState"],[3,"Block"],[3,"Loop"],[3,"Filter"],[13,"Unlocked"],[13,"Locked"],[3,"ActiveTraffic"],[3,"TransitRoutes"],[3,"ModeShift"],[3,"Entry"],[3,"Filters"],[3,"ParkingOverhead"],[3,"Entry"],[3,"Filters"],[3,"RiskSummaries"],[3,"Filter"],[3,"RectangularSelector"],[3,"Demand"],[3,"TrafficSignalDemand"],[3,"TravelTimes"],[3,"Filter"],[4,"ProblemType"],[3,"CLEAR_COLOR_SCALE"],[3,"Matrix"],[3,"MatrixOptions"],[8,"TripProblemFilter"],[3,"TripTable"],[3,"FinishedTrip"],[3,"CancelledTrip"],[3,"UnfinishedTrip"],[3,"Filters"],[4,"GameplayMode"],[4,"LoadScenario"],[3,"FinalScore"],[8,"GameplayState"],[13,"Freeform"],[13,"PlayScenario"],[13,"OptimizeCommute"],[13,"Actdev"],[13,"Tutorial"],[13,"Path"],[13,"Scenario"],[13,"Future"],[3,"Actdev"],[3,"About"],[3,"OptimizeCommute"],[3,"FixTrafficSignals"],[3,"Freeform"],[3,"ChangeScenario"],[3,"Obj"],[4,"Mode"],[3,"AreaSpawner"],[3,"SelectRectangle"],[3,"Area"],[13,"DrawingArea"],[13,"PickingDestination"],[3,"Input"],[3,"AgentSpawner"],[3,"PlayScenario"],[3,"EditScenarioModifiers"],[3,"ChangeMode"],[3,"DepartureSummary"],[3,"CountTrips"],[4,"Task"],[3,"Message"],[3,"Tutorial"],[3,"Stage"],[3,"TutorialState"],[3,"TutorialPointer"],[3,"MinimapController"],[3,"RoutePreview"],[3,"TrafficRecorder"],[4,"SpeedSetting"],[3,"TimePanel"],[3,"JumpToTime"],[3,"TimeWarpScreen"],[4,"Tab"],[8,"TakeLayers"],[3,"DEDICATED_TRAIL"],[3,"PROTECTED_BIKE_LANE"],[3,"PAINTED_BIKE_LANE"],[3,"GREENWAY"],[3,"DrawNetworkLayer"],[3,"ExploreMap"],[3,"Layers"],[3,"ModeShiftData"],[3,"Results"],[3,"Filters"],[3,"ShowGaps"],[3,"CandidateTrip"],[3,"NetworkGaps"],[3,"QuickSketch"],[4,"ID"],[3,"TripPlanner"],[3,"RoutingPreferences"],[13,"AltRoute"],[13,"Waypoint"],[3,"RouteDetails"],[3,"BuiltRoute"],[3,"RouteStats"]]},\
"geom":{"doc":"","t":[12,12,12,12,12,12,12,12,12,12,3,4,3,3,3,3,3,17,3,3,3,8,3,3,3,3,13,13,13,13,13,13,3,3,3,3,3,3,4,3,3,13,3,0,11,11,11,11,12,12,0,12,0,11,11,11,11,0,12,11,11,5,0,0,0,11,11,11,11,10,12,0,10,12,12,11,11,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,0,12,0,0,0,12,12,12,12,12,12,12,0,12,12,11,5,0,0,0,11,11,10,12,12,5,11,11,11,11,11,11,11,12,12,12,12,11,12,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,17,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,5,12,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,12,11,11,12,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,5,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,17,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,10,10,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,12,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","0","0","0","0","0","0","0","1","1","Angle","ArrowCap","Bounds","Circle","CornerRadii","Distance","Duration","EPSILON_DIST","FindClosest","GPSBounds","HashablePt2D","HgramValue","Histogram","InfiniteLine","Line","LonLat","Max","Mean","Min","P50","P90","P99","Percent","PolyLine","Polygon","Pt2D","Ring","Speed","Statistic","Time","Triangle","Triangle","UnitFmt","angle","borrow","borrow","borrow_mut","borrow_mut","bottom_left","bottom_right","bounds","center","circle","clone","clone","clone_into","clone_into","conversions","count","default","deserialize","deserialize_f64","distance","duration","find_closest","fmt","from","from","from","from_u64","geometries","gps","hgram_zero","histogram","indices","into","into","latitude","length","line","longitude","max","max_lat","max_lon","max_x","max_y","metric","min","min_lat","min_lon","min_x","min_y","percent","points","polygon","polyline","pt","pt1","pt2","pt3","pts","pts","quadtree","radius","ring","rings","round_durations","serialize","serialize_f64","speed","stats","time","to_owned","to_owned","to_u64","top_left","top_right","trim_f64","try_from","try_from","try_into","try_into","type_id","type_id","uniform","x","x_nan","y","y_nan","zero","0","Angle","ZERO","add","approx_eq","approx_parallel","average","borrow","borrow_mut","clone","clone_into","degrees","deserialize","eq","fmt","fmt","from","into","invert_y","ne","neg","new_rads","normalized_degrees","normalized_radians","opposite","partial_cmp","reorient","rotate_degs","serialize","shortest_rotation_towards","simple_shortest_rotation_towards","to_owned","to_string","try_from","try_into","type_id","Bounds","GPSBounds","add_buffer","as_bbox","borrow","borrow","borrow_mut","borrow_mut","center","clone","clone","clone_into","clone_into","contains","contains","convert","convert_back","deserialize","deserialize","eq","eq","fmt","fmt","from","from","from","from","get_max_world_pt","get_rectangle","height","into","into","max_lat","max_lon","max_x","max_y","min_lat","min_lon","min_x","min_y","ne","ne","new","new","serialize","serialize","to_bounds","to_owned","to_owned","try_convert","try_from","try_from","try_into","try_into","type_id","type_id","union","update","update","width","zero","Circle","TRIANGLES_PER_CIRCLE","borrow","borrow_mut","center","clone","clone_into","contains_pt","deserialize","fmt","fmt","from","get_bounds","into","new","radius","serialize","to_outline","to_owned","to_partial_polygon","to_polygon","to_ring","to_string","try_from","try_into","type_id","pts_to_line_string","0","Distance","ZERO","abs","add","add_assign","borrow","borrow_mut","centimeters","clone","clone_into","cmp","const_meters","default","deserialize","div","div","div","eq","feet","fmt","fmt","from","from_u64","from_u64","hgram_zero","inches","inner_meters","into","meters","miles","mul","mul_assign","ne","neg","partial_cmp","round_up_for_axis","safe_percent","serialize","sqrt","sub","sub_assign","sum","to_feet","to_miles","to_owned","to_string","to_string","to_u64","to_u64","try_from","try_into","type_id","0","Duration","EPSILON","ZERO","abs","add","add_assign","borrow","borrow_mut","clone","clone_into","cmp","const_seconds","default","deserialize","div","div","epsilon_eq","eq","f64_minutes","fmt","fmt","from","from_u64","from_u64","get_parts","hgram_zero","hours","inner_seconds","into","make_intervals_for_max","milliseconds","minutes","mul","mul","ne","neg","num_minutes_rounded_up","parse","partial_cmp","realtime_elapsed","rem","round_up","seconds","serialize","sub","sub_assign","sum","to_owned","to_rounded_string","to_string","to_string","to_u64","to_u64","try_from","try_into","type_id","FindClosest","add","all_close_pts","borrow","borrow_mut","closest_pt","from","geometries","into","new","quadtree","try_from","try_into","type_id","LonLat","borrow","borrow_mut","center","clone","clone_into","cmp","deserialize","eq","fast_dist","fmt","fmt","from","gps_dist","into","latitude","longitude","ne","new","parse_geojson_polygons","parse_wkt_linestring","partial_cmp","read_osmosis_polygon","serialize","to_owned","to_pt","to_string","try_from","try_into","type_id","write_osmosis_polygon","x","y","0","0","1","1","InfiniteLine","Line","angle","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","contains_pt","crosses","deserialize","deserialize","dist_along","dist_along_of_point","eq","fmt","fmt","fmt","fmt","from","from","from_pt_angle","infinite","intersection","intersection","intersection_infinite","into","into","is_counter_clockwise","length","make_polygons","middle","must_dist_along","must_new","ne","new","percent_along","percent_along_of_point","percent_slice","points","pt1","pt2","reversed","serialize","serialize","shift_either_direction","shift_left","shift_right","slice","to_owned","to_owned","to_polyline","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unbounded_dist_along","unbounded_percent_along","0","Percent","borrow","borrow_mut","clone","clone_into","eq","fmt","from","inner","int","into","ne","of","to_owned","to_string","try_from","try_into","type_id","Polygon","Triangle","area","borrow","borrow","borrow_mut","borrow_mut","buggy_new","center","clip_polyline","clip_ring","clone","clone","clone_into","clone_into","concave_hull","contains_pt","contains_pt","convex_hull","deserialize","downsize","eq","fmt","fmt","fmt","from","from","from","from_geojson","from_geojson_bytes","from_multi","from_rings","from_triangle","get_bounds","get_outer_ring","indices","intersection","intersects","intersects_polyline","into","into","into_points","into_ring","maybe_rounded_rectangle","ne","new","pill","points","points","polylabel","precomputed","pt1","pt2","pt3","raw_for_rendering","rectangle","rectangle_centered","rectangle_two_corners","rings","rotate","rotate_around","rounded_rectangle","scale","scale_xy","serialize","simplify","strip_rings","to_geo","to_geojson","to_outline","to_owned","to_owned","to_string","transform","translate","triangles","try_from","try_from","try_into","try_into","type_id","type_id","union","union_all","union_all_into_multipolygon","with_holes","ArrowCap","MITER_THRESHOLD","PolyLine","Triangle","append","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","dashed_arrow","dashed_lines","deduping_new","deserialize","dist_along","dist_along_of_point","dummy","eq","exact_dashed_polygons","exact_slice","extend","extend_to_length","first_half","first_line","first_pt","fix_angles","fmt","fmt","force_extend","from","from","get_bounds","get_slice_ending_at","get_slice_starting_at","interpolate_points","intersection","intersection_infinite","into","into","into_points","last_line","last_pt","length","length","lines","make_arrow","make_double_arrow","make_polygons","make_polygons_with_miter_threshold","maybe_exact_slice","maybe_make_arrow","middle","must_dist_along","must_extend","must_new","must_shift_left","must_shift_right","ne","new","optionally_push","overall_angle","points","project_pt","pts","reversed","safe_get_slice_ending_at","safe_get_slice_starting_at","second_half","serialize","shift_either_direction","shift_left","shift_right","shift_with_corrections","shift_with_sharp_angles","slice","step_along","step_along_start_end","to_geo","to_geojson","to_owned","to_set","to_string","to_thick_boundary","to_thick_ring","trim_to_endpts","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_new","HashablePt2D","Pt2D","angle_to","approx_dedupe","approx_eq","borrow","borrow","borrow_mut","borrow_mut","center","clone","clone","clone_into","clone_into","cmp","deserialize","dist_to","eq","eq","fast_dist","fmt","fmt","fmt","from","from","from","from","hash","into","into","ne","new","offset","partial_cmp","project_away","raw_dist_to","serialize","simplify_rdp","to_gps","to_hashable","to_owned","to_owned","to_pt2d","to_string","try_from","try_from","try_into","try_into","type_id","type_id","x","x","x_nan","y","y","y_nan","zero","Ring","all_intersections","as_geo_linestring","borrow","borrow_mut","clone","clone_into","contains_pt","deserialize","doubles_back","eq","fmt","fmt","from","from","get_both_slices_btwn","get_shorter_slice_between","get_shorter_slice_btwn","get_slice_between","into","into_points","into_polygon","must_new","ne","new","points","polylabel","pts","serialize","split_points","to_geojson","to_outline","to_owned","to_string","translate","try_from","try_into","type_id","0","Speed","ZERO","add","borrow","borrow_mut","clone","clone_into","cmp","const_meters_per_second","deserialize","div","eq","fmt","from","from_dist_time","inner_meters_per_second","into","km_per_hour","meters_per_second","miles_per_hour","mul","mul","ne","neg","partial_cmp","serialize","sub","to_owned","to_string","try_from","try_into","type_id","HgramValue","Histogram","Max","Mean","Min","P50","P90","P99","Statistic","add","all","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","count","count","default","describe","deserialize","eq","fmt","from","from","from_u64","hgram_zero","histogram","into","into","max","min","new","partial_cmp","percentile","remove","seems_eq","select","serialize","to_owned","to_owned","to_string","to_u64","try_from","try_from","try_into","try_into","type_id","type_id","0","START_OF_DAY","Time","add","add_assign","ampm_tostring","as_filename","borrow","borrow_mut","clamped_sub","clone","clone_into","cmp","default","deserialize","eq","fmt","fmt","from","get_hours","get_parts","hash","inner_seconds","into","ne","parse","partial_cmp","percent_of","round_seconds","seconds_since_midnight","serialize","sub","sub","to_owned","to_percent","to_string","try_from","try_into","type_id"],"q":["geom","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::angle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::bounds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::circle","","","","","","","","","","","","","","","","","","","","","","","","","","geom::conversions","geom::distance","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::duration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::find_closest","","","","","","","","","","","","","","geom::gps","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::line","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::percent","","","","","","","","","","","","","","","","","","","geom::polygon","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::polyline","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::pt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::ring","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::speed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::stats","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geom::time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","An angle, stored in radians.","","Represents a rectangular boundary of <code>Pt2D</code> points.","A circle, defined by a center and radius.","","A distance, in meters. Can be negative.","A duration, in seconds. Can be negative.","","A quad-tree to quickly find the closest points to some …","Represents a rectangular boundary of <code>LonLat</code> points. After …","This represents world space, NOT LonLat.","","","","A line segment.","Represents a (longitude, latitude) point.","","","","","","","Most of the time, [0, 1]. But some callers may go outside …","","","This represents world-space in meters.","Maybe a misnomer, but like a PolyLine, but closed.","In meters per second. Can be negative.","","In seconds since midnight. Can’t be negative.","","","Specifies how to stringify different geom objects.","","","","","","","","","","","","","","","Conversions between this crate and <code>geo</code>. Long-term, we …","","","","Deserializes a trimmed <code>f64</code> from an <code>i32</code>.","","","","","","","","","","","","","Groups of three indices make up the triangles","","","","","","","","","","","","Display in metric; US imperial otherwise.","","","","","","","","","","","","","","","","","","","If the polygon has holes, explicitly store all the rings …","Round <code>Duration</code>s to a whole number of seconds.","","Serializes a trimmed <code>f64</code> as an <code>i32</code> to save space.","","","","","","","","","Reduce the precision of an f64. This helps ensure …","","","","","","","","","","","","","","An angle, stored in radians.","","","True if this angle is within some degrees of another, …","True if this angle is within some degrees of another, …","Calculates the average of some angles.","","","","","Create an angle in degrees.","","","","","","","","","","Create an angle in radians.","Returns [0, 360)","Returns [0, 2pi)","Invert the direction of this angle.","","I don’t know how to describe what this does. Use for …","Rotates this angle by some degrees.","","Logically this returns [-180, 180], but keep in mind when …","Returns [-180, 180]","","","","","","Represents a rectangular boundary of <code>Pt2D</code> points.","Represents a rectangular boundary of <code>LonLat</code> points. After …","Expand the existing boundary by some distance evenly on …","Converts the boundary to the format used by <code>aabb_quadtree</code>.","","","","","The center point of this boundary.","","","","","True if the point is within the boundary.","True if the point is within the boundary.","Convert all points to map-space. The points may be outside …","Convert map-space points back to <code>LonLat</code>s. This is only …","","","","","","","","Create a boundary covering some points.","","Create a boundary covering some points.","The bottom-right corner of the boundary, in map-space.","Creates a rectangle covering this boundary.","The height of this boundary.","","","","","","","","","","","","","A boundary including no points.","A boundary including no points.","","","Converts the boundary to map-space.","","","Convert all points to map-space, failing if any points are …","","","","","","","Unions two boundaries.","Update the boundary to include this point.","Update the boundary to include this point.","The width of this boundary.","","A circle, defined by a center and radius.","","","","","","","True if the point is inside the circle.","","","","","Get the boundary containing this circle.","","Creates a circle.","","","Creates an outline around the circle, strictly contained …","","Renders some percent, between [0, 1], of the circle as a …","Renders the circle as a polygon.","Returns the ring around the circle.","","","","","","","A distance, in meters. Can be negative.","","Returns the absolute value of this distance.","","","","","Creates a distance in centimeters.","","","","","","","","","","","Creates a distance in feet.","","","","","","","Creates a distance in inches.","Returns the distance in meters. Prefer to work with …","","Creates a distance in meters.","Creates a distance in miles.","","","","","","Rounds this distance up to a higher, more “even” value …","Calculates a percentage, usually in [0.0, 1.0], of self / …","","Returns the square root of this distance.","","","","Returns the distance in feet.","Returns the distance in miles.","","Describes the distance according to formatting rules. …","","","","","","","","A duration, in seconds. Can be negative.","","","","","","","","","","","","","","","","If two durations are within this amount, they’ll print …","","Creates a duration in minutes.","","","","","","Splits the duration into (hours, minutes, seconds, …","","Creates a duration in hours.","Returns the duration in seconds. Prefer working in …","","Returns (rounded max, the boundaries)","Creates a duration in milliseconds.","Creates a duration in minutes.","","","","","Returns the duration as a number of minutes, rounded up.","Parses a duration such as “3:00” to …","","Returns the duration elapsed from this moment in real time.","","Rounds a duration up to the nearest whole number multiple.","Creates a duration in seconds.","","","","","","Shows only the largest unit (hours, minute, seconds), …","Describes the duration according to formatting rules.","","","","","","","A quad-tree to quickly find the closest points to some …","Add an object to the quadtree, remembering some key …","For every object within some distance of a query point, …","","","Finds the closest point on the existing geometry to the …","","","","Creates the quad-tree, limited to points contained in the …","","","","","Represents a (longitude, latitude) point.","","","Finds the average of a set of coordinates.","","","","","","Pretty meaningless units, for comparing distances very …","","","","Returns the Haversine distance to another point.","","","","","Note the order of arguments!","Extract polygons from a raw GeoJSON string. For …","Parses a WKT-style line-string into a list of coordinates.","","Parses a file in the …","","","Transform this to a world-space point. Can go out of …","","","","","Writes a set of points to a file in the …","Returns the longitude of this point.","Returns the latitude of this point.","","","","","","A line segment.","The angle of the line segment, from the first to the …","","","","","","","","","","Determine if two line segments intersect, but more so than …","","","Returns a point along the line segment, unless the …","","","","","","","","","","Returns an infinite line passing through this line’s two …","If two line segments intersect – including endpoints – …","Fails for parallel lines.","If the line segment intersects with an infinite line – …","","","","Length of the line segment","Returns a thick line segment.","","Equivalent to <code>self.dist_along(dist).unwrap()</code>. Use this to …","Equivalent to <code>Line::new(pt1, pt2).unwrap()</code>. Use this to …","","Creates a line segment between two points, which must not …","","","Returns a subset of this line, with two percentages along …","Returns the two points in this line segment.","Returns the first point in this line segment.","Returns the second point in this line segment.","Returns a reversed line segment","","","Perpendicularly shifts the line to the right if positive …","Perpendicularly shifts the line over to the left. Width …","Perpendicularly shifts the line over to the right. Width …","","","","Returns a polyline containing these two points.","","","","","","","","","","","","Most of the time, [0, 1]. But some callers may go outside …","","","","","","","","","","","","","","","","","","","","Usually m^2, unless the polygon is in screen-space","","","","","","","Doesn’t handle multiple crossings in and out.","","","","","","","Does this polygon contain the point either in the interior …","","","","","","","","","","","","","Extracts all polygons from raw bytes representing a …","","","","","Get the outer ring of this polygon. This should usually …","Groups of three indices make up the triangles","","Do two polygons intersect at all?","Does this polygon intersect a polyline?","","","","","Top-left at the origin. Doesn’t take Distance, because …","","","A rectangle, two sides of which are fully rounded …","The order of these points depends on the constructor! The …","","Find the “pole of inaccessibility” – the most …","","","","","","Top-left at the origin. Doesn’t take Distance, because …","","","If the polygon has holes, explicitly store all the rings …","","","Top-left at the origin. Doesn’t take Distance, because …","","","","","Remove the internal rings used for to_outline. This is …","","If the polygon is just a single outer ring, produces a …","Creates the outline around the polygon, with the thickness …","","","","","","","","","","","","","","","Union all of the polygons into one geo::MultiPolygon","","","","","","One or both args might be empty.","","","","","","","","Don’t draw the dashes too close to the ends.","First dedupes adjacent points","","","","An arbitrary placeholder value, when Option types aren’t …","","","No excess leftover distance allowed.","Glue together two polylines in order. The last point of …","If the current line is at least this long, return it. …","","","","","","","Like <code>extend</code>, but handles the last and first point not …","","","","Panics if the pt is not on the polyline. Returns None if …","Returns None if the point is the last point.","","Also return the angle of the line where the hit was found","","","","","","","","","","If the length is too short, just give up and make the …","","The resulting polygon is manually triangulated and may not …","The resulting polygon is manually triangulated and may not …","","Fail if the length is too short.","","","Like <code>extend</code>, but panics on failure.","","","","","","Extends <code>self</code> by a single point. If the new point is close …","Returns the angle from the start to end of this polyline.","","Returns the point on the polyline closest to the query.","","","Same as get_slice_ending_at, but returns None if the point …","Same as get_slice_starting_at, but returns None if the …","","","Perpendicularly shifts the polyline to the right if …","","","","","Returns the excess distance left over from the end","Walk along the PolyLine, starting <code>buffer_ends</code> from the …","Walk along the PolyLine, from <code>start_buffer</code> to …","","Produces a GeoJSON linestring, optionally mapping the …","","","","","Like make_polygons, but make sure the points actually form …","","","","","","","","Doesn’t check for duplicates. Use at your own risk.","This represents world space, NOT LonLat.","This represents world-space in meters.","","","","","","","","","","","","","","","","","","Pretty meaningless units, for comparing distances very …","","","","","","","","","","","","","","","","","","Simplifies a list of points using Ramer-Douglas-Peuckr","Can go out of bounds.","","","","","","","","","","","","","","","","","","","Maybe a misnomer, but like a PolyLine, but closed.","Be careful with the order of results. Hits on an earlier …","Print the coordinates of this ring as a <code>geo::LineString</code> …","","","","","","","Look for “bad” rings that double back on themselves. …","","","","","","","Assuming both points are somewhere along the ring, return …","","Assuming both points are somewhere along the ring, return …","","","","","","","","Find the “pole of inaccessibility” – the most …","","","Extract all PolyLines and Rings. Doesn’t handle crazy …","Produces a GeoJSON polygon, optionally mapping the …","Draws the ring with some thickness, with half of it …","","","Translates the ring by a fixed offset.","","","","","In meters per second. Can be negative.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes the speed according to formatting rules.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","None if empty","","Could implement PartialEq, but be a bit more clear how …","","","","","","","","","","","","","","","In seconds since midnight. Can’t be negative.","","","","","","","","","","","","","","","","","Rounded down. 6:59:00 is hour 6.","(hours, minutes, seconds, centiseconds)","","For RNG range generation. Don’t abuse.","","","","","","","","","","","","","","","",""],"i":[1,2,3,4,5,6,7,8,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,10,0,0,11,12,11,12,12,12,0,13,0,11,12,11,12,0,14,12,11,0,0,0,0,12,11,12,12,15,16,0,15,14,17,11,12,18,19,0,18,14,20,20,21,21,11,14,20,20,21,21,0,17,0,0,0,22,22,22,19,23,16,13,0,17,11,11,0,0,0,0,11,12,15,12,12,0,11,12,11,12,11,12,12,24,25,24,25,12,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,21,21,21,20,21,20,21,21,20,21,20,21,20,20,20,21,20,21,20,21,20,21,21,20,20,20,21,21,21,20,20,20,21,21,20,20,21,21,21,20,21,20,21,20,20,21,20,20,21,20,21,20,21,20,21,21,20,21,21,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,16,16,16,16,16,16,16,16,16,16,16,16,16,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,4,5,4,5,0,0,4,4,5,4,5,4,5,4,5,4,4,4,5,4,4,4,4,4,5,5,4,5,5,4,4,5,4,4,5,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,4,4,4,4,4,5,4,4,5,4,5,4,5,4,5,4,4,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,17,17,22,17,22,17,17,17,17,17,22,17,22,17,17,22,17,17,0,17,17,17,22,17,17,22,17,17,0,17,17,17,17,17,17,17,17,17,22,17,17,17,17,22,17,17,17,17,17,22,22,22,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,22,17,17,17,17,17,22,17,22,17,22,17,17,17,17,0,0,0,10,19,10,19,10,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,19,19,19,10,19,19,19,19,19,19,19,10,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,19,19,19,19,10,19,10,19,10,19,19,0,0,24,24,24,24,25,24,25,24,24,25,24,25,25,24,24,24,25,24,24,24,25,24,24,24,25,25,24,25,25,24,24,25,24,24,24,24,24,24,24,25,25,24,24,25,24,25,24,25,24,24,25,24,24,25,24,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,7,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,9,9,9,9,9,9,0,14,9,9,14,9,14,9,14,9,14,9,14,14,14,14,9,9,9,9,14,15,15,14,9,14,14,14,14,9,14,14,14,14,9,9,14,9,15,9,14,9,14,9,14,8,8,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,null,null,null,null,[[],["unitfmt",3]],[[],["cornerradii",3]],[[]],[[]],null,null,[[]],[[],["result",4]],[[["deserializer",8]],["result",4,[["f64",15]]]],null,null,null,[[["formatter",3]],["result",6]],[[]],[[["f64",15]]],[[]],[[["u64",15]]],null,null,[[]],null,null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[["f64",15],["serializer",8]],["result",4]],null,null,null,[[]],[[]],[[],["u64",15]],null,null,[[["f64",15]],["f64",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["f64",15]]],null,null,null,null,[[]],null,null,null,[[["angle",3]],["angle",3]],[[["angle",3],["f64",15]],["bool",15]],[[["angle",3],["f64",15]],["bool",15]],[[["vec",3,[["angle",3]]]],["angle",3]],[[]],[[]],[[],["angle",3]],[[]],[[["f64",15]],["angle",3]],[[],["result",4]],[[["angle",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["angle",3]],[[["angle",3]],["bool",15]],[[],["angle",3]],[[["f64",15]],["angle",3]],[[],["f64",15]],[[],["f64",15]],[[],["angle",3]],[[["angle",3]],["option",4,[["ordering",4]]]],[[],["angle",3]],[[["f64",15]],["angle",3]],[[],["result",4]],[[["angle",3]],["angle",3]],[[["angle",3]],["f64",15]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[["distance",3]]],[[],["rect",3]],[[]],[[]],[[]],[[]],[[],["pt2d",3]],[[],["bounds",3]],[[],["gpsbounds",3]],[[]],[[]],[[["pt2d",3]],["bool",15]],[[["lonlat",3]],["bool",15]],[[],["vec",3,[["pt2d",3]]]],[[],["vec",3,[["lonlat",3]]]],[[],["result",4]],[[],["result",4]],[[["bounds",3]],["bool",15]],[[["gpsbounds",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["bounds",3]],[[]],[[["vec",3,[["lonlat",3]]]],["gpsbounds",3]],[[],["pt2d",3]],[[],["polygon",3]],[[],["f64",15]],[[]],[[]],null,null,null,null,null,null,null,null,[[["bounds",3]],["bool",15]],[[["gpsbounds",3]],["bool",15]],[[],["bounds",3]],[[],["gpsbounds",3]],[[],["result",4]],[[],["result",4]],[[],["bounds",3]],[[]],[[]],[[],["option",4,[["vec",3,[["pt2d",3]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["bounds",3]]],[[["pt2d",3]]],[[["lonlat",3]]],[[],["f64",15]],[[]],null,null,[[]],[[]],null,[[],["circle",3]],[[]],[[["pt2d",3]],["bool",15]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["bounds",3]],[[]],[[["pt2d",3],["distance",3]],["circle",3]],null,[[],["result",4]],[[["distance",3]],["result",6,[["polygon",3]]]],[[]],[[["f64",15]],["polygon",3]],[[],["polygon",3]],[[],["ring",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["linestring",3,[["f64",15]]]],null,null,null,[[],["distance",3]],[[["distance",3]],["distance",3]],[[["distance",3]]],[[]],[[]],[[["usize",15]],["distance",3]],[[],["distance",3]],[[]],[[["distance",3]],["ordering",4]],[[["f64",15]],["distance",3]],[[],["distance",3]],[[],["result",4]],[[["distance",3]],["f64",15]],[[["f64",15]],["distance",3]],[[["speed",3]],["duration",3]],[[["distance",3]],["bool",15]],[[["f64",15]],["distance",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["u64",15]],["distance",3]],[[["u64",15]],["distance",3]],[[],["distance",3]],[[["f64",15]],["distance",3]],[[],["f64",15]],[[]],[[["f64",15]],["distance",3]],[[["f64",15]],["distance",3]],[[["f64",15]],["distance",3]],[[["f64",15]]],[[["distance",3]],["bool",15]],[[],["distance",3]],[[["distance",3]],["option",4,[["ordering",4]]]],[[],["distance",3]],[[["distance",3]],["f64",15]],[[],["result",4]],[[],["distance",3]],[[["distance",3]],["distance",3]],[[["distance",3]]],[[],["distance",3]],[[],["f64",15]],[[],["f64",15]],[[]],[[["unitfmt",3]],["string",3]],[[],["string",3]],[[],["u64",15]],[[],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,[[]],[[["duration",3]],["duration",3]],[[["duration",3]]],[[]],[[]],[[],["duration",3]],[[]],[[["duration",3]],["ordering",4]],[[["f64",15]],["duration",3]],[[],["duration",3]],[[],["result",4]],[[["f64",15]],["duration",3]],[[["duration",3]],["f64",15]],[[["duration",3]],["bool",15]],[[["duration",3]],["bool",15]],[[["f64",15]],["duration",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["u64",15]],["duration",3]],[[["u64",15]],["duration",3]],[[]],[[],["duration",3]],[[["usize",15]],["duration",3]],[[],["f64",15]],[[]],[[["usize",15]]],[[["f64",15]],["duration",3]],[[["usize",15]],["duration",3]],[[["speed",3]],["distance",3]],[[["f64",15]],["duration",3]],[[["duration",3]],["bool",15]],[[],["duration",3]],[[],["usize",15]],[[["str",15]],["result",6,[["duration",3]]]],[[["duration",3]],["option",4,[["ordering",4]]]],[[["instant",6]],["duration",3]],[[["duration",3]],["duration",3]],[[["duration",3]],["duration",3]],[[["f64",15]],["duration",3]],[[],["result",4]],[[["duration",3]],["duration",3]],[[["duration",3]]],[[],["duration",3]],[[]],[[["usize",15]],["string",3]],[[["unitfmt",3]],["string",3]],[[],["string",3]],[[],["u64",15]],[[],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[["pt2d",3],["distance",3]],["vec",3]],[[]],[[]],[[["pt2d",3],["distance",3]],["option",4]],[[]],null,[[]],[[["bounds",3]],["findclosest",3]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[],["lonlat",3]],[[],["lonlat",3]],[[]],[[["lonlat",3]],["ordering",4]],[[],["result",4]],[[["lonlat",3]],["bool",15]],[[["lonlat",3]],["notnan",3,[["f64",15]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["lonlat",3]],["distance",3]],[[]],null,null,[[["lonlat",3]],["bool",15]],[[["f64",15],["f64",15]],["lonlat",3]],[[["string",3]],["result",6,[["vec",3]]]],[[["str",15]],["option",4,[["vec",3,[["lonlat",3]]]]]],[[["lonlat",3]],["option",4,[["ordering",4]]]],[[["str",15]],["result",6,[["vec",3,[["lonlat",3]]]]]],[[],["result",4]],[[]],[[["gpsbounds",3]],["pt2d",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["str",15]],["result",6]],[[],["f64",15]],[[],["f64",15]],null,null,null,null,null,null,[[],["angle",3]],[[]],[[]],[[]],[[]],[[],["line",3]],[[],["infiniteline",3]],[[]],[[]],[[["pt2d",3]],["bool",15]],[[["line",3]],["bool",15]],[[],["result",4]],[[],["result",4]],[[["distance",3]],["result",6,[["pt2d",3]]]],[[["pt2d",3]],["option",4,[["distance",3]]]],[[["line",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["pt2d",3],["angle",3]],["infiniteline",3]],[[],["infiniteline",3]],[[["line",3]],["option",4,[["pt2d",3]]]],[[["infiniteline",3]],["option",4,[["pt2d",3]]]],[[["infiniteline",3]],["option",4,[["pt2d",3]]]],[[]],[[]],[[["pt2d",3],["pt2d",3],["pt2d",3]],["bool",15]],[[],["distance",3]],[[["distance",3]],["polygon",3]],[[],["result",6,[["pt2d",3]]]],[[["distance",3]],["pt2d",3]],[[["pt2d",3],["pt2d",3]],["line",3]],[[["line",3]],["bool",15]],[[["pt2d",3],["pt2d",3]],["result",6,[["line",3]]]],[[["f64",15]],["result",6,[["pt2d",3]]]],[[["pt2d",3]],["option",4,[["f64",15]]]],[[["f64",15],["f64",15]],["result",6,[["line",3]]]],[[],["vec",3,[["pt2d",3]]]],[[],["pt2d",3]],[[],["pt2d",3]],[[],["line",3]],[[],["result",4]],[[],["result",4]],[[["distance",3]],["line",3]],[[["distance",3]],["line",3]],[[["distance",3]],["line",3]],[[["distance",3],["distance",3]],["result",6,[["line",3]]]],[[]],[[]],[[],["polyline",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["distance",3]],["pt2d",3]],[[["f64",15]],["pt2d",3]],null,null,[[]],[[]],[[],["percent",3]],[[]],[[["percent",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[],["f64",15]],[[["usize",15]],["percent",3]],[[]],[[["percent",3]],["bool",15]],[[["usize",15],["usize",15]],["percent",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[],["f64",15]],[[]],[[]],[[]],[[]],[[["vec",3,[["pt2d",3]]]],["polygon",3]],[[],["pt2d",3]],[[["polyline",3]],["option",4,[["vec",3,[["pt2d",3]]]]]],[[["ring",3]],["option",4,[["vec",3,[["pt2d",3]]]]]],[[],["polygon",3]],[[],["triangle",3]],[[]],[[]],[[["vec",3,[["pt2d",3]]],["u32",15]],["polygon",3]],[[["pt2d",3]],["bool",15]],[[["pt2d",3]],["bool",15]],[[["vec",3,[["polygon",3]]]],["polygon",3]],[[],["result",4]],[[["vec",3,[["usize",15]]]],["vec",3,[["u16",15]]]],[[["polygon",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["polygon",3,[["f64",15]]]]],[[]],[[],["result",6,[["polygon",3]]]],[[["gpsbounds",3],["bool",15]],["result",6,[["vec",3]]]],[[["multipolygon",3,[["f64",15]]]],["vec",3,[["polygon",3]]]],[[["vec",3,[["ring",3]]]],["polygon",3]],[[["triangle",3]],["polygon",3]],[[],["bounds",3]],[[],["option",4,[["ring",3]]]],null,[[["polygon",3]],["vec",3,[["polygon",3]]]],[[["polygon",3]],["bool",15]],[[["polyline",3]],["bool",15]],[[]],[[]],[[],["vec",3,[["pt2d",3]]]],[[],["ring",3]],[[["f64",15],["f64",15],["into",8,[["cornerradii",3]]]],["option",4,[["polygon",3]]]],[[["polygon",3]],["bool",15]],[[["pt2d",3],["pt2d",3],["pt2d",3]],["triangle",3]],[[["f64",15],["f64",15]],["polygon",3]],[[],["vec",3]],null,[[],["pt2d",3]],[[["vec",3,[["pt2d",3]]],["vec",3,[["usize",15]]]],["polygon",3]],null,null,null,[[]],[[["f64",15],["f64",15]],["polygon",3]],[[["pt2d",3],["distance",3],["distance",3]],["polygon",3]],[[["pt2d",3],["pt2d",3]],["option",4,[["polygon",3]]]],null,[[["angle",3]],["polygon",3]],[[["angle",3],["pt2d",3]],["polygon",3]],[[["f64",15],["f64",15],["into",8,[["cornerradii",3]]]],["polygon",3]],[[["f64",15]],["polygon",3]],[[["f64",15],["f64",15]],["polygon",3]],[[],["result",4]],[[["f64",15]],["polygon",3]],[[],["polygon",3]],[[],["polygon",3,[["f64",15]]]],[[["option",4,[["gpsbounds",3]]]],["geometry",3]],[[["distance",3]],["result",6,[["polygon",3]]]],[[]],[[]],[[],["string",3]],[[["fn",8]],["polygon",3]],[[["f64",15],["f64",15]],["polygon",3]],[[],["vec",3,[["triangle",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["polygon",3]],["polygon",3]],[[["vec",3,[["polygon",3]]]],["polygon",3]],[[["vec",3,[["polygon",3]]]],["multipolygon",3,[["f64",15]]]],[[["ring",3],["vec",3,[["ring",3]]]],["polygon",3]],null,null,null,null,[[["vec",3,[["pt2d",3]]],["vec",3,[["pt2d",3]]]],["result",6,[["vec",3,[["pt2d",3]]]]]],[[]],[[]],[[]],[[]],[[],["polyline",3]],[[]],[[["distance",3],["distance",3],["distance",3],["arrowcap",4]],["vec",3,[["polygon",3]]]],[[["distance",3],["distance",3],["distance",3]],["vec",3,[["polygon",3]]]],[[["vec",3,[["pt2d",3]]]],["result",6,[["polyline",3]]]],[[],["result",4]],[[["distance",3]],["result",6]],[[["pt2d",3]],["option",4]],[[],["polyline",3]],[[["polyline",3]],["bool",15]],[[["distance",3],["distance",3],["distance",3]],["vec",3,[["polygon",3]]]],[[["distance",3],["distance",3]],["polyline",3]],[[["polyline",3]],["result",6,[["polyline",3]]]],[[["distance",3]],["polyline",3]],[[],["polyline",3]],[[],["line",3]],[[],["pt2d",3]],[[["polyline",3],["polyline",3]],["result",6,[["polyline",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["polyline",3]],["result",6,[["polyline",3]]]],[[]],[[]],[[],["bounds",3]],[[["pt2d",3]],["option",4,[["polyline",3]]]],[[["pt2d",3]],["option",4,[["polyline",3]]]],[[["distance",3]],["polyline",3]],[[["polyline",3]],["option",4]],[[["infiniteline",3]],["option",4,[["pt2d",3]]]],[[]],[[]],[[],["vec",3,[["pt2d",3]]]],[[],["line",3]],[[],["pt2d",3]],[[],["distance",3]],null,[[]],[[["distance",3],["arrowcap",4]],["polygon",3]],[[["distance",3],["arrowcap",4]],["polygon",3]],[[["distance",3]],["polygon",3]],[[["distance",3],["f64",15]],["polygon",3]],[[["distance",3],["distance",3]],["result",6,[["polyline",3]]]],[[["distance",3],["arrowcap",4]],["option",4,[["polygon",3]]]],[[],["pt2d",3]],[[["distance",3]]],[[["polyline",3]],["polyline",3]],[[["vec",3,[["pt2d",3]]]],["polyline",3]],[[["distance",3]],["polyline",3]],[[["distance",3]],["polyline",3]],[[["polyline",3]],["bool",15]],[[["vec",3,[["pt2d",3]]]],["result",6,[["polyline",3]]]],[[["pt2d",3]],["polyline",3]],[[],["angle",3]],[[],["vec",3]],[[["pt2d",3]],["pt2d",3]],null,[[],["polyline",3]],[[["pt2d",3]],["option",4,[["polyline",3]]]],[[["pt2d",3]],["option",4,[["polyline",3]]]],[[],["polyline",3]],[[],["result",4]],[[["distance",3]],["result",6,[["polyline",3]]]],[[["distance",3]],["result",6,[["polyline",3]]]],[[["distance",3]],["result",6,[["polyline",3]]]],[[["distance",3]],["result",6,[["polyline",3]]]],[[["distance",3],["f64",15]],["vec",3,[["pt2d",3]]]],[[["distance",3],["distance",3]],["result",6]],[[["distance",3],["distance",3]],["vec",3]],[[["distance",3],["distance",3],["distance",3]],["vec",3]],[[],["linestring",3,[["f64",15]]]],[[["option",4,[["gpsbounds",3]]]],["geometry",3]],[[]],[[]],[[],["string",3]],[[["distance",3],["distance",3]],["option",4,[["polygon",3]]]],[[["distance",3]],["ring",3]],[[["pt2d",3],["pt2d",3]],["polyline",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["vec",3,[["pt2d",3]]]],["polyline",3]],null,null,[[["pt2d",3]],["angle",3]],[[["vec",3,[["pt2d",3]]],["distance",3]],["vec",3,[["pt2d",3]]]],[[["pt2d",3],["distance",3]],["bool",15]],[[]],[[]],[[]],[[]],[[],["pt2d",3]],[[],["pt2d",3]],[[],["hashablept2d",3]],[[]],[[]],[[["hashablept2d",3]],["ordering",4]],[[],["result",4]],[[["pt2d",3]],["distance",3]],[[["pt2d",3]],["bool",15]],[[["hashablept2d",3]],["bool",15]],[[["pt2d",3]],["notnan",3,[["f64",15]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["coordinate",3,[["f64",15]]]]],[[]],[[["point",3,[["f64",15]]]]],[[]],[[]],[[]],[[]],[[["hashablept2d",3]],["bool",15]],[[["f64",15],["f64",15]],["pt2d",3]],[[["f64",15],["f64",15]],["pt2d",3]],[[["hashablept2d",3]],["option",4,[["ordering",4]]]],[[["distance",3],["angle",3]],["pt2d",3]],[[["pt2d",3]],["f64",15]],[[],["result",4]],[[["vec",3,[["pt2d",3]]],["f64",15]],["vec",3,[["pt2d",3]]]],[[["gpsbounds",3]],["lonlat",3]],[[],["hashablept2d",3]],[[]],[[]],[[],["pt2d",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["f64",15]],null,null,[[],["f64",15]],null,null,[[]],null,[[["polyline",3]],["vec",3,[["pt2d",3]]]],[[],["string",3]],[[]],[[]],[[],["ring",3]],[[]],[[["pt2d",3]],["bool",15]],[[],["result",4]],[[],["bool",15]],[[["ring",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["linestring",3,[["f64",15]]]]],[[["pt2d",3],["pt2d",3]],["option",4]],[[["pt2d",3],["pt2d",3]],["option",4,[["polyline",3]]]],[[["pt2d",3],["pt2d",3]],["option",4,[["polyline",3]]]],[[["pt2d",3],["pt2d",3],["bool",15]],["option",4,[["polyline",3]]]],[[]],[[],["vec",3,[["pt2d",3]]]],[[],["polygon",3]],[[["vec",3,[["pt2d",3]]]],["ring",3]],[[["ring",3]],["bool",15]],[[["vec",3,[["pt2d",3]]]],["result",6,[["ring",3]]]],[[],["vec",3]],[[],["pt2d",3]],null,[[],["result",4]],[[],["result",6]],[[["option",4,[["gpsbounds",3]]]],["geometry",3]],[[["distance",3]],["polygon",3]],[[]],[[],["string",3]],[[["f64",15],["f64",15]],["ring",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[["speed",3]],["speed",3]],[[]],[[]],[[],["speed",3]],[[]],[[["speed",3]],["ordering",4]],[[["f64",15]],["speed",3]],[[],["result",4]],[[["speed",3]],["f64",15]],[[["speed",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[["distance",3],["duration",3]],["speed",3]],[[],["f64",15]],[[]],[[["f64",15]],["speed",3]],[[["f64",15]],["speed",3]],[[["f64",15]],["speed",3]],[[["duration",3]],["distance",3]],[[["f64",15]],["speed",3]],[[["speed",3]],["bool",15]],[[],["speed",3]],[[["speed",3]],["option",4,[["ordering",4]]]],[[],["result",4]],[[["speed",3]],["speed",3]],[[]],[[["unitfmt",3]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,[[]],[[],["vec",3,[["statistic",4]]]],[[]],[[]],[[]],[[]],[[],["statistic",4]],[[],["histogram",3]],[[]],[[]],[[["statistic",4]],["ordering",4]],[[],["usize",15]],null,[[],["histogram",3]],[[],["string",3]],[[],["result",4]],[[["statistic",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["u64",15]]],[[]],null,[[]],[[]],null,null,[[],["histogram",3]],[[["statistic",4]],["option",4,[["ordering",4]]]],[[["f64",15]],["option",4]],[[]],[[["histogram",3]],["bool",15]],[[["statistic",4]],["option",4]],[[],["result",4]],[[]],[[]],[[],["string",3]],[[],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[["duration",3]],["time",3]],[[["duration",3]]],[[],["string",3]],[[],["string",3]],[[]],[[]],[[["duration",3]],["time",3]],[[],["time",3]],[[]],[[["time",3]],["ordering",4]],[[],["time",3]],[[],["result",4]],[[["time",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[]],[[],["f64",15]],[[]],[[["time",3]],["bool",15]],[[["str",15]],["result",6,[["time",3]]]],[[["time",3]],["option",4,[["ordering",4]]]],[[["f64",15]],["time",3]],[[["f64",15]],["time",3]],[[["f64",15]],["time",3]],[[],["result",4]],[[["duration",3]],["time",3]],[[["time",3]],["duration",3]],[[]],[[["time",3]],["f64",15]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"Angle"],[3,"Distance"],[3,"Duration"],[3,"Line"],[3,"InfiniteLine"],[3,"Percent"],[3,"Speed"],[3,"Time"],[4,"Statistic"],[4,"ArrowCap"],[3,"UnitFmt"],[3,"CornerRadii"],[3,"Circle"],[3,"Histogram"],[8,"HgramValue"],[3,"FindClosest"],[3,"Polygon"],[3,"LonLat"],[3,"PolyLine"],[3,"GPSBounds"],[3,"Bounds"],[3,"Triangle"],[3,"Ring"],[3,"Pt2D"],[3,"HashablePt2D"]]},\
"headless":{"doc":"This runs a simulation without any graphics and serves a …","t":[3,3,3,3,3,3,3,3,3,3,3,3,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,12,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["AgentPosition","AgentPositions","Args","BlockedByGraph","Delays","FinishedTrip","LOAD","LoadSim","MAP","RoadThroughput","SIM","Throughput","TrafficSignalState","__private_field","__private_field","__private_field","accepted","agents","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blocked_by","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clap","counts","current_stage_idx","deref","deref","deref","deserialize","distance_crossed","distance_crossed","duration","edits","export_all_geometry","export_geometry","from","from","from","from","from","from","from","from","from","from","from","from","from","from_clap","handle_command","id","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","main","mode","modifiers","opts","opts","per_direction","per_direction","person","person","port","pos","remaining_time","rng_seed","rng_seed","scenario","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serve_req","setup","trip","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vehicle_type","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","waiting"],"q":["headlessd":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Each entry indicates that some agent has been stuck in one …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The distance crossed so far by the agent, in meters. There …","","","","","","","","","","","","","","","","","","","","","The agent’s ID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","None for buses","What port to run the JSON API on.","The agent’s current position. For pedestrians, this is …","","An arbitrary number to seed the random number generator. …","","","","","","","","","","","","","None for buses","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","None for pedestrians","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,1,2,3,6,7,8,9,5,10,11,4,12,13,1,2,3,6,7,8,9,5,10,11,4,12,13,12,1,2,3,6,7,8,9,5,10,11,4,12,13,1,2,3,6,7,8,9,5,10,11,4,12,13,6,11,4,1,2,3,13,7,10,7,13,0,0,1,2,3,6,7,8,9,5,10,11,4,12,13,6,0,7,10,1,2,3,6,7,8,9,5,10,11,4,12,13,1,2,3,6,7,8,9,5,10,11,4,12,13,1,2,3,6,7,8,9,5,10,11,4,12,13,1,2,3,6,7,8,9,5,10,11,4,12,13,0,7,13,6,13,8,9,7,10,6,10,4,6,13,13,7,8,9,5,10,11,4,12,0,13,10,1,2,3,6,7,8,9,5,10,11,4,12,13,1,2,3,6,7,8,9,5,10,11,4,12,13,1,2,3,6,7,8,9,5,10,11,4,12,13,10,1,2,3,6,7,8,9,5,10,11,4,12,13,4],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["app",3]],null,null,[[],["rwlock",3]],[[],["rwlock",3]],[[],["rwlock",3]],[[],["result",4]],null,null,null,null,[[["map",3]],["geojson",4]],[[["map",3],["intersectionid",3]],["geojson",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["argmatches",3]]],[[["str",15],["hashmap",3],["sim",3],["map",3],["loadsim",3]],["result",6,[["string",3]]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["request",3,[["body",3]]]]],[[["timer",3]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null],"p":[[3,"MAP"],[3,"SIM"],[3,"LOAD"],[3,"TrafficSignalState"],[3,"AgentPositions"],[3,"Args"],[3,"FinishedTrip"],[3,"Delays"],[3,"Throughput"],[3,"AgentPosition"],[3,"RoadThroughput"],[3,"BlockedByGraph"],[3,"LoadSim"]]},\
"importer":{"doc":"It’s assumed that the importer is run with the current …","t":[3,11,11,0,11,11,12,12,11,0,11,11,11,11,11,11,11,11,0,5,12,12,12,0,5,12,5,11,12,0,0,11,11,11,0,0,11,3,11,11,11,11,5,11,5,12,11,11,5,11,11,11,11,12,11,11,11,11,3,11,11,11,11,11,11,11,12,12,11,11,11,11,5,12,11,11,11,12,11,5,5,5,5,5,5,5,5,0,0,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,5,5,12,12,12,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,3,3,11,11,11,11,11,11,11,11,5,11,11,5,11,11,11,12,11,11,11,11,11,11,11,11,5,11,12,12,11,12,11,11,11,11,11,11,11,11,11,3,11,11,11,11,5,11,11,11,5,12,5,11,11,11,11,5,12,12,12,12,12,12,5,5,11,11,11,11,12,5,5,5,5,5],"n":["Job","as_any","as_any_mut","berlin","borrow","borrow_mut","city","city_overview","clap","configuration","flags","from","from_clap","full_for_city","into","into_any","into_any_arc","into_any_rc","map_config","oneshot","only_map","opts","osm_to_raw","pick_geofabrik","pick_geofabrik","raw_to_map","regenerate_everything","run","scenario","seattle","soundcast","try_from","try_into","type_id","uk","utils","vzip","Record","as_any","as_any_mut","borrow","borrow_mut","correlate_population","deserialize","distribute_residents","e_e","fmt","from","import_extra_data","into","into_any","into_any_arc","into_any_rc","raumid","try_from","try_into","type_id","vzip","ImporterConfiguration","as_any","as_any_mut","borrow","borrow_mut","default","deserialize","from","gunzip","gunzip_args","into","into_any","into_any_arc","into_any_rc","load_configuration","osmconvert","try_from","try_into","type_id","unzip","vzip","config_for_map","find_matching_regions","load_remote_geojson","pick_geofabrik","adjust_private_parking","ensure_popdat_exists","input","match_parcels_to_buildings","popdat","trips","Endpoint","OrigTrip","PopDat","RawParcel","RawTrip","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","depart_at","deptm","deserialize","deserialize","deserialize","deserialize","deserialize","dpcl","dpurp","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_mode","get_purpose","half","hh_p","hhno","import_data","import_parcels","import_trips","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","mode","mode","opcl","osm_building","parcel_id","parcelid","parkdy_p","parkhr_p","person","pno","pos","purpose","seq","serialize","serialize","serialize","to","to_owned","to_owned","tour","travdist","travtime","trip_dist","trip_time","trips","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tseg","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","xcoord_p","ycoord_p","BorderSnapper","Trip","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clip_trips","clone","clone_into","endpoints","fmt","from","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","make_scenario","new","orig","path","snap_border","to","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Record","as_any","as_any_mut","borrow","borrow_mut","check_sensor_data","deserialize","fmt","from","generate_scenario","home_zone","import_collision_data","into","into_any","into_any_arc","into_any_rc","load_study_area","num_bikers","num_drivers","num_pedestrians","num_transit1","num_transit2","num_transit3","parse_desire_lines","parse_zones","try_from","try_into","type_id","vzip","work_zone","download","download_kml","osm_to_raw","osmconvert","raw_to_map"],"q":["importer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","importer::berlin","","","","","","","","","","","","","","","","","","","","","importer::configuration","","","","","","","","","","","","","","","","","","","","","importer::map_config","importer::pick_geofabrik","","","importer::seattle","","","","importer::soundcast","","importer::soundcast::popdat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","importer::soundcast::trips","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","importer::uk","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","importer::utils","","","",""],"d":["A specification for importing all maps in a single city.","","","","","","","Produce a city overview from all of the individual maps in …","","","Return the command-line flags that should produce this …","","","","","","","","","Transforms a .osm file to a map in one step.","Only process one map. If not specified, process all maps …","","Download all raw input files, then convert OSM to the …","","Given the path to an Osmosis boundary polygon, return the …","Convert the RawMap to the final Map format.","Regenerate all maps and scenarios from scratch.","","Download trip demand data, then produce the typical …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Given the name of a map, configure its import.","","","Given the path to an Osmosis boundary polygon, return the …","","Download and pre-process data needed to generate Seattle …","","Match OSM buildings to parcels, scraping the number of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Transform the Seattle-wide <code>Endpoints</code> into specific …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If the output file doesn’t already exist, downloads the …","If the output file doesn’t already exist, downloads the …","Creates a RawMap from OSM and other input data.","Uses osmconvert to clip the input .osm (or .pbf) against a …","Converts a RawMap to a Map."],"i":[0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,0,1,1,0,0,1,1,1,0,0,1,0,2,2,2,2,0,2,0,2,2,2,0,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,6,7,8,4,5,6,7,8,4,5,6,7,8,4,5,6,7,8,7,8,7,8,7,5,4,5,6,7,8,5,5,5,6,7,8,4,5,6,7,8,7,0,0,5,6,5,0,0,0,4,5,6,7,8,4,5,6,7,8,4,5,6,7,8,4,5,6,7,8,5,7,5,8,8,6,6,6,7,5,8,7,7,4,7,8,7,7,8,5,5,5,7,7,4,4,5,6,7,8,4,5,6,7,8,5,4,5,6,7,8,4,5,6,7,8,6,6,0,0,9,10,9,10,9,10,9,10,0,10,10,0,10,9,10,10,9,10,9,10,9,10,9,10,0,9,10,9,9,10,10,9,10,9,10,9,10,9,10,0,11,11,11,11,0,11,11,11,0,11,0,11,11,11,11,0,11,11,11,11,11,11,0,0,11,11,11,11,11,0,0,0,0,0],"f":[null,[[],["any",8]],[[],["any",8]],null,[[]],[[]],null,null,[[],["app",3]],null,[[],["vec",3,[["string",3]]]],[[]],[[["argmatches",3]]],[[["cityname",3]],["job",3]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["string",3],["option",4,[["string",3]]],["bool",15],["bool",15],["bool",15],["rawtomapoptions",3]]],null,null,null,null,[[["string",3]]],null,[[["usize",15],["usize",15]]],[[["timer",3]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["string",3],["string",3],["timer",3]]],[[],["result",4]],[[["map",3],["timer",3]]],null,[[["formatter",3]],["result",6]],[[]],[[["rawmap",3],["importerconfiguration",3],["timer",3]]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["importerconfiguration",3]],[[],["result",4]],[[]],null,null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["importerconfiguration",3]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[["mapname",3]],["options",3]],[[["geojson",4],["lonlat",3]],["vec",3]],[[["string",3],["str",15]]],[[["string",3]]],[[["map",3],["scenario",3]]],[[["timer",3],["importerconfiguration",3],["bool",15],["bool",15]]],[[["importerconfiguration",3],["timer",3]]],[[["map",3],["extrashapes",3],["timer",3]]],null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["origtrip",3]],[[],["endpoint",3]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],null,[[["str",15]],["tripmode",4]],[[["str",15]],["trippurpose",4]],null,null,null,[[["map",3],["timer",3]],["popdat",3]],[[["map",3],["timer",3]]],[[["map",3],["timer",3]],["vec",3,[["origtrip",3]]]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[]],[[]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["map",3],["popdat",3],["map",3],["bool",15],["timer",3]],["vec",3,[["trip",3]]]],[[],["trip",3]],[[]],[[["endpoint",3],["endpoint",3],["map",3],["hashmap",3],["pathconstraints",4],["option",4],["bool",15]],["option",4]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["str",15],["map",3],["popdat",3],["map",3],["timer",3]],["scenario",3]],[[["endpoint",3],["endpoint",3],["pathconstraints",4],["option",4]],["option",4,[["bordersnapper",3]]]],null,null,[[["bool",15],["map",3],["option",4]],["option",4,[["tripendpoint",4]]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["map",3],["scenario",3],["str",15],["timer",3]]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[["map",3],["importerconfiguration",3],["timer",3]]],null,[[["rawmap",3],["importerconfiguration",3],["timer",3]]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["map",3]],["result",6,[["polygon",3]]]],null,null,null,null,null,null,[[["string",3]],["result",6,[["vec",3,[["desireline",3]]]]]],[[["gpsbounds",3],["string",3]],["result",6,[["hashmap",3,[["string",3],["polygon",3]]]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[["importerconfiguration",3],["string",3],["str",15]]],[[["string",3],["str",15],["gpsbounds",3],["bool",15],["timer",3]]],[[["mapname",3],["timer",3],["importerconfiguration",3]]],[[["string",3],["string",3],["string",3],["importerconfiguration",3]]],[[["mapname",3],["rawtomapoptions",3],["timer",3]],["map",3]]],"p":[[3,"Job"],[3,"Record"],[3,"ImporterConfiguration"],[3,"PopDat"],[3,"RawTrip"],[3,"RawParcel"],[3,"OrigTrip"],[3,"Endpoint"],[3,"BorderSnapper"],[3,"Trip"],[3,"Record"]]},\
"kml":{"doc":"","t":[3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,12,5,11,11,12,11,11,11,11,11,11,11],"n":["ExtraShape","ExtraShapes","attributes","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","deserialize","fmt","from","from","into","into","load","load_csv","load_geojson_no_clipping","parse_pt","points","recurse","serialize","serialize","shapes","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["kml","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A single object in the dataset.","Some dataset imported from KML, CSV, or something else. If …","Arbitrary key/value pairs associated with this object; no …","","","","","","","","","","","","","","Parses a .kml file and returns ExtraShapes. Objects will …","Parses a .csv file and returns ExtraShapes. Each record …","Parses a .geojson file and returns ExtraShapes","","The object has a different inferred shape depending on the …","","","","","","","","","","",""],"i":[0,0,1,2,1,2,1,1,1,2,1,1,2,1,2,1,0,2,2,0,1,0,2,1,2,1,2,1,2,1,2,1],"f":[null,null,null,[[]],[[]],[[]],[[]],[[],["extrashape",3]],[[]],[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["string",3],["gpsbounds",3],["bool",15],["timer",3]],["result",6,[["extrashapes",3]]]],[[["string",3],["gpsbounds",3],["timer",3]],["result",6,[["extrashapes",3]]]],[[["string",3],["gpsbounds",3],["bool",15]],["result",6,[["extrashapes",3]]]],[[["str",15]],["option",4,[["lonlat",3]]]],null,[[["node",3],["vec",3],["usize",15],["btreemap",3],["gpsbounds",3],["bool",15]],["result",6]],[[],["result",4]],[[],["result",4]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"ExtraShape"],[3,"ExtraShapes"]]},\
"ltn":{"doc":"","t":[12,6,3,3,3,3,3,3,3,3,3,3,6,5,12,5,11,11,11,11,0,12,12,12,11,11,11,11,0,12,12,12,11,0,12,12,12,12,0,12,12,12,5,12,0,12,0,11,11,11,12,12,5,12,12,12,12,0,12,12,12,11,11,11,11,11,11,11,11,12,12,5,12,12,12,0,12,12,12,12,0,12,0,0,12,12,12,12,12,0,0,12,12,5,0,0,12,12,11,11,11,11,11,11,11,11,12,13,13,4,13,11,11,11,11,11,5,11,11,11,11,11,11,5,11,11,11,11,5,11,11,11,5,11,11,3,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,5,12,5,12,11,11,11,11,11,5,11,11,11,11,11,11,11,12,5,11,12,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,12,11,11,11,11,11,5,12,11,12,11,11,11,11,11,12,17,3,17,17,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,12,12,11,5,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,5,11,11,0,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,5,5,3,3,12,11,11,11,11,11,11,11,11,12,12,12,11,5,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,0,11,11,3,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,12,12,5,5,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,17,3,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,13,4,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,12,11,12,12,11,11,11,11,11,5,12,11,12,12,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,12,12,5,5,5,5,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,12,5,11,12,12,11,11,11,11,11,11,11,12],"n":["0","App","Args","BrowseNeighborhoods","Cell","DiagonalFilter","DistanceInterval","ModalFilters","Neighborhood","NeighborhoodID","Partitioning","Session","Transition","after_edit","app_args","app_header","as_any","as_any","as_any_mut","as_any_mut","auto","block_to_neighborhood","borders","borders","borrow","borrow","borrow_mut","borrow_mut","browse","car_free","cells","change_key","clap","connectivity","current_trip_name","draw_all_filters","draw_borders_as_arrows","draw_boundary_roads","draw_cells","draw_cells_as_areas","draw_neighborhood_style","draw_over_roads","draw_with_layering","end","export","fade_irrelevant","filters","from","from","from_clap","group1","group2","handle_app_header_click","heuristic","highlight_boundary_roads","i","id","impact","impact","interior_intersections","intersections","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","labels","labels","main","main_road_penalty","map","modal_filters","neighborhood","neighborhood_id_counter","neighborhoods","orig_perimeter","panel","partition","partitioning","pathfinding","per_neighborhood","perimeter","previous_version","proposal","r1","r2","rat_run_viewer","rat_runs","roads","roads","run","save","select_boundary","single_blocks","start","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","world","BruteForce","Greedy","Heuristic","OnlyOneBorder","apply","as_any","as_any_mut","borrow","borrow_mut","brute_force","choices","clone","clone_into","eq","fmt","from","greedy","into","into_any","into_any_arc","into_any_rc","only_one_border","to_owned","try_from","try_into","try_to_filter_road","type_id","vzip","BrowseNeighborhoods","Cells","Quietness","RatRuns","SimpleColoring","Style","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","draw","draw_baselayer","draw_boundary_roads","draw_boundary_roads","draw_over_roads","draw_over_roads","eq","event","fmt","from","from","impact_widget","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","labels","make_world","new_state","panel","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","world","Viewer","as_any","as_any_mut","borrow","borrow_mut","draw","draw_baselayer","draw_top_layer","event","from","into","into_any","into_any_rc","make_world","neighborhood","new_state","panel","try_from","try_into","type_id","update","vzip","world","CAR_FREE_COLOR","COLORS","DISCONNECTED_COLOR","RESOLUTION_M","RenderCells","RenderCellsBuilder","__private_field","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","boundary_polygon","bounds","color_cells","colors","colors","deref","diffusion","draw","finalize","from","from","from","grid","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new","new","polygons_per_cell","to_multipolygons","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","geojson_string","write_geojson_file","DiagonalFilter","ModalFilters","Toggle3Zoomed","allows_turn","allows_turn","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","avoid_movements_between_roads","before_edit","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cancel_empty_edit","change_key","clone","clone","clone_into","clone_into","default","deserialize","deserialize","draw","draw","draw","draw_zoomed_planters","empty","eq","existing","filters_for","from","from","from","geometry","group1","group2","i","intersections","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","ne","new","new","previous_version","r1","r2","roads","serialize","serialize","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unzoomed","update_routing_params","vzip","vzip","vzip","detect_filters","transform_existing_filters","Filters","Impact","all_trips","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","change_key","compare_counts","departure_time","empty","end_of_day","eq","filtered_trips","filters","from","from","from_panel","from_scenario","include_borders","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","map","map_edits_changed","modes","ne","to_panel","trips_changed","try_from","try_from","try_into","try_into","type_id","type_id","ui","vzip","vzip","ShowResults","as_any","as_any_mut","borrow","borrow_mut","draw","draw_all_neighborhoods","from","into","into_any","into_any_arc","into_any_rc","new_state","on_click","other_event","panel_changed","try_from","try_into","type_id","vzip","Cell","DistanceInterval","Neighborhood","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borders","borders","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","car_free","cells","end","fade_irrelevant","find_cells","floodfill","from","from","from","id","interior_intersections","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_disconnected","labels","new","orig_perimeter","perimeter","roads","start","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","BlockID","COLORS","NeighborhoodID","Partitioning","all_block_ids","all_neighborhoods","all_single_blocks","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","block_to_neighborhood","block_to_neighborhood","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate_frontier","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","deserialize","deserialize","deserialize","empty","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","get_block","get_hash","get_hash","hash","hash","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","make_merged_blocks","map","ne","ne","neighborhood_block","neighborhood_color","neighborhood_containing","neighborhood_id_counter","neighborhoods","partial_cmp","partial_cmp","recalculate_coloring","remove_block_from_neighborhood","seed_using_heuristics","serialize","serialize","serialize","single_blocks","to_owned","to_owned","to_owned","transfer_block","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Filterable","Obj","RoutePlanner","Waypoint","app_session_current_trip_name","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","draw","draw_routes","eq","equivalent","event","files","fmt","from","from","get_hash","hash","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","mut_files","ne","neighborhood","new_state","on_destroy","panel","recalculate_paths","sync_from_file_management","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_everything","vzip","vzip","waypoints","world","0","0","Connectivity","FilterableObj","InteriorIntersection","InteriorRoad","Pathfinding","RatRuns","Tab","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","eq","eq","equivalent","fmt","from","from","get_hash","handle_action","handle_world_outcome","hash","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","make_buttons","ne","panel_builder","partial_cmp","populate_world","switch_to_state","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","BrowseRatRuns","as_any","as_any_mut","borrow","borrow_mut","current_idx","draw","draw_heatmap","draw_path","event","from","into","into_any","into_any_rc","make_world","neighborhood","new_state","panel","rat_runs","recalculate","try_from","try_into","type_id","vzip","world","EntryExit","RatRuns","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","count_per_intersection","count_per_road","find_entrances","find_exits","find_major_road_name","find_rat_runs","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","lane","major_road_name","paths","quiet_and_total_streets","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Proposal","abst_version","as_any","as_any_mut","borrow","borrow_mut","deserialize","from","inner_load","into","into_any","into_any_arc","into_any_rc","load","load_picker_ui","map","modal_filters","name","partitioning","save","save_ui","serialize","try_from","try_into","type_id","vzip","SelectBoundary","add_block","as_any","as_any_mut","borrow","borrow_mut","currently_have_block","draw","draw_outline","event","from","frontier","id","into","into_any","into_any_rc","last_failed_change","make_panel","new_state","orig_partitioning","panel","redraw_outline","toggle_block","try_from","try_into","try_toggle_block","type_id","vzip","world"],"q":["ltn","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::auto","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::browse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::connectivity","","","","","","","","","","","","","","","","","","","","","","","ltn::draw_cells","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::export","","ltn::filters","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::filters::existing","","ltn::impact","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::impact::ui","","","","","","","","","","","","","","","","","","","","ltn::neighborhood","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::partition","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::pathfinding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::pathfinding::Obj","","ltn::per_neighborhood","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::per_neighborhood::FilterableObj","","ltn::rat_run_viewer","","","","","","","","","","","","","","","","","","","","","","","","","ltn::rat_runs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::save","","","","","","","","","","","","","","","","","","","","","","","","","","ltn::select_boundary","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","A partitioning of the interior of a neighborhood based on …","A diagonal filter exists in an intersection. It’s …","An interval along a road’s length, with start &lt; end.","Stored in App session state. Before making any changes, …","","An opaque ID, won’t be contiguous as we adjust boundaries","","","","","","","","","","","Experiments to make a neighborhood be low-traffic by …","","","Intersections where this cell touches the boundary of the …","","","","","","This cell only contains roads that ban cars.","","This changes every time an edit occurs","","","","","","","","","","","Do the equivalent of <code>SimpleApp::draw_unzoomed</code> or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Edit history is preserved recursively","Load a previously saved proposal with this name. Note this …","","","","","Most roads are fully in one cell. Roads with modal filters …","For filters placed along a road, where is the filter …","","","","","","","","","","","","","","","Try adding one filter to every possible road, counting the …","Find the road with the most rat-runs that can be closed …","","Per cell, close all borders except for one. This doesn’t …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bounds of the neighborhood boundary polygon","","Colors per cell, such that adjacent cells are colored …","","","Returns a set of adjacent indices. The pairs are symmetric …","","","","","","The grid only covers the boundary polygon of the …","","","","","","","","","","","","","Partition a neighborhood’s boundary polygon based on the …","","","Per cell, convert all polygons to a <code>geo::MultiPolygon</code>. …","","","","","","","","","","","","","","Returns the path where the file was written","A diagonal filter exists in an intersection. It’s …","Stored in App session state. Before making any changes, …","Depending on the canvas zoom level, draws one of 3 things.","","","","","","","","","","Call before making any changes to preserve edit history","","","","","","","If it’s possible no edits were made, undo the previous …","This changes every time an edit occurs","","","","","","","","","Draw all modal filters","","","","","","Find all possible diagonal filters at an intersection","","","","Physically where is the filter placed?","","","","","","","","","","","","","","","","","","","","Edit history is preserved recursively","","","For filters placed along a road, where is the filter …","","","","","","","","","","","","","","","Modify RoutingParams to respect these modal filters","","","","","Detect roads that’re modelled in OSM as cycleways, but …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A partitioning of the interior of a neighborhood based on …","An interval along a road’s length, with start &lt; end.","","","","","","","","","Intersections where this cell touches the boundary of the …","","","","","","","This cell only contains roads that ban cars.","","","","","","","","","","","","","","","","","","","","","","A cell is disconnected if it’s not connected to a …","","","","","Most roads are fully in one cell. Roads with modal filters …","","","","","","","","","","","","","","","","Identifies a single / unmerged block, which never changes","","An opaque ID, won’t be contiguous as we adjust boundaries","","","","","","","","","","","","","","","","","","","Blocks on the “frontier” are adjacent to the …","","","","","","","","","","","","Only valid before the LTN tool has been activated this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","True if the coloring changed","Needs to find an existing neighborhood to take the block, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If true, the neighborhood has changed and the caller …","","","","","","","","","","","","","","Adds clickable objects for managing filters on roads and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Captures all of the edits somebody makes to a map in the …","","","","","","","","","","","","","Try to load a proposal. If it fails, returns a popup …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,3,2,3,2,0,4,5,6,3,2,3,2,0,6,5,7,2,0,3,3,3,8,0,3,3,8,0,9,0,5,0,3,2,2,10,10,0,3,3,10,5,0,3,5,7,3,2,3,2,3,2,3,2,8,5,0,3,4,3,0,4,4,5,8,0,3,0,0,5,7,2,10,10,0,0,6,7,0,0,0,4,9,3,2,3,2,3,2,3,2,8,11,11,0,11,11,11,11,11,11,0,11,11,11,11,11,11,0,11,11,11,11,0,11,11,11,0,11,11,0,12,12,12,12,0,8,12,8,12,8,12,8,12,12,12,8,8,0,8,0,8,12,8,12,8,12,0,8,12,8,12,12,8,12,8,0,8,8,12,8,12,8,12,8,12,8,12,8,0,13,13,13,13,13,13,13,13,13,13,13,13,0,13,13,13,13,13,13,13,13,13,0,0,0,0,0,0,14,15,16,14,15,16,14,15,16,14,15,16,14,16,16,0,15,16,14,0,15,16,15,16,14,16,15,16,14,15,16,14,15,16,14,15,16,14,15,16,15,15,15,16,14,15,16,14,15,16,14,15,16,14,0,0,0,0,0,7,10,17,7,10,17,7,10,10,7,17,7,10,17,7,10,7,7,7,10,7,10,7,7,10,17,7,17,0,17,10,0,10,17,7,10,10,10,10,10,7,17,7,10,17,7,10,17,7,10,17,7,10,10,17,10,7,10,10,7,7,10,7,10,17,7,10,17,7,10,17,7,10,17,7,17,7,10,0,0,0,0,18,18,19,18,19,18,19,18,19,18,18,19,18,0,19,18,18,18,19,19,18,19,18,19,18,19,18,19,18,19,18,18,19,19,19,18,18,19,18,19,18,19,0,18,19,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,5,6,9,5,6,9,5,6,5,6,9,5,6,9,6,5,9,5,0,0,5,6,9,5,5,5,6,9,5,6,9,6,9,5,6,9,6,5,5,5,5,6,9,5,6,9,5,6,9,5,6,9,5,6,9,1,21,0,0,0,0,4,4,4,1,21,4,1,21,4,4,4,1,21,4,1,21,4,4,1,21,4,1,21,4,1,21,1,21,4,4,1,21,1,21,1,21,1,21,4,4,1,21,1,21,1,21,4,1,21,4,1,21,4,1,21,4,4,4,1,21,4,4,4,4,4,1,21,4,4,4,1,21,4,4,1,21,4,4,1,21,4,1,21,4,1,21,4,1,21,4,22,0,0,22,23,23,22,23,22,23,22,23,22,22,22,23,23,22,22,23,23,22,23,22,22,22,23,22,23,22,22,23,22,23,22,23,23,23,23,23,23,22,23,22,23,22,23,22,23,23,22,23,23,24,25,26,0,27,27,26,26,0,26,27,26,27,26,27,26,27,27,27,27,26,27,27,27,26,27,27,26,0,27,26,27,26,27,26,27,26,27,26,27,26,27,0,26,27,26,27,26,27,26,27,26,27,28,29,0,30,30,30,30,30,30,30,30,30,30,30,30,30,0,30,30,30,30,30,30,30,30,30,30,0,0,31,32,31,32,31,32,31,32,31,31,0,0,0,0,31,32,31,32,31,32,31,32,31,32,32,32,31,31,31,32,31,32,31,32,31,32,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,34,34,34,34,34,34,34,34,34,34,34],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3],["simpleapp",3]]],null,[[["eventctx",3],["simpleapp",3]],["widget",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,null,null,[[]],[[]],[[]],[[]],null,null,null,null,[[],["app",3]],null,null,null,null,null,null,null,null,null,[[["gfxctx",3],["simpleapp",3],["fn",8]]],null,null,null,null,[[]],[[]],[[["argmatches",3]]],null,null,[[["eventctx",3],["simpleapp",3],["str",15]],["option",4,[["transition",4,[["simpleapp",3,[["session",3]]]]]]]],null,null,null,null,null,null,null,null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["settings",3]]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,[[["eventctx",3],["simpleapp",3],["neighborhood",3],["timer",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[["eventctx",3],["simpleapp",3],["neighborhood",3],["timer",3]]],[[],["vec",3,[["choice",3,[["heuristic",4]]]]]],[[],["heuristic",4]],[[]],[[["heuristic",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[["eventctx",3],["simpleapp",3],["neighborhood",3],["timer",3]]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["simpleapp",3],["neighborhood",3]]],[[]],[[],["result",4]],[[],["result",4]],[[["eventctx",3],["simpleapp",3],["neighborhood",3],["roadid",3]],["option",4,[["neighborhood",3]]]],[[],["typeid",3]],[[]],null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["style",4]],[[]],[[["gfxctx",3],["simpleapp",3]]],[[],["drawbaselayer",4]],[[["eventctx",3],["simpleapp",3]],["togglezoomed",3]],null,[[["eventctx",3],["simpleapp",3],["timer",3]],["togglezoomed",3]],null,[[["style",4]],["bool",15]],[[["eventctx",3],["simpleapp",3]],["transition",4,[["simpleapp",3,[["session",3]]]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[["eventctx",3],["simpleapp",3]],["widget",3]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["simpleapp",3],["timer",3]],["world",3,[["neighborhoodid",3]]]],[[["eventctx",3],["simpleapp",3]],["box",3,[["state",8]]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["gfxctx",3],["simpleapp",3]]],[[],["drawbaselayer",4]],null,[[["eventctx",3],["simpleapp",3]],["transition",4,[["simpleapp",3,[["session",3]]]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["simpleapp",3],["neighborhood",3]]],null,[[["eventctx",3],["simpleapp",3],["neighborhoodid",3]],["box",3,[["state",8]]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["eventctx",3],["simpleapp",3]]],[[]],null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["usize",15],["hashset",3]],["vec",3,[["color",3]]]],null,null,[[]],[[["grid",3],["usize",15]],["hashset",3]],[[],["geombatch",3]],[[],["rendercells",3]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["map",3],["neighborhood",3]],["rendercells",3]],[[["map",3],["neighborhood",3]],["rendercellsbuilder",3]],null,[[],["vec",3,[["multipolygon",3,[["f64",15]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[["eventctx",3],["simpleapp",3]],["result",6,[["string",3]]]],[[["eventctx",3],["simpleapp",3]],["result",6,[["string",3]]]],null,null,null,[[["turnid",3]],["bool",15]],[[["roadid",3],["roadid",3]],["bool",15]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["vec",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["modalfilters",3]],[[],["diagonalfilter",3]],[[]],[[]],[[],["modalfilters",3]],[[],["result",4]],[[],["result",4]],[[["gfxctx",3]]],[[["eventctx",3],["map",3]],["toggle3zoomed",3]],null,[[["eventctx",3],["geombatch",3],["line",3]]],[[["eventctx",3]]],[[["diagonalfilter",3]],["bool",15]],null,[[["simpleapp",3],["intersectionid",3]],["vec",3,[["diagonalfilter",3]]]],[[]],[[]],[[]],[[["map",3]],["line",3]],null,null,null,null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["diagonalfilter",3]],["bool",15]],[[["togglezoomed",3],["drawunzoomedshapes",3]]],[[["map",3],["intersectionid",3],["roadid",3],["roadid",3]],["diagonalfilter",3]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["routingparams",3]]],[[]],[[]],[[]],[[["map",3]],["vec",3,[["road",3]]]],[[["eventctx",3],["simpleapp",3],["timer",3]]],null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],null,null,null,[[["eventctx",3]]],[[],["time",3]],[[["filters",3]],["bool",15]],null,null,[[]],[[]],[[["panel",3]],["filters",3]],[[["eventctx",3],["simpleapp",3],["scenario",3],["timer",3]],["impact",3]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["simpleapp",3],["timer",3]]],null,[[["filters",3]],["bool",15]],[[["eventctx",3],["simpleapp",3]],["widget",3]],[[["eventctx",3],["simpleapp",3],["timer",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["gfxctx",3],["simpleapp",3]]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["simpleapp",3]],["box",3,[["state",8]]]],[[["eventctx",3],["simpleapp",3],["str",15],["panel",3]],["transition",4,[["simpleapp",3,[["session",3]]]]]],[[["eventctx",3],["simpleapp",3]],["transition",4,[["simpleapp",3,[["session",3]]]]]],[[["eventctx",3],["simpleapp",3],["panel",3]],["option",4,[["transition",4,[["simpleapp",3,[["session",3]]]]]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["map",3],["perimeter",3],["btreeset",3],["modalfilters",3]],["vec",3,[["cell",3]]]],[[["map",3],["roadid",3],["btreeset",3],["modalfilters",3]],["cell",3]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["bool",15]],null,[[["eventctx",3],["simpleapp",3],["neighborhoodid",3]],["neighborhood",3]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["vec",3,[["blockid",3]]]],[[],["btreemap",3]],[[],["vec",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["blockid",3]],["neighborhoodid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["perimeter",3]],["btreeset",3,[["blockid",3]]]],[[],["neighborhoodid",3]],[[],["blockid",3]],[[],["partitioning",3]],[[]],[[]],[[]],[[["neighborhoodid",3]],["ordering",4]],[[["blockid",3]],["ordering",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["partitioning",3]],[[["neighborhoodid",3]],["bool",15]],[[["blockid",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["blockid",3]],["block",3]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["map",3],["vec",3,[["blockid",3]]]],["result",6,[["vec",3,[["block",3]]]]]],null,[[["neighborhoodid",3]],["bool",15]],[[["blockid",3]],["bool",15]],[[["neighborhoodid",3]],["block",3]],[[["neighborhoodid",3]],["color",3]],[[["blockid",3]],["option",4,[["neighborhoodid",3]]]],null,null,[[["neighborhoodid",3]],["option",4,[["ordering",4]]]],[[["blockid",3]],["option",4,[["ordering",4]]]],[[],["bool",15]],[[["map",3],["blockid",3],["neighborhoodid",3]],["result",6,[["option",4,[["neighborhoodid",3]]]]]],[[["simpleapp",3],["timer",3]],["partitioning",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[]],[[]],[[]],[[["map",3],["blockid",3],["neighborhoodid",3],["neighborhoodid",3]],["result",6,[["option",4,[["neighborhoodid",3]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,[[["simpleapp",3]],["option",4]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["obj",4]],[[]],[[["gfxctx",3],["simpleapp",3]]],null,[[["obj",4]],["bool",15]],[[],["bool",15]],[[["eventctx",3],["simpleapp",3]],["transition",4,[["simpleapp",3,[["session",3]]]]]],null,[[["formatter",3]],["result",6]],[[]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["tripmanagement",3]],[[["obj",4]],["bool",15]],null,[[["eventctx",3],["simpleapp",3],["neighborhoodid",3]],["box",3,[["state",8]]]],[[["eventctx",3],["simpleapp",3]]],null,[[["eventctx",3],["simpleapp",3]],["widget",3]],[[["eventctx",3],["simpleapp",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["eventctx",3],["simpleapp",3]]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["filterableobj",4]],[[]],[[["filterableobj",4]],["ordering",4]],[[["tab",4]],["bool",15]],[[["filterableobj",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["u64",15]],[[["eventctx",3],["simpleapp",3],["str",15],["neighborhoodid",3]],["option",4,[["transition",4,[["simpleapp",3,[["session",3]]]]]]]],[[["eventctx",3],["simpleapp",3],["worldoutcome",4,[["filterableobj",4]]]],["bool",15]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3]],["widget",3]],[[["filterableobj",4]],["bool",15]],[[["eventctx",3],["simpleapp",3],["widget",3]],["panelbuilder",3]],[[["filterableobj",4]],["option",4,[["ordering",4]]]],[[["eventctx",3],["simpleapp",3],["neighborhood",3],["world",3],["fn",8],["usize",15]]],[[["eventctx",3],["simpleapp",3],["neighborhoodid",3]],["transition",4,[["simpleapp",3,[["session",3]]]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,[[["gfxctx",3],["simpleapp",3]]],null,null,[[["eventctx",3],["simpleapp",3]],["transition",4,[["simpleapp",3,[["session",3]]]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["simpleapp",3],["neighborhood",3],["ratruns",3]],["world",3,[["filterableobj",4]]]],null,[[["eventctx",3],["simpleapp",3],["neighborhoodid",3]],["box",3,[["state",8]]]],null,null,[[["eventctx",3],["simpleapp",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],null,null,[[["map",3],["neighborhood",3],["cell",3]],["vec",3,[["entryexit",3]]]],[[["map",3],["neighborhood",3],["cell",3]],["vec",3,[["entryexit",3]]]],[[["map",3],["neighborhood",3],["intersectionid",3]],["option",4,[["string",3]]]],[[["simpleapp",3],["neighborhood",3],["timer",3]],["ratruns",3]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,null,[[["neighborhood",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["result",4]],[[]],[[["simpleapp",3],["str",15],["timer",3]],["result",6]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["simpleapp",3],["str",15]],["option",4,[["box",3,[["state",8]]]]]],[[["eventctx",3],["simpleapp",3]],["box",3,[["state",8]]]],null,null,null,null,[[["simpleapp",3],["string",3]]],[[["eventctx",3]],["box",3,[["state",8]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[["eventctx",3],["simpleapp",3],["blockid",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[["simpleapp",3],["blockid",3]],["bool",15]],[[["gfxctx",3],["simpleapp",3]]],null,[[["eventctx",3],["simpleapp",3]],["transition",4,[["simpleapp",3,[["session",3]]]]]],[[]],null,null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["simpleapp",3]],["panel",3]],[[["eventctx",3],["simpleapp",3],["neighborhoodid",3]],["box",3,[["state",8]]]],null,null,[[["eventctx",3],["block",3]]],[[["eventctx",3],["simpleapp",3],["blockid",3]],["transition",4,[["simpleapp",3,[["session",3]]]]]],[[],["result",4]],[[],["result",4]],[[["simpleapp",3],["blockid",3]],["result",6,[["option",4,[["neighborhoodid",3]]]]]],[[],["typeid",3]],[[]],null],"p":[[3,"NeighborhoodID"],[3,"Args"],[3,"Session"],[3,"Partitioning"],[3,"Neighborhood"],[3,"Cell"],[3,"ModalFilters"],[3,"BrowseNeighborhoods"],[3,"DistanceInterval"],[3,"DiagonalFilter"],[4,"Heuristic"],[4,"Style"],[3,"Viewer"],[3,"COLORS"],[3,"RenderCells"],[3,"RenderCellsBuilder"],[3,"Toggle3Zoomed"],[3,"Impact"],[3,"Filters"],[3,"ShowResults"],[3,"BlockID"],[4,"Obj"],[3,"RoutePlanner"],[13,"Waypoint"],[13,"Filterable"],[4,"Tab"],[4,"FilterableObj"],[13,"InteriorRoad"],[13,"InteriorIntersection"],[3,"BrowseRatRuns"],[3,"RatRuns"],[3,"EntryExit"],[3,"Proposal"],[3,"SelectBoundary"]]},\
"map_editor":{"doc":"The map_editor renders and lets you edit RawMaps, which …","t":[3,0,11,11,11,11,12,11,0,11,11,12,11,11,11,11,0,12,5,0,5,11,11,11,11,0,3,13,3,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,5,11,12,11,11,11,11,17,13,4,17,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,3,8,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,10],"n":["Args","app","as_any","as_any_mut","borrow","borrow_mut","cam","clap","edit","from","from_clap","include_buildings","into","into_any","into_any_arc","into_any_rc","load","load","main","model","run","try_from","try_into","type_id","vzip","world","App","CreatingRoad","MainState","Mode","MovingBuilding","MovingIntersection","MovingRoadPoint","SetBoundaryPt1","SetBoundaryPt2","Viewing","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","before_quit","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cs","current_stage_and_remaining_time","draw","draw_default","draw_map","draw_with_opts","dump_before_abort","event","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","last_id","make_warper","map","map_switched","mode","model","mut_cs","mut_draw_map","mut_opts","new_state","opts","panel","sim","sim_time","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","0","0","1","EditRoad","as_any","as_any_mut","borrow","borrow_mut","draw","draw_baselayer","from","into","into_any","into_any_arc","into_any_rc","new_state","on_click","other_event","r","show_direction","try_from","try_into","type_id","vzip","PickMap","as_any","as_any_mut","borrow","borrow_mut","draw","event","from","into","into_any","into_any_rc","load_map","new_state","panel","try_from","try_into","type_id","vzip","BUILDING_LENGTH","Building","ID","INTERSECTION_RADIUS","Intersection","Model","Road","RoadPoint","as_any","as_any","as_any_mut","as_any_mut","blank","bldg_added","borrow","borrow","borrow_mut","borrow_mut","clear_r_pts","clone","clone_into","compute_bounds","create_b","create_i","create_r","debug_intersection_geometry","delete_b","delete_i","delete_r","delete_r_pt","draw_extra","dump_to_osm","eq","equivalent","export_to_osm","fmt","from","from","from_map","get_hash","hash","include_bldgs","insert_r_pt","intersection_added","intersection_geom","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","map","merge_r","move_b","move_i","move_r_pt","ne","recreate_world","road_added","road_deleted","road_object","set_boundary","show_intersection_geometry","show_r_points","showing_pts","stop_showing_pts","time_to_id","to_owned","toggle_i","toggle_junction","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","world","zorder","0","0","0","0","1","Object","ObjectID","World","WorldObject","add","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","current_selection","delete","draw","draw","force_set_selection","from","from","from","geometry","get_selection","handle_mouseover","id","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new","new","objects","quadtree","quadtree_id","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unioned_polygon","vzip","vzip","vzip","zorder"],"q":["map_editor","","","","","","","","","","","","","","","","","","","","","","","","","","map_editor::app","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_editor::app::Mode","","","","","","map_editor::edit","","","","","","","","","","","","","","","","","","","","","map_editor::load","","","","","","","","","","","","","","","","","","map_editor::model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_editor::model::ID","","","","","map_editor::world","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","The initial camera state","","","","","Import buildings from the RawMap. Slow.","","","","","","The path to a RawMap to load. If omitted, start with a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Express a RawMap as a .osm file. Why not just save the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,0,0,0,1,1,1,1,0,0,2,0,0,2,2,2,2,2,2,3,4,2,3,4,2,3,3,4,2,3,4,2,3,3,4,3,3,3,3,4,3,4,2,3,4,2,3,4,2,3,2,3,4,2,4,3,3,3,4,3,3,3,3,4,3,4,3,3,3,4,2,3,4,2,3,4,2,3,4,2,5,6,7,8,9,7,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,0,12,0,0,12,0,12,12,13,12,13,12,13,13,13,12,13,12,13,12,12,13,13,13,13,13,13,13,13,13,13,0,12,12,13,12,13,12,13,12,12,13,13,13,13,13,12,13,12,13,12,13,12,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,0,12,13,13,13,12,13,12,13,12,13,12,13,12,14,15,16,17,17,0,0,0,0,18,19,20,18,19,20,18,19,20,18,19,20,18,18,18,18,20,18,19,20,18,19,18,18,19,19,20,18,19,20,18,19,20,19,20,18,19,18,18,18,20,19,20,18,19,20,18,19,20,18,20,19,20,18,21],"f":[null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,[[],["app",3]],null,[[]],[[["argmatches",3]]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[]],null,[[["settings",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["canvas",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["colorscheme",3]],[[["intersectionid",3]]],[[["gfxctx",3],["app",3]]],[[["gfxctx",3]]],[[],["drawmap",3]],[[["gfxctx",3],["drawoptions",3]]],[[["canvas",3]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["pt2d",3],["option",4,[["f64",15]]],["option",4,[["id",4]]]],["box",3,[["state",8]]]],[[],["map",3]],[[["eventctx",3],["map",3],["timer",3]]],null,null,[[],["colorscheme",3]],[[],["drawmap",3]],[[],["options",3]],[[["eventctx",3],["app",3]],["box",3,[["state",8]]]],[[],["options",3]],null,[[],["sim",3]],[[],["time",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["gfxctx",3],["app",3]]],[[],["drawbaselayer",4]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["app",3],["originalroad",3]],["box",3,[["state",8]]]],[[["eventctx",3],["app",3],["str",15],["panel",3]],["transition",4,[["app",3]]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["gfxctx",3],["app",3]]],[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["string",3],["bool",15],["option",4,[["string",3]]]],["box",3,[["state",8]]]],[[["eventctx",3]],["box",3,[["state",8]]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["eventctx",3]],["model",3]],[[["eventctx",3],["osmid",4]]],[[]],[[]],[[]],[[]],[[["eventctx",3],["originalroad",3]]],[[],["id",4]],[[]],[[],["bounds",3]],[[["eventctx",3],["pt2d",3]],["id",4]],[[["eventctx",3],["pt2d",3]]],[[["eventctx",3],["nodeid",3],["nodeid",3]]],[[["eventctx",3],["nodeid",3]]],[[["osmid",4]]],[[["nodeid",3]]],[[["eventctx",3],["originalroad",3]]],[[["eventctx",3],["originalroad",3],["usize",15]]],null,[[["rawmap",3]],["result",4,[["error",3]]]],[[["id",4]],["bool",15]],[[],["bool",15]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["eventctx",3],["rawmap",3],["bool",15],["timer",3]],["model",3]],[[],["u64",15]],[[]],null,[[["eventctx",3],["originalroad",3],["pt2d",3]],["option",4,[["id",4]]]],[[["eventctx",3],["nodeid",3]]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["originalroad",3]]],[[["eventctx",3],["osmid",4],["pt2d",3]]],[[["eventctx",3],["nodeid",3],["pt2d",3]]],[[["eventctx",3],["originalroad",3],["usize",15],["pt2d",3]]],[[["id",4]],["bool",15]],[[["eventctx",3],["timer",3]]],[[["eventctx",3],["originalroad",3]]],[[["originalroad",3]]],[[["originalroad",3]],["object",3,[["id",4]]]],[[["eventctx",3],["pt2d",3],["pt2d",3]]],[[["eventctx",3],["bool",15]]],[[["eventctx",3],["originalroad",3]]],null,[[["originalroad",3]]],[[],["i64",15]],[[]],[[["eventctx",3],["nodeid",3]]],[[["eventctx",3],["originalroad",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[],["usize",15]],null,null,null,null,null,null,null,null,null,[[["eventctx",3],["object",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[["gfxctx",3],["fn",8]]],null,[[]],[[]],[[]],[[]],null,[[],["option",4]],[[["eventctx",3]]],null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["color",3],["polygon",3]],["object",3]],[[],["world",3]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[],["usize",15]]],"p":[[3,"Args"],[4,"Mode"],[3,"App"],[3,"MainState"],[13,"MovingIntersection"],[13,"MovingBuilding"],[13,"MovingRoadPoint"],[13,"CreatingRoad"],[13,"SetBoundaryPt2"],[3,"EditRoad"],[3,"PickMap"],[4,"ID"],[3,"Model"],[13,"Building"],[13,"Intersection"],[13,"Road"],[13,"RoadPoint"],[3,"World"],[3,"Object"],[3,"WorldObject"],[8,"ObjectID"]]},\
"map_gui":{"doc":"This crate contains common code for applications that draw …","t":[8,13,13,13,4,13,13,13,13,13,13,3,3,13,11,11,11,11,11,11,11,12,11,11,11,11,12,0,10,12,12,11,12,10,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,10,12,12,10,12,10,10,10,11,0,10,12,11,0,12,10,11,0,12,11,0,11,11,11,11,12,12,12,12,12,12,12,12,12,12,13,3,4,13,13,13,12,12,11,11,11,11,12,12,12,12,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,12,11,12,11,12,11,12,12,11,12,11,12,11,11,11,12,12,12,12,12,5,11,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,5,11,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,11,11,11,11,12,11,11,12,12,12,12,12,12,12,12,11,12,12,11,11,12,11,11,12,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,0,11,11,12,12,12,12,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,11,11,11,13,13,4,13,13,13,13,13,3,3,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,12,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,3,17,3,3,3,3,3,3,3,3,17,8,3,0,12,0,12,11,11,0,12,12,12,12,11,11,12,0,12,12,12,5,0,12,11,10,12,12,12,12,12,12,12,12,12,5,11,10,10,11,5,12,12,12,12,12,12,0,12,11,11,11,11,12,12,0,0,12,11,0,12,0,12,12,12,0,12,12,12,12,0,0,11,11,0,11,12,5,12,11,12,12,12,12,3,3,12,11,11,11,11,11,12,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,12,11,11,11,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,3,11,11,12,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,17,3,11,11,12,12,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,5,11,11,11,11,5,12,3,5,11,11,11,11,5,5,5,11,11,5,11,12,12,11,11,11,11,11,12,11,11,11,5,5,5,5,11,5,11,11,11,11,11,11,12,3,11,11,11,11,5,5,5,5,5,5,11,11,11,12,11,11,11,11,12,11,11,11,11,11,5,12,11,11,11,11,11,12,3,12,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,11,11,11,12,12,11,11,11,11,11,12,3,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,12,12,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,12,5,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,12,5,5,5,5,5,5,3,17,11,11,11,11,12,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,3,17,11,11,11,11,11,11,11,12,12,11,11,11,11,5,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,12,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,11,11,11,11,11,11,12,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,3,3,3,3,3,3,3,3,3,3,4,13,3,3,3,3,13,3,8,17,3,13,13,3,3,13,3,13,3,3,8,3,3,3,12,5,10,12,12,12,12,12,12,12,0,12,12,12,5,5,0,5,5,5,5,12,0,12,12,0,0,12,12,12,12,12,12,12,12,5,12,5,5,5,10,0,12,12,5,0,12,12,0,12,5,12,0,12,12,12,12,5,12,5,12,12,12,12,12,12,0,10,0,5,5,12,12,12,12,5,12,12,12,12,12,12,12,12,12,12,5,5,12,12,12,12,12,5,12,12,10,12,0,0,0,0,0,0,5,0,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,12,11,11,11,11,11,11,12,12,12,11,12,12,12,11,12,12,11,11,11,11,13,13,13,3,13,4,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,17,11,11,11,11,11,11,11,11,11,11,12,12,12,5,11,11,11,11,12,11,11,11,11,11,11,11,11,11,5,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,5,5,3,11,11,11,11,11,11,11,5,5,11,11,11,11,12,12,5,11,11,11,11,3,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,5,5,11,11,11,11,7,7,3,8,12,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,10,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,13,13,13,13,13,3,11,11,11,11,11,11,11,11,0,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,3,3,3,3,8,12,12,10,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,17,17,3,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,12,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,3,11,11,11,11,11,5,5,11,11,11,11,11,11,5,11,11,11,11,5,11,11,11,11,11,12,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["AppLike","Area","Building","Car","ID","Intersection","Lane","ParkingLot","PedCrowd","Pedestrian","Road","SimpleApp","SimpleAppArgs","TransitStop","agent_id","as_any","as_any_mut","as_building","as_intersection","borrow","borrow_mut","cam","change_color_scheme","clone","clone_into","cmp","color_scheme","colors","cs","cs","current_selection","current_stage_and_remaining_time","dev","draw_map","draw_map","draw_with_opts","eq","equivalent","fmt","from","from","from","from","from","from","from","from","from","from","from","from_agent","get_hash","hash","into","into_any","into_any_arc","into_any_rc","load","make_warper","map","map","map_path","map_switched","minimal_controls","mut_cs","mut_draw_map","mut_opts","ne","options","opts","opts","partial_cmp","render","session","sim","sim_time","simple_app","time","to_owned","tools","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","0","ClassicDayMode","ColorScheme","ColorSchemeChoice","DayMode","NightMode","Textured","after_changes","agent_colors","as_any","as_any","as_any_mut","as_any_mut","before_changes","bike_frame","bike_lane","bike_trip","borrow","borrow","borrow_mut","borrow_mut","brake_light","building_outline","bus_body","bus_label","bus_lane","bus_layer","bus_trip","choices","classic","clone","clone_into","commercial_building","curb","current_object","day_mode","day_time_slider","deserialize","driving_lane","edits_layer","eq","experiment","export","fade_map_dark","fmt","from","from","general_road_marking","good_to_bad_green","good_to_bad_red","grass","gui_style","hex","import","inner_panel_bg","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","light_background","light_rail_track","map_background","median_strip","minimap_cursor_bg","minimap_cursor_border","modulo_color","new","night_mode","night_time_slider","normal_intersection","panel_bg","parked_car","parking_lane","parking_lot","parking_trip","parse","ped_crowd","ped_foot","ped_head","ped_preparing_bike_body","pedestrian_plaza","perma_selected_object","private_road","residential_building","road_center_line","rotating_color_agents","rotating_color_plot","route","scheme","selected","serialize","sidewalk","sidewalk_lines","signal_banned_turn","signal_box","signal_permitted_turn","signal_protected_turn","signal_spinner","signal_turn_block_bg","slow_intersection","slower_intersection","slowest_intersection","stop_sign","stop_sign_pole","study_area","textured","to_owned","train_body","try_from","try_from","try_into","try_into","turn_arrow","type_id","type_id","unzoomed_arterial","unzoomed_bike","unzoomed_bus","unzoomed_car","unzoomed_highway","unzoomed_interesting_intersection","unzoomed_pedestrian","unzoomed_residential","unzoomed_road_surface","unzoomed_trail","void_background","vzip","vzip","water","zoomed_intersection_surface","zoomed_road_surface","0","FileLoader","FutureLoader","MapAlreadyLoaded","MapLoader","RawBytes","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","draw","draw","event","event","force_reload","from","from","from","from","inner_progress_receiver","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","last_inner_progress","last_outer_progress","loading_title","native_loader","new_state","new_state","on_load","on_load","on_load","outer_progress_receiver","panel","path","read_file","receiver","runtime","started","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","FileLoader","Readable","as_any","as_any_mut","borrow","borrow_mut","draw","event","from","into","into_any","into_any_rc","new_state","on_load","path","read_file","try_from","try_into","type_id","vzip","Abstract","Brian","CameraAngle","IndividualTurnArrows","IsometricNE","IsometricNW","IsometricSE","IsometricSW","Options","OptionsPanel","TopDown","TrafficSignalStyle","Yuwen","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","camera_angle","canvas_settings","clone","clone","clone","clone_into","clone_into","clone_into","color_scheme","debug_all_agents","deserialize","deserialize","deserialize","dev","dont_draw_time_warp","draw","eq","eq","event","fmt","fmt","from","from","from","from","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","jump_to_delay","language","load_or_default","minimal_controls","new_state","panel","serialize","serialize","serialize","show_building_driveways","time_increment","to_owned","to_owned","to_owned","toggle_day_night_colors","traffic_signal_style","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","units","vzip","vzip","vzip","vzip","AgentCache","BIG_ARROW_THICKNESS","DrawArea","DrawBuilding","DrawIntersection","DrawMap","DrawMovement","DrawOptions","DrawPedCrowd","DrawPedestrian","OUTLINE_THICKNESS","Renderable","UnzoomedAgents","agents","agents_per_on","area","areas","as_any","as_any_mut","bike","bikes","blob","blob_pl","body_circle","borrow","borrow_mut","boundary_polygon","building","buildings","bus_stops","buses_and_trains","calculate_corners","car","cars","contains_pt","draw","draw_all_areas","draw_all_building_outlines","draw_all_buildings","draw_all_unzoomed_parking_lots","draw_all_unzoomed_roads_and_intersections","draw_default","draw_default","draw_default","draw_traffic_signal","draw_vehicle","from","get_id","get_outline","get_zorder","grey_out_unhighlighted_people","hitbox","id","id","id","id","id","intersection","intersections","into","into_any","into_any_arc","into_any_rc","label","label_buildings","lane","map","members","new","parking_lot","parking_lots","pedestrian","peds","quadtree","quadtree_ids","road","roads","show_zorder","suppress_traffic_signal_details","time","traffic_signal","transit_stop","try_from","try_into","turn","type_id","unzoomed","unzoomed_agent_radius","unzoomed_agents","vzip","zorder","zorder","zorder","zorder_range","AgentCache","UnzoomedAgents","agents_per_on","as_any","as_any","as_any_mut","as_any_mut","bikes","bikes","borrow","borrow","borrow_mut","borrow_mut","buses_and_trains","buses_and_trains","calculate_unzoomed_agents","cars","cars","clone","clone_into","color","draw_unzoomed_agents","eq","from","from","get","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","ne","new","new","peds","peds","populate_if_needed","time","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unzoomed","unzoomed_agents","update","vzip","vzip","DrawArea","as_any","as_any_mut","borrow","borrow_mut","draw","fill","from","get_id","get_outline","id","into","into_any","into_any_arc","into_any_rc","new","try_from","try_into","type_id","vzip","DrawBike","as_any","as_any_mut","body_circle","borrow","borrow_mut","contains_pt","draw","draw_default","from","get_id","get_outline","get_zorder","id","into","into_any","into_any_arc","into_any_rc","new","try_from","try_into","type_id","vzip","zorder","DrawBuilding","as_any","as_any_mut","borrow","borrow_mut","clear_rendering","contains_pt","draw","from","get_id","get_outline","get_zorder","id","into","into_any","into_any_arc","into_any_rc","label","new","try_from","try_into","type_id","vzip","CAR_WIDTH","DrawCar","as_any","as_any_mut","body","body_polygon","borrow","borrow_mut","contains_pt","draw","draw_default","from","get_id","get_outline","get_zorder","id","into","into_any","into_any_arc","into_any_rc","new","thick_line_from_angle","try_from","try_into","type_id","vzip","zoomed_color_car","zorder","DrawIntersection","approx_eq","as_any","as_any_mut","borrow","borrow_mut","calculate_border_arrows","calculate_corner_curbs","calculate_corners","clear_rendering","contains_pt","crosswalk_line","draw","draw_default","draw_traffic_signal","from","get_id","get_outline","get_unzoomed_outline","get_zorder","id","into","into_any","into_any_rc","make_crosswalk","make_octagon","make_rainbow_crosswalk","make_unmarked_crossing","new","perp_line","render","stop_sign_geom","try_from","try_into","type_id","vzip","zorder","DrawLane","as_any","as_any_mut","borrow","borrow_mut","calculate_buffer_markings","calculate_driving_lines","calculate_one_way_markings","calculate_parking_lines","calculate_sidewalk_lines","calculate_turn_markings","clear_rendering","contains_pt","draw","draw_default","from","get_id","get_outline","get_zorder","id","into","into_any","into_any_arc","into_any_rc","new","perp_line","polygon","render","try_from","try_into","type_id","vzip","zorder","DrawMap","areas","as_any","as_any_mut","borrow","borrow_mut","boundary_polygon","buildings","bus_stops","draw_all_areas","draw_all_building_outlines","draw_all_buildings","draw_all_unzoomed_parking_lots","draw_all_unzoomed_roads_and_intersections","free_memory","from","get_a","get_b","get_i","get_l","get_matching_objects","get_obj","get_pl","get_r","get_renderables_back_to_front","get_ts","intersections","into","into_any","into_any_rc","new","parking_lots","quadtree","quadtree_ids","recreate_intersection","recreate_road","regenerate_unzoomed_layer","roads","show_zorder","try_from","try_into","type_id","vzip","zoomed_batch","zorder_range","DrawParkingLot","as_any","as_any_mut","borrow","borrow_mut","clear_rendering","contains_pt","draw","draw","from","get_id","get_outline","get_zorder","id","into","into_any","into_any_arc","into_any_rc","new","render","try_from","try_into","type_id","vzip","DrawPedCrowd","DrawPedestrian","as_any","as_any","as_any_mut","as_any_mut","blob","blob_pl","body_circle","borrow","borrow","borrow_mut","borrow_mut","contains_pt","draw","draw","draw_default","draw_default","from","from","geometry","get_id","get_id","get_outline","get_outline","get_zorder","get_zorder","id","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","members","new","new","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","zorder","zorder","DrawRoad","as_any","as_any_mut","borrow","borrow_mut","clear_rendering","contains_pt","draw","draw","draw_building_driveway","from","get_id","get_outline","get_zorder","id","into","into_any","into_any_arc","into_any_rc","lanes","new","render","render_center_line","try_from","try_into","type_id","vzip","zorder","crosswalk_icon","dont_walk_icon","draw_signal_stage","draw_stage_number","draw_time_left","walk_icon","DrawTransitStop","RADIUS","as_any","as_any_mut","borrow","borrow_mut","center","contains_pt","draw","draw_default","from","get_id","get_outline","get_zorder","id","into","into_any","into_any_arc","into_any_rc","new","try_from","try_into","type_id","vzip","zorder","DrawMovement","TURN_ICON_ARROW_LENGTH","as_any","as_any_mut","borrow","borrow_mut","draw_selected_movement","for_i","from","hitbox","id","into","into_any","into_any_arc","into_any_rc","make_circle_geom","try_from","try_into","type_id","vzip","SimpleApp","SimpleAppArgs","SimpleWarper","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","before_quit","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate_current_selection","cam","clap","color_scheme","cs","cs","current_selection","current_stage_and_remaining_time","dev","draw","draw_default","draw_map","draw_map","draw_unzoomed","draw_with_opts","draw_zoomed","dump_before_abort","event","free_memory","from","from","from","from_clap","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","make_warper","map","map","map_name","map_path","map_switched","minimal_controls","mouseover_unzoomed_buildings","mouseover_unzoomed_roads_and_intersections","mut_cs","mut_draw_map","mut_opts","new","opts","opts","override_options","recalculate_current_selection","session","sim","sim_time","time","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","warper","0","0","ABStreet","CameraState","ChooseSomething","CityPicker","ColorDiscrete","ColorLegend","ColorNetwork","ColorScale","DefaultMap","DivergingScale","DrawRoadLabels","Executable","FifteenMin","FilePicker","Grid","HeatmapOptions","InputWaypoints","LTN","Minimap","MinimapControls","NEXT_RELEASE","Navigator","OSMViewer","ParkingMapper","PopupMsg","PromptInput","RawMapEditor","RunCommand","Santa","TitleScreen","TripManagement","TripManagementState","TurnExplorer","URLManager","WaypointID","all","app_header","app_session_current_trip_name","app_type","app_type","avg","base_zoom","cam_x","cam_y","cam_zoom","camera","categories","cb","cb","change_map_btn","checkbox_per_mode","city_picker","cmp_count","cmp_dist","cmp_duration","color_for_mode","color_scheme","colors","colors","comm","command","compare_counts","contours","controls","current","current_exe","data","dragging","draw","draw","draw_isochrone","enter_state","find_exe","goal_marker","grey_out_map","has_zorder","heatmap","height","high_color","home_btn","icons","idx","ignore","importer","include_roads","intersections_from_roads","l","labels","last_drawn","last_map","layer","lines","loading_tips","low_color","make_heatmap","map","map","max","max_capacity","mid_color","min","minimap","mut_files","navigate","nice_country_name","nice_map_name","offset_x","offset_y","on_load","on_load","open_browser","p","panel","panel","panel","panel","panel","panel","panel","panel","per_zoom","percentage_bar","prompt_to_download_missing_data","radius","resolution","show_success_popup","smoothing","snap_to_endpts","start_marker","started","state_type","sync_from_file_management","time","title_screen","trip_files","turn_explorer","ui","updater","url","version","waypoints","waypoints","width","zoom","zoom_lvl","zoomed","CameraState","DefaultMap","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","cam_x","cam_y","cam_zoom","deserialize","deserialize","fmt","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","last_map","load","save","serialize","serialize","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AllCityPicker","CitiesInCountryPicker","CityPicker","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chose_city","cities_per_country","draw","draw","draw","draw_baselayer","draw_baselayer","draw_baselayer","event","event","event","from","from","from","into","into","into","into_any","into_any","into_any","into_any_rc","into_any_rc","into_any_rc","new_in_city","new_state","new_state","new_state","on_load","on_load","on_load","panel","panel","panel","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","ColorDiscrete","ColorLegend","ColorNetwork","ColorScale","DivergingScale","add_b","add_b","add_i","add_i","add_l","add_l","add_pl","add_r","add_r","add_ts","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","avg","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","categories","categories","colors","draw","draw","eval","eval","from","from","from","from","from","from_colorous","gradient","high_color","ignore","ignore","inner_eval","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","low_color","make_legend","map","map","max","mid_color","min","new","new","new","no_fading","no_fading","pct_intersections","pct_roads","range","ranked_intersections","ranked_roads","row","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","RunCommand","as_any","as_any_mut","borrow","borrow_mut","comm","draw","event","from","into","into_any","into_any_rc","last_drawn","lines","max_capacity","new_state","on_load","p","panel","read_output","show_success_popup","started","try_from","try_into","type_id","vzip","A","B","Compare","CompareCounts","Intersection","Layer","Obj","Road","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","autoselect_layer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate_heatmap","calculate_relative_heatmap","clone","clone","clone_into","clone_into","cmp","counts_a","counts_b","draw","empty","eq","eq","equivalent","fmt","fmt","from","from","from","get_hash","get_panel_widget","hash","heatmap_a","heatmap_b","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","layer","make_world","ne","new","on_click","other_event","partial_cmp","recalculate_b","relative_heatmap","relative_road_tooltip","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","world","0","0","Grid","HeatmapOptions","NEIGHBORS","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","color_scheme","contours","data","draw_isochrone","eq","from","from","from_controls","height","idx","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","make_heatmap","ne","new","new","orthogonal_neighbors","radius","resolution","smoothing","to_controls","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","width","xy","goal_marker","start_marker","ImportCity","as_any","as_any_mut","borrow","borrow_mut","draw","event","from","generate_new_map_name","grab_geojson_from_clipboard","into","into_any","into_any_rc","new_state","on_load","panel","sanitize_name","try_from","try_into","type_id","vzip","DrawRoadLabels","as_any","as_any_mut","borrow","borrow_mut","discretize_zoom","draw","from","include_roads","into","into_any","into_any_rc","new","only_major_roads","per_zoom","render","simplify_name","simplify_patterns","try_from","try_into","type_id","vzip","MINIMAP_HEIGHT","MINIMAP_WIDTH","Minimap","MinimapControls","app_type","as_any","as_any_mut","base_zoom","borrow","borrow_mut","controls","dragging","draw","draw_extra","draw_extra","draw_with_extra_layers","event","from","get_panel","has_layer","has_layer","has_zorder","into","into_any","into_any_rc","layer","make_legend","make_legend","make_unzoomed_panel","make_unzoomed_panel","make_zoomed_side_panel","make_zoomed_side_panel","map_to_minimap_pct","mut_panel","new","offset_x","offset_y","panel","panel_changed","panel_changed","panel_clicked","panel_clicked","recenter","recreate_panel","set_zoom","time","try_from","try_into","type_id","vzip","zoom","zoom_lvl","zoomed","CrossStreet","Navigator","SearchBuildings","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","draw","draw","draw","draw","event","event","event","first","from","from","from","into","into","into","into_any","into_any","into_any","into_any_rc","into_any_rc","into_any_rc","new_state","new_state","new_state","panel","panel","panel","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ABStreet","Executable","FifteenMin","LTN","OSMViewer","ParkingMapper","RawMapEditor","Santa","TitleScreen","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","built_info","clone","clone_into","current_exe","enter_state","eq","from","from","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","new_state","on_click","replace_process","run","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BUILT_TIME_UTC","CFG_ENDIAN","CFG_ENV","CFG_FAMILY","CFG_OS","CFG_POINTER_WIDTH","CFG_TARGET_ARCH","CI_PLATFORM","DEBUG","FEATURES","FEATURES_STR","HOST","NUM_JOBS","OPT_LEVEL","PKG_AUTHORS","PKG_DESCRIPTION","PKG_HOMEPAGE","PKG_LICENSE","PKG_NAME","PKG_REPOSITORY","PKG_VERSION","PKG_VERSION_MAJOR","PKG_VERSION_MINOR","PKG_VERSION_PATCH","PKG_VERSION_PRE","PROFILE","RUSTC","RUSTC_VERSION","RUSTDOC","RUSTDOC_VERSION","TARGET","maybe_update","NamedTrip","RenameTrip","SavedTrips","TripManagement","TripManagementState","all","all_names","app_session_current_trip_name","app_type","app_type","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","autosave","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","current","current_name","deserialize","deserialize","draw","eq","from","from","from","from","get_panel_widget","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","len","load","mut_files","name","ne","new","new_name","new_state","next","on_click","on_click","panel_changed","prev","save","save_current_trip_to_session","serialize","serialize","set_current","state_type","state_type","sync_from_file_management","to_owned","trips","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","waypoints","CONFLICTING_TURN","CURRENT_TURN","TurnExplorer","as_any","as_any_mut","borrow","borrow_mut","color_turn_type","draw","draw_baselayer","event","from","idx","into","into_any","into_any_rc","l","make_panel","new_state","panel","try_from","try_into","type_id","vzip","ChooseSomething","FilePicker","PopupMsg","PromptInput","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cb","cb","checkbox_per_mode","cmp_count","cmp_dist","cmp_duration","color_for_mode","draw","draw","draw","draw_baselayer","draw_baselayer","draw_baselayer","event","event","event","from","from","from","from","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new_state","new_state","new_state","new_state","panel","panel","panel","percentage_bar","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","download_cities","prompt_to_download_missing_data","size_of_city","URLManager","as_any","as_any_mut","borrow","borrow_mut","change_camera","change_url_free_param","change_url_param","from","get_cam_param","into","into_any","into_any_arc","into_any_rc","must_update_url","parse_center_camera","try_from","try_into","type_id","update_url","update_url_cam","update_url_free_param","update_url_map_name","update_url_param","vzip","0","InputWaypoints","Waypoint","WaypointID","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","at","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","center","clone","clone_into","eq","equivalent","event","fmt","from","from","from","get_hash","get_panel_widget","get_waypoint_color","get_waypoint_text","get_waypoints","hash","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","label","len","ne","new","new","overwrite","rebuild_world","snap_to_endpts","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","waypoints"],"q":["map_gui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::ID","","","","","","","","","","map_gui::colors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::load","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::load::native_loader","","","","","","","","","","","","","","","","","","","","map_gui::options","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::agents","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::area","","","","","","","","","","","","","","","","","","","","map_gui::render::bike","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::building","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::car","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::intersection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::lane","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::parking_lot","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::pedestrian","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::road","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::traffic_signal","","","","","","map_gui::render::transit_stop","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::render::turn","","","","","","","","","","","","","","","","","","","","map_gui::simple_app","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::camera","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::city_picker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::colors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::command","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::compare_counts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::compare_counts::Obj","","map_gui::tools::heatmap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::icons","","map_gui::tools::importer","","","","","","","","","","","","","","","","","","","","","map_gui::tools::labels","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::minimap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::navigate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::title_screen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::title_screen::built_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::trip_files","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::turn_explorer","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::ui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::updater","","","map_gui::tools::url","","","","","","","","","","","","","","","","","","","","","","","","","map_gui::tools::waypoints","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An application wishing to use the tools in this crate has …","","","","","","","","","","","Simple app state that just renders a static map, without …","","","","","","","","","","Initially position the camera here. The format is an …","Change the color scheme. Idempotent. Return true if there …","","","","The color scheme for map elements, agents, and the UI.","A color scheme groups colors used for different map, …","","","","","Dev mode exposes experimental tools useful for debugging, …","","","","","","","","","","","","","","","","","","","","","","","","","Loading large resources (like maps, scenarios, and …","Create a <code>widgetry::State</code> that warps to the given point.","","","Path to a map to initially load. If not provided, load the …","","When making a screen recording, enable this option to hide …","","","","","","","","","Render static and dynamic map elements.","Custom per-app state can be stored here","","","","If desired, this can be advanced to render traffic signals …","","Assorted tools and UI states that’re useful for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable new stuff if true. This is temporary, to iterate …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Loads a JSON, bincoded, or raw file, then deserializes it","","","","","","","","","","","","","","","","","","","","","","","","","Even if the current map name matches, still reload.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Loads a JSON, bincoded, or raw file, then deserializes it","","","","","","","","","","","","","","","","","","","","","","","","","","","","Options controlling the UI. Some of the options are common …","","","Different ways of drawing traffic signals. The names of …","","","","","","","","","","","","","","","","","","Draw buildings in different perspectives","widgetry options","","","","","","","The color scheme for map elements, agents, and the UI.","Every time we draw, render all agents zoomed in. Extremely …","","","","Dev mode exposes experimental tools useful for debugging, …","When time warping, don’t draw to speed up simulation","","","","","","","","","","","","","","","","","","","","","","","","","","The delay threshold to halt on when jumping to the next …","Display roads and buildings in an alternate language, if …","Restore previous options. If the file is missing or the …","When making a screen recording, enable this option to hide …","","","","","","Draw building driveways.","How much to advance the sim with one of the speed controls","","","","Automatically change color_scheme based on simulation time …","How traffic signals should be rendered.","","","","","","","","","","","","","How to render geometric units","","","","","","","","","","","","Control how the map is drawn.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If the sim has highlighted people, then fade all others …","","","","","","","","","","","","","","Label every building.","","","","Default options for drawing a map.","","","","","","","","","","Don’t draw the current traffic signal state.","","","","","","","","","","This is controlled almost entirely by the minimap panel. …","","","","","","","","","","","","","","","","","","","","","If the sim time has changed or the unzoomed agent filters …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is controlled almost entirely by the minimap panel. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Find sections along the intersection polygon that aren’t …","","","","","","Draws both zebra crosswalks and unmarked crossings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unsorted, unexpanded, raw result.","","","","A simple variation of the one in game that shows all …","","","","","","","","","","","","","","","","","","","Build a single gigantic <code>GeomBatch</code> to render the entire map …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Simple app state that just renders a static map, without …","","","","","","","","","","","","","","","","","Initially position the camera here. The format is an …","","The color scheme for map elements, agents, and the UI.","","","","","Dev mode exposes experimental tools useful for debugging, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Path to a map to initially load. If not provided, load the …","","When making a screen recording, enable this option to hide …","Only select buildings, and work whether zoomed in or not.","","","","","","","","Options are passed in by each app, usually seeded with …","Assumes some defaults.","Custom per-app state can be stored here","","","If desired, this can be advanced to render traffic signals …","","","","","","","","","","","","","","","","","Represents the state of a widgetry Canvas.","Choose something from a menu, then feed the answer to a …","Lets the player switch maps.","","","","","Track the last map used, to resume next session.","","Labels roads when unzoomed. Label size and frequency …","","","","A 2D grid containing some arbitrary data.","","Click to add waypoints, drag them, see the list on a panel …","","","Customize the appearance and behavior of a minimap.","","","","","Display a message dialog.","Prompt for arbitrary text input, then feed the answer to a …","","Executes a command and displays STDOUT and STDERR in a …","","A title screen shared among all of the A/B Street apps.","Save sequences of waypoints as named trips. Basic file …","","A tool to explore all of the turns from a single lane.","Utilities for reflecting the current map and viewport in …","","","A standard way to group a home button back to the title …","","","","","","","","","","","","","A button to change maps, with default keybindings","","","Less is better","Shorter is better","Shorter is better","","","","","","","","","","","","Logically represents a 2D vector. Row-major ordering.","","","","Thresholds are Durations, in units of seconds","","Returns the path to an executable. Native-only.","Draw a goal marker pointing at something.","Make it clear the map can’t be interacted with right now.","Should the user be able to control the z-order visible? …","","","","A button to return to the title screen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Prompt to download a missing city. On either success or …","","","","","","Draw a start marker pointing at something.","","","","","","","","Generic UI tools. Some of this should perhaps be lifted to …","","","Returns the version of A/B Street to link to. When …","","","","","","","Represents the state of a widgetry Canvas.","Track the last map used, to resume next session.","","","","","","","","","","","","","","","","","","","","","","","","","","","Load the camera’s configuration for the specified map. …","Save the camera’s configuration for the specified map, …","","","","","","","","","","","","","Lets the player switch mapsxecutes a command and displays STDOUT and STDERR in a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Start with the relative layer if anything has changed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If a button owned by this was clicked, returns the new …","","","","","","","","","","","","","","","","","","","","","","","A 2D grid containing some arbitrary data.","","","","","","","","","","","","","","","Logically represents a 2D vector. Row-major ordering.","Thresholds are Durations, in units of seconds","","","","","","Calculate the index from a given (x, y). Doesn’t do any …","","","","","","","","","","","","","From one tile, calculate the 4 orthogonal neighbors. …","","","","","","","","","","","","","","","The inverse of <code>idx</code>. No bounds checking.","Draw a goal marker pointing at something.","Draw a start marker pointing at something.","","","","","","","","","","","","","","","","","","","","","","Labels roads when unzoomed. Label size and frequency …","","","","","","","","","","","","Label roads that the predicate approves","Only label major roads","","","","","","","","","","","","Customize the appearance and behavior of a minimap.","","","","","","","","","","Draw extra stuff on the minimap, just pulling from the app.","Draw extra stuff on the minimap, just pulling from the app.","","","","","Is there some additional layer displayed on the minimap? …","Is there some additional layer displayed on the minimap? …","Should the user be able to control the z-order visible? …","","","","","A row beneath the minimap in the zoomed view, usually used …","A row beneath the minimap in the zoomed view, usually used …","When unzoomed, display this panel. By default, no controls …","When unzoomed, display this panel. By default, no controls …","Controls to be placed to the left to the zoomed-in panel","Controls to be placed to the left to the zoomed-in panel","","","","","","","Called for <code>Outcome::Changed</code> on the panel.","Called for <code>Outcome::Changed</code> on the panel.","If a button is clicked that was produced by some method in …","If a button is clicked that was produced by some method in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A title screen shared among all of the A/B Street apps.","","","","","","","","","","","","","","","","","","","","","","","","","","Run the given executable with some arguments. On Mac and …","","","","","","","","","","","The build time in RFC2822, UTC.","The endianness, given by <code>CARGO_CFG_TARGET_ENDIAN</code>.","The toolchain-environment, given by <code>CARGO_CFG_TARGET_ENV</code>.","The OS-family, given by <code>CARGO_CFG_TARGET_FAMILY</code>.","The operating system, given by <code>CARGO_CFG_TARGET_OS</code>.","The pointer width, given by <code>CARGO_CFG_TARGET_POINTER_WIDTH</code>.","The target architecture, given by <code>CARGO_CFG_TARGET_ARCH</code>.","The Continuous Integration platform detected during …","Value of DEBUG for the profile used during compilation.","The features that were enabled during compilation.","The features as a comma-separated string.","The host triple of the rust compiler.","The parallelism that was specified during compilation.","Value of OPT_LEVEL for the profile used during compilation.","A colon-separated list of authors.","The description.","The homepage.","The license.","The name of the package.","The source repository as advertised in Cargo.toml.","The full version.","The major version.","The minor version.","The patch version.","The pre-release version.","<code>release</code> for release builds, <code>debug</code> for other builds.","The compiler that cargo resolved to use.","The output of <code>rustc -V</code>","The documentation generator that cargo resolved to use.","The output of <code>rustdoc -V</code>","The target triple that was being compiled for.","","","","","Save sequences of waypoints as named trips. Basic file …","","","","","","","","","","","","","","","saves iff current trip is changed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A tool to explore all of the turns from a single lane.","","","","","","","","","","","","","","","","","","","","","","Choose something from a menu, then feed the answer to a …","","Display a message dialog.","Prompt for arbitrary text input, then feed the answer to a …","","","","","","","","","","","","","","","","","","","","Less is better","Shorter is better","Shorter is better","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Prompt to download a missing city. On either success or …","How many bytes to download for a city?","Utilities for reflecting the current map and viewport in …","","","","","Parse an OSM-style <code>zoom/lat/lon</code> string …","","","","Get an OSM-style <code>zoom/lat/lon</code> string …","","","","","","Parse an OSM-style <code>zoom/lat/lon</code> string …","","","","","Modify the current URL to set –cam to an OSM-style …","Modify the current URL to change the first free parameter …","Modify the current URL to set the first free parameter to …","Modify the current URL to change the first named parameter …","","","Click to add waypoints, drag them, see the list on a panel …","","","","","","","","","","","","","","","","","","","","","If the outcome from the panel or world isn’t used by the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","The caller should call <code>rebuild_world</code> after this","The caller is responsible for calling <code>initialize_hover</code> and …","","","","","","","","","","","","","","",""],"i":[0,1,1,1,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,2,3,1,1,1,2,0,3,4,4,3,2,3,4,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,3,3,4,2,3,2,3,3,3,1,0,3,4,1,0,4,3,3,0,4,1,0,1,1,1,1,5,6,7,8,9,10,11,12,13,14,15,0,0,15,15,15,16,16,16,15,16,15,16,16,16,16,16,15,16,15,16,16,16,16,16,16,16,15,16,15,15,16,16,16,16,16,15,16,16,15,16,16,16,15,16,15,16,16,16,16,16,0,16,16,16,15,16,15,16,15,16,15,16,16,16,16,16,16,0,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,16,16,15,16,15,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,15,16,16,16,17,0,0,0,0,0,18,19,17,20,18,19,17,20,18,19,17,20,18,19,17,20,19,20,19,20,18,18,19,17,20,20,18,19,17,20,18,19,17,20,18,17,18,19,17,20,20,20,20,0,18,20,19,21,20,20,20,21,17,20,20,20,18,19,17,20,18,19,17,20,18,19,17,20,18,19,17,20,0,0,21,21,21,21,21,21,21,21,21,21,21,21,21,22,21,21,21,21,23,24,0,24,23,23,23,23,0,0,23,0,24,25,26,24,23,25,26,24,23,25,26,24,23,25,26,24,23,26,26,26,24,23,26,24,23,26,26,26,24,23,26,26,25,24,23,25,24,23,25,26,24,23,25,26,24,23,25,26,24,23,26,24,23,25,26,24,23,26,26,26,26,25,25,26,24,23,26,26,26,24,23,26,26,25,26,24,23,25,26,24,23,25,26,24,23,26,25,26,24,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,0,28,29,29,0,30,31,31,32,29,29,28,0,28,28,30,0,0,30,33,33,28,28,28,28,28,34,32,31,34,0,29,33,33,33,0,35,36,37,34,32,35,0,28,29,29,29,29,37,29,0,0,31,29,0,28,0,30,28,28,0,28,28,29,27,0,0,29,29,0,29,27,0,27,29,34,32,31,28,0,0,27,27,30,27,30,30,30,27,30,27,30,30,30,27,30,30,30,30,30,27,30,27,30,27,27,30,27,30,30,27,30,30,27,30,30,30,27,27,30,27,30,27,30,27,30,27,27,30,27,30,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,39,39,39,39,0,39,0,0,34,34,34,34,0,0,0,34,34,0,34,34,34,34,34,34,34,34,34,34,34,34,0,0,0,0,34,0,34,34,34,34,34,34,34,0,40,40,40,40,0,0,0,0,0,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,40,40,40,40,40,40,40,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,32,31,32,31,31,31,32,32,31,32,31,32,32,31,32,31,32,31,32,32,31,32,31,32,31,32,32,31,32,31,32,31,32,31,31,32,31,32,31,32,31,32,31,32,31,32,31,0,42,42,42,42,42,42,42,42,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,0,0,0,0,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,0,35,35,35,35,0,0,0,4,44,2,4,44,2,4,4,44,2,4,44,2,4,2,2,2,4,4,4,4,2,44,4,4,4,4,4,4,4,44,4,4,44,2,2,4,44,2,4,44,2,44,2,4,44,2,4,4,4,2,2,4,2,4,4,4,4,4,4,4,4,2,4,4,4,4,4,4,44,2,4,44,2,4,44,2,4,44,2,44,45,46,47,0,0,0,0,0,0,0,0,0,0,0,47,0,0,0,0,47,0,0,0,0,47,47,0,0,47,0,47,0,0,0,0,0,0,48,0,49,50,48,51,50,52,52,52,0,53,54,55,0,0,0,0,0,0,0,56,0,53,57,0,0,56,50,48,58,59,50,53,60,0,58,0,0,0,61,0,59,51,0,0,62,51,0,63,0,62,0,57,64,50,57,0,51,0,53,60,51,57,51,51,0,49,0,0,0,50,50,65,57,0,57,65,57,50,66,62,54,55,67,63,0,0,56,56,57,56,68,0,57,48,49,50,0,0,0,0,0,0,0,0,68,59,50,50,50,0,0,52,64,52,64,52,64,52,64,52,52,52,52,64,52,64,52,64,52,64,52,64,52,64,52,64,64,52,52,52,64,52,64,52,64,52,64,52,64,0,0,0,65,69,70,65,69,70,65,69,70,65,69,70,0,0,65,69,70,65,69,70,65,69,70,65,69,70,65,69,70,65,69,70,65,69,70,65,65,69,70,65,69,70,65,69,70,65,69,70,65,69,70,65,69,70,65,69,70,45,0,0,0,0,0,53,60,53,60,53,60,60,53,60,53,53,71,51,60,45,53,71,51,60,45,51,53,71,51,60,45,53,71,51,60,45,53,60,71,53,53,53,60,51,45,53,71,51,60,45,45,71,51,51,51,45,53,71,51,60,45,53,71,51,60,45,53,71,51,60,45,53,71,51,60,45,51,51,53,60,51,51,51,53,51,60,53,60,60,60,51,60,60,71,53,71,51,60,45,53,71,51,60,45,53,71,51,60,45,53,71,51,60,45,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,72,72,72,0,73,0,0,73,74,73,72,74,73,72,74,74,73,72,74,73,72,0,0,73,72,73,72,73,74,74,74,74,73,72,73,73,72,74,73,72,73,74,73,74,74,74,73,72,74,73,72,74,73,72,74,73,72,74,0,73,74,74,74,73,74,74,74,73,72,74,73,72,74,73,72,74,73,72,74,73,72,74,75,76,0,0,0,59,56,59,56,59,56,59,56,56,56,56,56,59,0,56,59,56,56,59,59,59,56,59,56,59,56,59,56,0,56,59,56,59,56,56,56,56,56,59,56,59,56,59,56,59,56,59,59,0,0,0,77,77,77,77,77,77,77,0,0,77,77,77,77,77,77,0,77,77,77,77,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,0,63,63,63,63,0,0,0,0,50,50,50,50,50,50,50,50,50,61,61,50,50,50,50,61,61,61,50,50,50,50,61,61,61,61,61,61,50,50,50,50,50,50,61,61,61,61,50,50,50,50,50,50,50,50,50,50,50,0,0,0,66,78,79,66,78,79,66,78,79,66,78,79,66,78,79,78,66,78,79,78,66,78,79,66,78,79,66,78,79,66,78,79,66,78,79,66,78,79,66,78,79,66,78,79,66,78,79,66,78,79,47,0,47,47,47,47,47,47,0,58,47,58,47,58,47,58,47,0,47,47,58,58,47,58,47,58,47,58,47,47,58,47,58,58,47,58,47,58,47,58,47,58,47,58,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,80,49,48,80,48,80,81,82,48,80,81,82,48,48,80,81,82,48,80,81,82,81,81,48,80,81,82,80,81,48,80,81,82,48,48,80,81,82,48,80,81,82,48,81,82,48,80,81,82,82,82,49,81,81,48,82,80,82,48,80,80,82,82,48,81,82,48,48,80,49,81,82,48,80,81,82,48,80,81,82,48,80,81,82,48,80,81,82,81,0,0,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,0,0,0,54,55,67,83,54,55,67,83,54,55,67,83,54,55,67,83,54,55,0,0,0,0,0,54,55,67,54,55,67,54,55,67,54,55,67,83,54,55,67,83,54,55,67,83,83,54,55,67,83,54,55,67,83,54,55,67,0,54,55,67,83,54,55,67,83,54,55,67,83,54,55,67,83,0,0,0,0,84,84,84,84,84,0,0,84,84,84,84,84,84,0,84,84,84,84,0,84,84,84,84,84,46,0,0,0,68,85,46,68,85,46,85,68,85,46,68,85,46,85,46,46,46,46,68,46,68,85,46,46,68,68,0,68,46,68,85,46,68,85,46,68,85,46,68,85,46,85,68,46,68,85,68,68,68,46,68,85,46,68,85,46,68,85,46,68,85,46,68],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["option",4,[["agentid",4]]]],[[],["any",8]],[[],["any",8]],[[],["buildingid",3]],[[],["intersectionid",3]],[[]],[[]],null,[[["eventctx",3],["colorschemechoice",4]],["bool",15]],[[],["id",4]],[[]],[[["id",4]],["ordering",4]],null,null,[[],["colorscheme",3]],null,null,[[["intersectionid",3]]],null,[[],["drawmap",3]],null,[[["gfxctx",3],["drawoptions",3]]],[[["id",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["transitstopid",3]]],[[["pedestrianid",3]]],[[["carid",3]]],[[["parkinglotid",3]]],[[]],[[["vec",3,[["pedestrianid",3]]]]],[[["buildingid",3]]],[[["intersectionid",3]]],[[["laneid",3]]],[[["roadid",3]]],[[["areaid",3]]],[[["agentid",4]],["id",4]],[[],["u64",15]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["pt2d",3],["option",4,[["f64",15]]],["option",4,[["id",4]]]],["box",3,[["state",8]]]],[[],["map",3]],null,null,[[["eventctx",3],["map",3],["timer",3]]],null,[[],["colorscheme",3]],[[],["drawmap",3]],[[],["options",3]],[[["id",4]],["bool",15]],null,[[],["options",3]],null,[[["id",4]],["option",4,[["ordering",4]]]],null,null,[[],["sim",3]],[[],["time",3]],null,null,[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,null,null,[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[],["vec",3,[["choice",3,[["colorschemechoice",4]]]]]],[[],["colorscheme",3]],[[],["colorschemechoice",4]],[[]],null,[[["roadrank",4]],["color",3]],null,[[],["colorscheme",3]],null,[[],["result",4]],null,null,[[["colorschemechoice",4]],["bool",15]],null,[[["str",15]],["result",6]],null,[[["formatter",3]],["result",6]],[[]],[[]],null,null,null,null,null,[[["str",15]],["color",3]],[[["str",15]],["result",6]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["style",3]],["colorscheme",3]],null,null,null,null,null,[[["usize",15]],["color",3]],[[["eventctx",3],["colorschemechoice",4]],["colorscheme",3]],[[],["colorscheme",3]],null,null,null,null,null,null,null,[[["str",15]],["result",6,[["colorschemechoice",4]]]],null,null,null,null,null,null,null,null,null,[[["usize",15]],["color",3]],[[["usize",15]],["color",3]],null,null,null,[[],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["colorscheme",3]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[["roadrank",4]],["color",3]],null,null,[[]],[[]],null,[[["roadrank",4]],["color",3]],[[["lanetype",4],["roadrank",4]],["color",3]],null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["gfxctx",3]]],[[["gfxctx",3]]],[[["eventctx",3]],["transition",4]],[[["eventctx",3]],["transition",4]],[[["eventctx",3],["mapname",3],["box",3,[["fnonce",8]]]],["box",3,[["state",8]]]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,null,null,[[["eventctx",3],["mapname",3],["box",3,[["fnonce",8]]]],["box",3,[["state",8]]]],[[["eventctx",3],["pin",3,[["box",3,[["send",8]]]]],["receiver",3,[["string",3]]],["receiver",3,[["string",3]]],["str",15],["box",3,[["fnonce",8]]]],["box",3,[["state",8]]]],null,null,null,null,null,null,[[["string",3],["timer",3]],["result",6,[["rawbytes",3]]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["gfxctx",3]]],[[["eventctx",3]],["transition",4]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["string",3],["box",3,[["fnonce",8]]]],["box",3,[["state",8]]]],null,null,[[["string",3],["timer",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["options",3]],[[],["trafficsignalstyle",4]],[[],["cameraangle",4]],[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[["gfxctx",3]]],[[["trafficsignalstyle",4]],["bool",15]],[[["cameraangle",4]],["bool",15]],[[["eventctx",3]],["transition",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[],["options",3]],null,[[["eventctx",3]],["box",3,[["state",8]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],null,null,null,null,null,[[]],[[]],null,null,null,null,null,[[["intersection",3],["map",3]],["vec",3,[["polygon",3]]]],null,null,[[["pt2d",3],["map",3]],["bool",15]],[[["gfxctx",3],["applike",8],["drawoptions",3]]],null,null,null,null,null,null,null,null,null,[[["drawcarinput",3],["map",3],["sim",3],["prerender",3],["colorscheme",3]],["box",3,[["renderable",8]]]],[[]],[[],["id",4]],[[["map",3]],["polygon",3]],[[],["isize",15]],[[["color",3],["option",4],["sim",3]],["color",3]],null,null,null,null,null,null,null,null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,null,null,null,[[],["drawoptions",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],null,[[["option",4,[["vehicletype",4]]]],["distance",3]],null,[[]],null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["bool",15]],null,[[]],[[]],[[]],[[]],[[],["bool",15]],null,[[["map",3],["sim",3],["colorscheme",3]],["quadtree",3]],[[],["bool",15]],null,[[],["unzoomedagents",3]],[[]],[[["unzoomedagent",3],["colorscheme",3]],["option",4,[["color",3]]]],[[["gfxctx",3],["map",3],["sim",3],["colorscheme",3],["options",3]]],[[["unzoomedagents",3]],["bool",15]],[[]],[[]],[[["traversable",4]],["vec",3,[["renderable",8]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["unzoomedagents",3]],["bool",15]],[[],["agentcache",3]],[[],["unzoomedagents",3]],[[],["bool",15]],null,[[["traversable",4],["map",3],["sim",3],["colorscheme",3],["prerender",3]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[["panel",3]]],[[]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["gfxctx",3],["applike",8],["drawoptions",3]]],[[["areatype",4],["colorscheme",3]],["fill",4]],[[]],[[],["id",4]],[[["map",3]],["polygon",3]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["area",3],["colorscheme",3],["geombatch",3]],["drawarea",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[["pt2d",3],["map",3]],["bool",15]],[[["gfxctx",3],["applike",8],["drawoptions",3]]],null,[[]],[[],["id",4]],[[["map",3]],["polygon",3]],[[],["isize",15]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["drawcarinput",3],["map",3],["sim",3],["prerender",3],["colorscheme",3]],["drawbike",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[["pt2d",3],["map",3]],["bool",15]],[[["gfxctx",3],["applike",8],["drawoptions",3]]],[[]],[[],["id",4]],[[["map",3]],["polygon",3]],[[],["isize",15]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["building",3],["map",3],["colorscheme",3],["options",3],["geombatch",3],["geombatch",3]],["drawbuilding",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[],["any",8]],[[],["any",8]],null,null,[[]],[[]],[[["pt2d",3],["map",3]],["bool",15]],[[["gfxctx",3],["applike",8],["drawoptions",3]]],null,[[]],[[],["id",4]],[[["map",3]],["polygon",3]],[[],["isize",15]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["drawcarinput",3],["map",3],["sim",3],["prerender",3],["colorscheme",3]],["drawcar",3]],[[["distance",3],["distance",3],["pt2d",3],["angle",3]],["polygon",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["drawcarinput",3],["sim",3],["colorscheme",3]],["color",3]],null,null,[[],["bool",15]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[["intersection",3],["road",3],["map",3]],["vec",3,[["polygon",3]]]],[[["intersection",3],["map",3]],["vec",3,[["polygon",3]]]],[[["intersection",3],["map",3]],["vec",3,[["polygon",3]]]],[[]],[[["pt2d",3],["map",3]],["bool",15]],[[["turn",3]],["option",4,[["line",3]]]],[[["gfxctx",3],["applike",8],["drawoptions",3]]],null,null,[[]],[[],["id",4]],[[["map",3]],["polygon",3]],[[["intersection",3],["map",3]],["vec",3,[["polyline",3]]]],[[],["isize",15]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["geombatch",3],["turn",3],["map",3],["colorscheme",3]]],[[["pt2d",3],["distance",3],["angle",3]],["polygon",3]],[[["geombatch",3],["turn",3],["map",3]],["bool",15]],[[["geombatch",3],["turn",3],["map",3],["colorscheme",3]]],[[["intersection",3],["map",3]],["drawintersection",3]],[[["line",3],["distance",3]],["line",3]],[[["applike",8]],["geombatch",3]],[[["roadwithstopsign",3],["map",3]],["option",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["applike",8],["buffertype",4],["lane",3],["geombatch",3]]],[[["lane",3],["road",3]],["vec",3,[["polygon",3]]]],[[["lane",3],["road",3]],["vec",3,[["polygon",3]]]],[[["lane",3],["map",3]],["vec",3,[["polygon",3]]]],[[["lane",3]],["vec",3,[["polygon",3]]]],[[["map",3],["lane",3]],["vec",3,[["polygon",3]]]],[[]],[[["pt2d",3],["map",3]],["bool",15]],[[["gfxctx",3],["applike",8],["drawoptions",3]]],null,[[]],[[],["id",4]],[[["map",3]],["polygon",3]],[[],["isize",15]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["lane",3],["road",3]],["drawlane",3]],[[["line",3],["distance",3]],["line",3]],null,[[["applike",8]],["geombatch",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[["areaid",3]],["drawarea",3]],[[["buildingid",3]],["drawbuilding",3]],[[["intersectionid",3]],["drawintersection",3]],[[["laneid",3]],["drawlane",3]],[[["bounds",3]],["vec",3,[["id",4]]]],[[["eventctx",3],["id",4],["applike",8],["agentcache",3]],["option",4,[["renderable",8]]]],[[["parkinglotid",3]],["drawparkinglot",3]],[[["roadid",3]],["drawroad",3]],[[["bounds",3],["map",3]],["vec",3,[["renderable",8]]]],[[["transitstopid",3]],["drawtransitstop",3]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["map",3],["options",3],["colorscheme",3],["timer",3]],["drawmap",3]],null,null,null,[[["intersectionid",3],["map",3]]],[[["road",3],["map",3]]],[[["map",3],["colorscheme",3],["eventctx",3],["timer",3]],["drawable",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["eventctx",3],["applike",8]],["geombatch",3]],null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[["pt2d",3],["map",3]],["bool",15]],[[["gfxctx",3],["applike",8],["drawoptions",3]]],null,[[]],[[],["id",4]],[[["map",3]],["polygon",3]],[[],["isize",15]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["parkinglot",3],["colorscheme",3],["geombatch",3]],["drawparkinglot",3]],[[["applike",8]],["geombatch",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,null,[[]],[[]],[[]],[[]],[[["pt2d",3],["map",3]],["bool",15]],[[["gfxctx",3],["applike",8],["drawoptions",3]]],[[["gfxctx",3],["applike",8],["drawoptions",3]]],null,null,[[]],[[]],[[["geombatch",3],["sim",3],["colorscheme",3],["drawpedestrianinput",3],["usize",15]]],[[],["id",4]],[[],["id",4]],[[["map",3]],["polygon",3]],[[["map",3]],["polygon",3]],[[],["isize",15]],[[],["isize",15]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["drawpedestrianinput",3],["usize",15],["map",3],["sim",3],["prerender",3],["colorscheme",3]],["drawpedestrian",3]],[[["drawpedcrowdinput",3],["map",3],["prerender",3],["colorscheme",3]],["drawpedcrowd",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[["pt2d",3],["map",3]],["bool",15]],[[["gfxctx",3],["applike",8],["drawoptions",3]]],null,[[["applike",8],["building",3],["geombatch",3]]],[[]],[[],["id",4]],[[["map",3]],["polygon",3]],[[],["isize",15]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["road",3]],["drawroad",3]],[[["applike",8]],["geombatch",3]],[[["applike",8]],["geombatch",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[["polyline",3]]],[[["movement",3],["prerender",3]],["geombatch",3]],[[["prerender",3],["stage",3],["usize",15],["intersectionid",3],["option",4,[["duration",3]]],["geombatch",3],["applike",8],["trafficsignalstyle",4]]],[[["prerender",3],["intersection",3],["usize",15],["geombatch",3]]],[[["applike",8],["prerender",3],["stage",3],["intersection",3],["usize",15],["duration",3],["geombatch",3]]],[[["movement",3],["prerender",3]],["geombatch",3]],null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,[[["pt2d",3],["map",3]],["bool",15]],[[["gfxctx",3],["applike",8],["drawoptions",3]]],null,[[]],[[],["id",4]],[[["map",3]],["polygon",3]],[[],["isize",15]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["transitstop",3],["map",3],["colorscheme",3]],["drawtransitstop",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["applike",8],["geombatch",3],["option",4,[["turnpriority",4]]]]],[[["prerender",3],["map",3],["colorscheme",3],["intersectionid",3],["usize",15]],["vec",3]],[[]],null,null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["f64",15],["polyline",3],["angle",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["canvas",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["eventctx",3],["bool",15],["bool",15]],["option",4,[["id",4]]]],null,[[],["app",3]],null,[[],["colorscheme",3]],null,null,[[["intersectionid",3]]],null,[[["gfxctx",3],["simpleapp",3]]],[[["gfxctx",3]]],[[],["drawmap",3]],null,[[["gfxctx",3]]],[[["gfxctx",3],["drawoptions",3]]],[[["gfxctx",3],["drawoptions",3]]],[[["canvas",3]]],[[["eventctx",3],["simpleapp",3]],["transition",4,[["simpleapp",3]]]],[[]],[[]],[[]],[[]],[[["argmatches",3]]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["pt2d",3],["option",4,[["f64",15]]],["option",4,[["id",4]]]],["box",3,[["state",8]]]],[[],["map",3]],null,[[],["mapname",3]],null,[[["eventctx",3],["map",3],["timer",3]]],null,[[["eventctx",3]],["option",4,[["id",4]]]],[[["eventctx",3]],["option",4,[["id",4]]]],[[],["colorscheme",3]],[[],["drawmap",3]],[[],["options",3]],[[["eventctx",3],["options",3],["mapname",3],["option",4,[["string",3]]],["fn",8]]],[[],["options",3]],null,[[["options",3]]],[[["eventctx",3]]],null,[[],["sim",3]],[[],["time",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3],["applike",8],["str",15]],["widget",3]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3],["applike",8]],["widget",3]],[[["eventctx",3],["applike",8],["btreeset",3]],["widget",3]],null,[[["text",3],["usize",15],["usize",15]]],[[["text",3],["applike",8],["distance",3],["str",15],["str",15]]],[[["text",3],["applike",8],["duration",3],["str",15],["str",15]]],[[["applike",8],["tripmode",4]],["color",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["map",3],["hashmap",3]],["geombatch",3]],null,[[["str",15]],["string",3]],[[["pt2d",3],["f64",15]],["geombatch",3]],[[["gfxctx",3],["applike",8]]],[[],["bool",15]],null,null,null,[[["eventctx",3]],["widget",3]],null,null,null,null,null,[[["btreeset",3],["map",3]],["btreeset",3,[["intersectionid",3]]]],null,null,null,null,null,null,[[],["text",3]],null,[[["eventctx",3],["geombatch",3],["bounds",3],["vec",3,[["pt2d",3]]],["heatmapoptions",3]],["widget",3]],null,null,null,null,null,null,null,[[],["tripmanagement",3]],null,[[["str",15]],["str",15]],[[["mapname",3]],["str",15]],null,null,null,null,[[["asref",8,[["str",15]]]]],null,null,null,null,null,null,null,null,null,null,[[["eventctx",3],["text",3],["f64",15]],["widget",3]],[[["eventctx",3],["mapname",3]],["transition",4,[["applike",8]]]],null,null,null,null,null,[[["pt2d",3],["f64",15]],["geombatch",3]],null,null,[[["eventctx",3]]],null,null,null,null,null,null,null,[[],["str",15]],null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],null,null,null,[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["mapname",3]],["bool",15]],[[["canvas",3],["mapname",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[["eventctx",3],["mapname",3],["option",4]],["transition",4,[["applike",8]]]],[[],["btreemap",3,[["string",3],["vec",3,[["cityname",3]]]]]],[[["gfxctx",3]]],[[["gfxctx",3]]],[[["gfxctx",3]]],[[],["drawbaselayer",4]],[[],["drawbaselayer",4]],[[],["drawbaselayer",4]],[[["eventctx",3]],["transition",4]],[[["eventctx",3]],["transition",4]],[[["eventctx",3]],["transition",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["box",3,[["fnonce",8]]],["cityname",3]],["box",3,[["state",8]]]],[[["eventctx",3],["box",3,[["fnonce",8]]]],["box",3,[["state",8]]]],[[["eventctx",3],["box",3,[["fnonce",8]]]],["box",3,[["state",8]]]],[[["eventctx",3],["box",3,[["fnonce",8]]],["str",15]],["box",3,[["state",8]]]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,[[["buildingid",3],["asref",8,[["str",15]]]]],[[["buildingid",3],["color",3]]],[[["intersectionid",3],["asref",8,[["str",15]]]]],[[["intersectionid",3],["color",3]]],[[["laneid",3],["asref",8,[["str",15]]]]],[[["laneid",3],["color",3]]],[[["parkinglotid",3],["color",3]]],[[["roadid",3],["asref",8,[["str",15]]]]],[[["roadid",3],["color",3]]],[[["transitstopid",3],["asref",8,[["str",15]]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["eventctx",3]]],[[["eventctx",3]],["togglezoomed",3]],[[["eventctx",3],["vec",3]],["widget",3]],null,null,null,null,[[["f64",15]],["option",4,[["color",3]]]],[[["f64",15]],["color",3]],[[]],[[]],[[]],[[]],[[]],[[["gradient",3]],["colorscale",3]],[[["eventctx",3],["colorscale",3],["vec",3,[["into",8,[["string",3]]]]]],["widget",3]],null,[[["f64",15],["f64",15]],["divergingscale",3]],null,[[["f64",15]]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["vec",3,[["into",8,[["string",3]]]]]],["widget",3]],null,null,null,null,null,[[["applike",8],["vec",3]],["colordiscrete",3]],[[["color",3],["color",3],["color",3]],["divergingscale",3]],[[["applike",8]],["colornetwork",3]],[[["applike",8],["vec",3]],["colordiscrete",3]],[[["applike",8]],["colornetwork",3]],[[["counter",3,[["intersectionid",3]]],["colorscale",3]]],[[["counter",3,[["roadid",3]]],["colorscale",3]]],[[["f64",15],["f64",15]],["divergingscale",3]],[[["counter",3,[["intersectionid",3]]],["colorscale",3]]],[[["counter",3,[["roadid",3]]],["colorscale",3]]],[[["eventctx",3],["color",3]],["widget",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,[[["gfxctx",3]]],[[["eventctx",3]],["transition",4]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,null,[[["eventctx",3],["bool",15],["vec",3,[["string",3]]],["box",3,[["fnonce",8]]]],["box",3,[["state",8]]]],null,null,null,[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["eventctx",3],["applike",8],["trafficcounts",3]],["togglezoomed",3]],[[["eventctx",3],["applike",8],["trafficcounts",3],["trafficcounts",3]],["togglezoomed",3]],[[],["obj",4]],[[],["layer",4]],[[]],[[]],[[["obj",4]],["ordering",4]],null,null,[[["gfxctx",3]]],[[["eventctx",3]],["comparecounts",3]],[[["obj",4]],["bool",15]],[[["layer",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["u64",15]],[[["eventctx",3]],["widget",3]],[[]],null,null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["applike",8]],["world",3,[["obj",4]]]],[[["obj",4]],["bool",15]],[[["eventctx",3],["applike",8],["trafficcounts",3],["trafficcounts",3],["layer",4]],["comparecounts",3]],[[["eventctx",3],["applike",8],["str",15]],["option",4,[["widget",3]]]],[[["eventctx",3]]],[[["obj",4]],["option",4,[["ordering",4]]]],[[["eventctx",3],["applike",8],["trafficcounts",3]]],null,[[["roadid",3]],["text",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["heatmapoptions",3]],[[]],null,null,null,[[["map",3],["hashmap",3]],["geombatch",3]],[[["heatmapoptions",3]],["bool",15]],[[]],[[]],[[["panel",3]],["heatmapoptions",3]],null,[[["usize",15],["usize",15]],["usize",15]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["geombatch",3],["bounds",3],["vec",3,[["pt2d",3]]],["heatmapoptions",3]],["widget",3]],[[["heatmapoptions",3]],["bool",15]],[[["usize",15],["usize",15]],["grid",3]],[[],["heatmapoptions",3]],[[["usize",15],["usize",15]],["vec",3]],null,null,null,[[["eventctx",3],["widget",3]],["vec",3,[["widget",3]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[["usize",15]]],[[["pt2d",3],["f64",15]],["geombatch",3]],[[["pt2d",3],["f64",15]],["geombatch",3]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["gfxctx",3]]],[[["eventctx",3]],["transition",4]],[[]],[[],["string",3]],[[],["result",6]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["box",3,[["fnonce",8]]]],["box",3,[["state",8]]]],null,null,[[["string",3]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["f64",15]]],[[["gfxctx",3],["applike",8]]],[[]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["box",3,[["fn",8]]]],["drawroadlabels",3]],[[],["drawroadlabels",3]],null,[[["gfxctx",3],["applike",8],["fn",8],["f64",15]],["drawable",3]],[[["string",3]],["option",4,[["string",3]]]],[[],["vec",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[],["any",8]],[[],["any",8]],null,[[]],[[]],null,null,[[["gfxctx",3]]],[[["gfxctx",3]]],[[["gfxctx",3]]],[[["gfxctx",3],["vec",3,[["drawable",3]]]]],[[["eventctx",3]],["option",4,[["transition",4]]]],[[]],[[],["panel",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3]],["widget",3]],[[["eventctx",3]],["widget",3]],[[["eventctx",3]],["panel",3]],[[["eventctx",3]],["panel",3]],[[["eventctx",3]],["widget",3]],[[["eventctx",3]],["widget",3]],[[["pt2d",3]]],[[],["panel",3]],[[["eventctx",3]],["minimap",3]],null,null,null,[[["eventctx",3],["panel",3]]],[[["eventctx",3],["panel",3]]],[[["eventctx",3],["str",15]],["option",4,[["transition",4]]]],[[["eventctx",3],["str",15]],["option",4,[["transition",4]]]],[[["eventctx",3]]],[[["eventctx",3]]],[[["eventctx",3],["usize",15]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[["gfxctx",3]]],[[["gfxctx",3]]],[[["gfxctx",3]]],null,[[["eventctx",3]],["transition",4]],[[["eventctx",3]],["transition",4]],[[["eventctx",3]],["transition",4]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3]],["box",3,[["state",8]]]],[[["eventctx",3],["vec",3,[["roadid",3]]]],["box",3,[["state",8]]]],[[["eventctx",3]],["box",3,[["state",8]]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],null,[[],["executable",4]],[[]],null,null,[[["executable",4]],["bool",15]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["executable",4],["box",3,[["fn",8]]]],["box",3,[["state",8]]]],[[["eventctx",3],["str",15],["panel",3]],["transition",4]],[[["eventctx",3],["vec",3,[["str",15]]]],["transition",4,[["applike",8]]]],[[["eventctx",3],["executable",4],["vec",3,[["str",15]]]],["transition",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3]],["widget",3]],null,null,null,null,null,null,null,[[],["option",4]],null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["namedtrip",3]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[["gfxctx",3]]],[[["namedtrip",3]],["bool",15]],[[]],[[]],[[]],[[]],[[["eventctx",3]],["widget",3]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["usize",15]],[[["applike",8]],["savedtrips",3]],[[],["tripmanagement",3]],null,[[["namedtrip",3]],["bool",15]],[[],["tripmanagement",3]],[[],["string",3]],[[["eventctx",3],["namedtrip",3],["savedtrips",3]],["box",3,[["state",8]]]],[[["str",15]],["option",4,[["namedtrip",3]]]],[[["eventctx",3],["str",15]],["option",4,[["transition",4]]]],[[["eventctx",3],["str",15],["panel",3]],["transition",4]],[[["eventctx",3],["panel",3]],["option",4,[["transition",4]]]],[[["str",15]],["option",4,[["namedtrip",3]]]],[[["applike",8]]],[[]],[[],["result",4]],[[],["result",4]],[[["str",15]]],null,null,[[["eventctx",3]]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["turntype",4]],["color",3]],[[["gfxctx",3]]],[[],["drawbaselayer",4]],[[["eventctx",3]],["transition",4]],[[]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["laneid",3],["usize",15]],["panel",3]],[[["eventctx",3],["laneid",3]],["box",3,[["state",8]]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["eventctx",3],["applike",8],["btreeset",3]],["widget",3]],[[["text",3],["usize",15],["usize",15]]],[[["text",3],["applike",8],["distance",3],["str",15],["str",15]]],[[["text",3],["applike",8],["duration",3],["str",15],["str",15]]],[[["applike",8],["tripmode",4]],["color",3]],[[["gfxctx",3]]],[[["gfxctx",3]]],[[["gfxctx",3]]],[[],["drawbaselayer",4]],[[],["drawbaselayer",4]],[[],["drawbaselayer",4]],[[["eventctx",3]],["transition",4]],[[["eventctx",3]],["transition",4]],[[["eventctx",3]],["transition",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["into",8,[["string",3]]],["vec",3,[["choice",3]]],["box",3,[["fnonce",8]]]],["box",3,[["state",8]]]],[[["eventctx",3],["str",15],["string",3],["box",3,[["fnonce",8]]]],["box",3,[["state",8]]]],[[["eventctx",3],["str",15],["vec",3]],["box",3,[["state",8]]]],[[["eventctx",3],["option",4,[["string",3]]],["box",3,[["fnonce",8]]]],["box",3,[["state",8]]]],null,null,null,[[["eventctx",3],["text",3],["f64",15]],["widget",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[["vec",3,[["string",3]]],["sender",3,[["string",3]]],["sender",3,[["string",3]]]]],[[["eventctx",3],["mapname",3]],["transition",4,[["applike",8]]]],[[["mapname",3]],["u64",15]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["eventctx",3],["option",4,[["string",3]]],["gpsbounds",3]],["bool",15]],[[["string",3],["str",15]],["string",3]],[[["string",3],["str",15],["str",15]],["string",3]],[[]],[[["eventctx",3],["gpsbounds",3]],["string",3]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["box",3,[["fn",8]]]]],[[["str",15],["gpsbounds",3]],["option",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["box",3,[["fn",8]]]],["result",6]],[[["eventctx",3],["gpsbounds",3]]],[[["string",3]]],[[["applike",8]]],[[["string",3],["string",3]]],[[]],null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["waypointid",3]],[[]],[[["waypointid",3]],["bool",15]],[[],["bool",15]],[[["applike",8],["outcome",4],["worldoutcome",4,[["waypointid",3]]]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["u64",15]],[[["eventctx",3]],["widget",3]],[[["usize",15]],["color",3]],[[["usize",15]],["char",15]],[[],["vec",3,[["tripendpoint",4]]]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[],["usize",15]],[[["waypointid",3]],["bool",15]],[[["applike",8]],["inputwaypoints",3]],[[["applike",8],["tripendpoint",4]],["waypoint",3]],[[["applike",8],["vec",3,[["tripendpoint",4]]]]],[[["eventctx",3],["world",3],["fn",8],["usize",15]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null],"p":[[4,"ID"],[3,"SimpleAppArgs"],[8,"AppLike"],[3,"SimpleApp"],[13,"Road"],[13,"Lane"],[13,"Intersection"],[13,"Building"],[13,"ParkingLot"],[13,"Car"],[13,"Pedestrian"],[13,"PedCrowd"],[13,"TransitStop"],[13,"Area"],[4,"ColorSchemeChoice"],[3,"ColorScheme"],[3,"RawBytes"],[3,"MapLoader"],[3,"MapAlreadyLoaded"],[3,"FutureLoader"],[3,"FileLoader"],[8,"Readable"],[4,"CameraAngle"],[4,"TrafficSignalStyle"],[3,"OptionsPanel"],[3,"Options"],[3,"AgentCache"],[3,"DrawMap"],[3,"DrawOptions"],[3,"UnzoomedAgents"],[3,"DrawPedCrowd"],[3,"DrawPedestrian"],[8,"Renderable"],[3,"DrawIntersection"],[3,"DrawMovement"],[3,"DrawArea"],[3,"DrawBuilding"],[3,"DrawBike"],[3,"DrawCar"],[3,"DrawLane"],[3,"DrawParkingLot"],[3,"DrawRoad"],[3,"DrawTransitStop"],[3,"SimpleWarper"],[3,"ColorScale"],[3,"WaypointID"],[4,"Executable"],[3,"TripManagement"],[8,"TripManagementState"],[3,"Minimap"],[3,"DivergingScale"],[3,"CameraState"],[3,"ColorDiscrete"],[3,"ChooseSomething"],[3,"PromptInput"],[3,"HeatmapOptions"],[3,"RunCommand"],[3,"TitleScreen"],[3,"Grid"],[3,"ColorNetwork"],[8,"MinimapControls"],[3,"TurnExplorer"],[3,"DrawRoadLabels"],[3,"DefaultMap"],[3,"CityPicker"],[3,"Navigator"],[3,"PopupMsg"],[3,"InputWaypoints"],[3,"AllCityPicker"],[3,"CitiesInCountryPicker"],[3,"ColorLegend"],[4,"Layer"],[4,"Obj"],[3,"CompareCounts"],[13,"Road"],[13,"Intersection"],[3,"ImportCity"],[3,"CrossStreet"],[3,"SearchBuildings"],[3,"RenameTrip"],[3,"NamedTrip"],[3,"SavedTrips"],[3,"FilePicker"],[3,"URLManager"],[3,"Waypoint"]]},\
"map_model":{"doc":"<code>map_model</code> describes the world where simulations occur. …","t":[12,12,12,12,12,12,12,3,13,3,4,3,3,4,13,13,13,13,13,13,13,13,3,13,13,13,4,3,3,4,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,4,3,13,13,13,13,13,13,3,3,13,13,13,13,3,4,13,4,4,3,4,3,13,13,13,13,13,13,13,13,13,3,3,3,4,13,13,3,13,13,3,3,4,13,13,13,13,13,13,17,17,3,3,3,13,13,3,13,3,17,3,13,13,4,13,17,13,13,3,3,3,4,3,4,4,3,4,13,13,3,3,13,13,13,13,3,13,13,13,13,3,13,13,13,13,13,13,3,3,3,3,3,17,13,13,13,13,13,4,13,3,4,13,13,13,13,13,13,13,13,13,13,3,3,3,3,4,3,13,13,3,4,4,13,3,13,13,13,13,13,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,11,12,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,0,11,11,11,12,12,12,12,0,12,12,12,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,0,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,11,12,11,12,11,12,12,12,12,12,12,12,12,11,12,12,12,0,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,12,12,11,12,11,12,12,12,12,12,11,0,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,0,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,11,11,11,12,12,12,12,12,11,12,12,12,12,12,12,11,12,11,11,11,12,11,12,12,12,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,0,11,11,11,12,12,12,12,12,11,12,12,12,12,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,17,12,11,11,12,11,12,11,11,11,11,12,11,11,11,11,11,13,13,13,3,13,13,13,4,4,3,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,0,12,12,12,12,12,12,12,12,3,3,5,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,13,13,13,13,4,3,4,3,3,13,13,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,12,0,11,11,11,12,12,11,11,11,12,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,5,11,11,11,11,11,12,0,12,12,5,5,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,12,11,12,12,12,12,12,12,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,5,13,13,13,13,4,4,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,3,11,11,0,0,11,11,11,0,12,11,11,11,0,11,12,5,0,0,0,12,0,11,0,0,5,11,11,0,11,11,0,5,5,5,5,17,5,5,5,5,5,3,3,3,11,11,11,11,11,11,12,12,12,11,11,11,0,12,12,12,12,12,11,11,11,0,12,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,17,3,3,12,11,11,11,11,12,12,11,11,5,5,11,11,12,5,12,12,5,11,11,12,5,5,12,12,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,3,17,11,11,12,11,12,11,12,5,12,11,11,11,5,11,17,17,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,11,11,12,12,5,5,5,11,11,11,12,12,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,13,3,13,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,12,3,3,4,13,13,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,4,3,13,13,13,13,3,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,12,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,13,13,3,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,13,13,13,4,13,4,13,13,13,13,13,3,3,3,4,13,17,13,13,17,13,13,17,17,17,13,13,13,13,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,12,5,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,12,11,11,11,12,5,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,12,11,11,11,12,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,13,3,4,13,13,13,3,3,3,4,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,17,3,13,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,12,11,5,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,11,11,11,11,12,12,12,11,11,11,12,11,11,11,12,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,3,3,4,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,17,17,17,13,17,17,13,17,17,13,3,17,17,4,17,17,17,13,3,4,17,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,13,13,4,13,3,13,11,12,12,12,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,0,11,11,0,5,11,11,11,11,11,11,11,11,11,11,11,11,0,12,5,0,0,0,11,11,0,5,13,13,13,4,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,11,11,11,11,11,11,11,5,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,4,11,11,12,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,5,11,11,11,11,11,11,11,11,11,12,11,11,11,13,13,13,3,3,4,13,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,11,11,11,11,11,12,12,12,12,13,13,13,13,4,3,11,11,11,11,11,11,11,11,12,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,5,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,12,12,13,13,13,3,4,11,11,11,11,11,11,11,11,12,11,11,5,11,12,5,11,11,11,11,5,11,11,11,12,11,5,12,12,12,12,12,12,12,13,13,3,3,3,3,3,3,3,3,3,4,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,12,12,12,12,12,12,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,17,17,3,4,13,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12],"n":["0","0","0","0","0","0","0","AccessRestrictions","Along","Amenity","AmenityType","Area","AreaID","AreaType","Back","Bank","Banned","Bar","Beauty","Bike","Bike","Biking","Block","Border","Both","Buffer","BufferType","Building","BuildingID","BuildingType","Bus","Bus","CacheCH","CacheDijkstra","Cafe","Car","CarRepair","CarShare","ChangeIntersection","ChangeRoad","ChangeRouteSchedule","Childcare","City","Closed","Commercial","CommonEndpoint","CompressedMovementID","Construction","Construction","Contraflow","ContraflowLane","ContraflowMovement","ContraflowTurn","ControlStopSign","ControlTrafficSignal","ConvenienceStore","Crosswalk","Culture","Curb","DirectedRoadID","Direction","Driving","DrivingSide","EditCmd","EditEffects","EditIntersection","EditRoad","Empty","Exercise","FastFood","Fixed","FlexPosts","Food","Fwd","GreenSpace","Hotel","Intersection","IntersectionCluster","IntersectionID","IntersectionType","Island","JerseyBarrier","Lane","Lane","Lane","LaneID","LaneSpec","LaneType","Laundry","Left","Left","Left","Library","LightRail","MAX_BIKE_SPEED","MAX_WALKING_SPEED","Map","MapConfig","MapEdits","MedianStrip","Medical","Movement","Movement","MovementID","NORMAL_LANE_THICKNESS","NamePerLanguage","NoCache","None","OffstreetParking","One","PARKING_LOT_SPOT_LENGTH","Park","Parking","ParkingLot","ParkingLotID","Path","PathConstraints","PathRequest","PathStep","PathStepV2","PathV2","PathfinderCaching","Pedestrian","PedestrianPlaza","Perimeter","PermanentMapEdits","Pet","Planters","Playground","Pool","Position","PostOffice","Private","Protected","PublicGarage","RawToMapOptions","Religious","Residential","ResidentialCommercial","Right","Right","Right","Road","RoadID","RoadSideID","RoadWithStopSign","RoutingParams","SIDEWALK_THICKNESS","School","SharedLeftTurn","SharedSidewalkCorner","Shopping","Shoulder","SideOfRoad","Sidewalk","Stage","StageType","StopSign","StopSign","Straight","Stripes","StudyArea","Supermarket","Tourism","TrafficSignal","TrafficSignal","Train","TransitRoute","TransitRouteID","TransitStop","TransitStopID","Traversable","Turn","Turn","Turn","TurnID","TurnPriority","TurnType","UTurn","UberTurn","University","UnmarkedCrossing","Variable","Water","Yield","Zone","access_restrictions","access_restrictions","added_turns","address","aisles","all_areas","all_buildings","all_costs_from","all_incoming_borders","all_intersections","all_lanes","all_outgoing_borders","all_parking_lots","all_roads","all_transit_routes","all_transit_stops","all_turns","all_zones","allow_through_traffic","alt_start","amenities","amenity_type","angle","apply_edits","area_type","areas","areas","avoid_high_stress","avoid_movements_between","avoid_roads","avoid_steep_incline_penalty","bike_lane_penalty","bikes_can_use_bus_lanes","biking_blackhole","blank","bldg_type","blocked_starts","borders","borrow","borrow_mut","boundary","boundary_polygon","bounds","building_to_road","buildings","bus_lane_penalty","center_pts","changed_intersections","changed_parking_lots","changed_roads","changed_roads","changed_routes","city","clear_custom_pathfinder_cache","clone","clone_into","commands","commands","complicated_turn_restrictions","config","connectivity","consolidate_all_intersections","constraints","cost","create_from_raw","crossed_so_far","crosswalk","crosswalk_backward","crosswalk_forward","currently_inside_ut","deleted_lanes","deleted_turns","deserialize","dir","dir","dir","dist_along","districts","driveway_geom","driveway_line","driving_blackhole","driving_lane_penalty","driving_pos","driving_pos","driving_side","dst","dst_i","dst_i","edit_road_cmd","edits","edits","edits_generation","edits_name","edits_name","elevation","end","end_border","extra_spots","find_b_by_osm_id","find_driving_lane_near_building","find_i_by_osm_id","find_r_by_osm_id","find_road_between","find_tr_by_gtfs","from","from","geom","geom","get_a","get_b","get_boundary_polygon","get_bounds","get_city_name","get_config","get_edits","get_edits_change_key","get_gps_bounds","get_i","get_i_edit","get_l","get_languages","get_movement_for_traffic_signal","get_movements_for","get_name","get_next_roads","get_next_turns_and_lanes","get_next_turns_and_lanes_for","get_parent","get_pl","get_r","get_r_edit","get_routes_serving_stop","get_stop_sign","get_t","get_tr","get_traffic_signal","get_transit_route","get_ts","get_turn_between","get_turns_for","get_turns_from_lane","get_turns_to_lane","gps_bounds","gtfs_id","gtfs_id","hack_add_area","hack_override_bldg_type","hack_override_offstreet_spots","hack_override_offstreet_spots_individ","hack_override_orig_spawn_times","hack_override_routing_params","i","id","id","id","id","id","id","id","id","id","id","id","id","idx","idx","incoming_lanes","incremental_edit_traffic_signal","inferred_sidewalks","interior","intersection_type","intersections","into","is_train_stop","is_unprotected_turn","keep_bldg_tags","keep_pathfinder_despite_edits","label_center","lane","lane_center_pts","lane_closest_to_edge","lane_type","lanes","lanes_ltr","levels","load_synchronously","long_name","lt","main_road_penalty","make","map","map_loaded_directly","map_name","max_elevation","maybe_get_a","maybe_get_b","maybe_get_i","maybe_get_l","maybe_get_pl","maybe_get_r","maybe_get_stop_sign","maybe_get_t","maybe_get_tr","maybe_get_traffic_signal","maybe_get_ts","members","members","members","merge_zones","merge_zones","merged","minify","modified_lanes","movements","must_apply_edits","must_stop","mut_lane","name","name","name","name","names","new_edits","objects","offset","offset","orig_id","orig_id","orig_id","orig_req","orig_spawn_times","original_intersections","osm","osm_id","osm_id","osm_tags","osm_tags","osm_tags","osm_tags","outgoing_lanes","parent","parent","parking","parking_lots","path","pathfind","pathfind","pathfind_v2","pathfind_v2_with_params","pathfind_with_params","pathfinder","pathfinder_dirty","percent_incline","perimeter","polygon","polygon","polygon","polygon","polygon","proposal_description","proposal_description","proposal_link","proposal_link","protected_movements","raw","recalculate_all_movements","recalculate_pathfinding_after_edits","recalculate_road_to_buildings","req","restrictions","road","road","road","road_to_buildings","road_to_buildings","roads","roads","roads","roads","route_type","routing_params","routing_params","save","save_edits","serialize","short_name","should_use_transit","side","sidewalk","sidewalk_line","sidewalk_pos","sidewalk_pos","sidewalk_pos","simple_path_btwn","simple_path_btwn_v2","skip_ch","spawn_times","speed_limit","speed_limit","spots","src","src_i","src_i","stage_type","stages","start","start","steps","steps","stop_signs","stops","street_parking_spot_length","to","to_owned","total_length","traffic_signals","transit_routes","transit_stops","transit_stops","traversable","try_apply_edits","try_from","try_into","turn_on_red","turn_restrictions","turn_type","turn_type","turns","type_id","uber_turns","uber_turns","uber_turns","unprotected_turn_penalty","unsaved_edits","untrimmed_center_pts","version","vzip","width","width","yield_movements","zones","zorder","0","0","1","num_housing_units","num_residents","0","i","id","new","new","new","old","old","old","r","0","0","0","0","0","1","1","0","0","0","0","0","0","0","0","0","0","1","2","0","0","City","POLYGON_EPSILON","areas","borrow","borrow_mut","boundary","deserialize","districts","from","from_huge_map","from_individual_maps","into","name","serialize","try_from","try_into","type_id","vzip","Border","Building","DirectedRoad","Item","LeaveMap","RideTransit","SidewalkEndpoint","Spot","WalkingNode","WalkingOptions","all_vehicle_costs_from","all_walking_costs_from","allow_shoulders","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","closest","cmp","cmp","cmp","cost","deserialize","deserialize","end_transit","eq","eq","eq","equivalent","equivalent","equivalent","find_scc","fmt","fmt","from","from","from","get_hash","get_hash","hash","hash","into","into","into","ne","ne","ne","node","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vehicle_cost","vzip","vzip","vzip","walking","walking_speed","0","0","0","0","0","0","1","Item","WalkingOptions","all_walking_costs_from","allow_shoulders","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","common_speeds","cost","default","default_speed","eq","equivalent","from","from","into","into","ne","node","partial_cmp","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","walking_speed","ChangeIntersection","ChangeRoad","ChangeRouteSchedule","Closed","EditCmd","EditEffects","EditIntersection","EditRoad","MapEdits","StopSign","TrafficSignal","access_restrictions","added_turns","apply","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","changed_intersections","changed_lanes","changed_parking_lots","changed_roads","changed_roads","changed_routes","check_lanes_ltr","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","commands","compat","compress","create_for_test","default","deleted_lanes","deleted_turns","describe","deserialize","diff","edits_name","eq","eq","eq","eq","fix_building_driveways","fix_parking_lot_driveways","fmt","fmt","fmt","fmt","from","from","from","from","from","get_checksum","get_orig_from_osm","get_title","into","into","into","into","into","lanes_ltr","load_from_bytes","load_from_file","merge_zones","modified_lanes","modify_lanes","ne","ne","ne","ne","new","original_intersections","perma","proposal_description","proposal_link","recalculate_intersection_polygon","recalculate_turns","save","serialize","speed_limit","to_owned","to_owned","to_owned","to_owned","to_perma","to_permanent","to_permanent","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","undo","update_derived","vzip","vzip","vzip","vzip","vzip","i","id","new","new","new","old","old","old","r","0","0","ChangeAccessRestrictions","ChangeLaneType","ChangeSpeedLimit","OriginalLane","ReverseLane","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deserialize","deserialize","deserialize","deserialize","deserialize","dir","dst_i","fix_adaptive_stages","fix_city_name","fix_f64s","fix_intersection_ids","fix_lane_widths","fix_map_name","fix_merge_zones","fix_offset","fix_old_lane_cmds","fix_phase_to_stage","fix_plans","fix_road_direction","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","id","id","id","idx","into","into","into","into","into","l","lookup","lt","new","new","num_back","num_fwd","old","old","orig_lt","parent","remove_vehicle_caps","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upgrade","vzip","vzip","vzip","vzip","vzip","walk","ChangeIntersection","ChangeRoad","ChangeRouteSchedule","Closed","PermanentEditCmd","PermanentEditIntersection","PermanentMapEdits","StopSign","TrafficSignal","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","commands","deserialize","deserialize","deserialize","edits_name","from","from","from","get_title","into","into","into","into_cmd","into_edits","into_edits_permissive","map_name","merge_zones","proposal_description","proposal_link","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","vzip","vzip","vzip","with_permanent","gtfs_id","i","new","new","new","old","old","old","r","0","must_stop","RawToMapOptions","borrow","borrow_mut","bridges","buildings","clap","clone","clone_into","collapse_intersections","consolidate_all_intersections","default","from","from_clap","initial","into","keep_bldg_tags","match_points_to_lanes","merge_intersections","parking_lots","remove_disconnected","skip_ch","snappy","to_owned","traffic_signals","transit","trim_path","try_from","try_into","turns","type_id","vzip","walking_turns","find_bridges","classify_bldg","get_address","make_all_buildings","SHORT_THRESHOLD","collapse","collapse_intersection","is_cycleway","should_collapse","trim_deadends","InitialMap","Intersection","Road","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounds","dst_i","elevation","from","from","from","geometry","half_width","id","id","intersection_type","intersections","into","into","into","lane_specs","lane_specs_ltr","new","new","osm_tags","polygon","roads","roads","src_i","trimmed_center_pts","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","DEGENERATE_INTERSECTION_HALF_LENGTH","Piece","RoadLine","back_pl","borrow","borrow","borrow_mut","borrow_mut","center","center_pl","clone","clone_into","close_off_polygon","deadend","from","from","fwd_pl","generalized_trim_back","id","id","intersection_polygon","into","into","left","on_off_ramp","pretrimmed_geometry","right","sorting_pt","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","get_lane_specs_ltr","osm_separation_type","angle","connects_dual_carriageway","merge_short_roads","should_merge","infer_spots","line_valid","make_all_parking_lots","snap_driveway","remove_disconnected_roads","Cycleway","DEBUG_OUTPUT","borrow","borrow_mut","center","from","id","into","layer","snap_cycleways","total_width","try_from","try_into","type_id","v1","vzip","PROTECTED","YIELD","all_walk_all_yield","degenerate","expand_all_stages","four_way_four_stage","four_way_two_stage","get_possible_policies","greedy_assignment","half_signal","lagging_green","make_stages","new","stage_per_road","synchronize","three_way","add_stage","four_way_four_stage","is_conflict","make_crosswalk_variable","make_lagging_green_variable","make_signal","make_traffic_signal","merge_stages","movements","movements_from","multi_way_stages","optimize","protected_yield_stage","remove_movement","straight_types","three_way_three_stage","BorderSnapper","borrow","borrow_mut","bus_incoming_borders","bus_outgoing_borders","create_route","create_stop","finalize_transit","from","into","new","train_incoming_borders","train_outgoing_borders","try_from","try_into","type_id","vzip","curvey_turn","ensure_unique","expected_turn_types_for_four_way","make_all_turns","make_vehicle_turns","remove_merging_turns","turn_type_from_angles","verify_vehicle_connectivity","baseline_geometry","filter_turns","make_crosswalk","make_shared_sidewalk_corner","make_walking_turns","turn_id","DrivingSide","Left","MapConfig","Right","bikes_can_use_bus_lanes","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","driving_side","eq","fmt","fmt","from","from","inferred_sidewalks","into","into","serialize","serialize","street_parking_spot_length","to_owned","to_owned","try_from","try_from","try_into","try_into","turn_on_red","type_id","type_id","vzip","vzip","area","block","building","intersection","lane","movement","parking_lot","road","stop_signs","traffic_signals","transit","turn","zone","0","Area","AreaID","AreaType","Island","MedianStrip","Park","PedestrianPlaza","StudyArea","Water","area_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","deserialize","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","get_hash","get_hash","hash","hash","id","into","into","into","ne","osm_id","osm_tags","partial_cmp","polygon","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Block","LOSSLESS_BLOCKFINDING","Perimeter","borrow","borrow","borrow_mut","borrow_mut","calculate_coloring","clone","clone","clone_into","clone_into","collapse_deadends","contains","deserialize","deserialize","find_all_single_blocks","find_roads_to_skip_tracing","fmt","from","from","interior","into","into","merge_all","partition_by_predicate","perimeter","polygon","restore_invariant","roads","serialize","serialize","single_block","to_block","to_owned","to_owned","try_from","try_from","try_into","try_into","try_to_merge","type_id","type_id","undo_invariant","vzip","vzip","0","0","Amenity","AmenityType","AmenityTypeIter","Bank","Bar","Beauty","Bike","Building","BuildingID","BuildingType","Cafe","CarRepair","CarShare","Childcare","Commercial","ConvenienceStore","Culture","Empty","Exercise","FastFood","Food","GreenSpace","Hotel","Laundry","Library","Medical","NamePerLanguage","OffstreetParking","Pet","Playground","Pool","PostOffice","Private","PublicGarage","Religious","Residential","ResidentialCommercial","School","Shopping","Supermarket","Tourism","University","address","all","amenities","amenity_type","back_idx","biking_connection","bldg_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","categorize","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","driveway_geom","driving_connection","eq","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","get","get","get_hash","has_amenity","has_residents","hash","house_number","id","idx","into","into","into","into","into","into","into","into","into_iter","iter","label_center","len","levels","marker","name","names","ne","ne","ne","new","next","next_back","nth","num_parking_spots","orig_id","osm_tags","osm_tags","parking","partial_cmp","partial_cmp","partial_cmp","polygon","serialize","serialize","serialize","serialize","serialize","serialize","sidewalk","sidewalk_pos","sidewalk_to_bike","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","unnamed","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","1","num_housing_units","num_residents","0","0","1","1","0","Border","Construction","Intersection","IntersectionID","IntersectionType","StopSign","TrafficSignal","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","deserialize","deserialize","deserialize","elevation","eq","eq","equivalent","equivalent","find_road_between","fmt","fmt","fmt","fmt","from","from","from","get_hash","get_hash","get_incoming_lanes","get_outgoing_lanes","get_rank","get_road_sides_sorted_by_incoming_angle","get_roads_sorted_by_incoming_angle","get_sorted_incoming_roads","get_zorder","hash","hash","id","incoming_lanes","intersection_type","into","into","into","is_border","is_closed","is_cycleway","is_deadend","is_degenerate","is_footway","is_incoming_border","is_light_rail","is_outgoing_border","is_private","is_stop_sign","is_traffic_signal","merged","movements","name","ne","orig_id","outgoing_lanes","partial_cmp","polygon","roads","serialize","serialize","serialize","some_incoming_road","some_outgoing_road","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","turn_to_movement","turns","type_id","type_id","type_id","vzip","vzip","vzip","Biking","Both","Buffer","BufferType","Bus","CommonEndpoint","Construction","Curb","Driving","FlexPosts","JerseyBarrier","Lane","LaneID","LaneSpec","LaneType","LightRail","NORMAL_LANE_THICKNESS","None","One","PARKING_LOT_SPOT_LENGTH","Parking","Planters","SERVICE_ROAD_LANE_THICKNESS","SHOULDER_THICKNESS","SIDEWALK_THICKNESS","SharedLeftTurn","Shoulder","Sidewalk","Stripes","assemble_ltr","biking_blackhole","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","common_endpoint","decode_u32","describe","deserialize","deserialize","deserialize","deserialize","deserialize","dir","dir","dist_along_of_point","driving_blackhole","dst_i","dummy","encode_u32","end_line","endpoint","eq","eq","eq","eq","equivalent","equivalent","equivalent","first_line","first_pt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_char","from_short_name","get_directed_parent","get_hash","get_hash","get_hash","get_lane_level_turn_restrictions","get_nearest_side_of_road","get_thick_polygon","hash","hash","hash","id","intersections","into","into","into","into","into","into","is_biking","is_bus","is_driving","is_for_moving_vehicles","is_light_rail","is_parking","is_shoulder","is_sidewalk","is_walkable","is_walkable","lane_center_pts","lane_type","last_line","last_pt","length","lt","ne","ne","ne","new","number_parking_spots","offset","parse_turn_type_from_osm","partial_cmp","partial_cmp","partial_cmp","road","serialize","serialize","serialize","serialize","serialize","short_name","src_i","supports_any_movement","to_char","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transit_stops","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","typical_lane_widths","vzip","vzip","vzip","vzip","vzip","vzip","width","width","0","0","CompressedMovementID","Movement","MovementID","angle","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","conflicts_with","crosswalk","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","for_i","from","from","from","from","geom","get_hash","get_hash","hash","hash","i","id","idx","into","into","into","members","movement_geom","ne","ne","ne","parent","partial_cmp","partial_cmp","serialize","serialize","serialize","src_center_and_width","to","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","turn_type","type_id","type_id","type_id","vzip","vzip","vzip","0","ParkingLot","ParkingLotID","aisles","borrow","borrow","borrow_mut","borrow_mut","capacity","clone","clone","clone_into","clone_into","cmp","deserialize","deserialize","driveway_line","driving_pos","eq","equivalent","extra_spots","fmt","fmt","from","from","get_hash","hash","id","into","into","ne","osm_id","partial_cmp","polygon","serialize","serialize","sidewalk_line","sidewalk_pos","spots","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","Back","DirectedRoadID","Direction","Fwd","Left","Right","Road","RoadID","RoadSideID","SideOfRoad","access_restrictions","access_restrictions_from_osm","all_transit_stops","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","both_directions","center_pts","children","children_backwards","children_forwards","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","common_endpoint","complicated_turn_restrictions","crosswalk_backward","crosswalk_forward","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dir","dir_and_offset","directed_id_from","directed_id_to","dst_i","dst_i","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","find_closest_lane","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_detailed_rank","get_dir_change_pl","get_half_polygon","get_half_width","get_hash","get_hash","get_hash","get_hash","get_hash","get_lanes_between","get_left_side","get_name","get_outermost_lane","get_rank","get_thick_polygon","get_width","get_zone","has_lanes","hash","hash","hash","hash","hash","high_stress_for_bikes","id","incoming_lanes","into","into","into","into","into","into","is_cycleway","is_driveable","is_extremely_short","is_footway","is_light_rail","is_private","is_service","lane_specs","lanes","lanes","length","must_get_sidewalk","ne","ne","ne","opposite","orig_id","osm_tags","other_endpt","other_side","parking_to_driving","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","percent_incline","recreate_lanes","road","road","serialize","serialize","serialize","serialize","serialize","serialize","side","speed_limit","speed_limit_from_osm","src_i","src_i","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","turn_restrictions","type_id","type_id","type_id","type_id","type_id","type_id","untrimmed_center_pts","vzip","vzip","vzip","vzip","vzip","vzip","zorder","ControlStopSign","RoadWithStopSign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","flip_sign","fmt","fmt","from","from","get_priority","id","into","into","lane_closest_to_edge","must_stop","ne","ne","new","roads","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CROSSWALK_PACE","ControlTrafficSignal","Fixed","Stage","StageType","Variable","adjust_major_minor_timing","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","convert_to_ped_scramble","convert_to_ped_scramble_without_promotion","could_be_protected","deserialize","deserialize","deserialize","edit_movement","enforce_minimum_crosswalk_time","eq","eq","eq","export","export_movement","find_r","fmt","fmt","fmt","from","from","from","get_min_crossing_time","get_possible_policies","get_priority_of_movement","get_priority_of_turn","id","import","import_movement","internal_convert_to_ped_scramble","into","into","into","max_crosswalk_time","missing_turns","ne","ne","ne","new","new","offset","protected_movements","serialize","serialize","serialize","simple_cycle_duration","simple_duration","stage_type","stages","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate","validating_new","vzip","vzip","vzip","yield_movements","0","0","1","2","0","TransitRoute","TransitRouteID","TransitStop","TransitStopID","all_path_requests","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","deserialize","deserialize","deserialize","deserialize","driving_pos","end_border","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","get_hash","get_hash","gtfs_id","gtfs_id","hash","hash","id","id","idx","into","into","into","into","is_train_stop","long_name","name","ne","ne","ne","orig_spawn_times","partial_cmp","partial_cmp","plural_noun","route_type","serialize","serialize","serialize","serialize","short_name","sidewalk","sidewalk_pos","spawn_times","start","stops","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Banned","Crosswalk","Left","Protected","Right","SharedSidewalkCorner","Straight","Turn","TurnID","TurnPriority","TurnType","UTurn","UnmarkedCrossing","Yield","angle","between_sidewalks","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","conflicts_with","crosswalk_over_road","deserialize","deserialize","deserialize","deserialize","dst","eq","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","geom","get_hash","hash","id","into","into","into","into","is_crossing_arterial_intersection","ne","ne","parent","partial_cmp","partial_cmp","partial_cmp","pedestrian_crossing","penalty","permitted_by_lane","permitted_by_road","serialize","serialize","serialize","serialize","src","to_movement","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","turn_type","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AccessRestrictions","Zone","allow_through_traffic","borders","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","floodfill","fmt","fmt","from","from","into","into","make_all","members","ne","ne","new","restrictions","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","Arterial","ENDPT_BACK","ENDPT_FWD","HIGHWAY","Highway","INFERRED_PARKING","INFERRED_SIDEWALKS","Local","MAXSPEED","NAME","Node","NodeID","OSM_REL_ID","OSM_WAY_ID","OsmID","PARKING_BOTH","PARKING_LEFT","PARKING_RIGHT","Relation","RelationID","RoadRank","SIDEWALK","Way","WayID","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","deserialize","deserialize","deserialize","deserialize","detailed_from_highway","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_highway","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","inner","into","into","into","into","into","ne","ne","ne","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","0","0","Bike","Bus","Car","PathConstraints","Pedestrian","RoutingParams","Train","all","avoid_high_stress","avoid_movements_between","avoid_roads","avoid_steep_incline_penalty","bike_lane_penalty","bitand","bitor","bitxor","borrow","borrow","borrow_mut","borrow_mut","bus_lane_penalty","can_use","can_use_road","clone","clone","clone_into","clone_into","cmp","default","deserialize","deserialize","deserialize","driving_lane_penalty","engine","enum_from_u32","enum_into_u32","eq","eq","eq","equivalent","filter_lanes","fmt","from","from","from_lt","into","into","main_road_penalty","ne","node_map","not","partial_cmp","pathfinder","round","serialize","serialize","serialize","sub","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uber_turns","unprotected_turn_penalty","unround","v1","v2","vehicles","vzip","vzip","walking","zone_cost","CH","CH","CHSeedingNodeOrdering","CreateEngine","Dijkstra","Dijkstra","Empty","PathfindEngine","all_costs_from","borrow","borrow","borrow_mut","borrow_mut","calculate_path","calculate_path_multiple_sources_and_targets","clone","clone_into","create","deserialize","from","from","into","into","is_dijkstra","reuse_ordering","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","graph","graph","path_calc","InnerNodeMap","NodeMap","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","deserialize_nodemap","from","from","get","get_or_insert","guarantee_node_ordering","id_to_node","id_to_node","into","into","new","node_to_id","serialize","to_owned","translate_id","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CacheCH","CacheDijkstra","NoCache","Pathfinder","PathfinderCaching","all_costs_from","apply_edits","bike_graph","borrow","borrow","borrow_mut","borrow_mut","bus_graph","cached_alternatives","car_graph","clear_custom_pathfinder_cache","clone","clone","clone_into","clone_into","deserialize","empty","eq","from","from","into","into","new","new_limited","params","pathfind","pathfind_with_params","serialize","should_use_transit","to_owned","to_owned","train_graph","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","walking_graph","walking_with_transit_graph","IntersectionCluster","UberTurn","UberTurnV2","autodetect","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","deserialize","deserialize","entry","entry","eq","eq","equivalent","exit","exit","find_all","flood","fmt","fmt","from","from","from","geom","into","into","into","into_v2","members","ne","ne","new","partial_cmp","path","path","serialize","serialize","to_owned","to_owned","trace_back","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uber_turns","vzip","vzip","vzip","ContraflowLane","ContraflowTurn","Lane","Path","PathRequest","PathStep","Turn","about_to_start_ut","add","alt_start","as_lane","as_traversable","as_turn","between_buildings","between_directed_roads","blocked_starts","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","constraints","crossed_so_far","crossed_so_far","current_step","currently_inside_ut","currently_inside_ut","deduplicate","deserialize","deserialize","deserialize","dist_crossed_from_step","end","eq","eq","eq","equivalent","equivalent","estimate_duration","exact_slice","fmt","fmt","fmt","fmt","from","from","from","get_blocked_starts","get_hash","get_req","get_step_at_dist_along","get_steps","get_total_elevation_change","hash","into","into","into","is_empty","is_last_step","is_upcoming_uber_turn_component","isnt_last_step","last_step","leave_from_driveway","max_speed_along","max_speed_and_incline_along","maybe_next_step","modify_step","ne","ne","ne","new","next_step","one_step","orig_req","partial_cmp","percent_dist_crossed","serialize","serialize","serialize","shift","start","steps","to_owned","to_owned","to_owned","to_string","total_length","total_length","trace","trace_from_start","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uber_turns","validate_continuity","validate_restrictions","validate_zones","vehicle","vzip","vzip","vzip","walking","0","0","0","0","Along","Contraflow","ContraflowMovement","Movement","PathStepV2","PathV2","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cost","deserialize","deserialize","find_uber_turns","fmt","fmt","from","from","from_roads","get_cost","get_req","get_steps","into","into","into_v1","into_v1_walking","new","req","serialize","serialize","steps","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uber_turns","vzip","vzip","0","0","0","0","Node","Road","UberTurn","VehiclePathfinder","all_costs_from","apply_edits","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","constraints","deserialize","deserialize","empty","engine","eq","equivalent","fmt","from","from","get_hash","hash","into","into","make_input_graph","ne","new","nodes","params","partial_cmp","pathfind","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uber_turns","vehicle_cost","vzip","vzip","0","0","LeaveMap","RideTransit","SidewalkEndpoint","SidewalkPathfinder","WalkingNode","all_costs_from","apply_edits","borrow","borrow_mut","clone","clone_into","deserialize","empty","engine","from","into","make_input_graph","new","nodes","one_step_walking_path","pathfind","serialize","should_use_transit","to_owned","transit_input_graph","try_from","try_into","type_id","use_transit","vzip","walking_path_to_steps","0","0","0","1","0","1","2","BanTurns","OnlyAllowTurns","OriginalRoad","RawArea","RawBuilding","RawIntersection","RawMap","RawParkingLot","RawRoad","RawTransitRoute","RawTransitStop","RestrictionType","TurnRestriction","amenities","area_type","areas","as_string_code","auto_mark_junctions","blank","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boundary_polygon","buildings","can_delete_intersection","center_points","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closest_intersection","cmp","cmp","cmp","common_endpt","complicated_turn_restrictions","config","crosswalk_backward","crosswalk_forward","delete_intersection","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","elevation","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get_city_name","get_geometry","get_hash","get_hash","get_hash","get_zorder","gps_bounds","gtfs_id","gtfs_id","hash","hash","hash","i1","i2","intersection_type","intersections","into","into","into","into","into","into","into","into","into","into","into","is_cycleway","is_footway","is_light_rail","is_service","length","long_name","merge_short_road","move_intersection","name","name","ne","ne","ne","ne","new","new","new_osm_node_id","new_osm_way_id","num_parking_spots","osm_id","osm_id","osm_tags","osm_tags","osm_tags","osm_tags","osm_way_id","parking_aisles","parking_lots","partial_cmp","partial_cmp","partial_cmp","path_dist_to","percent_incline","point","polygon","polygon","polygon","position","preview_intersection","public_garage_name","roads","roads_per_intersection","route_type","run_all_simplifications","save","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","shape","short_name","stops","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transit_routes","transit_stops","trim_roads_for_merging","trimmed_road_geometry","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","turn_restrictions","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Lane","MAX_BIKE_SPEED","MAX_WALKING_SPEED","Position","Traversable","Turn","as_lane","as_turn","bike_speed_on_incline","borrow","borrow","borrow_mut","borrow_mut","buffer_dist","clone","clone","clone_into","clone_into","cmp","cmp","deserialize","deserialize","dist_along","dist_along","end","eq","eq","equiv_pos","equiv_pos_for_long_object","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","get_hash","get_polyline","get_zorder","hash","into","into","lane","lane","max_speed_along_movement","max_speed_along_road","maybe_lane","maybe_turn","min_dist","ne","ne","new","partial_cmp","partial_cmp","pt","pt_and_angle","serialize","serialize","start","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","walking_speed_on_incline","0","0"],"q":["map_modelmap_model::BuildingType","","","","","map_model::CommonEndpoint","map_model::EditCmd","","","","","","","","","map_model::EditIntersection","","map_model::LaneType","map_model::OffstreetParking","","","","map_model::PathStep","","","","map_model::PathStepV2","","","","map_model::StageType","","","","map_model::Traversable","","map_model::city","","","","","","","","","","","","","","","","","","map_model::connectivity","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::connectivity::Spot","","","map_model::connectivity::WalkingNode","","","","map_model::connectivity::walking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::edits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::edits::EditCmd","","","","","","","","","map_model::edits::EditIntersection","","map_model::edits::compat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::edits::perma","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::edits::perma::PermanentEditCmd","","","","","","","","","map_model::edits::perma::PermanentEditIntersection","","map_model::make","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::make::bridges","map_model::make::buildings","","","map_model::make::collapse_intersections","","","","","","map_model::make::initial","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::make::initial::geometry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::make::initial::lane_specs","","map_model::make::merge_intersections","","","","map_model::make::parking_lots","","","","map_model::make::remove_disconnected","map_model::make::snappy","","","","","","","","","","","","","","","","map_model::make::traffic_signals","","","","","","","","","","","","","","","","map_model::make::traffic_signals::lagging_green","","","","","","","","","","","","","","","","map_model::make::transit","","","","","","","","","","","","","","","","","map_model::make::turns","","","","","","","","map_model::make::walking_turns","","","","","","map_model::map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects","","","","","","","","","","","","","map_model::objects::area","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::buildingmap_model::objects::building::BuildingType","","","","","map_model::objects::building::OffstreetParking","","","","map_model::objects::intersection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::lanemap_model::objects::lane::CommonEndpoint","map_model::objects::lane::LaneType","map_model::objects::movement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::parking_lot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::roadmap_model::objects::stop_signs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::traffic_signals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::traffic_signals::StageType","","","","map_model::objects::transit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::turn","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::objects::zone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::osm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::osm::OsmID","","","map_model::pathfind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::pathfind::engine","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::pathfind::engine::CreateEngine","map_model::pathfind::engine::PathfindEngine","","","map_model::pathfind::node_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::pathfind::pathfinder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::pathfind::uber_turns","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::pathfind::v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::pathfind::v1::PathStep","","","","map_model::pathfind::v2","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::pathfind::v2::PathStepV2","","","","map_model::pathfind::vehicles","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::pathfind::vehicles::Node","","map_model::pathfind::walking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::pathfind::walking::WalkingNode","","","","map_model::raw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::traversable","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","map_model::traversable::Traversable",""],"d":["","","","","","","","","Original direction","A business located inside a building.","Businesses are categorized into one of these types.","Areas are just used for drawing.","","","","","For stop signs: Can’t currently specify this! For …","","","","","","A block is defined by a perimeter that traces along the …","","Two lanes/roads share both endpoints, because they both …","","","A building has connections to the road and sidewalk, may …","","","","","Create a slow-to-build but fast-to-use contraction …","Create a fast-to-build but slow-to-use Dijkstra-based …","","","","","","","","","A single city (like Seattle) can be broken down into …","","An estimated number of workers","","This is cheaper to store than a MovementID. It simply …","","","Opposite direction, sidewalks only","Sidewalks only!","","","","A traffic signal consists of a sequence of Stages that …","","A marked zebra crossing, where pedestrians usually have …","","A raised curb","","","","","","","","","","","","","Flex posts, wands, cones, other “weak” forms of …","","","","","An intersection connects roads. Most have &gt;2 roads and are …","This only applies to VehiclePathfinder; walking through …","","","","Solid barrier, no gaps.","A road segment is broken down into individual lanes, which …","Original direction","","A lane is identified by its parent road and its position, …","","","","","","","","","","","","","Represents changes to a map. Note this isn’t …","","","A Movement groups all turns from one road to another, …","","A movement is like a turn, but with less detail – it …","","None corresponds to the native name","Create a fast-to-build but slow-to-use Dijkstra-based …","Two lanes/roads don’t have any common endpoints","Represent no parking as Private(0, false).","Two lanes/roads share one endpoint","From some manually audited cases in Seattle, the length of …","","","Parking lots have some fixed capacity for cars, and are …","","","Who’s asking for a path?","","","One step along a path.","A path between two endpoints for a particular mode. This …","When pathfinding with different <code>RoutingParams</code> is done, a …","","","A sequence of roads in order, beginning and ending at the …","MapEdits are converted to this before serializing. …","","Sturdier planters, with gaps.","","","Represents a specific point some distance along a lane.","","(Spots, explicitly tagged as a garage)","For stop signs: cars can do this without stopping. These …","(Name, spots)","Options for converting RawMaps to Maps.","","","An estimated number of residents, workers","","","","A Road represents a segment between exactly two …","","","","Tuneable parameters for all types of routing.","","","","The corner where two sidewalks meet. Pedestrians can cross …","","","See https://wiki.openstreetmap.org/wiki/Forward_…","","","","","","","Just paint!","Not from OSM. A user-specified area to focus on.","","","","","","","","","","Either a lane or a turn, where most movement happens.","A Turn leads from the end of one Lane to the start of …","","","Turns are uniquely identified by their (src, dst) lanes …","","","","","","An unmarked crossing, where pedestrians may cross without …","Minimum is the minimum duration, 0 allows cycle to be …","","For stop signs: cars have to stop before doing this turn, …","A contiguous set of roads with access restrictions. This …","","","","","","","","Return the cost of a single path, and also a mapping from …","This and all_outgoing_borders are expensive to constantly …","","","","","","","","","","","","","This is the specific amenity listed in OSM, not the more …","","","","","","","Don’t allow movements between these roads at all. Only …","Don’t allow crossing these roads at all. Only affects …","","","","","Just for temporary std::mem::replace tricks.","","","","","","","","","","","","The physical center of the road, including sidewalks, …","","","","Derived from commands, kept up to date by update_derived","","","Clear any pathfinders with custom RoutingParams, created …","","","","A stack, oldest edit is first. The same intersection may …","self is ‘from’. (via, to). Only BanTurns.","","","Try to consolidate all short roads. Will likely break.","","","","","Could be a Crosswalk or UnmarkedCrossing","","Is there a tagged crosswalk near each end of the road?","","","","","","","","","The individual maps","Goes from building to sidewalk","Goes from the lot to the driving lane","{Cars, bikes} trying to start or end here might not be …","","Guaranteed to be at least 7m (MAX_CAR_LENGTH + a little …","These may be on different roads entirely, like for light …","If true, driving happens on the right side of the road …","","","","","Once a Map exists, the player can edit it in the UI …","","","","","","","A transit vehicle either vanishes at its last stop or …","If we can’t render all spots (maybe a lot with no aisles …","","Cars trying to park near this building should head for the …","","","Finds the road directly connecting two intersections.","","","","The “overall” path of movement, aka, an “average” …","","","","","","","","","If you need to regenerate anything when the map is edited, …","","","Panics on borders","","","None for SharedSidewalkCorners and turns not belonging to …","Find all movements from one road to another that’re …","","","","","","","","","","","","","","","","","","The turns may belong to two different intersections!","","","","","","","","","","","","","","","","","","","","","","","","","As long as this is unique per lane, this value is …","Note that a lane may belong to both incoming_lanes and …","Since the player is in the middle of editing, the signal …","If true, roads without explicitly tagged sidewalks may …","These roads exist entirely within the perimeter","","","","If false, only buses serve this stop","Does a turn at a stop sign go from a smaller to a larger …","Preserve all OSM tags for buildings, increasing the final …","Normally after applying edits, you must call …","Where a text label should be centered to have the best …","","","","","Invariant: A road must contain at least one child. These …","","","Load a map from a local serialized Map or RawMap. Note …","","","When crossing an arterial or highway road, multiply the …","See …","A bunch of (mostly read-only) queries on a Map.","After deserializing a map directly, call this after.","","Returns the highest elevation in the map","","","","","","","","","","","","","","","If false, adjacent roads with the same AccessRestrictions …","If false, adjacent roads with the same AccessRestrictions …","Was a short road adjacent to this intersection merged?","Modifies the map in-place, removing parts not essential …","","","Returns (changed_roads, deleted_lanes, deleted_turns, …","","","","","","","","","","","","","","","","Explicitly store whatever the original was, since this can…","","Useful utilities for working with OpenStreetMap.","The importing process also automatically creates some …","","","Depending on options while importing, these might be …","Depending on options while importing, these might be …","","","","","","","","Everything related to pathfinding through a map for …","","","","","","","[-1.0, 1.0] theoretically, but in practice, about [-0.25, …","","","The polygon covers the interior of the block.","","This needs to be in clockwise orientation, or later …","","Edits without these are player generated.","Some edits are included in the game by default, in …","The link is optional even for proposals","","","The convert_osm crate produces a RawMap from OSM and other …","","This can expensive, so don’t constantly do it while …","","","","","","","","","","","Only roads incoming to the intersection are listed here.","","","Returns the routing params baked into the map.","","","","","","","","","Lot to sidewalk","The building’s connection for any agent can change based …","","","Simple search along undirected roads. Expresses the result …","Simple search along directed roads, weighted by distance. …","Should contraction hierarchies for pathfinding be built? …","Non-empty, times in order for one day when a vehicle …","","","The middle of the “T”, pointing towards the parking …","src and dst must both belong to parent. No guarantees that …","","","","","A transit vehicle spawns at the beginning of this lane. …","","","","","","Street parking is divided into spots of this length. 8 …","","","","","","Meaningless order","","","","","","If true, turns on red which do not conflict crossing …","self is ‘from’","","","","","","","","","","Like center_pts, but before any trimming for intersection …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A single city (like Seattle) can be broken down into …","","","","","","","The individual maps","","If there’s a single map covering all the smaller maps, …","Generate a city from a bunch of smaller, individual maps. …","","","","","","","","","","","","","","false is src_i, true is dst_i","","","","Starting from some initial spot, calculate the cost to all …","Starting from some initial buildings, calculate the cost …","If true, allow walking on shoulders.","","","","","","","","","","","","","","","","","","","","","","","","","Calculate the strongly connected components (SCC) of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This returns the pathfinding cost of crossing one road and …","","","","","","","","","","","","","","","Starting from some initial buildings, calculate the cost …","If true, allow walking on shoulders.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents changes to a map. Note this isn’t …","","","","","","","","","","","","","","","","","Pick apart changed_roads and figure out if an entire road …","","","Derived from commands, kept up to date by update_derived","","This is meant for table-driven unit tests. Call this on …","","","","","","","","","A stack, oldest edit is first. The same intersection may …","","Assumes update_derived has been called.","Transforms a string describing lane types and directions, …","","","","(summary, details)","","","","","","","","Recalculate the driveways of some buildings after map …","Recalculate the driveways of some parking lots after map …","","","","","","","","","","Produces an md5sum of the contents of the edits.","","Get the human-friendly of these edits. If they have a …","","","","","","","Load map edits from the given JSON bytes. Strip out any …","Load map edits from a JSON file. Strip out any commands …","If false, adjacent roads with the same AccessRestrictions …","","","","","","","","","","Some edits are included in the game by default, in …","","","","","","","","","","","","Encode the edits in a permanent format, referring to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","When the PermanentMapEdits format changes, add a …","","","","","","","","","","","","","MapEdits are converted to this before serializing. …","","","","","","","","","","","","","","","","","","","","","","","Get the human-friendly of these edits. If they have a …","","","","","Transform permanent edits to MapEdits, looking up the map …","Transform permanent edits to MapEdits, looking up the map …","","If false, adjacent roads with the same AccessRestrictions …","Edits without these are player generated.","The link is optional even for proposals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Options for converting RawMaps to Maps.","","","","","","","","","Try to consolidate all short roads. Will likely break.","","","","Naming is confusing, but RawMap -&gt; InitialMap -&gt; Map. …","","Preserve all OSM tags for buildings, increasing the final …","Snap points to an exact Position along the nearest lane. …","","","","Should contraction hierarchies for pathfinding be built? …","","","The various traffic signal generators live in the traffic …","","Adjust the path to start on the polygon’s border, not …","","","","","","","Look for roads underneath bridges, then lower their …","","","Finalize importing of buildings, mostly by matching them …","","Collapse degenerate intersections:","","","","Some cycleways intersect footways with detailed curb …","","","","","","","","","","","","","","","","OSM describes roads as center-lines that intersect. Turn …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Also returns a list of labeled polygons for debugging.","","","","","","","","","","","","","","","","","","","","","Merge tiny “roads” that’re actually just part of a …","","","","Take in parking lots from OSM and all parking aisle roads. …","Returns (driveway_line, driving_pos, sidewalk_line, …","Some roads might be totally disconnected from the largest …","","","","","","","","","","Snap separately mapped cycleways to main roads.","","","","","","","","","","","","","","Applies a bunch of heuristics to a single intersection, …","","","","","","","Simple second-pass after generating all signals. Find …","","","","","","","","Create a traffic signal which has a stage that is: …","","","","Build stages. First find roads that are straight across, …","","","","","","","","","","","","","","","","","","","","","","","","","","Generate all driving and walking turns at an intersection, …","","","","Ideally, we want every incoming lane to lead to at least …","","Filter out crosswalks on really short roads. In reality, …","","","Looks at all sidewalks (or lack thereof) in …","","","","","","","","","","","","","","","","","If true, driving happens on the right side of the road …","","","","","","If true, roads without explicitly tagged sidewalks may …","","","","","Street parking is divided into spots of this length. 8 …","","","","","","","If true, turns on red which do not conflict crossing …","","","","","","","","","","","","","","","Public transit stops and routes.","","Zones and AccessRestrictions are used to model things like:","","Areas are just used for drawing.","","","","","","","Not from OSM. A user-specified area to focus on.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The importing process also automatically creates some …","","","","","","","","","","","","","","","","","","","","","","","A block is defined by a perimeter that traces along the …","","A sequence of roads in order, beginning and ending at the …","","","","","Assign each perimeter one of <code>num_colors</code>, such that no two …","","","","","If the perimeter follows any dead-end roads, “collapse”…","Does this perimeter completely enclose the other?","","","This calculates all single block perimeters for the entire …","Trying to form blocks near railways or cycleways that …","","","","These roads exist entirely within the perimeter","","","Try to merge all given perimeters. If successful, only one …","Consider the perimeters as a graph, with adjacency …","","The polygon covers the interior of the block.","Restore the first=last invariant. Methods may temporarily …","","","","Starting at any lane, snap to the nearest side of that …","","","","","","","","Try to merge two blocks. Returns true if this is …","","","A perimeter has the first and last road matching up, but …","","","","","A business located inside a building.","Businesses are categorized into one of these types.","","","","","","A building has connections to the road and sidewalk, may …","","","","","","","An estimated number of workers","","","","","","","","","","","","None corresponds to the native name","Represent no parking as Private(0, false).","","","","","(Spots, explicitly tagged as a garage)","(Name, spots)","","","An estimated number of residents, workers","","","","","","","All types of amenities, in alphabetical order.","","This is the specific amenity listed in OSM, not the more …","","Returns (biking position, sidewalk position). Could fail …","","","","","","","","","","","","","","","","","","Categorize an OSM amenity tag.","","","","","","","","","","","","","","","","","","","","","","","","","","Goes from building to sidewalk","The polyline goes from the building to the driving position","","","","","","","","","","","","","","","","","","","","","","","","","","","","Does this building contain any amenity matching the …","","","","","","","","","","","","","","","","Where a text label should be centered to have the best …","","","","","","","","","","","","","","","Depending on options while importing, these might be …","Depending on options while importing, these might be …","","","","","","","","","","","","","The building’s connection for any agent can change based …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An intersection connects roads. Most have &gt;2 roads and are …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Strict for bikes. If there are bike lanes, not allowed to …","","","","Return all incoming roads to an intersection, sorted by …","Higher numbers get drawn on top","","","","Note that a lane may belong to both incoming_lanes and …","","","","","","","","Does this intersection connect to only a single road …","Does this intersection only connect two road segments? …","","","","","","","","Was a short road adjacent to this intersection merged?","","","","","","","This needs to be in clockwise orientation, or later …","","","","","","","","","","","","","","","","","Don’t call for SharedSidewalkCorners","","","","","","","","","Two lanes/roads share both endpoints, because they both …","","","","","","A raised curb","","Flex posts, wands, cones, other “weak” forms of …","Solid barrier, no gaps.","A road segment is broken down into individual lanes, which …","A lane is identified by its parent road and its position, …","","","","","Two lanes/roads don’t have any common endpoints","Two lanes/roads share one endpoint","From some manually audited cases in Seattle, the length of …","","Sturdier planters, with gaps.","","","","","","","Just paint!","Put a list of forward and backward lanes into …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","{Cars, bikes} trying to start or end here might not be …","","","","pt2 will be endpoint","","","","","","","","","","","","","","","","","","","","","","","The inverse of <code>to_char</code>. Always picks one buffer type. …","","","","","","Returns the set of allowed turn types, based on individual …","This is just based on typical driving sides. Bidirectional …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents the lane type as a single character, for use in …","","","","","","","Meaningless order","","","","","","","","","","","","","","","","","","","For a given lane type, returns some likely widths. This …","","","","","","","","","","","This is cheaper to store than a MovementID. It simply …","A Movement groups all turns from one road to another, …","A movement is like a turn, but with less detail – it …","","","","","","","","","","","","","","","","","Could be a Crosswalk or UnmarkedCrossing","","","","","","","","","","","","","","","","","The “overall” path of movement, aka, an “average” …","","","","","","","","","","","","","","","","","","","","","","Polyline points FROM intersection","","","","","","","","","","","","","","","","","","","Parking lots have some fixed capacity for cars, and are …","","","","","","","","","","","","","","","Goes from the lot to the driving lane","Guaranteed to be at least 7m (MAX_CAR_LENGTH + a little …","","","If we can’t render all spots (maybe a lot with no aisles …","","","","","","","","","","","","","","","","Lot to sidewalk","","The middle of the “T”, pointing towards the parking …","","","","","","","","","","","","","","","","","","","A Road represents a segment between exactly two …","","","See https://wiki.openstreetmap.org/wiki/Forward_…","","","","","","","","","","","","","","","","","The physical center of the road, including sidewalks, …","","","These are ordered from closest to center lane (left-most …","","","","","","","","","","","","","","","","","","","self is ‘from’. (via, to). Only BanTurns.","","Is there a tagged crosswalk near each end of the road?","","","","","","","","lane must belong to this road. Offset 0 is the centermost …","Get the DirectedRoadID pointing to the intersection. …","Get the DirectedRoadID pointing from the intersection. …","","","","","","","","","","","","","Includes off-side","","","","","","","","","","","","","","","","","This is the FIRST yellow line where the direction of the …","Creates the thick polygon representing one half of the …","","","","","","","Returns all lanes located between l1 and l2, exclusive.","Gets the left PolyLine of the road","","","","","","","Does this directed road have any lanes of a certain type?","","","","","","A simple classification of if the directed road is …","","Returns lanes from the “center” going out","","","","","","","","","Many roads wind up with almost no length, due to their …","","","","","","Strict for bikes. If there are bike lanes, not allowed to …","Invariant: A road must contain at least one child. These …","","Get the only sidewalk or shoulder on this side of the …","","","","","","","Returns the other intersection of this road, panicking if …","","","","","","","","[-1.0, 1.0] theoretically, but in practice, about [-0.25, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","self is ‘from’","","","","","","","Like center_pts, but before any trimming for intersection …","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the priority of a turn according to the stop sign – …","","","","","","","","","Only roads incoming to the intersection are listed here.","","","","","","","","","","","","","","A traffic signal consists of a sequence of Stages that …","","","","Minimum is the minimum duration, 0 allows cycle to be …","Modifies the fixed timing of all stages, applying either a …","","","","","","","","","","","","","Move crosswalks from stages, adding them to an all-walk as …","Move crosswalks from stages, adding them to an all-walk as …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","How long a full cycle of the signal lasts, assuming no …","","","","","","","","","","","","","","","","","Only call this variant while importing the map, to enforce …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","These may be on different roads entirely, like for light …","A transit vehicle either vanishes at its last stop or …","","","","","","","","","","","","","","","","","","","","","","","","As long as this is unique per lane, this value is …","","","","","If false, only buses serve this stop","","","","","","Explicitly store whatever the original was, since this can…","","","","","","","","","","","","Non-empty, times in order for one day when a vehicle …","A transit vehicle spawns at the beginning of this lane. …","","","","","","","","","","","","","","","","","","","","","","","","For stop signs: Can’t currently specify this! For …","A marked zebra crossing, where pedestrians usually have …","","For stop signs: cars can do this without stopping. These …","","The corner where two sidewalks meet. Pedestrians can cross …","","A Turn leads from the end of one Lane to the start of …","Turns are uniquely identified by their (src, dst) lanes …","","","","An unmarked crossing, where pedestrians may cross without …","For stop signs: cars have to stop before doing this turn, …","","","","","","","","","","","","","","","","","","","","","","If this turn is a crosswalk over a single road, return …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Is the turn a crosswalk or unmarked crossing?","Penalties for (lane types, lane-changing, slow lane). The …","Is this turn legal, according to turn lane tagging?","Is this turn legal, according to turn restrictions defined …","","","","","src and dst must both belong to parent. No guarantees that …","","","","","","","","","","","","","","","","","","","","","","","","","A contiguous set of roads with access restrictions. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Larger number means a bigger road, according to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Who’s asking for a path?","","Tuneable parameters for all types of routing.","","","","Don’t allow movements between these roads at all. Only …","Don’t allow crossing these roads at all. Only affects …","","","","","","","","","","","Can an agent use a lane? There are some subtle exceptions …","Can an agent use a road in either direction? There are …","","","","","","","","","","","","","","","","","","Strict for bikes. If there are bike lanes, not allowed to …","","","","Not bijective, but this is the best guess of user intent","","","When crossing an arterial or highway road, multiply the …","","Some helpers for working with fast_paths.","","","","","","","","","","","","","","","","","To deal with complicated intersections and short roads in …","","","","Structures related to the new road-based pathfinding …","Pathfinding for cars, bikes, buses, and trains using …","","","Pathfinding for pedestrians, as well as figuring out if …","Heavily penalize crossing into an access-restricted zone …","","","","","","","","This operates on raw IDs and costs; no type safety. The …","","","","","","Returns (path cost, node IDs in path)","Returns (path cost, node IDs in path). Input is pairs of …","","","","","","","","","","","","","","","","","","","","","","","","","","A bidirectional mapping between fast_paths NodeId and some …","","","","","","","","","","","","","Call this after filling out the input graph, right before …","","","","","","","","","","","","","","","","","","Create a slow-to-build but fast-to-use contraction …","Create a fast-to-build but slow-to-use Dijkstra-based …","Create a fast-to-build but slow-to-use Dijkstra-based …","","When pathfinding with different <code>RoutingParams</code> is done, a …","","","","","","","","","","","","","","","","","Quickly create an invalid pathfinder, just to make borrow …","","","","","","","Create a new Pathfinder with custom routing params that …","","Finds a path from a start to an end for a certain type of …","Finds a path from a start to an end for a certain type of …","","","","","","","","","","","","","","","","This only applies to VehiclePathfinder; walking through …","","A sequence of movements through a cluster of …","Find all other traffic signals “close” to one. Ignore …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Group lane-based uber-turns into road-based UberTurnV2s.","","","","(legal, illegal)","","","","","","","","","","","","","","","","","","","","","","Sidewalks only!","","Original direction","","","","","","","","","","","Determines the start and end position to travel between …","Create a request from the beginning of one road to the end …","","","","","","","","","","","","","","","","","","","","","Group similar requests together, returning the number of …","","","","Once we finish this PathStep, how much distance will be …","","","","","","","Estimate how long following the path will take in the best …","","","","","","","","","If the agent following this path will initially block some …","","The original PathRequest used to produce this path. If the …","","","Returns the total elevation (gain, loss) experienced over …","","","","","","","","","","The caller must pass in two valid positions for the …","The single definitive place to determine how fast somebody …","The single definitive place to determine how fast somebody …","","Trusting the caller to do this in valid ways.","","","","","","","","","","","","","","","","","","","","","","Traces along the path from its originally requested start. …","Traces along the path from a specified distance along the …","","","","","","","","","","","","","","The caller must pass in two valid positions for the …","","","","The caller must pass in two valid sidewalk positions. This …","","","","","Original direction","Opposite direction, sidewalks only","","","One step along a path.","A path between two endpoints for a particular mode. This …","","","","","","","","","","","","","","","","","Vehicle implementations often just calculate the sequence …","The time needed to perform this path. This time is not a …","The original PathRequest used to produce this path.","All steps in this path.","","","Transform a sequence of roads representing a path into the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This returns the pathfinding cost of crossing one road and …","","","","","","","false is src_i, true is dst_i","","","","","","","","","","","","","","","","","","","","Attempt the pathfinding and see if we should ride public …","","","","","","","","","","","","","","","","","","A way to refer to roads across many maps and over time. …","","","","","","","","","","","","","","Prints the OriginalRoad in a way that can be copied to …","Look for short roads that should be merged, and mark them …","","","","","","","","","","","","","","","","","","","","","","","","","","","This is effectively a PolyLine, except there’s a case …","","","","","","","","","","","","","","","","","","","","","","","","","","(via, to). For turn restrictions where ‘via’ is an …","","","Is there a tagged crosswalk near each end of the road?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the corrected center and total width","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","(the surviving intersection, the deleted intersection, …","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents the original place where OSM center-lines meet. …","","","","Only stops within a map’s boundary are kept","(Intersection polygon, polygons for roads, list of labeled …","","","","","Run a sequence of transformations to the RawMap before …","","","","","","","","","","","","This may begin and/or end inside or outside the map …","","Entries into transit_stops","","","","","","","","","","","","","","","Generate the trimmed <code>PolyLine</code> for a single RawRoad by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a specific point some distance along a lane.","Either a lane or a turn, where most movement happens.","","","","","","","","","","","","","","","","","","","","","","","Given a position along a lane, find the equivalent …","","","","","","","","","","","Return the center-line geometry of this lane or turn.","","","","","","","The single definitive place to determine how fast somebody …","The single definitive place to determine how fast somebody …","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,3,4,5,6,7,0,8,0,0,0,0,0,9,10,11,10,10,10,12,13,0,14,15,13,0,0,0,0,13,12,16,16,10,12,10,10,17,17,17,10,0,18,19,0,0,14,13,8,20,8,20,0,0,10,21,10,22,0,0,13,0,0,0,0,0,19,10,10,23,22,10,9,10,10,0,0,0,0,24,22,0,20,25,0,0,0,10,26,27,21,10,13,0,0,0,0,0,24,10,0,8,0,0,0,16,15,0,15,0,24,13,0,0,0,0,0,0,0,0,0,12,24,0,0,10,22,10,10,0,10,28,11,28,0,10,19,19,26,27,21,0,0,0,0,0,0,10,13,21,10,13,0,13,0,0,18,14,21,22,24,10,10,18,14,12,0,0,0,0,0,0,20,25,0,0,0,21,0,10,21,23,24,11,0,29,30,31,32,33,34,34,34,34,34,34,34,34,34,34,34,34,34,35,36,32,37,38,34,39,40,34,41,41,41,41,41,42,43,34,32,44,45,34,34,40,34,34,34,34,41,30,31,31,31,46,46,0,34,34,34,47,46,30,34,0,48,36,49,34,44,50,30,30,44,31,31,34,43,51,52,53,40,32,33,43,41,33,54,42,55,43,30,34,0,34,34,47,46,56,36,57,33,34,34,34,34,34,34,34,50,38,58,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,54,57,34,34,34,34,34,34,59,39,32,56,43,38,33,30,60,61,54,57,58,59,62,56,34,42,63,56,34,34,54,34,48,34,32,53,43,64,43,30,29,32,34,57,51,41,0,0,34,47,34,34,34,34,34,34,34,34,34,34,34,34,65,38,45,47,46,56,34,31,56,34,64,34,40,32,54,34,37,34,0,66,61,32,56,30,44,57,46,0,39,33,39,32,37,30,56,50,55,32,34,67,0,34,34,34,34,34,34,30,68,39,68,32,56,33,47,46,47,46,69,0,34,34,34,49,45,66,52,70,34,34,63,56,60,34,57,34,34,34,34,34,57,34,70,62,33,32,33,54,34,34,48,57,29,30,33,55,43,30,69,61,57,36,44,49,34,57,42,50,34,44,34,34,43,34,0,34,34,34,42,30,38,58,56,34,65,44,49,41,34,30,47,34,43,51,69,34,30,71,72,71,73,73,74,75,76,77,75,76,77,75,76,77,78,79,80,81,82,81,82,83,84,85,86,87,88,89,90,91,92,92,92,93,94,0,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,95,95,95,0,96,96,96,0,0,0,0,0,97,95,98,96,95,98,96,95,96,95,96,96,95,98,96,98,95,96,96,95,98,96,95,98,96,0,95,96,95,98,96,95,96,95,96,95,98,96,95,98,96,98,95,98,96,95,96,95,96,95,98,96,95,98,96,95,98,96,0,95,98,96,0,97,99,100,101,102,103,104,102,0,0,0,97,97,105,97,105,97,97,105,97,105,97,97,105,105,97,105,97,105,105,105,105,97,97,105,97,105,97,105,97,105,97,17,17,17,18,0,0,0,0,0,18,18,29,31,17,31,46,18,29,17,31,46,18,29,17,31,46,31,31,46,46,29,46,18,29,17,46,18,29,17,46,0,46,29,46,31,31,17,29,29,46,46,18,29,17,0,0,46,18,29,17,31,46,18,29,17,46,29,46,31,46,18,29,17,29,46,46,46,31,0,46,18,29,17,46,46,0,46,46,0,0,46,29,29,46,18,29,17,17,46,18,31,46,18,29,17,31,46,18,29,17,31,46,18,29,17,17,46,31,46,18,29,17,75,76,77,75,76,77,75,76,77,78,79,0,0,0,0,0,106,107,108,109,110,106,107,108,109,110,106,107,108,109,110,106,108,0,0,0,0,0,0,0,0,0,0,0,0,106,107,108,109,110,106,107,108,109,110,107,109,110,106,106,107,108,109,110,108,106,107,109,110,106,106,109,110,107,106,0,106,107,108,109,110,106,107,108,109,110,106,107,108,109,110,0,106,107,108,109,110,0,111,111,111,112,0,0,0,112,112,47,112,111,47,112,111,47,112,111,47,112,111,47,47,112,111,47,47,112,111,47,47,112,111,111,47,47,47,47,47,47,47,112,111,47,112,111,47,112,111,47,112,111,47,112,111,47,47,112,111,112,113,114,115,114,113,115,114,113,115,116,117,0,48,48,0,0,48,48,48,0,48,48,48,48,0,48,48,0,0,0,0,48,0,48,0,0,0,48,48,0,48,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,118,119,120,118,119,120,118,119,120,118,119,120,0,119,119,120,120,118,118,119,120,0,119,118,119,119,120,118,120,119,119,118,119,120,118,119,120,118,119,120,118,119,120,0,0,0,121,122,121,122,121,122,121,121,121,0,0,122,121,121,0,122,121,0,122,121,122,0,0,122,121,121,122,121,122,121,122,121,122,121,0,0,0,0,0,0,0,0,0,0,0,0,0,123,123,123,123,123,123,123,0,123,123,123,123,0,123,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,124,124,124,124,0,0,0,124,124,124,124,124,124,124,124,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,26,42,42,26,42,26,42,26,42,26,42,26,42,26,42,26,42,26,42,42,26,42,26,42,42,26,42,26,42,26,42,42,26,42,26,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,24,24,24,24,24,24,39,1,24,39,1,24,39,1,24,39,1,24,39,1,1,24,39,1,24,1,24,1,1,24,39,1,24,39,1,24,1,24,39,1,24,39,1,39,39,1,39,1,24,39,1,24,39,1,1,24,39,1,24,39,1,24,39,1,24,39,0,0,0,68,63,68,63,63,68,63,68,63,63,63,68,63,63,63,63,68,63,63,68,63,63,63,68,68,63,63,68,63,63,63,68,63,68,63,68,63,63,68,63,63,68,63,2,3,0,0,0,10,10,10,10,0,0,0,10,10,10,10,19,10,10,19,10,10,10,10,10,10,10,10,0,0,10,10,10,10,28,28,10,19,19,10,10,10,10,10,32,10,32,37,125,32,32,2,32,37,28,19,3,10,125,2,32,37,28,19,3,10,125,10,2,32,37,28,19,3,10,125,2,32,37,28,19,3,10,125,2,3,10,2,32,37,28,19,3,32,32,2,28,3,10,2,3,10,2,2,32,37,28,19,3,10,2,32,37,28,19,3,10,125,10,3,125,2,32,19,2,32,32,125,2,32,37,28,19,3,10,125,125,10,32,125,32,125,32,37,2,28,3,3,125,125,125,32,32,32,37,32,2,3,10,32,2,32,37,28,19,3,32,32,0,125,2,32,37,28,19,3,10,125,2,10,2,32,37,28,19,3,10,125,2,32,37,28,19,3,10,125,2,32,37,28,19,3,10,125,10,3,2,32,37,28,19,3,10,125,71,72,71,73,73,81,82,81,82,4,14,14,0,0,0,14,14,4,14,56,4,14,56,4,14,56,4,14,56,4,4,14,56,56,4,14,4,14,56,4,4,14,56,4,14,56,4,14,56,56,56,56,56,56,56,4,14,56,56,56,4,14,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,4,56,56,4,56,56,4,14,56,56,56,4,14,56,4,4,14,56,4,14,56,56,56,4,14,56,4,14,56,13,15,13,0,13,0,13,22,13,22,22,0,0,0,0,13,0,15,15,0,13,22,0,0,0,13,13,13,22,51,43,15,66,13,22,43,51,15,66,13,22,43,51,66,13,22,43,51,66,13,22,43,51,66,13,22,43,66,13,66,13,22,43,51,43,51,43,43,43,66,66,43,43,66,13,22,51,66,13,22,43,43,66,66,13,22,43,51,15,66,13,22,43,51,13,13,43,66,13,22,43,43,43,66,13,22,43,43,15,66,13,22,43,51,43,43,43,13,43,43,43,43,13,43,43,43,43,43,43,51,66,13,51,15,43,66,0,66,13,22,66,66,13,22,43,51,13,43,13,13,66,13,22,43,51,66,43,15,66,13,22,43,51,15,66,13,22,43,51,15,66,13,22,43,51,51,15,66,13,22,43,51,43,51,74,80,0,0,0,38,50,59,38,50,59,38,50,59,38,50,59,38,50,59,38,50,50,59,38,50,59,38,50,59,50,59,38,38,50,59,38,50,38,50,59,50,59,59,38,59,50,59,38,38,0,50,59,38,50,50,59,50,59,38,38,50,50,59,38,50,59,38,50,59,38,38,50,59,38,50,59,38,5,0,0,33,5,33,5,33,33,5,33,5,33,5,5,33,33,33,5,5,33,5,5,5,33,5,5,33,5,33,5,33,5,33,5,33,33,33,33,5,33,5,5,33,5,33,5,33,5,33,6,9,0,0,9,27,27,0,0,0,0,30,30,30,6,9,52,27,70,30,6,9,52,27,70,30,6,30,30,30,30,6,9,52,27,70,30,6,9,52,27,70,30,6,9,52,27,70,30,30,30,30,6,9,52,27,70,30,52,30,30,30,52,30,6,9,52,27,70,6,9,52,27,70,30,6,6,9,9,52,52,27,70,30,6,9,52,27,70,30,30,30,30,30,6,9,52,27,70,30,30,30,70,30,30,30,30,52,6,9,52,27,70,30,30,30,6,9,52,27,70,30,30,30,30,30,30,30,30,30,52,30,30,52,6,52,70,9,30,30,30,70,30,6,9,52,27,70,30,30,52,70,6,9,52,27,70,30,70,30,30,52,30,6,9,52,27,70,30,6,9,52,6,9,52,27,70,30,6,9,52,27,70,30,30,6,9,52,27,70,30,30,6,9,52,27,70,30,30,0,0,60,64,60,64,60,64,60,64,60,64,60,64,60,60,64,60,64,60,60,60,64,64,64,60,64,60,60,60,64,60,64,60,64,60,64,60,64,60,64,0,0,23,0,0,23,61,61,69,23,61,69,23,61,69,23,61,69,23,61,61,69,61,69,23,69,69,61,69,23,61,0,0,61,69,23,61,69,23,61,61,69,69,61,61,0,61,61,69,23,69,61,61,69,23,61,69,61,69,61,69,23,61,23,69,61,61,69,23,61,69,23,61,69,23,61,69,23,61,61,61,69,23,69,91,92,92,92,7,0,0,0,0,57,62,7,54,57,62,7,54,57,62,7,54,57,62,7,54,57,62,7,62,7,54,57,54,57,62,7,54,62,7,62,62,7,7,54,57,62,7,54,57,62,7,54,57,62,7,54,57,62,62,7,54,57,54,57,54,62,7,54,57,62,7,57,57,62,7,54,57,57,62,54,57,57,57,62,7,54,57,62,7,62,7,54,57,62,7,54,57,62,7,54,57,62,7,54,57,11,21,21,11,21,21,21,0,0,0,0,21,21,11,58,58,55,21,11,58,55,21,11,58,55,21,11,58,55,21,11,58,55,21,58,58,55,21,11,58,55,55,21,11,58,55,21,55,55,21,11,58,55,21,11,58,58,55,55,58,55,21,11,58,58,55,58,55,55,21,11,21,58,58,58,55,21,11,58,55,55,55,21,11,58,55,55,21,11,58,55,21,11,58,58,55,21,11,58,55,21,11,58,0,0,35,45,35,45,35,45,35,45,35,45,35,45,35,45,0,35,45,35,45,35,45,45,45,35,45,35,45,35,45,35,45,35,45,35,45,35,45,35,45,126,127,128,129,0,0,0,129,0,0,129,0,0,130,0,0,0,0,0,0,0,130,0,0,0,130,0,129,126,127,128,130,129,126,127,128,130,129,126,127,128,130,129,126,127,128,130,129,126,127,128,130,126,127,128,130,129,129,126,127,128,130,129,126,127,128,130,129,126,126,127,127,128,128,130,130,129,126,127,128,130,129,126,127,128,130,126,127,128,130,130,129,126,127,128,130,126,127,128,130,129,126,127,128,130,126,127,128,130,129,126,127,128,130,126,127,128,130,129,126,127,128,130,129,126,127,128,130,129,126,127,128,130,129,126,127,128,130,131,132,133,12,12,12,0,12,0,12,12,41,41,41,41,41,12,12,12,12,41,12,41,41,12,12,12,41,12,41,12,41,12,12,41,41,0,12,12,12,12,41,12,12,12,12,41,12,12,41,41,41,0,12,12,0,0,12,12,41,12,12,41,12,41,12,41,12,41,0,41,0,0,0,0,12,41,0,0,134,135,134,0,134,135,135,0,135,134,135,134,135,135,135,135,135,134,135,134,135,134,135,135,135,135,135,134,135,134,135,134,135,134,135,136,137,138,138,0,0,139,140,139,140,139,139,140,0,139,140,139,139,139,139,140,139,140,139,139,139,139,139,139,140,139,140,139,140,139,140,16,16,16,0,0,141,141,141,141,16,141,16,141,141,141,141,141,16,141,16,141,141,16,141,16,141,16,141,141,141,141,141,141,141,141,16,141,141,16,141,16,141,16,141,16,141,141,0,0,0,65,65,67,142,65,67,142,67,142,67,142,142,67,142,67,142,67,142,142,67,142,65,0,67,142,65,67,142,67,65,67,142,65,65,67,142,65,142,67,142,67,142,67,142,0,65,67,142,65,67,142,65,67,142,65,65,67,142,20,20,20,0,0,0,20,44,44,36,20,20,20,36,36,44,20,44,36,20,44,36,20,44,36,20,44,36,20,36,44,44,44,44,44,36,20,44,36,44,36,20,44,36,20,36,44,20,20,44,36,36,20,44,36,44,20,44,44,44,44,20,20,44,36,44,44,44,44,44,36,20,20,44,44,20,44,36,44,44,44,44,20,44,20,44,36,44,36,44,20,44,36,36,44,44,44,44,20,44,36,20,44,36,20,44,36,44,0,0,0,36,20,44,36,36,83,84,85,86,8,8,8,8,0,0,8,49,8,49,8,49,8,49,49,8,49,0,8,49,8,49,49,49,49,49,8,49,49,49,49,49,8,49,49,8,49,8,49,8,49,8,49,49,8,49,87,88,89,90,0,143,143,0,144,144,144,143,144,143,144,143,144,143,143,144,144,143,144,144,143,143,143,144,143,143,143,144,143,0,143,144,144,144,143,144,144,143,144,143,144,143,144,143,144,143,144,0,144,143,145,146,96,96,96,0,0,147,147,147,147,147,147,147,147,147,147,147,0,147,147,0,147,147,147,147,0,147,147,147,147,147,0,102,103,104,102,148,148,148,149,149,0,0,0,0,0,0,0,0,0,0,0,150,151,152,153,152,152,152,153,154,155,150,151,156,149,148,157,158,152,153,154,155,150,151,156,149,148,157,158,152,152,152,154,153,154,155,150,151,156,149,148,157,158,153,154,155,150,151,156,149,148,157,158,152,153,149,148,153,154,152,154,154,152,152,153,154,155,150,151,156,149,157,158,155,153,154,155,149,148,153,149,148,152,153,153,154,155,150,151,156,149,148,157,158,152,153,154,155,150,151,156,149,148,157,158,152,154,153,149,148,154,152,157,158,153,149,148,153,153,155,152,152,153,154,155,150,151,156,149,148,157,158,154,154,154,154,154,157,152,152,152,158,153,154,155,148,153,149,152,152,150,151,156,154,150,151,156,153,152,152,153,149,148,152,154,155,150,151,156,158,152,150,152,152,157,152,152,152,153,154,155,150,151,156,149,157,158,157,157,157,153,154,155,150,151,156,149,148,157,158,153,152,152,155,152,152,153,154,155,150,151,156,149,148,157,158,152,153,154,155,150,151,156,149,148,157,158,154,152,153,154,155,150,151,156,149,148,157,158,152,153,154,155,150,151,156,149,148,157,158,25,0,0,0,0,25,25,25,0,53,25,53,25,53,53,25,53,25,53,25,53,25,53,53,53,53,25,53,53,53,25,53,53,25,25,53,25,25,25,25,25,53,25,53,53,25,25,25,25,53,53,25,53,53,25,53,53,53,25,53,53,25,53,25,53,25,53,25,53,25,53,25,0,93,94],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["vec",3]],[[],["vec",3]],[[["pathrequest",3]],["option",4]],[[],["vec",3,[["intersection",3]]]],[[],["vec",3]],[[]],[[],["vec",3,[["intersection",3]]]],[[],["vec",3]],[[],["vec",3]],[[],["vec",3]],[[],["btreemap",3]],[[]],[[],["vec",3]],null,null,null,null,null,[[["mapedits",3],["bool",15],["timer",3]],["editeffects",3]],null,null,null,null,null,null,null,null,null,null,[[],["map",3]],null,null,null,[[]],[[]],null,null,null,[[["buildingid",3]],["road",3]],null,null,null,null,null,null,null,null,null,[[]],[[],["map",3]],[[]],null,null,null,null,null,null,null,null,[[["rawmap",3],["rawtomapoptions",3],["timer",3]],["map",3]],null,null,null,null,null,null,null,[[],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["roadid",3],["fn",8]],["editcmd",4]],null,null,null,null,null,null,null,null,null,[[["osmid",4]],["option",4,[["buildingid",3]]]],[[["buildingid",3]],["laneid",3]],[[["nodeid",3]],["result",6,[["intersectionid",3]]]],[[["originalroad",3]],["result",6,[["roadid",3]]]],[[["intersectionid",3],["intersectionid",3]],["option",4,[["roadid",3]]]],[[["str",15]],["option",4,[["transitrouteid",3]]]],[[]],null,null,null,[[["areaid",3]],["area",3]],[[["buildingid",3]],["building",3]],[[],["polygon",3]],[[],["bounds",3]],[[],["cityname",3]],[[],["mapconfig",3]],[[],["mapedits",3]],[[],["usize",15]],[[],["gpsbounds",3]],[[["intersectionid",3]],["intersection",3]],[[["intersectionid",3]],["editintersection",4]],[[["laneid",3]],["lane",3]],[[],["btreeset",3,[["str",15]]]],[[["turnid",3]],["option",4]],[[["directedroadid",3],["pathconstraints",4]],["vec",3,[["movementid",3]]]],[[],["mapname",3]],[[["roadid",3]],["btreeset",3,[["roadid",3]]]],[[["laneid",3]],["vec",3]],[[["laneid",3],["pathconstraints",4]],["vec",3]],[[["laneid",3]],["road",3]],[[["parkinglotid",3]],["parkinglot",3]],[[["roadid",3]],["road",3]],[[["roadid",3]],["editroad",3]],[[["transitstopid",3]],["vec",3,[["transitroute",3]]]],[[["intersectionid",3]],["controlstopsign",3]],[[["turnid",3]],["turn",3]],[[["transitrouteid",3]],["transitroute",3]],[[["intersectionid",3]],["controltrafficsignal",3]],[[["str",15]],["option",4,[["transitroute",3]]]],[[["transitstopid",3]],["transitstop",3]],[[["laneid",3],["laneid",3],["intersectionid",3]],["option",4,[["turn",3]]]],[[["laneid",3],["pathconstraints",4]],["vec",3,[["turn",3]]]],[[["laneid",3]],["vec",3,[["turn",3]]]],[[["laneid",3]],["vec",3,[["turn",3]]]],null,null,null,[[["areatype",4],["polygon",3],["tags",3]]],[[["buildingid",3],["buildingtype",4]]],[[["usize",15]]],[[["buildingid",3],["usize",15]]],[[["transitrouteid",3],["vec",3,[["time",3]]]]],[[["routingparams",3],["timer",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["controltrafficsignal",3]]],null,null,null,null,[[]],null,[[["roadid",3],["roadid",3],["turntype",4]],["bool",15]],null,[[]],null,null,null,null,null,null,null,null,[[["string",3],["timer",3]],["map",3]],null,null,null,null,null,[[["timer",3]]],null,[[],["distance",3]],[[["areaid",3]],["option",4,[["area",3]]]],[[["buildingid",3]],["option",4,[["building",3]]]],[[["intersectionid",3]],["option",4,[["intersection",3]]]],[[["laneid",3]],["option",4,[["lane",3]]]],[[["parkinglotid",3]],["option",4,[["parkinglot",3]]]],[[["roadid",3]],["option",4,[["road",3]]]],[[["intersectionid",3]],["option",4,[["controlstopsign",3]]]],[[["turnid",3]],["option",4,[["turn",3]]]],[[["transitrouteid",3]],["option",4,[["transitroute",3]]]],[[["intersectionid",3]],["option",4,[["controltrafficsignal",3]]]],[[["transitstopid",3]],["option",4,[["transitstop",3]]]],null,null,null,null,null,null,[[["timer",3]]],null,null,[[["mapedits",3],["timer",3]],["editeffects",3]],null,[[["laneid",3]],["lane",3]],null,null,null,null,null,[[],["mapedits",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["pathrequest",3]],["result",6,[["path",3]]]],[[["pathrequest",3]],["result",6,[["pathv2",3]]]],[[["pathrequest",3],["routingparams",3],["pathfindercaching",4]],["result",6,[["pathv2",3]]]],[[["pathrequest",3],["routingparams",3],["pathfindercaching",4]],["result",6,[["path",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["timer",3]]],[[["timer",3]]],[[]],null,null,null,null,null,[[["roadid",3]],["btreeset",3]],null,null,null,null,null,null,[[],["routingparams",3]],null,[[]],[[]],[[],["result",4]],null,[[["position",3],["position",3]],["option",4]],null,null,null,null,null,null,[[["intersectionid",3],["intersectionid",3]],["option",4]],[[["intersectionid",3],["intersectionid",3],["pathconstraints",4]],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,[[["mapedits",3],["timer",3]]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,[[],["typeid",3]],null,null,null,null,[[],["bool",15]],null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],null,[[],["result",4]],null,[[]],[[["map",3]],["city",3]],[[["cityname",3],["timer",3]],["city",3]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,[[["map",3],["vec",3,[["spot",4]]],["duration",3],["pathconstraints",4]],["hashmap",3,[["buildingid",3],["duration",3]]]],[[["map",3],["vec",3,[["spot",4]]],["duration",3],["walkingoptions",3]],["hashmap",3,[["buildingid",3],["duration",3]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["spot",4]],[[],["walkingnode",4]],[[]],[[]],[[["position",3],["map",3]],["walkingnode",4]],[[["spot",4]],["ordering",4]],[[["item",3]],["ordering",4]],[[["walkingnode",4]],["ordering",4]],null,[[],["result",4]],[[],["result",4]],[[["position",3],["map",3]],["walkingnode",4]],[[["spot",4]],["bool",15]],[[["item",3]],["bool",15]],[[["walkingnode",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["map",3],["pathconstraints",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[["spot",4]],["bool",15]],[[["item",3]],["bool",15]],[[["walkingnode",4]],["bool",15]],null,[[["spot",4]],["option",4,[["ordering",4]]]],[[["item",3]],["option",4,[["ordering",4]]]],[[["walkingnode",4]],["option",4,[["ordering",4]]]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["directedroadid",3],["movementid",3],["pathconstraints",4],["routingparams",3],["map",3]],["option",4,[["duration",3]]]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[["map",3],["vec",3,[["spot",4]]],["duration",3],["walkingoptions",3]],["hashmap",3,[["buildingid",3],["duration",3]]]],null,[[]],[[]],[[]],[[]],[[],["walkingoptions",3]],[[]],[[["item",3]],["ordering",4]],[[],["vec",3]],null,[[],["walkingoptions",3]],[[],["speed",3]],[[["item",3]],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[["item",3]],["bool",15]],null,[[["item",3]],["option",4,[["ordering",4]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["editeffects",3],["map",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["map",3]]],null,null,null,null,[[["string",3],["str",15],["str",15],["str",15],["str",15],["bool",15]]],[[],["mapedits",3]],[[],["editintersection",4]],[[],["editroad",3]],[[],["editcmd",4]],[[]],[[]],[[]],[[]],null,null,[[["map",3]]],[[["str",15],["str",15]],["editroad",3]],[[],["mapedits",3]],null,null,[[["map",3]]],[[],["result",4]],[[["editroad",3]],["vec",3,[["string",3]]]],null,[[["mapedits",3]],["bool",15]],[[["editintersection",4]],["bool",15]],[[["editroad",3]],["bool",15]],[[["editcmd",4]],["bool",15]],[[["map",3],["vec",3,[["buildingid",3]]],["editeffects",3]]],[[["map",3],["vec",3,[["parkinglotid",3]]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["map",3]],["string",3]],[[["road",3],["mapconfig",3]],["editroad",3]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],null,[[["map",3],["vec",3,[["u8",15]]]],["result",6,[["mapedits",3]]]],[[["map",3],["string",3],["timer",3]],["result",6,[["mapedits",3]]]],null,null,[[["map",3],["roadid",3],["vec",3,[["lanespec",3]]],["editeffects",3]]],[[["mapedits",3]],["bool",15]],[[["editintersection",4]],["bool",15]],[[["editroad",3]],["bool",15]],[[["editcmd",4]],["bool",15]],[[],["mapedits",3]],null,null,null,null,[[["map",3],["roadid",3],["distance",3],["intersectionid",3]],["vec",3,[["roadid",3]]]],[[["intersectionid",3],["map",3],["editeffects",3]]],[[["map",3]]],[[],["result",4]],null,[[]],[[]],[[]],[[]],[[["map",3]],["permanenteditcmd",4]],[[["map",3]],["permanentmapedits",3]],[[["map",3]],["permanenteditintersection",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["editcmd",4]],[[["map",3]]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[["value",4]]],[[["value",4]]],[[["value",4]]],[[["value",4]]],[[["value",4],["map",3]],["result",6]],[[["value",4]]],[[["value",4]]],[[["value",4]]],[[["value",4],["map",3]],["result",6]],[[["value",4]]],[[["value",4]]],[[["value",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,[[["map",3]],["result",6]],null,null,null,null,null,null,null,null,null,[[["value",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["value",4],["map",3]],["result",6,[["permanentmapedits",3]]]],[[]],[[]],[[]],[[]],[[]],[[["value",4]]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["permanentmapedits",3]],[[],["permanenteditintersection",4]],[[],["permanenteditcmd",4]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[]],[[]],[[]],[[],["str",15]],[[]],[[]],[[]],[[["map",3]],["result",6,[["editcmd",4]]]],[[["map",3]],["result",6,[["mapedits",3]]]],[[["map",3]],["mapedits",3]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[["intersectionid",3],["map",3]],["result",6,[["editintersection",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],null,null,[[],["app",3]],[[],["rawtomapoptions",3]],[[]],null,null,[[],["rawtomapoptions",3]],[[]],[[["argmatches",3]]],null,[[]],null,[[["map",3],["hashset",3,[["hashablept2d",3]]],["fn",8],["distance",3],["distance",3],["timer",3]],["hashmap",3,[["hashablept2d",3],["position",3]]]],null,null,null,null,null,[[]],null,null,[[["polygon",3],["line",3]],["line",3]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[]],null,[[["vec",3],["bounds",3],["timer",3]]],[[["tags",3],["f64",15],["f64",15],["xorshiftrng",3]],["buildingtype",4]],[[["tags",3],["laneid",3],["map",3]],["string",3]],[[["btreemap",3],["map",3],["bool",15],["timer",3]],["vec",3,[["building",3]]]],null,[[["rawmap",3]]],[[["rawmap",3],["nodeid",3]]],[[],["bool",15]],[[["originalroad",3],["originalroad",3],["rawmap",3]],["result",6]],[[["rawmap",3]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],null,null,[[["rawmap",3],["bounds",3],["timer",3]],["initialmap",3]],[[["originalroad",3],["rawroad",3],["mapconfig",3]],["result",6,[["road",3]]]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],null,null,[[],["roadline",3]],[[]],[[["vec",3,[["pt2d",3]]]],["vec",3,[["pt2d",3]]]],[[["btreemap",3],["nodeid",3],["vec",3]],["result",6]],[[]],[[]],null,[[["btreemap",3],["nodeid",3],["vec",3]],["result",6]],null,null,[[["nodeid",3],["btreeset",3,[["originalroad",3]]],["btreemap",3],["btreemap",3]],["result",6]],[[]],[[]],null,[[["btreemap",3],["nodeid",3],["vec",3,[["roadline",3]]],["vec",3]],["option",4]],[[["btreemap",3],["nodeid",3],["vec",3]],["result",6]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["tags",3],["mapconfig",3]],["vec",3,[["lanespec",3]]]],[[["string",3]],["option",4,[["buffertype",4]]]],[[["rawroad",3]],["angle",3]],[[["rawmap",3],["originalroad",3]],["bool",15]],[[["rawmap",3],["bool",15]],["btreeset",3,[["nodeid",3]]]],[[["rawmap",3],["originalroad",3],["bool",15]],["bool",15]],[[["polygon",3]],["vec",3]],[[["polygon",3],["line",3]],["bool",15]],[[["map",3],["timer",3]],["vec",3,[["parkinglot",3]]]],[[["hashablept2d",3],["polygon",3],["hashmap",3],["map",3]],["result",6]],[[["rawmap",3],["timer",3]]],null,null,[[]],[[]],null,[[]],null,[[]],null,[[["rawmap",3]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["rawmap",3],["hashmap",3]],["multimap",3,[["originalroad",3]]]],[[]],null,null,[[["intersection",3]],["controltrafficsignal",3]],[[["map",3],["intersection",3]],["option",4,[["controltrafficsignal",3]]]],[[["controltrafficsignal",3],["intersection",3]]],[[["map",3],["intersection",3]],["option",4,[["controltrafficsignal",3]]]],[[["map",3],["intersection",3]],["option",4,[["controltrafficsignal",3]]]],[[["map",3],["intersectionid",3],["bool",15]],["vec",3]],[[["intersection",3]],["controltrafficsignal",3]],[[["intersection",3]],["option",4,[["controltrafficsignal",3]]]],null,[[["controltrafficsignal",3],["mapconfig",3],["intersection",3],["vec",3,[["vec",3]]]]],[[["intersectionid",3]],["controltrafficsignal",3]],[[["map",3],["intersection",3]],["controltrafficsignal",3]],[[["map",3]]],[[["map",3],["intersection",3]],["option",4,[["controltrafficsignal",3]]]],[[["controltrafficsignal",3],["stage",3]]],[[["intersection",3],["map",3]],["option",4,[["controltrafficsignal",3]]]],[[["stage",3],["intersection",3]],["option",4]],[[["controltrafficsignal",3],["intersection",3]]],[[["controltrafficsignal",3]]],[[["intersection",3],["map",3]],["option",4,[["controltrafficsignal",3]]]],[[["map",3],["intersection",3]],["option",4,[["controltrafficsignal",3]]]],[[["controltrafficsignal",3],["intersection",3]],["option",4,[["controltrafficsignal",3]]]],[[["intersection",3]]],[[["roadid",3]],["vec",3,[["movementid",3]]]],[[["intersection",3]],["option",4,[["controltrafficsignal",3]]]],[[["controltrafficsignal",3],["intersection",3]],["option",4,[["controltrafficsignal",3]]]],[[["movementid",3],["movementid",3]],["stage",3]],[[["roadid",3],["roadid",3],["vec",3]],["option",4,[["movementid",3]]]],[[]],[[["intersection",3],["map",3]],["option",4,[["controltrafficsignal",3]]]],null,[[]],[[]],null,null,[[["rawtransitroute",3],["map",3],["hashmap",3],["bordersnapper",3]],["result",6]],[[["rawtransitstop",3],["hashmap",3],["hashmap",3],["map",3]],["result",6]],[[["map",3],["rawmap",3],["timer",3]]],[[]],[[]],[[["map",3]],["bordersnapper",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["lane",3],["lane",3],["intersection",3]],["result",6,[["polyline",3]]]],[[["vec",3,[["turn",3]]]],["vec",3,[["turn",3]]]],[[["intersection",3],["map",3]],["option",4,[["hashmap",3,[["turntype",4]]]]]],[[["map",3],["intersection",3]],["vec",3,[["turn",3]]]],[[["intersection",3],["map",3]],["vec",3,[["turn",3]]]],[[["map",3],["vec",3,[["turn",3]]],["turntype",4]],["vec",3,[["turn",3]]]],[[["angle",3],["angle",3]],["turntype",4]],[[["intersection",3],["map",3]],["result",6]],[[["pt2d",3],["pt2d",3]],["polyline",3]],[[["vec",3,[["turn",3]]],["map",3],["intersection",3]],["vec",3,[["turn",3]]]],[[["intersection",3],["lane",3],["lane",3]],["polyline",3]],[[["intersection",3],["lane",3],["lane",3]],["polyline",3]],[[["map",3],["intersection",3]],["vec",3,[["turn",3]]]],[[["intersectionid",3],["laneid",3],["laneid",3]],["turnid",3]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["mapconfig",3]],[[],["drivingside",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],null,[[["drivingside",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["areaid",3]],[[],["areatype",4]],[[],["area",3]],[[]],[[]],[[]],[[["areaid",3]],["ordering",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["areaid",3]],["bool",15]],[[["areatype",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],null,[[]],[[]],[[]],[[["areaid",3]],["bool",15]],null,null,[[["areaid",3]],["option",4,[["ordering",4]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[["usize",15]],["option",4,[["vec",3,[["usize",15]]]]]],[[],["block",3]],[[],["perimeter",3]],[[]],[[]],[[]],[[["perimeter",3]],["bool",15]],[[],["result",4]],[[],["result",4]],[[["map",3]],["vec",3,[["perimeter",3]]]],[[["map",3]],["hashset",3,[["roadid",3]]]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],[[["map",3],["vec",3,[["perimeter",3]]],["bool",15]],["vec",3,[["perimeter",3]]]],[[["vec",3,[["perimeter",3]]],["fn",8]],["vec",3,[["vec",3,[["perimeter",3]]]]]],null,null,[[]],null,[[],["result",4]],[[],["result",4]],[[["map",3],["laneid",3],["hashset",3]],["result",6,[["perimeter",3]]]],[[["map",3]],["result",6,[["block",3]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["map",3],["perimeter",3],["bool",15]],["bool",15]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["vec",3,[["amenitytype",4]]]],null,null,null,[[["map",3]],["option",4]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["option",4,[["amenitytype",4]]]],[[],["buildingid",3]],[[],["building",3]],[[],["amenity",3]],[[],["offstreetparking",4]],[[],["buildingtype",4]],[[],["nameperlanguage",3]],[[],["amenitytype",4]],[[],["amenitytypeiter",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["buildingid",3]],["ordering",4]],[[["nameperlanguage",3]],["ordering",4]],[[["amenitytype",4]],["ordering",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["map",3]],["option",4]],[[["buildingid",3]],["bool",15]],[[["offstreetparking",4]],["bool",15]],[[["nameperlanguage",3]],["bool",15]],[[["amenitytype",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4,[["amenitytype",4]]]],[[["option",4,[["string",3]]]],["string",3]],[[["usize",15]],["option",4,[["amenitytype",4]]]],[[],["u64",15]],[[["amenitytype",4]],["bool",15]],[[],["bool",15]],[[]],[[],["option",4,[["string",3]]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["amenitytypeiter",3]],null,[[],["usize",15]],null,null,null,null,[[["buildingid",3]],["bool",15]],[[["offstreetparking",4]],["bool",15]],[[["nameperlanguage",3]],["bool",15]],[[["tags",3]],["option",4,[["nameperlanguage",3]]]],[[],["option",4]],[[],["option",4]],[[["usize",15]],["option",4]],[[],["usize",15]],null,null,null,null,[[["buildingid",3]],["option",4,[["ordering",4]]]],[[["nameperlanguage",3]],["option",4,[["ordering",4]]]],[[["amenitytype",4]],["option",4,[["ordering",4]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["laneid",3]],null,[[["position",3],["map",3]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["vec",3,[["str",15]]]],[[],["nameperlanguage",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["intersectionid",3]],[[],["intersectiontype",4]],[[],["intersection",3]],[[]],[[]],[[]],[[["intersectionid",3]],["ordering",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["intersectionid",3]],["bool",15]],[[["intersectiontype",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["intersectionid",3],["map",3]],["option",4,[["road",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[["map",3],["pathconstraints",4]],["vec",3,[["laneid",3]]]],[[["map",3],["pathconstraints",4]],["vec",3,[["laneid",3]]]],[[["map",3]],["roadrank",4]],[[["map",3]],["vec",3,[["roadsideid",3]]]],[[["map",3]],["vec",3,[["roadid",3]]]],[[["map",3]],["vec",3,[["roadid",3]]]],[[["map",3]],["isize",15]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["map",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["map",3]],["bool",15]],[[],["bool",15]],[[["map",3]],["bool",15]],[[],["bool",15]],[[["map",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[["option",4,[["string",3]]],["map",3]],["string",3]],[[["intersectionid",3]],["bool",15]],null,null,[[["intersectionid",3]],["option",4,[["ordering",4]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["map",3]],["option",4,[["directedroadid",3]]]],[[["map",3]],["option",4,[["directedroadid",3]]]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["turnid",3]]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3,[["lanespec",3]]],["vec",3,[["lanespec",3]]],["drivingside",4]],["vec",3,[["lanespec",3]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["laneid",3]],[[],["lanetype",4]],[[],["buffertype",4]],[[],["lane",3]],[[],["lanespec",3]],[[]],[[]],[[]],[[]],[[]],[[["laneid",3]],["ordering",4]],[[["lanetype",4]],["ordering",4]],[[["buffertype",4]],["ordering",4]],[[["lane",3]],["commonendpoint",4]],[[["u32",15]],["laneid",3]],[[],["str",15]],[[],["result",4,[["laneid",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[["pt2d",3]],["option",4,[["distance",3]]]],null,null,[[],["laneid",3]],[[],["u32",15]],[[["intersectionid",3]],["line",3]],[[["intersectionid",3]],["pt2d",3]],[[["laneid",3]],["bool",15]],[[["lanetype",4]],["bool",15]],[[["buffertype",4]],["bool",15]],[[["lanespec",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["line",3]],[[],["pt2d",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["char",15]],["lanetype",4]],[[["str",15]],["option",4,[["lanetype",4]]]],[[],["directedroadid",3]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[["road",3],["bool",15]],["option",4,[["btreeset",3,[["turntype",4]]]]]],[[["map",3]],["roadsideid",3]],[[],["polygon",3]],[[]],[[]],[[]],null,[[],["vec",3,[["intersectionid",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[],["line",3]],[[],["pt2d",3]],[[],["distance",3]],null,[[["laneid",3]],["bool",15]],[[["lanetype",4]],["bool",15]],[[["lanespec",3]],["bool",15]],[[],["commonendpoint",4]],[[["mapconfig",3]],["usize",15]],null,[[["str",15]],["vec",3,[["turntype",4]]]],[[["laneid",3]],["option",4,[["ordering",4]]]],[[["lanetype",4]],["option",4,[["ordering",4]]]],[[["buffertype",4]],["option",4,[["ordering",4]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["str",15]],null,[[],["bool",15]],[[],["char",15]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["lanetype",4],["tags",3]],["vec",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["movementid",3]],[[],["compressedmovementid",3]],[[],["movement",3]],[[]],[[]],[[]],[[["movementid",3]],["ordering",4]],[[["compressedmovementid",3]],["ordering",4]],[[["movement",3]],["bool",15]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["movementid",3]],["bool",15]],[[["compressedmovementid",3]],["bool",15]],[[["movement",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["intersectionid",3],["map",3]],["btreemap",3,[["movementid",3],["movement",3]]]],[[]],[[]],[[]],null,null,[[],["u64",15]],[[],["u64",15]],[[]],[[]],null,null,null,[[]],[[]],[[]],null,[[["vec",3,[["polyline",3]]],["directedroadid",3],["directedroadid",3]],["result",6,[["polyline",3]]]],[[["movementid",3]],["bool",15]],[[["compressedmovementid",3]],["bool",15]],[[["movement",3]],["bool",15]],null,[[["movementid",3]],["option",4,[["ordering",4]]]],[[["compressedmovementid",3]],["option",4,[["ordering",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["map",3]]],null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["parkinglotid",3]],[[],["parkinglot",3]],[[]],[[]],[[["parkinglotid",3]],["ordering",4]],[[],["result",4]],[[],["result",4]],null,null,[[["parkinglotid",3]],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["u64",15]],[[]],null,[[]],[[]],[[["parkinglotid",3]],["bool",15]],null,[[["parkinglotid",3]],["option",4,[["ordering",4]]]],null,[[],["result",4]],[[],["result",4]],null,null,null,[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["accessrestrictions",3]],[[],["vec",3,[["transitstopid",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["vec",3,[["directedroadid",3]]]],null,[[["direction",4]],["vec",3]],[[],["vec",3]],[[],["vec",3]],[[],["roadid",3]],[[],["direction",4]],[[],["directedroadid",3]],[[],["sideofroad",4]],[[],["roadsideid",3]],[[],["road",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["roadid",3]],["ordering",4]],[[["direction",4]],["ordering",4]],[[["directedroadid",3]],["ordering",4]],[[["sideofroad",4]],["ordering",4]],[[["roadsideid",3]],["ordering",4]],[[["road",3]],["commonendpoint",4]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["laneid",3]]],[[["intersectionid",3]],["directedroadid",3]],[[["intersectionid",3]],["directedroadid",3]],[[["map",3]],["intersectionid",3]],null,[[["roadid",3]],["bool",15]],[[["direction",4]],["bool",15]],[[["directedroadid",3]],["bool",15]],[[["sideofroad",4]],["bool",15]],[[["roadsideid",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["laneid",3],["fn",8]],["option",4,[["laneid",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[["map",3]],["polyline",3]],[[["direction",4],["map",3]],["result",6,[["polygon",3]]]],[[],["distance",3]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[["laneid",3],["laneid",3]],["vec",3,[["laneid",3]]]],[[],["polyline",3]],[[["option",4,[["string",3]]]],["string",3]],[[["map",3]],["lane",3]],[[],["roadrank",4]],[[],["polygon",3]],[[],["distance",3]],[[["map",3]],["option",4,[["zone",3]]]],[[["lanetype",4],["map",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[["map",3],["direction",4]],["bool",15]],null,[[["intersectionid",3]],["vec",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["vec",3,[["lanespec",3]]]],[[["pathconstraints",4],["map",3]],["vec",3,[["laneid",3]]]],null,[[],["distance",3]],[[["map",3]],["laneid",3]],[[["roadid",3]],["bool",15]],[[["directedroadid",3]],["bool",15]],[[["roadsideid",3]],["bool",15]],[[],["direction",4]],null,null,[[["intersectionid",3]],["intersectionid",3]],[[],["roadsideid",3]],[[["laneid",3]],["option",4,[["laneid",3]]]],[[["roadid",3]],["option",4,[["ordering",4]]]],[[["direction",4]],["option",4,[["ordering",4]]]],[[["directedroadid",3]],["option",4,[["ordering",4]]]],[[["sideofroad",4]],["option",4,[["ordering",4]]]],[[["roadsideid",3]],["option",4,[["ordering",4]]]],null,[[["vec",3,[["lanespec",3]]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],["speed",3]],[[["map",3]],["intersectionid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[],["controlstopsign",3]],[[],["roadwithstopsign",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["controlstopsign",3]],["bool",15]],[[["roadwithstopsign",3]],["bool",15]],[[["roadid",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["turnid",3],["map",3]],["turnpriority",4]],null,[[]],[[]],null,null,[[["controlstopsign",3]],["bool",15]],[[["roadwithstopsign",3]],["bool",15]],[[["map",3],["intersectionid",3]],["controlstopsign",3]],null,[[],["result",4]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,[[["duration",3],["duration",3],["map",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["controltrafficsignal",3]],[[],["stage",3]],[[],["stagetype",4]],[[]],[[]],[[]],[[["intersection",3]],["bool",15]],[[["intersection",3]],["bool",15]],[[["movementid",3],["intersection",3]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["movement",3],["turnpriority",4]]],[[["movement",3]]],[[["controltrafficsignal",3]],["bool",15]],[[["stage",3]],["bool",15]],[[["stagetype",4]],["bool",15]],[[["map",3]],["trafficsignal",3]],[[["movementid",3],["map",3]],["turn",3]],[[["directedroad",3],["map",3]],["result",6,[["directedroadid",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["usize",15],["intersection",3]],["duration",3]],[[["map",3],["intersectionid",3]],["vec",3]],[[["movementid",3]],["turnpriority",4]],[[["turnid",3],["intersection",3]],["turnpriority",4]],null,[[["trafficsignal",3],["intersectionid",3],["map",3]],["result",6,[["controltrafficsignal",3]]]],[[["turn",3],["map",3]],["result",6,[["movementid",3]]]],[[["bool",15],["intersection",3]],["bool",15]],[[]],[[]],[[]],[[["intersection",3]],["option",4,[["duration",3]]]],[[["intersection",3]],["btreeset",3,[["movementid",3]]]],[[["controltrafficsignal",3]],["bool",15]],[[["stage",3]],["bool",15]],[[["stagetype",4]],["bool",15]],[[["map",3],["intersectionid",3]],["controltrafficsignal",3]],[[],["stage",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["duration",3]],[[],["duration",3]],null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["intersection",3]],["result",6]],[[["map",3],["intersectionid",3]],["controltrafficsignal",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[["map",3]],["vec",3,[["pathrequest",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["transitstopid",3]],[[],["transitrouteid",3]],[[],["transitstop",3]],[[],["transitroute",3]],[[]],[[]],[[]],[[]],[[["transitstopid",3]],["ordering",4]],[[["transitrouteid",3]],["ordering",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[["transitstopid",3]],["bool",15]],[[["transitrouteid",3]],["bool",15]],[[["transitstop",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],null,null,[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],null,null,null,[[["transitstopid",3]],["bool",15]],[[["transitrouteid",3]],["bool",15]],[[["transitstop",3]],["bool",15]],null,[[["transitstopid",3]],["option",4,[["ordering",4]]]],[[["transitrouteid",3]],["option",4,[["ordering",4]]]],[[],["str",15]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["angle",3]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["turnid",3]],[[],["turntype",4]],[[],["turnpriority",4]],[[],["turn",3]],[[]],[[]],[[]],[[]],[[["turnid",3]],["ordering",4]],[[["turntype",4]],["ordering",4]],[[["turn",3]],["bool",15]],[[["map",3]],["option",4,[["directedroadid",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["turnid",3]],["bool",15]],[[["turntype",4]],["bool",15]],[[["turnpriority",4]],["bool",15]],[[["turn",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[],["u64",15]],[[]],null,[[]],[[]],[[]],[[]],[[["map",3]],["bool",15]],[[["turnid",3]],["bool",15]],[[["turn",3]],["bool",15]],null,[[["turnid",3]],["option",4,[["ordering",4]]]],[[["turntype",4]],["option",4,[["ordering",4]]]],[[["turnpriority",4]],["option",4,[["ordering",4]]]],[[],["bool",15]],[[["pathconstraints",4],["map",3]]],[[["map",3]],["bool",15]],[[["intersection",3],["map",3]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["map",3]],["movementid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["accessrestrictions",3]],[[],["zone",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["accessrestrictions",3]],["bool",15]],[[["zone",3]],["bool",15]],[[["map",3],["roadid",3]],["zone",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["map",3]],["vec",3,[["zone",3]]]],null,[[["accessrestrictions",3]],["bool",15]],[[["zone",3]],["bool",15]],[[],["accessrestrictions",3]],null,[[],["result",4]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["roadrank",4]],[[],["nodeid",3]],[[],["wayid",3]],[[],["relationid",3]],[[],["osmid",4]],[[]],[[]],[[]],[[]],[[]],[[["roadrank",4]],["ordering",4]],[[["nodeid",3]],["ordering",4]],[[["wayid",3]],["ordering",4]],[[["relationid",3]],["ordering",4]],[[["osmid",4]],["ordering",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["usize",15]],[[["roadrank",4]],["bool",15]],[[["nodeid",3]],["bool",15]],[[["wayid",3]],["bool",15]],[[["relationid",3]],["bool",15]],[[["osmid",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["roadrank",4]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[],["i64",15]],[[]],[[]],[[]],[[]],[[]],[[["nodeid",3]],["bool",15]],[[["wayid",3]],["bool",15]],[[["relationid",3]],["bool",15]],[[["osmid",4]],["bool",15]],[[["roadrank",4]],["option",4,[["ordering",4]]]],[[["nodeid",3]],["option",4,[["ordering",4]]]],[[["wayid",3]],["option",4,[["ordering",4]]]],[[["relationid",3]],["option",4,[["ordering",4]]]],[[["osmid",4]],["option",4,[["ordering",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[],["vec",3,[["pathconstraints",4]]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["lane",3],["map",3]],["bool",15]],[[["road",3],["map",3]],["bool",15]],[[]],[[],["routingparams",3]],[[]],[[]],[[["pathconstraints",4]],["ordering",4]],[[]],[[["deserializer",8]],["result",4,[["enumset",3,[["pathconstraints",4]]]]]],[[],["result",4]],[[],["result",4]],null,null,[[["u32",15]]],[[],["u32",15]],[[],["bool",15]],[[["enumset",3]],["bool",15]],[[["routingparams",3]],["bool",15]],[[],["bool",15]],[[["vec",3,[["laneid",3]]],["map",3]],["vec",3,[["laneid",3]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[["lanetype",4]],["pathconstraints",4]],[[]],[[]],null,[[["routingparams",3]],["bool",15]],null,[[]],[[["pathconstraints",4]],["option",4,[["ordering",4]]]],null,[[["duration",3]],["usize",15]],[[["enumset",3,[["pathconstraints",4]]],["serializer",8]],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[["usize",15]],["duration",3]],null,null,null,[[]],[[]],null,[[["movementid",3],["pathconstraints",4],["map",3]],["duration",3]],null,null,null,null,null,null,null,null,[[["usize",15]],["hashmap",3,[["usize",15],["usize",15]]]],[[]],[[]],[[]],[[]],[[["usize",15],["usize",15]],["option",4]],[[["vec",3],["vec",3]],["option",4]],[[]],[[]],[[["inputgraph",3]],["pathfindengine",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["createengine",4]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["nodemap",3]],[[]],[[],["result",4]],[[["deserializer",8]],["result",4,[["nodemap",3,[["",26,[["deserialize",8],["copy",8],["ord",8],["debug",8],["serialize",8]]]]]]]],[[]],[[]],[[],["nodeid",6]],[[],["nodeid",6]],[[["inputgraph",3]]],null,null,[[]],[[]],[[],["nodemap",3]],null,[[],["result",4]],[[]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,[[["pathrequest",3],["map",3]],["option",4]],[[["map",3],["timer",3]]],null,[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[],["pathfindercaching",4]],[[]],[[]],[[],["result",4]],[[],["pathfinder",3]],[[["pathfindercaching",4]],["bool",15]],[[]],[[]],[[]],[[]],[[["map",3],["routingparams",3],["createengine",4],["timer",3]],["pathfinder",3]],[[["map",3],["routingparams",3],["createengine",4],["vec",3,[["pathconstraints",4]]],["timer",3]],["pathfinder",3]],null,[[["pathrequest",3],["map",3]],["option",4,[["pathv2",3]]]],[[["pathrequest",3],["routingparams",3],["pathfindercaching",4],["map",3]],["option",4,[["pathv2",3]]]],[[],["result",4]],[[["map",3],["position",3],["position",3]],["option",4]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,[[["intersectionid",3],["map",3]],["option",4,[["btreeset",3,[["intersectionid",3]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["uberturn",3]],[[],["uberturnv2",3]],[[]],[[]],[[["uberturnv2",3]],["ordering",4]],[[],["result",4]],[[],["result",4]],[[],["laneid",3]],[[],["directedroadid",3]],[[["uberturn",3]],["bool",15]],[[["uberturnv2",3]],["bool",15]],[[],["bool",15]],[[],["laneid",3]],[[],["directedroadid",3]],[[["map",3]],["vec",3,[["intersectioncluster",3]]]],[[["turnid",3],["map",3],["btreeset",3]],["vec",3,[["uberturn",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["map",3]],["polyline",3]],[[]],[[]],[[]],[[["map",3]],["vec",3,[["uberturnv2",3]]]],null,[[["uberturn",3]],["bool",15]],[[["uberturnv2",3]],["bool",15]],[[["btreeset",3,[["intersectionid",3]]],["map",3]]],[[["uberturnv2",3]],["option",4,[["ordering",4]]]],null,null,[[],["result",4]],[[],["result",4]],[[]],[[]],[[["turnid",3],["btreemap",3]],["vec",3,[["turnid",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],null,null,null,null,null,null,null,[[],["option",4,[["uberturn",3]]]],[[["pathstep",4],["map",3]]],null,[[],["laneid",3]],[[],["traversable",4]],[[],["turnid",3]],[[["map",3],["buildingid",3],["buildingid",3],["pathconstraints",4]],["option",4,[["pathrequest",3]]]],[[["map",3],["directedroadid",3],["directedroadid",3],["pathconstraints",4]],["option",4,[["pathrequest",3]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["pathstep",4]],[[],["path",3]],[[],["pathrequest",3]],[[]],[[]],[[]],[[["pathstep",4]],["ordering",4]],null,[[],["distance",3]],null,[[],["pathstep",4]],[[],["option",4]],null,[[["map",3],["vec",3,[["pathrequest",3]]]],["vec",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["map",3],["pathstep",4]],["distance",3]],null,[[["pathstep",4]],["bool",15]],[[["path",3]],["bool",15]],[[["pathrequest",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["map",3],["option",4,[["speed",3]]]],["duration",3]],[[["map",3],["distance",3],["option",4,[["distance",3]]]],["result",6,[["polyline",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["vec",3,[["laneid",3]]]],[[],["u64",15]],[[],["pathrequest",3]],[[["map",3],["distance",3]],["result",6,[["pathstep",4]]]],[[],["vecdeque",3]],[[["map",3]]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["turnid",3]],["bool",15]],[[],["bool",15]],[[],["pathstep",4]],[[["position",3],["position",3],["pathconstraints",4],["map",3]],["pathrequest",3]],[[["option",4,[["speed",3]]],["pathconstraints",4],["map",3]],["speed",3]],[[["option",4,[["speed",3]]],["pathconstraints",4],["map",3]]],[[],["option",4,[["pathstep",4]]]],[[["usize",15],["pathstep",4],["map",3]]],[[["pathstep",4]],["bool",15]],[[["path",3]],["bool",15]],[[["pathrequest",3]],["bool",15]],[[["map",3],["vec",3,[["pathstep",4]]],["pathrequest",3],["vec",3,[["uberturn",3]]],["vec",3,[["laneid",3]]]],["path",3]],[[],["pathstep",4]],[[["pathrequest",3],["map",3]],["path",3]],null,[[["pathstep",4]],["option",4,[["ordering",4]]]],[[],["f64",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["map",3]],["pathstep",4]],null,null,[[]],[[]],[[]],[[],["string",3]],[[],["distance",3]],null,[[["map",3]],["option",4,[["polyline",3]]]],[[["map",3],["distance",3]],["option",4,[["polyline",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["map",3]]],[[["map",3]]],[[["map",3],["pathrequest",3]]],[[["position",3],["position",3],["pathconstraints",4]],["pathrequest",3]],[[]],[[]],[[]],[[["position",3],["position",3]],["pathrequest",3]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["pathstepv2",4]],[[],["pathv2",3]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[["map",3],["vec",3,[["uberturnv2",3]]]],["vec",3,[["uberturn",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["vec",3,[["directedroadid",3]]],["pathrequest",3],["duration",3],["vec",3,[["uberturnv2",3]]],["map",3]],["pathv2",3]],[[],["duration",3]],[[],["pathrequest",3]],[[],["vec",3]],[[]],[[]],[[["map",3]],["result",6,[["path",3]]]],[[["map",3]],["result",6,[["path",3]]]],[[["vec",3,[["pathstepv2",4]]],["pathrequest",3],["duration",3],["vec",3,[["uberturnv2",3]]]],["pathv2",3]],null,[[],["result",4]],[[],["result",4]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,null,null,null,null,null,null,[[["position",3],["map",3]],["hashmap",3,[["directedroadid",3],["duration",3]]]],[[["map",3]]],[[]],[[]],[[]],[[]],[[],["vehiclepathfinder",3]],[[],["node",4]],[[]],[[]],[[["node",4]],["ordering",4]],null,[[],["result",4]],[[],["result",4]],[[],["vehiclepathfinder",3]],null,[[["node",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[["pathconstraints",4],["nodemap",3],["routingparams",3],["map",3]],["inputgraph",3]],[[["node",4]],["bool",15]],[[["map",3],["pathconstraints",4],["routingparams",3],["createengine",4]],["vehiclepathfinder",3]],null,null,[[["node",4]],["option",4,[["ordering",4]]]],[[["pathrequest",3],["map",3]],["option",4,[["pathv2",3]]]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[["directedroadid",3],["movementid",3],["pathconstraints",4],["routingparams",3],["map",3]],["option",4,[["duration",3]]]],[[]],[[]],null,null,null,null,null,null,null,[[["position",3],["map",3]],["hashmap",3,[["directedroadid",3],["duration",3]]]],[[["map",3],["option",4]]],[[]],[[]],[[],["sidewalkpathfinder",3]],[[]],[[],["result",4]],[[],["sidewalkpathfinder",3]],null,[[]],[[]],[[["nodemap",3],["option",4],["map",3]],["inputgraph",3]],[[["map",3],["option",4],["createengine",4]],["sidewalkpathfinder",3]],null,[[["pathrequest",3],["map",3]],["pathv2",3]],[[["pathrequest",3],["map",3]],["option",4,[["pathv2",3]]]],[[],["result",4]],[[["map",3],["position",3],["position",3]],["option",4]],[[]],[[["inputgraph",3],["nodemap",3],["map",3],["vehiclepathfinder",3],["vehiclepathfinder",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[["vec",3,[["walkingnode",4]]],["map",3]],["vec",3,[["pathstepv2",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["string",3]],[[],["vec",3,[["originalroad",3]]]],[[["mapname",3]],["rawmap",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["nodeid",3]],["bool",15]],null,[[],["originalroad",3]],[[],["rawroad",3]],[[],["rawintersection",3]],[[],["rawbuilding",3]],[[],["rawarea",3]],[[],["rawparkinglot",3]],[[],["restrictiontype",4]],[[],["turnrestriction",3]],[[],["rawtransitroute",3]],[[],["rawtransitstop",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pt2d",3]],["nodeid",3]],[[["originalroad",3]],["ordering",4]],[[["restrictiontype",4]],["ordering",4]],[[["turnrestriction",3]],["ordering",4]],[[["originalroad",3]],["nodeid",3]],null,null,null,null,[[["nodeid",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["originalroad",3]],["bool",15]],[[["rawroad",3]],["bool",15]],[[["rawintersection",3]],["bool",15]],[[["restrictiontype",4]],["bool",15]],[[["turnrestriction",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cityname",3]],[[["originalroad",3],["mapconfig",3]],["result",6]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["isize",15]],null,null,null,[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mapconfig",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["distance",3]],null,[[["originalroad",3]],["result",6]],[[["nodeid",3],["pt2d",3]],["option",4,[["vec",3,[["originalroad",3]]]]]],null,null,[[["originalroad",3]],["bool",15]],[[["rawroad",3]],["bool",15]],[[["rawintersection",3]],["bool",15]],[[["turnrestriction",3]],["bool",15]],[[["i64",15]],["originalroad",3]],[[["str",15]],["option",4,[["restrictiontype",4]]]],[[["i64",15]],["nodeid",3]],[[["i64",15]],["wayid",3]],null,null,null,null,null,null,null,null,null,null,[[["originalroad",3]],["option",4,[["ordering",4]]]],[[["restrictiontype",4]],["option",4,[["ordering",4]]]],[[["turnrestriction",3]],["option",4,[["ordering",4]]]],[[["nodeid",3],["nodeid",3]],["option",4,[["distance",3]]]],null,null,null,null,null,null,[[["nodeid",3]],["result",6]],null,null,[[["nodeid",3]],["vec",3,[["originalroad",3]]]],null,[[["bool",15],["timer",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],null,null,null,[[["originalroad",3]],["option",4,[["polyline",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["laneid",3]],[[],["turnid",3]],[[["speed",3],["f64",15]],["speed",3]],[[]],[[]],[[]],[[]],[[["distance",3],["map",3]],["option",4,[["position",3]]]],[[],["position",3]],[[],["traversable",4]],[[]],[[]],[[["position",3]],["ordering",4]],[[["traversable",4]],["ordering",4]],[[],["result",4]],[[],["result",4]],[[],["distance",3]],null,[[["laneid",3],["map",3]],["position",3]],[[["position",3]],["bool",15]],[[["traversable",4]],["bool",15]],[[["laneid",3],["map",3]],["position",3]],[[["laneid",3],["distance",3],["map",3]],["position",3]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["u64",15]],[[["map",3]],["polyline",3]],[[["map",3]],["isize",15]],[[]],[[]],[[]],[[],["laneid",3]],null,[[["movementid",3],["option",4,[["speed",3]]],["pathconstraints",4],["map",3]],["speed",3]],[[["directedroadid",3],["option",4,[["speed",3]]],["pathconstraints",4],["map",3]]],[[],["option",4,[["laneid",3]]]],[[],["option",4,[["turnid",3]]]],[[["distance",3],["map",3]],["option",4,[["position",3]]]],[[["position",3]],["bool",15]],[[["traversable",4]],["bool",15]],[[["laneid",3],["distance",3]],["position",3]],[[["position",3]],["option",4,[["ordering",4]]]],[[["traversable",4]],["option",4,[["ordering",4]]]],[[["map",3]],["pt2d",3]],[[["map",3]]],[[],["result",4]],[[],["result",4]],[[["laneid",3]],["position",3]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["speed",3],["f64",15]],["speed",3]],null,null],"p":[[3,"AreaID"],[3,"BuildingID"],[3,"NamePerLanguage"],[3,"IntersectionID"],[3,"ParkingLotID"],[3,"RoadID"],[3,"TransitRouteID"],[4,"PathStepV2"],[4,"Direction"],[4,"AmenityType"],[4,"TurnPriority"],[4,"PathConstraints"],[4,"LaneType"],[4,"IntersectionType"],[4,"CommonEndpoint"],[4,"PathfinderCaching"],[4,"EditCmd"],[4,"EditIntersection"],[4,"BuildingType"],[4,"PathStep"],[4,"TurnType"],[4,"BufferType"],[4,"StageType"],[4,"AreaType"],[4,"Traversable"],[4,"DrivingSide"],[4,"SideOfRoad"],[4,"OffstreetParking"],[3,"EditRoad"],[3,"Road"],[3,"EditEffects"],[3,"Building"],[3,"ParkingLot"],[3,"Map"],[3,"AccessRestrictions"],[3,"PathRequest"],[3,"Amenity"],[3,"Movement"],[3,"Area"],[3,"City"],[3,"RoutingParams"],[3,"MapConfig"],[3,"Lane"],[3,"Path"],[3,"Zone"],[3,"MapEdits"],[3,"PermanentMapEdits"],[3,"RawToMapOptions"],[3,"PathV2"],[3,"MovementID"],[3,"LaneSpec"],[3,"DirectedRoadID"],[3,"Position"],[3,"TransitStop"],[3,"TurnID"],[3,"Intersection"],[3,"TransitRoute"],[3,"Turn"],[3,"CompressedMovementID"],[3,"ControlStopSign"],[3,"ControlTrafficSignal"],[3,"TransitStopID"],[3,"Perimeter"],[3,"RoadWithStopSign"],[3,"IntersectionCluster"],[3,"LaneID"],[3,"UberTurn"],[3,"Block"],[3,"Stage"],[3,"RoadSideID"],[13,"ResidentialCommercial"],[13,"Commercial"],[13,"Residential"],[13,"One"],[13,"ChangeIntersection"],[13,"ChangeRouteSchedule"],[13,"ChangeRoad"],[13,"StopSign"],[13,"TrafficSignal"],[13,"Buffer"],[13,"PublicGarage"],[13,"Private"],[13,"Lane"],[13,"ContraflowLane"],[13,"Turn"],[13,"ContraflowTurn"],[13,"Along"],[13,"Contraflow"],[13,"Movement"],[13,"ContraflowMovement"],[13,"Fixed"],[13,"Variable"],[13,"Lane"],[13,"Turn"],[4,"Spot"],[4,"WalkingNode"],[3,"WalkingOptions"],[3,"Item"],[13,"Building"],[13,"Border"],[13,"DirectedRoad"],[13,"SidewalkEndpoint"],[13,"RideTransit"],[13,"LeaveMap"],[3,"Item"],[3,"OriginalLane"],[3,"ChangeLaneType"],[3,"ReverseLane"],[3,"ChangeSpeedLimit"],[3,"ChangeAccessRestrictions"],[4,"PermanentEditCmd"],[4,"PermanentEditIntersection"],[13,"ChangeRouteSchedule"],[13,"ChangeIntersection"],[13,"ChangeRoad"],[13,"TrafficSignal"],[13,"StopSign"],[3,"InitialMap"],[3,"Road"],[3,"Intersection"],[3,"RoadLine"],[3,"Piece"],[3,"Cycleway"],[3,"BorderSnapper"],[3,"AmenityTypeIter"],[3,"NodeID"],[3,"WayID"],[3,"RelationID"],[4,"RoadRank"],[4,"OsmID"],[13,"Node"],[13,"Way"],[13,"Relation"],[4,"CreateEngine"],[4,"PathfindEngine"],[13,"CHSeedingNodeOrdering"],[13,"Dijkstra"],[13,"CH"],[3,"NodeMap"],[3,"InnerNodeMap"],[3,"Pathfinder"],[3,"UberTurnV2"],[4,"Node"],[3,"VehiclePathfinder"],[13,"Road"],[13,"UberTurn"],[3,"SidewalkPathfinder"],[3,"TurnRestriction"],[4,"RestrictionType"],[3,"RawBuilding"],[3,"RawArea"],[3,"RawMap"],[3,"OriginalRoad"],[3,"RawRoad"],[3,"RawIntersection"],[3,"RawParkingLot"],[3,"RawTransitRoute"],[3,"RawTransitStop"]]},\
"osm_viewer":{"doc":"","t":[5,5,0,6,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,12,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["main","run","viewer","App","BusinessSearch","MinimapController","Viewer","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","businesses","calculate_tags","counts","draw","draw_baselayer","event","fixed_object_outline","from","from","from","has_zorder","highlight","hovering_on_amenity","hovering_on_amenity","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","make_legend","minimap","new","new_state","recalculate_top_panel","render","show","top_panel","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","vzip","vzip","vzip"],"q":["osm_viewer","","","osm_viewer::viewer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,1,2,1,1,1,1,1,2,3,3,2,2,2,1,2,3,1,2,3,2,3,1,2,3,3,1,2,1,1,2,2,1,1,2,3,1,2,3,1,2,3,2,1,2,3],"f":[[[]],[[["settings",3]]],null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["eventctx",3],["simpleapp",3]],["widget",3]],null,[[["gfxctx",3],["simpleapp",3]]],[[],["drawbaselayer",4]],[[["eventctx",3],["simpleapp",3]],["transition",4,[["simpleapp",3]]]],null,[[]],[[]],[[]],[[["simpleapp",3]],["bool",15]],null,[[["eventctx",3],["simpleapp",3],["option",4,[["string",3]]]]],null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["simpleapp",3]],["widget",3]],null,[[["eventctx",3],["simpleapp",3]],["businesssearch",3]],[[["eventctx",3],["simpleapp",3]],["box",3,[["state",8]]]],[[["eventctx",3],["simpleapp",3],["option",4,[["widget",3]]]]],[[["eventctx",3]],["widget",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["eventctx",3],["simpleapp",3]]],[[]],[[]],[[]]],"p":[[3,"Viewer"],[3,"BusinessSearch"],[3,"MinimapController"]]},\
"parking_mapper":{"doc":"","t":[5,0,6,13,3,13,13,13,13,13,13,3,13,4,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,11,5,5,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["main","mapper","App","BothSides","ChangeWay","Complicated","DividedHighways","Done","LeftOnly","NoStopping","OverlappingStuff","ParkingMapper","RightOnly","Show","ToDo","UnmappedDividedHighways","Value","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","data","data","draw","draw","draw","draw_layer","eq","eq","event","event","find_divided_highways","find_overlapping_stuff","fmt","from","from","from","from","generate_osmc","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","make","new_state","new_state","osm_way_id","panel","panel","selected","show","show","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":["parking_mapper","","parking_mapper::mapper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,0,1,2,2,1,1,2,0,1,0,2,2,0,3,4,2,1,3,4,2,1,3,4,2,1,3,4,2,1,2,1,2,1,3,4,3,4,4,3,2,1,3,4,0,0,2,3,4,2,1,0,3,4,2,1,3,4,2,1,2,1,3,4,2,1,3,3,4,4,3,4,3,3,4,2,1,3,4,2,1,3,4,2,1,3,4,2,1,3,4,2,1],"f":[[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["show",4]],[[],["value",4]],[[]],[[]],null,null,[[["gfxctx",3],["simpleapp",3]]],[[["gfxctx",3],["simpleapp",3]]],null,null,[[["show",4]],["bool",15]],[[["value",4]],["bool",15]],[[["eventctx",3],["simpleapp",3]],["transition",4,[["simpleapp",3]]]],[[["eventctx",3],["simpleapp",3]],["transition",4,[["simpleapp",3]]]],[[["simpleapp",3]],["hashset",3,[["roadid",3]]]],[[["simpleapp",3],["timer",3]],["vec",3,[["polygon",3]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["btreemap",3],["bool",15],["timer",3]],["result",6]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["simpleapp",3],["show",4],["btreemap",3,[["wayid",3],["value",4]]]],["box",3,[["state",8]]]],[[["eventctx",3],["simpleapp",3]],["box",3,[["state",8]]]],[[["eventctx",3],["simpleapp",3],["hashset",3],["show",4],["btreemap",3,[["wayid",3],["value",4]]]],["box",3,[["state",8]]]],null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]]],"p":[[4,"Value"],[4,"Show"],[3,"ParkingMapper"],[3,"ChangeWay"]]},\
"piggyback":{"doc":"","t":[5],"n":["dummy"],"q":["piggyback"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"popdat":{"doc":"popdat (“population data”) generates <code>Scenarios</code> given a …","t":[4,13,3,3,3,13,13,13,13,13,13,13,4,3,13,13,13,13,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,12,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,5,5,5,5,3,11,12,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,11,11,13,3,4,13,3,3,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,5,11,12,5,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["Activity","Breakfast","CensusArea","CensusPerson","Config","Dinner","Entertainment","Errands","Financial","Healthcare","Home","Lunch","PersonType","Schedule","School","Student","Work","Worker","activities","activities","age","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","distribute_people","distribute_population_to_homes","employed","eq","eq","equivalent","fetch_all_for_map","fmt","fmt","from","from","from","from","from","from","generate_scenario","generate_schedule","get_hash","hash","home","import_census","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","make_person","ne","od","owns_car","polygon","population","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","walk_for_distances_shorter_than","walk_or_bike_for_distances_shorter_than","hours","minutes","rand_duration","rand_time","assign_people_to_houses","distribute_population_to_homes","PersonFactory","activity_to_buildings","activity_to_buildings","as_any","as_any_mut","borrow","borrow_mut","find_building_for_activity","from","into","into_any","into_any_arc","into_any_rc","make_people","make_person","new","pick_mode","try_from","try_into","type_id","vzip","AllowRemote","DesireLine","IncludeZonePolicy","MustOverlap","NormalDistribution","Options","Zone","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borders","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","center","create_zones","default","departure_time","disaggregate","eq","fmt","from","from","from","from","from","home_zone","homes","include_zones","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_remote","mean","mode","new","number_commuters","pct_overlap","pick_borders","pick_home","pick_workplace","polygon","sample","std_deviation","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","work_duration","work_zone","workplaces"],"q":["popdat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","popdat::activities","","","","popdat::distribute_people","","popdat::make_person","","","","","","","","","","","","","","","","","","","","","popdat::od","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Different things people might do in the day. Maybe it’s …","","Represents aggregate demographic data for some part of a …","Demographic information for a single person","Any arbitrarily chosen parameters needed should be put …","","","","","","","","It might be useful to classify a CensusPerson into …","A single person’s daily schedule. It’s assumed that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Starting from some number of total people living in a …","","","","","","","","","","","","","","Wires together all the pieces, so you can just hand this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is a standalone pipeline for generating a Scenario, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Starting from some number of total people living in a …","","","","","","","","","","","","","","","","","","","","","","Keep all zones. When looking at desire lines between two …","This describes some number of commuters living in some …","Only desire lines starting and ending in zones matching …","Keep zones that at least partially overlap the map’s …","A normal distribution of Durations.","","","","","","","","","","","","","","","","","","","","","","","","","","","When should somebody depart from home to work?","Generates a scenario from aggregated origin/destination …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns endpoints to (leave home, goto home). These’re …","Returns endpoints to (leave work, goto work). These’re …","","","","","","","","","","","","","","","","","","","","","","","","How long should somebody work before returning home?","",""],"i":[0,1,0,0,0,1,1,1,1,1,1,1,0,0,1,2,1,2,0,3,4,4,2,3,5,6,1,4,2,3,5,6,1,4,2,3,5,6,1,4,2,3,5,6,1,1,1,5,0,0,4,6,1,1,6,6,1,4,2,3,5,6,1,0,4,1,1,4,0,4,2,3,5,6,1,4,2,3,5,6,1,4,2,3,5,6,1,4,2,3,5,6,1,0,6,0,4,6,6,1,4,2,3,5,6,1,4,2,3,5,6,1,4,2,3,5,6,1,4,2,3,5,6,1,5,5,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,0,7,7,0,7,7,7,7,8,0,0,8,0,0,0,9,10,11,12,8,9,10,11,12,8,10,9,10,11,12,8,9,10,11,12,8,10,0,9,9,0,8,12,9,10,11,12,8,12,10,9,9,10,11,12,8,9,10,11,12,8,9,10,11,12,8,9,10,11,12,8,10,11,12,11,12,10,10,10,10,10,11,11,9,10,11,12,8,9,10,11,12,8,9,10,11,12,8,9,10,11,12,8,9,12,10],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["activity",4]],[[]],[[],["config",3]],null,[[["polygon",3,[["f64",15]]],["usize",15],["map",3],["xorshiftrng",3]],["vec",3]],null,[[["censusarea",3]],["bool",15]],[[["activity",4]],["bool",15]],[[],["bool",15]],[[["polygon",3],["gpsbounds",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15],["vec",3,[["censusarea",3]]],["config",3],["map",3],["xorshiftrng",3]],["scenario",3]],[[["config",3],["xorshiftrng",3]],["schedule",3]],[[],["u64",15]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["censusarea",3]],["bool",15]],null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["usize",15]],["duration",3]],[[["usize",15]],["duration",3]],[[["xorshiftrng",3],["duration",3],["duration",3]],["duration",3]],[[["xorshiftrng",3],["duration",3],["duration",3]],["time",3]],[[["vec",3,[["censusarea",3]]],["map",3],["xorshiftrng",3],["config",3]],["vec",3,[["censusperson",3]]]],[[["polygon",3,[["f64",15]]],["usize",15],["map",3],["xorshiftrng",3]],["vec",3]],null,[[["map",3]],["hashmap",3,[["activity",4],["vec",3,[["buildingid",3]]]]]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["activity",4],["tripendpoint",4],["map",3],["xorshiftrng",3]],["option",4,[["buildingid",3]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["vec",3,[["censusperson",3]]],["map",3],["timer",3],["xorshiftrng",3],["config",3]],["vec",3,[["personspec",3]]]],[[["censusperson",3],["map",3],["xorshiftrng",3],["config",3]],["personspec",3]],[[["map",3]]],[[["tripendpoint",4],["tripendpoint",4],["map",3],["xorshiftrng",3],["config",3]],["tripmode",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["map",3],["hashmap",3,[["string",3],["polygon",3]]],["includezonepolicy",4],["timer",3]],["hashmap",3,[["string",3],["zone",3]]]],[[],["options",3]],null,[[["map",3],["hashmap",3,[["string",3],["polygon",3]]],["vec",3,[["desireline",3]]],["options",3],["xorshiftrng",3],["timer",3]],["vec",3,[["personspec",3]]]],[[["includezonepolicy",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["bool",15]],null,null,[[["duration",3],["duration",3]],["normaldistribution",3]],null,null,[[["tripmode",4],["map",3],["xorshiftrng",3]],["option",4]],[[["tripmode",4],["map",3],["xorshiftrng",3]],["option",4]],[[["tripmode",4],["map",3],["xorshiftrng",3]],["option",4]],null,[[["xorshiftrng",3]],["duration",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null],"p":[[4,"Activity"],[4,"PersonType"],[3,"Schedule"],[3,"CensusPerson"],[3,"Config"],[3,"CensusArea"],[3,"PersonFactory"],[4,"IncludeZonePolicy"],[3,"Options"],[3,"Zone"],[3,"NormalDistribution"],[3,"DesireLine"]]},\
"santa":{"doc":"","t":[6,6,0,0,0,0,0,0,0,5,0,0,0,5,0,0,0,3,3,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,3,3,4,13,13,13,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,17,11,11,12,11,11,12,11,12,11,5,11,12,11,11,11,12,5,5,11,11,11,11,11,12,12,11,4,3,13,13,13,13,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,12,17,3,5,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,17,17,3,3,3,17,17,3,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,12,12,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,3,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,12,12,12,11,11,12,12,12,11,11,11,11,12,12,11,5,5,17,3,3,17,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,12,11,11,3,13,4,3,13,17,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,12,11,11,11,11,12,11,11,11,11,12,12,11,11,12,12,11,11,12,12,11,11,11,11,11,11,11,12,12,11,12,12,11,11,12,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,3,11,11,11,11,11,12,11,11,11,11,11,11,12,11,12,12,12,11,11,11,11],"n":["App","Transition","after_level","animation","before_level","buildings","controls","game","levels","main","meters","music","player","run","session","title","vehicles","RecordPath","Results","Strategize","ZOOM","add_pt","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","draw","draw","draw_all","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new","new_state","new_state","on_click","on_click","other_event","other_event","pts","render","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unlock_messages","vzip","vzip","vzip","Animation","Animator","Effect","Flash","FollowPath","Scale","SnowEffect","Snowflake","active","add","add_screenspace","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","draw","draw","draw","draw_mapspace","draw_screenspace","effect","end","event","event","fall_speed","flakes","from","from","from","from","from","initial_pos","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_done","max_swoop","new","new","pos","render","rng","screenspace","spawn_new","start","start","swoop_period","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","alpha_scale","center","color","cycles","lerp_scale","orig","orig","pl","width","Picker","ZOOM","as_any","as_any_mut","bldgs","borrow","borrow_mut","current_picks","draw","draw_start","event","explain_upzoning","from","instructions_panel","into","into_any","into_any_rc","level","make_upzone_panel","make_vehicle_panel","new_state","randomly_pick_upzones","try_from","try_into","type_id","upzone_panel","vehicle_panel","vzip","BldgState","Buildings","Done","Ignore","Store","Undelivered","all_stores","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","buildings","clone","clone_into","draw_all","draw_done_houses","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","new","to_owned","total_housing_units","try_from","try_from","try_into","try_into","type_id","type_id","upzones","vzip","vzip","0","HACK","InstantController","angle_from_arrow_keys","as_any","as_any_mut","borrow","borrow_mut","displacement","facing","from","into","into_any","into_any_arc","into_any_rc","new","try_from","try_into","type_id","vzip","ACQUIRE_BOOST_RATE","BOOST_SPEED_MULTIPLIER","EnergylessArrow","Game","GameState","HANGRY_SPEED_MULTIPLIER","MAX_BOOST","MinimapController","all_stores","animator","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bldgs","boost","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","draw","draw","draw_done_houses","energy","energyless_arrow","event","from","from","from","from","game_over","has_energy","has_zorder","idle_time","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","last_update","level","make_legend","met_goal","minimap","new","new","new_state","on_destroy","pause_panel","player","present_dropped","record_path","score","snow","started","state","status_panel","time_panel","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","update","update_boost_panel","update_status_panel","update_time_panel","vehicle","vzip","vzip","vzip","vzip","warned_low_energy","warned_low_time","Level","all","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","description","deserialize","eq","from","goal","into","into_any","into_any_arc","into_any_rc","map","minimap_zoom","music","ne","serialize","start","time_limit","title","to_owned","try_from","try_into","type_id","unlock_upzones","unlock_vehicles","vzip","custom_bar","make_bar","IN_GAME","Inner","Music","OUT_OF_GAME","_stream","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","change_song","change_song","current_song","default","draw","empty","event","from","from","inner","into","into","into_any","into_any","into_any_rc","into_any_rc","mute","new","panel","sink","specify_volume","specify_volume","start","stream_handle","try_from","try_from","try_into","try_into","type_id","type_id","unmute","unmuted_volume","vzip","vzip","BuildingsAlongRoad","Intersection","On","Player","Road","ZOOM","apply_displacement","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","bldgs_along_road","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","controls","eq","facing","from","from","from","get_angle","get_connections","get_pos","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","ne","new","new","on","on_good_road","override_pos","per_road","pos","pos_to_on","query_range","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_with_speed","vzip","vzip","vzip","0","0","1","2","ColorScheme","Session","apartment","as_any","as_any","as_any_mut","as_any_mut","boost","borrow","borrow","borrow_mut","borrow_mut","colors","current_vehicle","deserialize","deserialize","enable_modding","energy","from","from","high_scores","house","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","levels","levels_unlocked","load","music","play_music","record_score","save","score","serialize","serialize","store","try_from","try_from","try_into","try_into","type_id","type_id","unlock_all","update_music","upzones_explained","upzones_per_level","upzones_unlocked","vehicles_unlocked","visited","vzip","vzip","Credits","TitleScreen","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","draw","draw","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","level_btn","link","locked_level","new_state","new_state","on_click","on_click","other_event","other_event","try_from","try_from","try_into","try_into","type_id","type_id","unlocked_level","vzip","vzip","Vehicle","animate","as_any","as_any_mut","borrow","borrow_mut","draw_frames","from","get","into","into_any","into_any_arc","into_any_rc","max_energy","max_stats","name","scale","speed","try_from","try_into","type_id","vzip"],"q":["santa","","","","","","","","","","","","","","","","","santa::after_level","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::animation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::animation::Effect","","","","","","","","","santa::before_level","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::buildings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::buildings::BldgState","santa::controls","","","","","","","","","","","","","","","","","","","santa::game","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::levels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::meters","","santa::music","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::player","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::player::On","","","","santa::session","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::title","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","santa::vehicles","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pass in a future value for <code>now</code> to schedule a delayed effecthich of the 8 directions are we facing, based on the last …s the player currently on a road with a bus or bike lane?","For the game over animation","","","","","","","","","","","","","","","Returns any buildings we passed","","","","","","","","","Persistent state that lasts across levels.","","","","","","","","","","","","","","","Enable this to use the levels, instead of overwriting them …","","","","Level title -&gt; the top 3 scores","","","","","","","","","","","","","","If a message is returned, a new level and some powers were …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","(max speed, max energy)","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,2,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,1,2,3,2,3,2,3,1,1,2,3,1,2,3,1,2,3,1,2,2,3,1,0,0,0,4,4,4,0,0,5,5,5,5,6,4,7,8,5,6,4,7,8,5,6,4,7,8,5,6,4,7,8,5,7,7,5,5,6,6,5,7,8,7,5,6,4,7,8,8,5,6,4,7,8,5,6,4,7,8,5,6,4,7,8,5,6,4,7,8,5,8,5,7,8,4,7,6,7,6,8,8,5,6,4,7,8,5,6,4,7,8,5,6,4,7,8,5,6,4,7,8,9,10,11,9,10,10,9,11,11,0,0,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,0,0,12,12,12,12,12,12,12,12,0,0,13,13,13,13,14,14,13,14,13,14,13,14,13,14,13,13,14,14,14,13,14,13,14,13,14,13,14,13,14,13,14,14,13,14,13,14,13,14,14,13,15,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,17,18,18,19,17,20,18,19,17,20,19,19,18,19,17,20,18,19,17,20,18,17,19,19,19,18,18,19,17,20,19,19,20,19,18,19,17,20,18,19,17,20,19,17,20,18,19,17,20,17,19,20,19,18,19,17,18,18,18,18,19,19,19,18,17,18,18,18,18,19,17,20,18,19,17,20,18,19,17,20,18,17,18,18,18,19,18,19,17,20,19,19,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,0,0,0,0,22,23,22,23,22,23,22,23,22,23,22,22,23,23,23,23,23,22,23,23,22,23,22,23,22,22,22,22,22,23,22,23,22,23,22,23,22,23,22,22,22,23,22,0,24,0,0,24,0,25,25,26,24,25,26,24,25,25,26,24,25,26,24,24,24,25,24,25,25,26,24,25,24,25,25,26,24,25,26,24,25,26,24,25,26,24,24,25,26,25,25,25,26,25,25,26,24,25,26,24,25,26,24,25,26,24,25,25,26,24,27,28,28,28,0,0,29,30,29,30,29,29,30,29,30,29,30,30,30,29,30,29,30,29,30,29,30,29,30,29,29,30,29,30,30,30,30,30,30,30,29,30,29,29,30,29,30,29,30,29,30,30,30,30,30,30,29,30,29,0,0,31,32,31,32,31,32,31,32,31,32,31,32,31,32,31,32,31,32,31,32,0,0,0,31,32,31,32,31,32,31,32,31,32,31,32,0,31,32,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33],"f":[null,null,null,null,null,null,null,null,null,[[]],null,null,null,[[["settings",3]]],null,null,null,null,null,null,null,[[["pt2d",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[["gfxctx",3],["simpleapp",3]]],[[["gfxctx",3],["simpleapp",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["recordpath",3]],[[["eventctx",3],["simpleapp",3],["usize",15],["level",3],["buildings",3],["recordpath",3]],["box",3,[["state",8]]]],[[["eventctx",3],["simpleapp",3],["usize",15],["level",3]],["box",3,[["state",8]]]],[[["eventctx",3],["simpleapp",3],["str",15],["panel",3]],["transition",4,[["simpleapp",3,[["session",3]]]]]],[[["eventctx",3],["simpleapp",3],["str",15],["panel",3]],["transition",4,[["simpleapp",3,[["session",3]]]]]],[[["eventctx",3],["simpleapp",3]],["transition",4,[["simpleapp",3,[["session",3]]]]]],[[["eventctx",3],["simpleapp",3]],["transition",4,[["simpleapp",3,[["session",3]]]]]],null,[[["distance",3]],["polygon",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[["time",3],["duration",3],["effect",4]]],[[["time",3],["duration",3],["effect",4]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["gfxctx",3]]],[[["gfxctx",3]]],null,null,null,null,null,[[["eventctx",3],["time",3]]],[[["eventctx",3],["time",3]]],null,null,[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["bool",15]],null,[[["eventctx",3]],["animator",3]],[[["eventctx",3]],["snoweffect",3]],[[["time",3]],["pt2d",3]],[[["f64",15],["geombatch",3]]],null,null,[[["time",3],["pt2d",3]],["snowflake",3]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],null,[[]],[[]],null,[[["gfxctx",3],["simpleapp",3]]],null,[[["eventctx",3],["simpleapp",3]],["transition",4,[["simpleapp",3,[["session",3]]]]]],[[["eventctx",3]],["transition",4,[["simpleapp",3,[["session",3]]]]]],[[]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["simpleapp",3],["usize",15]],["panel",3]],[[["eventctx",3],["simpleapp",3]],["panel",3]],[[["eventctx",3],["simpleapp",3],["level",3]],["box",3,[["state",8]]]],[[["simpleapp",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],null,null,null,null,null,null,[[],["vec",3,[["buildingid",3]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],null,[[],["bldgstate",4]],[[]],null,[[["eventctx",3],["simpleapp",3]],["drawable",3]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["simpleapp",3],["hashset",3,[["buildingid",3]]]],["buildings",3]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,null,[[["eventctx",3]],["option",4,[["angle",3]]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[["eventctx",3],["speed",3]],["option",4]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["instantcontroller",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["gfxctx",3],["simpleapp",3]]],null,null,null,null,[[["eventctx",3],["simpleapp",3]],["transition",4,[["simpleapp",3,[["session",3]]]]]],[[]],[[]],[[]],[[]],null,[[],["bool",15]],[[["simpleapp",3]],["bool",15]],null,[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[["eventctx",3],["simpleapp",3]],["widget",3]],[[],["bool",15]],null,[[["eventctx",3],["level",3],["vehicle",3],["buildings",3]],["gamestate",3]],[[["eventctx",3],["time",3],["vec",3,[["buildingid",3]]]],["energylessarrow",3]],[[["eventctx",3],["simpleapp",3],["level",3],["vehicle",3],["hashset",3,[["buildingid",3]]]],["box",3,[["state",8]]]],[[["eventctx",3],["simpleapp",3]]],null,null,[[["eventctx",3],["simpleapp",3],["buildingid",3]],["option",4,[["usize",15]]]],null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["eventctx",3],["simpleapp",3],["duration",3]]],[[["eventctx",3],["simpleapp",3],["pt2d",3]]],[[["eventctx",3],["simpleapp",3]]],[[["eventctx",3],["simpleapp",3]]],[[["eventctx",3],["simpleapp",3]]],null,[[]],[[]],[[]],[[]],null,null,null,[[],["vec",3,[["level",3]]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["level",3]],[[]],null,[[],["result",4]],[[["level",3]],["bool",15]],[[]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,null,[[["level",3]],["bool",15]],[[],["result",4]],null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[["eventctx",3],["color",3],["f64",15],["text",3]],["widget",3]],[[["eventctx",3],["color",3],["usize",15],["usize",15]],["widget",3]],null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["str",15]]],[[["str",15]],["result",6]],null,[[],["music",3]],[[["gfxctx",3]]],[[],["music",3]],[[["eventctx",3],["bool",15]]],[[]],[[]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[]],[[["eventctx",3],["bool",15],["str",15]],["result",6,[["inner",3]]]],null,null,[[["f32",15]]],[[["f32",15]]],[[["eventctx",3],["bool",15],["str",15]],["music",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,[[]],[[]],null,null,null,null,null,null,[[["eventctx",3],["simpleapp",3],["f64",15],["f64",15],["bool",15]],["vec",3,[["buildingid",3]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["on",4]],[[]],null,[[["on",4]],["bool",15]],null,[[]],[[]],[[]],[[],["angle",3]],[[["simpleapp",3]]],[[],["pt2d",3]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["on",4]],["bool",15]],[[["eventctx",3],["simpleapp",3],["intersectionid",3]],["player",3]],[[["simpleapp",3]],["buildingsalongroad",3]],null,[[["simpleapp",3]],["bool",15]],[[["pt2d",3]]],null,null,[[["simpleapp",3],["pt2d",3]],["option",4,[["on",4]]]],[[["roadid",3],["distance",3],["distance",3]],["vec",3,[["buildingid",3]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["eventctx",3],["simpleapp",3],["speed",3]],["vec",3,[["buildingid",3]]]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],null,null,[[]],[[]],null,null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[],["session",3]],null,null,[[["string",3],["usize",15]],["option",4,[["vec",3,[["string",3]]]]]],[[]],null,[[],["result",4]],[[],["result",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["eventctx",3]]],null,null,null,null,null,[[]],[[]],null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["gfxctx",3],["simpleapp",3]]],[[["gfxctx",3],["simpleapp",3]]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["simpleapp",3],["level",3],["usize",15]],["geombatch",3]],[[["eventctx",3],["str",15],["str",15]],["widget",3]],[[["eventctx",3],["simpleapp",3],["level",3],["usize",15]],["widget",3]],[[["eventctx",3],["simpleapp",3]],["box",3,[["state",8]]]],[[["eventctx",3]],["box",3,[["state",8]]]],[[["eventctx",3],["simpleapp",3],["str",15],["panel",3]],["transition",4,[["simpleapp",3,[["session",3]]]]]],[[["eventctx",3],["simpleapp",3],["str",15],["panel",3]],["transition",4,[["simpleapp",3,[["session",3]]]]]],[[["eventctx",3],["simpleapp",3]],["transition",4,[["simpleapp",3,[["session",3]]]]]],[[["eventctx",3],["simpleapp",3]],["transition",4,[["simpleapp",3,[["session",3]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["eventctx",3],["simpleapp",3],["level",3],["usize",15]],["widget",3]],[[]],[[]],null,[[["prerender",3],["time",3]],["geombatch",3]],[[],["any",8]],[[],["any",8]],[[]],[[]],null,[[]],[[["str",15]],["vehicle",3]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"RecordPath"],[3,"Strategize"],[3,"Results"],[4,"Effect"],[3,"Animator"],[3,"Animation"],[3,"SnowEffect"],[3,"Snowflake"],[13,"Flash"],[13,"Scale"],[13,"FollowPath"],[3,"Picker"],[4,"BldgState"],[3,"Buildings"],[13,"Undelivered"],[3,"InstantController"],[3,"EnergylessArrow"],[3,"Game"],[3,"GameState"],[3,"MinimapController"],[3,"Level"],[3,"Inner"],[3,"Music"],[4,"On"],[3,"Player"],[3,"BuildingsAlongRoad"],[13,"Intersection"],[13,"Road"],[3,"ColorScheme"],[3,"Session"],[3,"TitleScreen"],[3,"Credits"],[3,"Vehicle"]]},\
"sim":{"doc":"The sim crate runs a traffic simulation on top of the …","t":[12,12,12,13,4,3,4,4,4,3,13,17,17,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,3,4,3,13,3,3,13,4,13,3,3,3,3,13,4,17,13,13,4,13,13,13,17,13,13,17,17,13,13,13,13,13,13,13,13,13,13,3,13,13,4,13,4,13,13,3,3,13,3,4,13,4,13,17,3,13,4,3,13,3,8,3,3,3,3,13,13,3,13,13,13,13,13,13,13,13,3,3,13,3,4,4,3,3,3,4,13,13,12,12,12,11,12,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,12,12,12,12,0,11,11,12,12,12,12,12,0,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,12,12,12,12,0,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,11,12,12,12,12,12,5,12,0,12,0,12,12,0,12,10,12,12,12,12,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,0,12,12,12,12,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,13,13,13,13,4,3,3,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,12,12,12,12,12,11,11,12,11,12,11,11,11,12,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,13,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,5,0,0,0,5,5,5,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,5,12,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,5,12,12,11,11,11,11,11,13,13,3,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,5,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,3,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,17,3,17,17,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,3,3,3,3,17,17,12,12,11,5,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,12,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,12,11,11,11,11,11,12,11,13,3,13,3,3,8,4,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,10,11,11,11,10,11,11,11,10,11,11,11,12,12,11,11,11,11,12,12,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,12,12,13,3,3,4,13,13,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,12,12,12,12,12,13,13,13,13,13,13,4,3,13,17,17,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,11,11,11,11,11,12,12,12,12,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,13,13,18,3,13,13,13,13,18,13,13,18,13,13,13,4,4,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,12,12,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,13,4,3,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,13,4,3,3,3,4,13,13,13,13,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,4,13,13,13,13,13,4,13,13,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,4,4,13,13,3,13,13,13,13,13,3,4,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,17,13,3,13,13,3,8,3,11,11,11,11,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,5,11,0,11,12,10,12,12,11,11,11,11,0,12,12,11,11,11,11,11,11,12,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,13,3,4,13,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,12,12,5,5,5,5,5,5,5,5,5,13,3,4,13,13,13,3,3,6,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,13,13,13,13,13,3,4,13,3,13,13,13,13,3,4,3,13,4,13,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,12,12,11,11,12,11,11,11,11,11,11,12,11,12,11,11,12,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12],"n":["0","0","0","Agent","AgentID","AgentProperties","AgentType","AlertHandler","AlertLocation","Analytics","ArterialIntersectionCrossing","BIKE_LENGTH","BUS_LENGTH","Bike","Bike","BikeRack","Biking","BldgDriveway","Block","Border","Border","BorderSpawnOverTime","Building","Building","Bus","Bus","BusPassenger","Cancelled","Car","Car","Car","CarID","CarStatus","CommutersVehiclesCounts","ComplexIntersectionCrossing","CreateCar","CreatePedestrian","DeferredParkingSpot","DelayCause","DelayedStart","DistanceInterval","DrawCarInput","DrawPedCrowdInput","DrawPedestrianInput","Driving","DrivingGoal","FOLLOWING_DISTANCE","Finished","Inside","Intent","Intersection","Intersection","IntersectionDelay","LIGHT_RAIL_LENGTH","Lot","LotDriveway","MAX_CAR_LENGTH","MIN_CAR_LENGTH","ModeChange","Moving","Nil","OffMap","Offstreet","Ok","Onstreet","OvertakeDesired","ParkNear","Parked","ParkedCar","Parking","Parking","ParkingSpot","ParkingSpot","PedCrowdLocation","Pedestrian","Pedestrian","PedestrianID","Person","Person","PersonID","PersonState","Print","Problem","RidingBus","SPAWN_DIST","ScenarioGenerator","Sidewalk","SidewalkPOI","SidewalkSpot","Silence","Sim","SimCallback","SimFlags","SimOptions","SlidingWindow","SpawnOverTime","SteepUphill","SuddenlyAppear","TimeInterval","Train","Train","TransitRider","TransitStop","Trip","TripCancelled","TripDoesntExist","TripDone","TripID","TripInfo","TripNotStarted","TripPhase","TripPhaseType","TripResult","UnzoomedAgent","Vehicle","VehicleSpec","VehicleType","WaitingForBus","Walking","alerts","alerts","alerts","all","allow_block_the_box","analytics","analytics","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_car","bike_rack","body","border_spawn_over_time","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","building","bus_arrivals","bus_riders","bus_stop","buses","cancellation_reason","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_box","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","connection","count_parked_cars_per_bldg","cyclists","deferred_parking_spot","delayed_trips","demand","departure","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","disable_turn_conflicts","dist_crossed","dont_break_turn_conflict_cycles","dont_handle_uber_turns","dont_recalc_lanechanging","driving","edits_name","enable_pandemic_model","end","end","end","end_at_border","end_time","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","events","facing","finished_trips","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_appearing","for_parked_car","fork_rng","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","goal","goal","goal","goal_pos","has_path_req","hash","hash","hash","hash","hash","hash","hash","high","highlighted_people","id","id","id","id","id","id","id","index","index","infinite_parking","intent","intent","intersection_delays","intersection_thruput","intersections","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_car","is_transit","label","length","length","length","lerp","load","load_path","location","low","make","make","make_router","map_name","max_speed","max_speed","maybe_parked_car","maybe_route","mechanics","members","mode","modified","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new_driving","new_walking","noun","num_agents","num_bikes","num_cars","num_peds","on","on","on_bus","ongoing_verb","only_seed_buses","opts","orig_id","owner","pandemic","pandemic","parked_since","parking","parking","parking_lane_changes","parking_lot_changes","parking_spot","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partly_on","passengers_alighting","passengers_boarding","path","path","ped","ped_speed","percent","percent_biking","percent_clamp_end","percent_driving","percent_use_transit","percent_use_transit","person","person","person","person","phase_type","plural_noun","pos","pos","preparing_bike","problems_per_trip","purpose","rand_dist","record_anything","recorder","recorder","render","rng_seed","road_thruput","router","router","run","run_name","run_name","scenario_modifiers","scenario_name","scheduler","scheduler","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sidewalk_pos","sim","skip_analytics","sov_drivers","spawn_over_time","speed","spot","start","start","start","start","start_at_border","start_from_border","start_time","start_time","start_time","started_trips","state","status","step_count","stop_time","stop_time","suddenly_appear","time","times","to_constraints","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_type","to_vehicle_type","total_dist","total_time","total_waiting","traffic_signal_thruput","train_riders","trains","transit","transit","trip","trip_and_person","trip_log","trips","trips","trips","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","use_freeform_policy_everywhere","vehicle","vehicle","vehicle_type","vehicle_type","vehicle_type","vehicles","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","waiting_for_bus","waiting_for_turn","waiting_for_turn","waiting_here","walking","walking_commuters","walking_to_from_bike","walking_to_from_car","walking_to_from_transit","window_size","0","0","0","1","0","0","0","0","0","0","0","1","0","0","0","1","1","1","0","0","0","1","0","0","0","0","0","0","1","0","0","0","0","0","0","0","1","1","2","0","Analytics","ArterialIntersectionCrossing","ComplexIntersectionCrossing","IntersectionDelay","OvertakeDesired","Problem","SlidingWindow","TimeSeriesCount","TripPhase","active_agents","add","alerts","all_total_counts","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","both_finished_trips","bus_arrivals","clone","clone","clone","clone_into","clone_into","clone_into","close_off_pts","count","count_per_hour","counts","default","demand","deserialize","deserialize","deserialize","end_time","eq","event","export_csv","finished_trip_time","finished_trips","fmt","fmt","from","from","from","from","from","get_all_trip_phases","get_trip_phases","has_path_req","intersection_delays","intersection_thruput","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","ne","new","new","new","parking_lane_availability","parking_lane_changes","parking_lot_availability","parking_lot_changes","parking_spot_availability","passengers_alighting","passengers_boarding","path","phase_type","problems_per_trip","raw","raw_throughput","record","record_anything","record_demand","road_thruput","serialize","serialize","serialize","start_time","started_trips","times","to_owned","to_owned","to_owned","total_for","total_for_by_time","total_for_with_agent_types","traffic_signal_thruput","trip_log","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","window_size","0","0","0","0","1","AgentEntersTraversable","Alert","AlertLocation","BikeStoppedAtSidewalk","Biking","Building","BusArrivedAtStop","BusDepartedFromStop","Cancelled","CarLeftParkingSpot","CarReachedParkingSpot","DelayedStart","Driving","Event","Finished","Intersection","IntersectionDelayMeasured","Nil","Parking","PassengerAlightsTransit","PassengerBoardsTransit","PathAmended","PedReachedParkingSpot","Person","PersonEntersBuilding","PersonEntersMap","PersonLeavesBuilding","PersonLeavesMap","ProblemEncountered","RidingBus","TripCancelled","TripFinished","TripPhaseStarting","TripPhaseType","WaitingForBus","Walking","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","describe","deserialize","deserialize","deserialize","eq","eq","eq","fmt","fmt","fmt","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","ne","ne","ne","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","2","2","2","2","2","2","2","2","2","3","3","3","3","3","4","blocked_time","mode","total_time","trip","0","0","1","1","2","activity_model","fork_rng","generator","load","spawner","create_prole","rand_time","select_trip_mode","BorderSpawnOverTime","ScenarioGenerator","SpawnOverTime","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","border_spawn_over_time","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","empty","fmt","fmt","fmt","from","from","from","generate","goal","goal","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","num_agents","num_bikes","num_cars","num_peds","only_seed_buses","percent_biking","percent_driving","percent_use_transit","percent_use_transit","proletariat_robot","rand_time","scenario_name","serialize","serialize","serialize","small_run","spawn","spawn_agent","spawn_over_time","start_from_border","start_time","start_time","stop_time","stop_time","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ModifierList","RNG_SEED","SimFlags","as_any","as_any_mut","borrow","borrow_mut","clap","clone","clone_into","for_test","from","from_clap","initialize","into","into_any","into_any_arc","into_any_rc","load","load_path","load_synchronously","make_rng","opts","parse_modifiers","rng_seed","scenario_modifiers","to_owned","try_from","try_into","type_id","vzip","JustWalking","SpawningFailure","StartTripArgs","TripSpec","UsingBike","UsingParkedCar","UsingTransit","VehicleAppearing","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","driving_goal","end_sidewalk_spot","eq","eq","fmt","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_plan","maybe_new","ne","ne","retry_if_no_room","serialize","serialize","start_sidewalk_spot","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","use_vehicle","vzip","vzip","bike","car","error","goal","goal","goal","goal","goal","maybe_stop2","retry_if_no_room","route","start","start","start","start_bldg","start_pos","stop1","use_vehicle","use_vehicle","car","driving","intersection","parking","queue","walking","Car","CarState","ChangingLanes","Crossing","IdlingAtStop","Parking","Queued","Unparking","WaitingToAdvance","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","crossing_state","crossing_state_with_end_dist","deserialize","deserialize","fmt","fmt","from","from","get_draw_car","get_end_time","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_parking","last_steps","router","serialize","serialize","started_at","state","time_spent_waiting","to_owned","to_owned","total_blocked_time","trip_and_person","try_from","try_from","try_into","try_into","type_id","type_id","vehicle","vzip","vzip","wants_to_overtake","0","0","1","1","2","blocked_since","blocked_since","blocked_starts","dist_int","from","front","lc_time","new_dist","new_time","spot","steep_uphill","time_int","time_int","to","want_to_change_lanes","BLIND_RETRY_TO_CREEP_FORWARDS","BLIND_RETRY_TO_REACH_END_DIST","DrivingSimState","TIME_TO_CHANGE_LANES","TIME_TO_WAIT_AT_BUS_STOP","agent_properties","all_waiting_people","as_any","as_any_mut","borrow","borrow_mut","cars","clone","clone_into","collect_events","debug_car_json","debug_car_ui","debug_lane","debug_queue_lengths","delete_car","delete_car_internal","deserialize","does_car_exist","events","find_trips_to_edited_parking","find_vehicles_affected_by_live_edits","from","get_all_draw_cars","get_all_driving_paths","get_blocked_by_graph","get_car_front","get_draw_cars_on","get_owner_of_car","get_path","get_single_draw_car","get_unzoomed_agents","handle_live_edits","handle_uber_turns","into","into_any","into_any_arc","into_any_rc","new","percent_along_route","pick_overtaking_lane","queues","recalc_lanechanging","serialize","start_car_on_lane","target_lane_penalty","time_to_park_offstreet","time_to_park_onstreet","time_to_unpark_offstreet","time_to_unpark_onstreet","to_owned","trace_route","trim_last_steps","try_from","try_into","try_start_lc","type_id","update_car","update_car_with_distances","update_car_without_distances","update_follower","update_laggy_head","vehicle_waiting_to_spawn","vzip","waiting_to_spawn","wants_to_overtake","IntersectionSimState","Request","SignalState","State","WAIT_AT_STOP_SIGN","WAIT_BEFORE_YIELD_AT_TRAFFIC_SIGNAL","accepted","agent","agent_deleted_mid_turn","allow_block_the_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blocked_by","blocked_by_someone_requests","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","break_turn_conflict_cycles","cancel_request","check_for_conflicts_before_uber_turn","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","collect_events","current_stage","current_stage_and_remaining_time","debug","delayed_intersections","describe_stats","deserialize","deserialize","deserialize","deserialize","detect_conflict_cycle","disable_turn_conflicts","dont_block_the_box","eq","equivalent","events","extensions_count","fmt","fmt","fmt","from","from","from","from","get_accepted_agents","get_waiting_agents","handle_accepted_conflicts","handle_live_edited_traffic_signals","handle_live_edits","handle_uber_turns","id","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","maybe_start_turn","ne","new","new","nobody_headed_towards","not_allowed_requests","partial_cmp","populate_blocked_by","reserved","serialize","serialize","serialize","serialize","signal","space_freed","stage_ends_at","state","stop_sign_policy","to_owned","to_owned","to_owned","to_owned","total_repeat_requests","traffic_signal_policy","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","turn","turn_finished","type_id","type_id","type_id","type_id","uber_turn_neighbors","update_intersection","use_freeform_policy_everywhere","vehicle_gone","vzip","vzip","vzip","vzip","waiting","wakeup_waiting","Infinite","InfiniteParkingSimState","Normal","NormalParkingSimState","ParkingLane","ParkingSim","ParkingSimState","add_parked_car","add_parked_car","add_parked_car","add_parked_car","all_parked_car_positions","all_parked_car_positions","all_parked_car_positions","all_parked_car_positions","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blackholed_building_redirects","bldg_to_parked_cars","bldg_to_parked_cars","bldg_to_parked_cars","bldg_to_parked_cars","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonical_pt","canonical_pt","canonical_pt","canonical_pt","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","collect_events","collect_events","collect_events","collect_events","deserialize","deserialize","deserialize","deserialize","dist_along_for_car","driving_lane","driving_to_lots","driving_to_offstreet","driving_to_offstreet","driving_to_parking_lanes","events","events","from","from","from","from","from","from","get_all_draw_cars","get_all_draw_cars","get_all_draw_cars","get_all_draw_cars","get_all_free_spots","get_all_free_spots","get_all_free_spots","get_all_free_spots","get_all_parking_spots","get_all_parking_spots","get_all_parking_spots","get_all_parking_spots","get_car_at_spot","get_car_at_spot","get_car_at_spot","get_car_at_spot","get_draw_car","get_draw_car","get_draw_car","get_draw_car","get_draw_cars","get_draw_cars","get_draw_cars","get_draw_cars","get_draw_cars_in_lots","get_draw_cars_in_lots","get_draw_cars_in_lots","get_draw_cars_in_lots","get_free_bldg_spot","get_free_lot_spots","get_free_lot_spots","get_free_lot_spots","get_free_lot_spots","get_free_offstreet_spots","get_free_offstreet_spots","get_free_offstreet_spots","get_free_offstreet_spots","get_free_onstreet_spots","get_free_onstreet_spots","get_free_onstreet_spots","get_free_onstreet_spots","get_owner_of_car","get_owner_of_car","get_owner_of_car","get_owner_of_car","handle_live_edits","handle_live_edits","handle_live_edits","handle_live_edits","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_free","is_free","is_free","is_free","is_infinite","lookup_parked_car","lookup_parked_car","lookup_parked_car","lookup_parked_car","new","new","new","new","num_occupants_per_offstreet","num_spots_per_lot","num_spots_per_offstreet","occupants","occupants","onstreet_lanes","parked_cars","parked_cars","parking_lane","path_to_free_parking_spot","path_to_free_parking_spot","path_to_free_parking_spot","path_to_free_parking_spot","remove_parked_car","remove_parked_car","remove_parked_car","remove_parked_car","reserve_spot","reserve_spot","reserve_spot","reserve_spot","reserved_spots","reserved_spots","serialize","serialize","serialize","serialize","sidewalk","spot_dist_along","spot_to_driving_pos","spot_to_driving_pos","spot_to_driving_pos","spot_to_driving_pos","spot_to_sidewalk_pos","spot_to_sidewalk_pos","spot_to_sidewalk_pos","spot_to_sidewalk_pos","spots","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unreserve_spot","unreserve_spot","unreserve_spot","unreserve_spot","vzip","vzip","vzip","vzip","0","0","DynamicBlockage","Queue","QueueEntry","Queued","StaticBlockage","Vehicle","add_static_blockage","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","back","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","can_block_from_driveway","clear_dynamic_blockage","clear_static_blockage","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","deserialize","dump_cars","eq","fmt","fmt","fmt","free_reserved_space","from","from","from","front","geom_len","get_active_cars","get_car_positions","get_idx_to_insert_car","get_last_car_position","get_leader","id","inner_get_last_car_position","insert_car_at_idx","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_car_at_front","is_overflowing","laggy_head","member","members","move_first_car_to_laggy_head","ne","new","push_car_onto_end","remove_car_from_idx","replace_car_with_dynamic_blockage","reserved_length","room_for_car","serialize","serialize","target_lane_penalty","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_to_reserve_entry","type_id","type_id","type_id","validate_positions","vzip","vzip","vzip","0","back","cause","cause","front","vehicle_len","Crossing","EnteringBuilding","EnteringParkingLot","FinishingBiking","LeavingBuilding","LeavingParkingLot","PedState","Pedestrian","StartingToBike","TIME_TO_FINISH_BIKING","TIME_TO_START_BIKING","WaitingForBus","WaitingToTurn","WalkingSimState","agent_properties","all_waiting_people","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","collect_events","crossing_state","debug_ped_json","delete_ped","deserialize","deserialize","deserialize","events","find_crowds","find_trips_to_parking","fmt","from","from","from","get_all_draw_peds","get_dist_along","get_draw_ped","get_draw_ped","get_draw_peds_on","get_end_time","get_path","get_unzoomed_agents","goal","id","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","maybe_transition","new","path","ped_boarded_bus","peds","peds_per_traversable","person","populate_commuter_counts","serialize","serialize","serialize","spawn_ped","speed","start","started_at","state","time_spent_waiting","to_owned","to_owned","to_owned","total_blocked_time","trace_route","trip","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_ped","vzip","vzip","vzip","0","0","0","0","0","0","0","0","1","1","1","1","1","1","1","1","2","2","dist_int","steep_uphill","time_int","0","AnyTime","Dead","Death","E_RATIO","Event","Exposed","Exposition","Hospitalization","Hospitalized","I_RATIO","Incubation","Infectious","R_0","Recovered","Recovery","Sane","State","StateEvent","T_INC","T_INF","add","add_assign","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_event_time","get_time","get_time_exp","get_time_normal","ini_exposed_ratio","ini_infectious_ratio","inner_seconds","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_dead","is_exposed","is_finite","is_infectious","is_recovered","is_sane","model","ne","new","next","next","next_default","p_death","p_hosp","partial_cmp","s","start","sub","sub","t","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","0","0","0","0","0","BecomeHospitalized","BecomeQuarantined","Cmd","PandemicModel","SharedSpace","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","become_exposed","bldgs","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bus_stops","buses","clone","clone","clone","clone_into","clone_into","clone_into","cmp","count_dead","count_exposed","count_infected","count_recovered","count_sane","count_total","deserialize","eq","equivalent","fmt","from","from","from","get_hash","get_time","handle_cmd","handle_event","hash","infectious_contact","initialize","initialized","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_dead","is_exposed","is_infectious","is_recovered","is_sane","ne","new","new","occupants","partial_cmp","person_enters_space","person_leaves_space","person_to_bus","pop","rng","serialize","to_owned","to_owned","to_owned","transition","transmission","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","TrafficRecorder","as_any","as_any_mut","borrow","borrow_mut","capture_points","clone","clone_into","from","handle_event","into","into_any","into_any_arc","into_any_rc","new","num_recorded_trips","save","seen_trips","to_owned","trips","try_from","try_into","type_id","vzip","BldgDriveway","CarStatus","DrawCarInput","DrawPedCrowdInput","DrawPedestrianInput","Intent","LotDriveway","Moving","Parked","Parking","PedCrowdLocation","Sidewalk","SteepUphill","UnzoomedAgent","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","equivalent","facing","from","from","from","from","from","from","from","high","id","id","id","intent","intent","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","label","location","low","members","on","on","parking","partly_on","person","person","person","pos","pos","preparing_bike","status","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","waiting_for_bus","waiting_for_turn","waiting_for_turn","0","0","0","1","ActionAtEnd","BikeThenStop","BusAtStop","EndAtBorder","FollowTransitRoute","GiveUpOnParking","Goal","GotoLaneEnd","ParkNearBuilding","Router","StartParking","StopBiking","VanishAtBorder","advance","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","bike_then_stop","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","can_lanechange","clone","clone","clone_into","clone_into","confirm_lanechange","deserialize","deserialize","end_at_border","eq","eq","fmt","fmt","fmt","follow_bus_route","from","from","from","get_end_dist","get_parking_spot_goal","get_path","goal","head","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_parking","last_step","maybe_handle_end","maybe_next","ne","ne","next","opportunistically_lanechange","owner","park_near","path","serialize","serialize","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vanish_bus","vzip","vzip","vzip","0","0","0","end_dist","end_dist","goal","i","spot","started_looking","stuck_end_dist","target","Callback","Callback","Callback","Car","Car","CarLaggyHead","CarLaggyHead","Command","CommandType","Intersection","Intersection","Item","Pandemic","Pandemic","Pandemic","Ped","Ped","Scheduler","SimpleCommandType","SpawnCar","SpawnPed","StartBus","StartBus","StartBus","StartTrip","StartTrip","StartTrip","UpdateCar","UpdateIntersection","UpdateLaggyHead","UpdatePed","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmd_type","cmd_type_counts","cmp","cmp","cmp","delta_times","describe_stats","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","get_hash","get_last_time","get_next","hash","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","items","last_time","latest_time","ne","ne","ne","new","partial_cmp","partial_cmp","partial_cmp","peek_next_time","push","queued_commands","serialize","serialize","serialize","serialize","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_simple_type","to_type","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update","update_agent","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","1","1","1","0","0","0","0","0","0","0","1","AlertHandler","BLIND_RETRY_TO_SPAWN","Block","Ctx","Print","Silence","Sim","SimCallback","SimOptions","active_agents","agent_properties","agent_to_person","agent_to_trip","alerts","alerts","all_arrivals_at_border","all_parked_car_positions","all_trip_info","all_waiting_people","allow_block_the_box","analytics","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bldg_to_parked_cars","bldg_to_people","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus_route_id","canonical_pt_for_agent","clap","clear_alerts","clone","clone","clone","clone_into","clone_into","clone_into","current_stage_and_remaining_time","debug_agent_json","debug_car","debug_car_ui","debug_intersection","debug_lane","debug_ped","debug_queue_lengths","default","default","delayed_intersections","delete_car","describe_internal_stats","deserialize","disable_turn_conflicts","dispatch_events","do_step","dont_break_turn_conflict_cycles","dont_handle_uber_turns","dont_recalc_lanechanging","downcast","downcast_mut","downcast_rc","downcast_ref","driving","dump_before_abort","edits_name","enable_pandemic_model","find_next_savestate","find_person_by_orig_id","find_previous_savestate","find_trips_affected_by_live_edits","finished_trip_details","from","from","from","from","from_clap","generate_scenario","get_accepted_agents","get_all_draw_cars","get_all_draw_peds","get_all_driving_paths","get_all_parking_spots","get_all_people","get_analytics","get_blocked_by_graph","get_canonical_pt_per_person","get_canonical_pt_per_trip","get_draw_car","get_draw_cars","get_draw_ped","get_draw_peds","get_end_of_day","get_free_lot_spots","get_free_offstreet_spots","get_free_onstreet_spots","get_highlighted_people","get_owner_of_car","get_pandemic_model","get_path","get_people_waiting_at_stop","get_person","get_run_name","get_trip_time_lower_bound","get_unzoomed_agents","get_unzoomed_transit_riders","get_waiting_agents","handle_live_edited_traffic_signals","handle_live_edits","handling_live_edits","highlighted_people","infinite_parking","infinite_parking","instantiate","instantiate_without_retries","intersections","intersections","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","is_done","is_empty","load_savestate","lookup_car_id","lookup_parked_car","lookup_person","map","map_name","minimal_step","new","new","new_person","num_active_agents","num_agents","num_commuters_vehicles","num_ppl","num_recorded_trips","num_transit_passengers","num_trips","pandemic","parking","parking","parse_alert_handler","parse_rng","person_to_agent","queries","record_traffic_for","recorder","run","run_name","run_name","save","save_dir","save_path","save_recorded_traffic","scenario","scheduler","scheduler","seed_bus_route","seed_parked_car","serialize","set_highlighted_people","set_periodic_callback","set_run_name","skip_analytics","spawn_trips","start_bus","status_of_buses","step_count","step_count","target_lane_penalty","time","time","time_limited_step","timed_step","tiny_step","to_owned","to_owned","to_owned","trace_route","transit","trip_blocked_time","trip_info","trip_to_agent","trip_to_person","trips","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unset_periodic_callback","use_freeform_policy_everywhere","vzip","vzip","vzip","vzip","walking","walking_path_to_nearest_parking_spot","Agent","AgentProperties","DelayCause","Intersection","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","dist_crossed","eq","equivalent","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","ne","partial_cmp","serialize","to_owned","total_dist","total_time","total_waiting","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","waiting_here","0","0","count_parked_cars_per_bldg","find_spot_near_building","get_vehicles","rand_bike","rand_car","rand_dist","rand_ped_speed","rand_speed","seed_parked_cars","AtStop","Bus","BusState","Done","DrivingOffMap","DrivingToStop","Route","Stop","StopIdx","TransitSimState","active_vehicles","active_vehicles","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus_arrived_at_stop","bus_created","bus_departed_from_stop","bus_route","buses","buses_for_route","car","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","collect_events","create_empty_route","deserialize","deserialize","deserialize","deserialize","deserialize","driving_pos","end_at_border","events","from","from","from","from","from","get_passengers","get_people_waiting_at_stop","get_unzoomed_transit_riders","id","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","next_stop","passengers","ped_waiting_for_bus","peds_waiting","route","routes","serialize","serialize","serialize","serialize","serialize","start","state","stops","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","0","CommutersVehiclesCounts","Drive","Inside","ModeChange","OffMap","Ok","Person","PersonState","RideBus","Trip","Trip","TripCancelled","TripDoesntExist","TripDone","TripInfo","TripLeg","TripManager","TripNotStarted","TripResult","Walk","active_agents","active_agents_and_trips","active_trip_mode","agent_starting_trip_leg","agent_to_trip","all_arrivals_at_border","all_trip_info","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","assert_walking_leg","bike_reached_end","bldg_to_people","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus_riders","buses","cancel_trip","cancel_unstarted_trip","cancellation_reason","car_id_counter","car_or_bike_reached_border","car_reached_parking_spot","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","collect_events","cyclists","debug_trip","delayed_trips","departure","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","end","eq","eq","events","finished_at","finished_trip_details","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","generate_scenario","get_all_people","get_person","get_vehicle","id","id","info","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_done","legs","mode","modified","ne","ne","new","new_car_id","new_person","new_trip","num_active_agents","num_agents","num_commuters_vehicles","num_ppl","num_trips","ok","on_bus","orig_id","ped","ped_boarded_bus","ped_reached_border","ped_reached_building","ped_reached_bus_stop","ped_reached_parking_spot","ped_ready_to_bike","ped_speed","people","person","person_left_bus","propagate_error","purpose","serialize","serialize","serialize","serialize","serialize","serialize","sov_drivers","spawn_ped","start","start_delayed_trip","start_trip","started","state","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_blocked_time","total_distance","train_riders","trains","transit_rider_reached_border","trip_abruptly_cancelled","trip_blocked_time","trip_finished","trip_info","trip_to_agent","trip_to_person","trips","trips","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unfinished_trips","vehicles","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walking_commuters","walking_to_from_bike","walking_to_from_car","walking_to_from_transit","0","0","0","0","0","1","1","0"],"q":["simsim::AgentID","","","","sim::AlertLocation","","","sim::DelayCause","","sim::DrivingGoal","","","sim::ParkingSpot","","","","","","sim::PedCrowdLocation","","","","sim::PersonState","","sim::Problem","","","","","sim::SidewalkPOI","","","","","sim::TripPhaseType","","","","","sim::TripResult","sim::analytics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::analytics::Problem","","","","","sim::events","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::events::AlertLocation","","","sim::events::Event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::events::TripPhaseType","","","","","sim::make","","","","","sim::make::activity_model","","","sim::make::generator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::make::load","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::make::spawner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::make::spawner::TripSpec","","","","","","","","","","","","","","","","","","","sim::mechanics","","","","","","sim::mechanics::car","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::mechanics::car::CarState","","","","","","","","","","","","","","","","","","","","sim::mechanics::driving","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::mechanics::intersection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::mechanics::parkingsim::mechanics::parking::ParkingSimState","","sim::mechanics::queue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::mechanics::queue::Queued","","","","","","sim::mechanics::walking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::mechanics::walking::PedState","","","","","","","","","","","","","","","","","","","","","sim::pandemic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::pandemic::State","","","","","","sim::pandemic::model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::pandemic::model::Cmd","","sim::recorder","","","","","","","","","","","","","","","","","","","","","","","","sim::render","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::render::PedCrowdLocation","","","","sim::router","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::router::ActionAtEnd","","","sim::router::Goal","","","","","","","","sim::scheduler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::scheduler::Command","","","","","","","","","","","","","sim::scheduler::CommandType","","","","","","","","sim::simsim::sim::queries","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::sim::queries::DelayCause","","sim::sim::scenario","","","","","","","","","sim::transit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sim::transit::BusState","","sim::tripssim::trips::PersonState","","sim::trips::TripLeg","","","","","sim::trips::TripResult"],"d":["","","","Queued behind someone, or someone’s doing a conflicting …","","","","","","As a simulation runs, different pieces emit Events. The …","A pedestrian crossed an intersection with an Arterial …","","","","","The bikeable position","","","Print the alert to STDOUT and don’t proceed until the UI …","","","","","","","","","","","","","","","The number of active vehicles and commuters, broken into …","A cyclist crossed an intersection with &gt;4 connecting roads.","","","Don’t actually know where this goes yet!","Why is an agent delayed? If there are multiple reasons, …","","","","","","","","At all speeds (including at rest), cars must be at least …","","","Shows an agent’s current inner intention or thoughts.","","Waiting on a traffic signal to change, or pausing at a …","A vehicle waited &gt;30s, or a pedestrian waited &gt;15s.","","","","","","","","","","Building and idx (pretty meaningless)","","Lane and idx","Another vehicle wanted to over-take this cyclist somewhere …","","","","","","","Note that for offstreet parking, the path will be the same …","","","","","","","","","Just print the alert to STDOUT","","What stop did they board at?","When spawning at borders, start the front of the vehicle …","","bool is contraflow","Point of interest, that is","","Don’t do anything","The Sim ties together all the pieces of the simulation. …","","SimFlags specifies a simulation to setup. After parsing …","Options controlling the traffic simulation.","A sliding window, used to count something over time","","","","","","","","","","","","","","","","","","","","","","","","","","","When a warning is encountered during simulation, specifies …","","Allow a vehicle to start a turn, even if their target lane …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pretty hacky case","","Most fields in Analytics are cumulative over time, but …","Scheduled departure; the start may be delayed if the …","","","","","","","","","","","","","","","","","","","Allow all agents to immediately proceed into an …","","Normally if a cycle of vehicles depending on each other to …","Disable experimental handling for “uber-turns”, …","Normally as a vehicle follows a route, it …","","","Enable an experimental SEIR pandemic model. This requires …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finish time, ID, mode, trip duration if successful (or …","","","","","","","","","","","","","","","","","","","","","","","","","","","Need to explain this trick – basically keeps consistency …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The numeric ID must be globally unique, without …","","","","","Ignore parking data in the map and instead treat every …","","","Only for traffic signals. The u8 is the movement index …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The same as <code>load_path</code>, but with a default value filled …","A path to some file:","","","Everything needed to setup a simulation. …","","","","","","","","","","","Did a ScenarioModifier apply to this?","","","","","","","","","","","","","","","","","","","","","","","","","","Front of the car","","","","","","","An experimental SEIR model by …","","","True only for cars currently looking for parking. I don’…","","Per parking lane or lot, when does a spot become filled …","","","","","","","","","","","","Possibly the rest","","For each passenger boarding, how long did they wait at the …","","","","","","","","","","","None means a bus.","","None means a bus or parked car. Note parked cars do NOT …","","","","","","","Record different problems that each trip encounters.","","","For benchmarking, we may want to disable collecting data.","","","Intermediate structures so that sim and game crates don’…","An arbitrary number to seed the random number generator. …","","For vehicles only, not pedestrians. Follows a Path from …","","","","Used to distinguish savestates for running the same …","A JSON list of modifiers to transform the scenario. These …","","","","","","","","","","","","","","","","","","","","","","","","Don’t collect any analytics. Only useful for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","None for buses","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ignore all stop signs and traffic signals, instead using a …","","","VehicleType is bundled for convenience; many places need …","","","Both cars and bikes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","As a simulation runs, different pieces emit Events. The …","A pedestrian crossed an intersection with an Arterial …","A cyclist crossed an intersection with &gt;4 connecting roads.","A vehicle waited &gt;30s, or a pedestrian waited &gt;15s.","Another vehicle wanted to over-take this cyclist somewhere …","","A sliding window, used to count something over time","See https://github.com/a-b-street/abstreet/issues/85","","","Returns the count at time","","","","","","","","","","","","","","","","","","","","","","","Returns pairs of trip times for finished trips in both …","","","","","","","","Ensure the points cover up to <code>end_time</code>. The last event may …","Grab the count at this time, but don’t add a new time","","(Road or intersection, type, hour block) -&gt; count for that …","","Most fields in Analytics are cumulative over time, but …","","","","","","","","Ignores the current time. Returns None for cancelled trips.","Finish time, ID, mode, trip duration if successful (or …","","","","","","","","","If calling on prebaked Analytics, be careful to pass in an …","","Only for traffic signals. The u8 is the movement index …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the free spots over time","Per parking lane or lot, when does a spot become filled …","","","","","For each passenger boarding, how long did they wait at the …","","","Record different problems that each trip encounters.","Very expensive to store, so it’s optional. But useful to …","","","For benchmarking, we may want to disable collecting data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If the agent is a transit vehicle, then include a count of …","","","","","","","","","","","","","As a simulation runs, different systems emit Events. This …","","","TripID, TurnID (Where the delay was encountered), Time …","","","","How long waiting at the stop?","Just use for parking replanning. Not happy about copying …","","","","","","None if cancelled","","What stop did they board at?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An activity model creates “people” that follow a set …","Need to explain this trick – basically keeps consistency …","This is a much more primitive way to randomly generate …","","Intermediate structures used to instantiate a Scenario. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Designed in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SimFlags specifies a simulation to setup. After parsing …","","","","","","","","","","","","","","","","The same as <code>load_path</code>, but with a default value filled …","A path to some file:","Loads a map and simulation. Not appropriate for use in the …","","","","An arbitrary number to seed the random number generator. …","A JSON list of modifiers to transform the scenario. These …","","","","","","","Something went wrong spawning the trip.","We need to remember a few things from scenario …","","","","","Can be used to spawn from a border or anywhere for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Turn an origin/destination pair and mode into a specific …","","","","","","","","","","","","","","","","","","","This must be a currently parked vehicle owned by the …","","","","","","","","","","","","","","","","This must be a currently off-map vehicle owned by the …","","","","","","","","Represents a single vehicle. Note “car” is a misnomer; …","See …","","","","","","Where’s the front of the car while this is happening?","","","","","","","","","","","","","","Assumes the current head of the path is the thing to cross.","","","","","","","","","","","","","","","","","","","In reverse order – most recently left is first. The sum …","","","","","","","","","","None for buses","","","","","","","","","","Since lane over-taking isn’t implemented yet, a vehicle …","","","","","","","","","","","","","","","","","","","","","","","Simulates vehicles!","","","","","","","","","","","","","","","","","Abruptly remove a vehicle from the simulation. They may be …","","","","","","Finds vehicles that’re laggy heads on affected parts of …","","Note the ordering of results is non-deterministic!","","","","","","","This is about as expensive as get_draw_cars_on.","Note the ordering of results is non-deterministic!","","","","","","","","","If the car wants to over-take somebody, what adjacent lane …","","","","None if it worked, otherwise returns the CreateCar …","","","","","","","","","","","","","State transitions for this car:","","","After a leader (maybe an active vehicle, maybe a static …","","If start_car_on_lane fails and a retry is scheduled, this …","","","Does the given car want to over-take the vehicle in front …","Manages conflicts at intersections. When an agent has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For deleting cars","See if any agent is currently performing a turn that …","","","","","","","","","","","","","","Returns intersections with travelers waiting for at least …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For cars: The head car calls this when they’re at the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is only triggered for traffic signals.","","Vanished at border, stopped biking, etc – a vehicle …","","","","","","","","This assigns infinite private parking to all buildings and …","","","","Manages the state of parked cars. There are two …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","There’s no DrawCarInput for cars parked offstreet, so we …","There’s no DrawCarInput for cars parked offstreet, so we …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The vehicle’s front is currently at the given …","The vehicle’s front is currently at the given …","","","(Filled, available)","(Filled, available)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns any cars that got very abruptly evicted from …","Returns any cars that got very abruptly evicted from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Counterintuitive: any spots located in blackholes are just …","","","","","","","","","","","","","Unrealistically assumes the driver has knowledge of …","Unrealistically assumes the driver has knowledge of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Needed when abruptly deleting a car, in case they’re …","Needed when abruptly deleting a car, in case they’re …","","","","","","","","","This follows whatever’s in front of it","A Queue of vehicles on a single lane or turn. This is where","The exact position of something in a <code>Queue</code> at some time","A member of a <code>Queue</code>.","Something occupying a fixed interval of distance on the …","A regular vehicle trying to move forwards","Record that a car is blocking a static portion of the …","","","","","","","Not incuding FOLLOWING_DISTANCE","","","","","","","True if a static blockage can be inserted into the queue …","Record that a car is no longer blocking a dynamic portion …","Record that a car is no longer blocking a static portion …","","","","","","","","","","","","","","Once a car has fully exited a queue, free up the space it …","","","","","How long the lane or turn physically is.","Get all cars in the queue, not including the laggy head or …","Return the exact position of each member of the queue. The …","If the specified car can appear in the queue, return the …","Get the front of the last car in the queue.","Find the vehicle in front of the specified input. None if …","","Returns the front of the last car in the queue, only if …","Record that a car has entered a queue at a position. This …","","","","","","","","","","","","","If a car thinks it’s reached the end of the queue, …","True if the reserved length exceeds the physical length. …","This car’s back is still partly in this queue.","","","Change the first car in the queue to the laggy head, …","","","Record that a car has entered a queue at the end. It’s …","Remove a car from a position. Need to separately do …","Record that a car is starting to change lanes away from …","When a car’s turn is accepted, reserve the vehicle …","Can a car start a turn for this queue?","","","Return a penalty for entering this queue, as opposed to …","","","","","","","","","","If true, there’s room and the car must actually start …","","","","","","","","","","This vehicle is exiting a driveway and cutting across a …","This vehicle is in the middle of changing lanes","","","","","","","","","","","","","","","The Distance is either 0 or the current traversable’s …","Simulates pedestrians. Unlike vehicles, pedestrians can …","","","","","","","","","","","","","","","","","","","","","","","","Abruptly remove a pedestrian from the simulation. They may …ecords trips beginning and ending at a specified set of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shows an agent’s current inner intention or thoughts.","","","","","","bool is contraflow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Front of the car","True only for cars currently looking for parking. I don’…","Possibly the rest","None means a bus.","","None means a bus or parked car. Note parked cars do NOT …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Spot and cached distance along the last driving lane","","","","","Returns the step just finished","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Called when the car is Queued at the last step, or when …","","","","","","","","Front is always the current step","","","","","","","","","","","","","","","","","","","","","","","","","","","No parking available at all!","","","","","","","","","","A smaller version of Command that satisfies many more …","","","","","","","","","The priority queue driving the discrete event simulation. …","A more compressed form of CommandType, just used for …","If true, retry when there’s no room to spawn somewhere","","The Time is redundant, just used to dedupe commands","","","","","","","","Distinguish this from UpdateCar to avoid confusing things","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This API is safer than handing out a batch of items at a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This next command might’ve actually been rescheduled to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Print the alert to STDOUT and don’t proceed until the UI …","","Just print the alert to STDOUT","Don’t do anything","The Sim ties together all the pieces of the simulation. …","","Options controlling the traffic simulation.","","Only call for active agents, will panic otherwise","","","","When a warning is encountered during simulation, specifies …","","For every parked car, (position of parking spot, position …","","","Allow a vehicle to start a turn, even if their target lane …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a short string to debug a car in the UI.","","","","","","","For intersections with an agent waiting beyond some …","","","","Allow all agents to immediately proceed into an …","","","Normally if a cycle of vehicles depending on each other to …","Disable experimental handling for “uber-turns”, …","Normally as a vehicle follows a route, it …","Returns a boxed object from a boxed trait object if the …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","","","","Enable an experimental SEIR pandemic model. This requires …","","","","Returns (trips affected, number of parked cars displaced)","If trip is finished, returns (total time, total waiting …","","","","","","","","","","","(Filled, available)","","","For every agent that’s currently not moving, figure out …","","","","","","","","","","","","","","","","","","Returns the best-case time for a trip in a world with no …","This does not include transit riders. Some callers need …","","","","Respond to arbitrary map edits without resetting the …","If present, live map edits are being processed, and the …","","","Ignore parking data in the map and instead treat every …","","If retry_if_no_room is false, any vehicles that fail to …","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","","","","","","","","","","","","","","","","(total number of people, just in buildings, just off map)","","","(number of finished trips, number of unfinished trips)","","","","","","","All sorts of read-only queries about a simulation","","","","","Used to distinguish savestates for running the same …","","","","","","","","","","","","Only one at a time supported.","","Don’t collect any analytics. Only useful for …","","","(bus, stop index it’s coming from, percent to next stop, …","","","(number of vehicles in the lane, penalty if a bike or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ignore all stop signs and traffic signals, instead using a …","","","","","","","Queued behind someone, or someone’s doing a conflicting …","","Why is an agent delayed? If there are multiple reasons, …","Waiting on a traffic signal to change, or pausing at a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Manages public transit vehicles (buses and trains) that …","(buses, trains)","","","","","","","","","","","","","","","","","","","","","","If true, the bus is idling. If false, the bus actually …","","","","","also stop idx that the bus is coming from","","","","","","","","","","","","","Returns the path for the first leg.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Where does each passenger want to deboard?","Returns the bus if the pedestrian boarded immediately.","waiting at =&gt; (ped, route, bound for, started waiting)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The number of active vehicles and commuters, broken into …","A person may own many vehicles, so specify which they use","","","","","","","Maybe get off at a stop, maybe ride off-map","","","","","","","These don’t specify where the leg starts, since it might …","Manages people, each of which executes some trips through …","","","","","","","This is idempotent to handle the case of cars retrying …","This will be None for parked cars and buses. Should always …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cancel a trip after it’s started. The person will be …","Cancel a trip before it’s started. The person will stay …","","","","","","","","","","","","","","","","","","","","","Scheduled departure; the start may be delayed if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Recreate the Scenario from an instantiated simulation. The …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Did a ScenarioModifier apply to this?","","","","","","","","","","","","","","","","","","","If no route is returned, the pedestrian boarded a bus …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Both cars and bikes","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,3,4,0,0,0,0,0,0,5,0,0,6,7,8,9,10,11,12,8,0,13,8,6,7,14,9,14,6,7,0,0,0,5,0,0,8,0,9,0,0,0,0,9,0,0,9,15,0,13,4,5,0,16,10,0,0,17,18,13,15,16,17,16,5,12,18,0,9,19,0,8,0,14,6,0,0,13,0,0,11,0,9,0,0,10,0,0,11,0,0,0,0,0,0,19,8,0,6,7,6,8,15,17,17,17,0,0,17,0,0,0,0,0,0,0,9,9,20,21,22,6,22,0,21,23,1,14,6,2,2,3,7,24,25,16,26,12,27,8,28,29,30,31,23,1,14,6,2,3,7,24,25,16,26,12,27,8,28,29,30,31,14,27,32,33,23,1,14,6,2,3,7,24,25,16,26,12,27,8,28,29,30,31,23,1,14,6,2,3,7,24,25,16,26,12,27,8,28,29,30,31,27,20,34,27,34,35,23,1,14,6,2,3,7,24,25,16,26,12,27,8,28,29,30,31,2,23,1,14,6,2,3,7,24,25,16,26,12,27,8,28,29,30,31,23,1,14,6,2,3,7,16,8,27,0,34,27,36,20,35,23,1,14,6,2,3,7,24,25,16,26,12,27,8,28,29,30,31,22,37,22,22,22,21,21,22,35,28,29,27,38,23,1,14,6,2,3,7,24,25,16,26,12,27,8,28,29,30,31,23,1,14,6,2,3,7,16,12,8,0,39,20,23,23,1,1,14,14,6,2,2,3,3,7,7,24,25,16,26,12,27,8,28,29,30,31,31,31,0,23,1,14,6,2,3,7,24,25,16,26,12,27,8,28,29,30,31,23,1,14,6,2,3,7,40,41,30,12,38,23,1,14,6,2,3,7,42,21,43,39,32,36,23,24,30,23,1,22,39,32,20,20,21,23,1,14,6,2,3,7,24,25,16,26,12,27,8,28,29,30,31,23,1,14,6,2,3,7,24,25,16,26,12,27,8,28,29,30,31,23,1,14,6,2,3,7,24,25,16,26,12,27,8,28,29,30,31,23,1,14,6,2,3,7,24,25,16,26,12,27,8,28,29,30,31,14,7,32,29,24,25,29,44,44,42,42,0,25,12,21,24,25,31,31,0,42,35,35,23,1,14,2,3,24,25,16,26,12,27,8,28,29,30,31,28,29,29,6,40,41,41,41,39,32,36,6,33,44,36,24,0,21,26,43,21,20,20,27,23,1,14,6,2,3,7,16,8,32,20,20,38,30,36,36,28,40,28,40,40,41,43,39,32,30,38,6,43,39,39,20,35,0,20,0,21,0,44,20,0,31,45,21,22,44,33,0,21,23,1,14,6,2,3,7,24,25,16,26,12,27,8,28,29,30,31,27,0,22,34,33,30,26,35,28,29,30,27,41,38,40,41,20,36,32,21,40,41,27,21,46,7,23,1,14,6,2,3,7,24,25,16,26,12,27,8,28,29,30,31,23,1,14,2,3,7,14,14,37,37,37,20,34,34,0,21,30,31,20,0,21,36,23,1,14,6,2,3,7,24,25,16,26,12,27,8,28,29,30,31,23,1,14,6,2,3,7,24,25,16,26,12,27,8,28,29,30,31,23,1,14,6,2,3,7,24,25,16,26,12,27,8,28,29,30,31,22,26,31,23,24,25,36,23,1,14,6,2,3,7,24,25,16,26,12,27,8,28,29,30,31,39,39,32,37,21,34,34,34,34,46,47,48,49,49,50,51,52,53,54,55,56,56,57,58,59,57,58,59,60,61,62,60,63,64,65,66,67,68,65,69,70,71,72,73,74,75,74,75,75,76,0,5,5,5,5,0,0,0,0,20,46,20,77,46,20,5,38,77,46,20,5,38,77,46,20,5,38,77,46,20,5,38,77,20,20,20,5,77,20,5,77,46,46,77,77,20,20,20,5,77,38,5,20,77,20,20,5,38,46,20,5,38,77,20,20,38,20,20,46,20,5,38,77,46,20,5,38,77,46,20,5,38,77,46,20,5,38,77,5,46,20,77,20,20,20,20,20,20,20,38,38,20,77,77,77,20,20,20,20,5,77,38,20,46,20,5,77,77,77,77,20,20,46,20,5,38,77,46,20,5,38,77,46,20,5,38,77,46,20,5,38,77,46,65,66,67,68,65,78,78,0,78,9,13,78,78,9,78,78,9,9,0,9,13,78,13,9,78,78,78,78,13,78,78,78,78,78,9,78,78,78,0,9,9,78,13,9,78,13,9,78,13,9,78,13,9,78,13,9,78,13,9,9,78,13,9,78,13,9,78,13,9,78,13,9,78,13,9,78,13,9,78,13,9,78,13,9,78,13,9,78,13,9,78,13,9,78,13,9,78,13,9,78,13,9,78,13,9,50,51,52,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,81,82,83,84,87,88,92,93,95,83,84,92,93,95,83,98,98,98,98,74,75,74,75,75,0,0,0,0,0,0,0,0,0,0,0,33,40,41,33,40,41,33,33,40,41,33,40,41,33,40,41,33,40,41,33,40,41,33,33,40,41,33,40,41,33,40,41,33,40,41,33,40,41,33,40,41,33,40,41,40,41,41,41,33,40,40,40,41,33,0,33,33,40,41,33,41,40,33,41,40,41,40,41,33,40,41,33,40,41,33,40,41,33,40,41,33,40,41,0,44,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,44,44,44,44,44,44,44,99,99,0,0,99,99,99,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,0,0,100,99,100,99,100,99,100,99,100,99,100,99,100,99,99,99,100,99,100,100,99,0,100,99,100,99,100,99,100,99,100,100,99,101,102,103,104,102,105,101,106,106,104,106,105,101,106,102,104,106,104,103,0,0,0,0,0,0,0,0,107,107,107,107,107,107,107,108,107,108,107,108,107,108,107,108,107,108,107,108,108,108,107,108,107,108,107,108,107,108,107,108,107,108,107,108,107,108,108,108,108,107,108,108,107,108,107,108,108,108,107,108,107,108,107,108,108,107,108,109,110,109,110,109,111,112,113,114,115,113,115,115,115,113,114,114,113,115,111,0,0,0,0,0,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,0,0,0,0,0,0,117,118,119,0,119,117,120,118,119,117,120,118,119,119,119,117,120,118,119,117,120,118,119,119,119,119,117,120,118,119,117,120,118,118,119,120,119,119,119,119,119,117,120,118,119,119,119,118,118,119,120,117,120,118,119,117,120,118,119,119,119,119,119,119,117,119,117,120,118,119,117,120,118,119,117,120,118,119,117,120,118,119,118,119,120,119,119,118,119,117,119,117,120,118,117,119,120,119,119,119,117,120,118,119,119,119,117,120,118,119,117,120,118,118,119,119,117,120,118,117,119,119,119,119,117,120,118,117,119,121,0,121,0,0,0,0,122,121,123,124,122,121,123,124,121,123,125,124,121,123,125,124,124,122,121,123,124,121,123,125,124,121,123,125,124,122,121,123,124,121,123,125,124,121,123,125,124,122,121,123,124,121,123,125,124,125,125,123,123,124,123,123,124,121,121,121,123,125,124,122,121,123,124,122,121,123,124,122,121,123,124,122,121,123,124,122,121,123,124,122,121,123,124,122,121,123,124,124,122,121,123,124,122,121,123,124,122,121,123,124,122,121,123,124,122,121,123,124,121,123,125,124,121,123,125,124,121,123,125,124,121,123,125,124,122,121,123,124,121,122,121,123,124,121,123,125,124,124,123,123,123,124,123,123,124,125,122,121,123,124,122,121,123,124,122,121,123,124,123,124,121,123,125,124,125,125,122,121,123,124,122,121,123,124,125,121,123,125,124,121,123,125,124,121,121,121,123,125,124,121,123,125,124,122,121,123,124,121,123,125,124,126,127,128,0,0,0,128,128,129,129,128,130,129,128,130,130,129,128,130,129,128,130,129,129,129,129,128,130,129,128,130,129,128,0,128,129,128,130,129,129,128,130,130,129,129,129,129,129,129,129,129,129,129,128,130,129,128,130,129,128,130,129,128,130,129,129,129,130,129,129,128,129,129,129,129,129,129,129,128,129,129,128,130,129,128,130,129,128,130,129,129,128,130,0,129,128,130,131,132,132,133,132,133,134,134,134,134,134,134,0,0,134,0,0,134,134,0,135,135,135,136,134,135,136,134,135,136,134,135,136,134,135,136,134,135,136,134,135,136,135,135,135,136,134,135,0,135,134,135,136,134,135,136,135,136,135,134,135,135,136,136,135,136,134,135,136,134,135,136,134,135,136,134,136,135,136,135,135,135,136,135,135,136,134,135,136,136,136,136,134,135,136,134,136,135,136,135,136,134,135,136,134,135,136,134,135,135,136,134,137,138,139,140,141,142,143,144,137,138,139,140,141,142,143,144,142,143,145,145,145,146,0,147,148,147,0,147,148,148,147,147,148,147,147,147,148,147,0,0,147,147,146,146,146,148,149,147,146,148,149,147,146,148,149,147,146,148,149,147,146,148,149,147,146,148,149,147,146,146,148,149,147,146,146,146,148,149,147,147,147,147,147,147,147,146,146,148,149,147,146,148,149,147,146,148,149,147,146,148,149,147,147,147,146,147,147,147,0,146,147,149,147,147,149,149,146,149,147,146,146,149,146,148,149,147,146,148,149,147,146,148,149,147,146,148,149,147,146,148,149,147,150,151,152,153,154,155,156,156,0,0,0,157,156,158,157,156,158,157,157,157,156,158,157,156,158,157,157,157,156,158,157,156,158,156,157,157,157,157,157,157,156,156,156,156,157,156,158,156,157,157,157,156,157,157,157,157,156,158,157,156,158,157,156,158,157,156,158,157,157,157,157,157,156,157,158,158,156,158,158,157,157,157,156,157,156,158,157,157,157,156,158,157,156,158,157,156,158,157,156,158,159,160,0,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,10,0,0,0,0,0,10,18,18,19,0,10,19,0,42,43,39,10,32,18,19,42,43,39,10,32,18,19,32,42,43,39,10,32,18,19,42,43,39,10,32,18,19,39,10,32,18,19,39,10,32,18,19,18,19,18,39,42,43,39,10,32,18,19,42,43,39,32,39,32,42,43,39,10,32,18,19,42,43,39,10,32,18,19,42,43,39,10,32,18,19,42,43,39,10,32,18,19,32,42,42,42,39,32,43,32,43,39,32,43,39,39,32,39,10,32,18,19,42,43,39,10,32,18,19,42,43,39,10,32,18,19,42,43,39,10,32,18,19,42,43,39,10,32,18,19,39,39,32,60,61,62,60,0,162,163,162,162,163,0,163,162,0,163,163,163,164,164,163,162,164,163,162,164,164,163,162,164,163,162,164,164,162,164,162,164,164,162,164,164,162,164,163,162,164,164,163,162,164,164,164,164,164,164,163,162,164,163,162,164,163,162,164,163,162,164,164,164,164,164,162,164,164,164,164,164,164,162,164,162,164,163,162,164,163,162,164,163,162,164,164,163,162,165,166,167,168,169,170,168,171,171,171,171,172,173,174,173,174,173,174,0,0,173,174,0,172,173,174,173,174,0,0,172,172,172,173,174,172,173,174,172,172,172,172,172,173,174,175,176,172,173,174,175,176,172,173,174,175,176,172,173,174,175,176,176,172,173,174,175,176,172,173,174,175,176,175,176,173,174,175,176,176,172,173,175,176,172,173,174,175,173,174,175,172,173,174,172,173,174,175,176,173,176,176,173,172,173,174,175,176,172,173,174,175,176,172,173,174,175,176,172,173,174,175,176,176,176,176,172,173,175,176,173,174,175,176,176,176,172,173,175,176,175,172,173,174,175,176,172,172,172,173,174,175,176,172,173,174,175,176,172,173,174,175,176,176,172,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,177,179,186,187,188,189,190,191,192,193,193,0,0,11,0,11,11,0,0,0,21,21,21,21,21,22,21,21,21,21,22,21,194,21,22,11,194,21,22,11,21,21,194,21,22,11,194,21,22,11,21,21,22,21,21,22,11,21,22,11,21,21,21,21,21,21,21,21,22,11,21,21,21,21,22,21,21,22,22,22,45,45,45,45,21,21,21,22,21,21,21,21,21,194,21,22,11,22,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,194,21,21,22,21,21,194,21,194,21,22,11,194,21,22,11,194,21,22,11,194,21,22,11,45,21,21,21,21,21,21,194,21,21,21,22,21,21,21,21,21,21,21,21,21,194,21,0,0,21,0,21,21,45,21,22,21,21,21,21,0,194,21,21,21,21,21,21,21,22,21,21,21,21,21,21,21,21,21,21,21,21,22,11,21,21,21,21,21,21,21,194,21,22,11,194,21,22,11,194,21,22,11,21,22,194,21,22,11,21,21,4,0,0,4,37,4,37,4,37,4,37,4,4,4,4,37,4,4,4,37,4,37,4,37,4,37,4,37,4,4,4,4,4,37,37,37,37,4,37,4,37,4,37,4,37,53,54,0,0,0,0,0,0,0,0,0,195,0,0,195,195,195,0,0,0,0,196,197,198,197,199,195,196,198,197,199,195,196,198,197,199,195,196,198,197,199,195,196,196,196,196,196,196,196,199,198,197,199,195,196,198,197,199,195,196,196,196,198,197,199,195,196,198,197,196,198,197,199,195,196,196,196,196,198,198,197,199,195,196,198,197,199,195,196,198,197,199,195,196,198,197,199,195,196,196,198,199,196,196,199,196,198,197,199,195,196,197,199,197,198,197,199,195,196,198,197,199,195,196,198,197,199,195,196,198,197,199,195,196,198,197,199,195,196,200,201,0,202,15,17,15,17,0,0,202,0,15,17,17,17,0,0,0,17,0,202,203,203,203,203,203,203,203,17,34,203,204,35,202,36,15,17,34,203,204,35,202,36,15,204,203,203,17,34,203,204,35,202,36,15,17,34,203,204,35,202,36,15,34,34,203,203,35,203,203,203,203,204,35,202,36,15,203,204,35,202,36,15,203,34,203,36,35,203,204,35,202,36,15,35,202,15,203,204,203,203,204,35,202,36,15,17,34,203,204,35,202,36,15,203,203,203,36,204,36,204,17,34,203,204,35,202,36,15,17,34,203,204,35,202,36,15,17,34,203,204,35,202,36,15,17,34,203,204,35,202,36,15,203,204,35,35,202,15,203,203,203,203,203,203,203,203,203,17,36,36,36,203,203,203,203,203,203,36,203,204,203,17,35,203,204,35,202,36,15,34,203,35,203,203,204,36,203,204,35,202,36,15,204,204,34,34,203,203,203,203,203,203,203,203,36,17,34,203,204,35,202,36,15,17,34,203,204,35,202,36,15,17,34,203,204,35,202,36,15,203,36,17,34,203,204,35,202,36,15,34,34,34,34,63,64,205,206,207,206,207,76],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["vec",3,[["agenttype",4]]]],null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["carid",3]],[[["buildingid",3],["map",3]],["option",4,[["sidewalkspot",3]]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["buildingid",3],["map",3]],["sidewalkspot",3]],null,null,[[["transitstopid",3],["map",3]],["sidewalkspot",3]],null,null,[[],["carid",3]],[[],["pedestrianid",3]],[[],["agentid",4]],[[],["agenttype",4]],[[],["tripid",3]],[[],["personid",3]],[[],["vehicletype",4]],[[],["vehicle",3]],[[],["vehiclespec",3]],[[],["parkingspot",4]],[[],["parkedcar",3]],[[],["drivinggoal",4]],[[],["sidewalkspot",3]],[[],["sidewalkpoi",4]],[[],["timeinterval",3]],[[],["distanceinterval",3]],[[],["createpedestrian",3]],[[],["createcar",3]],[[],["box",3,[["cloneableany",8],["global",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["carid",3]],["ordering",4]],[[["pedestrianid",3]],["ordering",4]],[[["agentid",4]],["ordering",4]],[[["agenttype",4]],["ordering",4]],[[["tripid",3]],["ordering",4]],[[["personid",3]],["ordering",4]],[[["vehicletype",4]],["ordering",4]],[[["parkingspot",4]],["ordering",4]],[[["sidewalkpoi",4]],["ordering",4]],null,[[["scenario",3]],["counter",3,[["buildingid",3]]]],null,[[],["sidewalkspot",3]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,null,[[["intersectionid",3],["map",3]],["option",4,[["sidewalkspot",3]]]],null,[[["carid",3]],["bool",15]],[[["pedestrianid",3]],["bool",15]],[[["agentid",4]],["bool",15]],[[["agenttype",4]],["bool",15]],[[["tripid",3]],["bool",15]],[[["personid",3]],["bool",15]],[[["vehicletype",4]],["bool",15]],[[["vehicle",3]],["bool",15]],[[["vehiclespec",3]],["bool",15]],[[["parkingspot",4]],["bool",15]],[[["parkedcar",3]],["bool",15]],[[["drivinggoal",4]],["bool",15]],[[["sidewalkspot",3]],["bool",15]],[[["sidewalkpoi",4]],["bool",15]],[[["timeinterval",3]],["bool",15]],[[["distanceinterval",3]],["bool",15]],[[["createpedestrian",3]],["bool",15]],[[["createcar",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["vehicle",3],["router",3],["tripid",3],["personid",3]],["createcar",3]],[[["parkedcar",3],["router",3],["tripid",3],["personid",3]],["createcar",3]],[[["xorshiftrng",3]],["xorshiftrng",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],null,null,null,[[["pathconstraints",4],["map",3]],["option",4,[["position",3]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[],["usize",15]],[[],["usize",15]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["usize",15]],["bool",15]],[[],["bool",15]],null,[[],["distance",3]],null,null,[[["f64",15]],["distance",3]],null,null,null,null,null,[[["carid",3],["option",4,[["personid",3]]]],["vehicle",3]],[[["carid",3],["path",3],["map",3]],["router",3]],null,null,null,null,null,null,null,null,null,[[["carid",3]],["bool",15]],[[["pedestrianid",3]],["bool",15]],[[["agentid",4]],["bool",15]],[[["tripid",3]],["bool",15]],[[["personid",3]],["bool",15]],[[["vehicle",3]],["bool",15]],[[["vehiclespec",3]],["bool",15]],[[["parkingspot",4]],["bool",15]],[[["parkedcar",3]],["bool",15]],[[["drivinggoal",4]],["bool",15]],[[["sidewalkspot",3]],["bool",15]],[[["sidewalkpoi",4]],["bool",15]],[[["timeinterval",3]],["bool",15]],[[["distanceinterval",3]],["bool",15]],[[["createpedestrian",3]],["bool",15]],[[["createcar",3]],["bool",15]],[[["time",3],["time",3]],["timeinterval",3]],[[["distance",3],["distance",3]],["distanceinterval",3]],[[["distance",3],["distance",3]],["distanceinterval",3]],[[],["str",15]],null,null,null,null,null,null,null,[[],["str",15]],null,null,null,null,null,null,null,null,null,null,null,[[["parkingspot",4],["map",3],["parkingsimstate",4]],["sidewalkspot",3]],[[["carid",3]],["option",4,[["ordering",4]]]],[[["pedestrianid",3]],["option",4,[["ordering",4]]]],[[["agentid",4]],["option",4,[["ordering",4]]]],[[["agenttype",4]],["option",4,[["ordering",4]]]],[[["tripid",3]],["option",4,[["ordering",4]]]],[[["personid",3]],["option",4,[["ordering",4]]]],[[["vehicletype",4]],["option",4,[["ordering",4]]]],[[["parkingspot",4]],["option",4,[["ordering",4]]]],[[["sidewalkpoi",4]],["option",4,[["ordering",4]]]],null,null,null,null,null,null,null,[[["time",3]],["f64",15]],null,[[["time",3]],["f64",15]],null,null,null,null,null,null,null,null,[[],["str",15]],null,null,null,null,null,[[["xorshiftrng",3],["distance",3],["distance",3]],["distance",3]],null,null,null,null,null,null,null,null,[[["sim",3],["map",3]],["bool",15]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,null,[[["intersectionid",3],["map",3]],["option",4,[["sidewalkspot",3]]]],null,null,null,null,null,null,null,null,null,null,[[["position",3],["map",3]],["sidewalkspot",3]],null,null,[[],["pathconstraints",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["agenttype",4]],[[],["option",4,[["vehicletype",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["time",3]],["vec",3]],[[["time",3]],["usize",15]],null,[[["btreeset",3]],["counter",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["time",3],["analytics",3]],["vec",3]],null,[[],["analytics",3]],[[],["problem",4]],[[],["timeseriescount",3]],[[]],[[]],[[]],[[["vec",3],["time",3]]],[[["time",3]],["usize",15]],[[["time",3]],["vec",3]],null,[[],["analytics",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["problem",4]],["bool",15]],[[["event",4],["time",3],["map",3]]],[[["str",15],["fn",8]],["result",6]],[[["tripid",3]],["option",4,[["duration",3]]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["btreemap",3,[["tripid",3],["vec",3,[["tripphase",3]]]]]],[[["tripid",3],["map",3]],["vec",3,[["tripphase",3]]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["problem",4]],["bool",15]],[[["duration",3]],["slidingwindow",3]],[[["bool",15]],["analytics",3]],[[],["timeseriescount",3]],[[["time",3],["laneid",3],["usize",15]],["vec",3]],null,[[["time",3],["parkinglotid",3],["usize",15]],["vec",3]],null,[[["time",3],["usize",15]],["vec",3]],null,null,null,null,null,null,[[["time",3]],["vec",3]],[[["time",3],["agenttype",4],["usize",15]]],null,[[["path",3],["map",3]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[]],[[]],[[]],[[],["usize",15]],[[["time",3]],["usize",15]],[[["btreeset",3,[["agenttype",4]]]],["usize",15]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["event",4]],[[],["alertlocation",4]],[[],["tripphasetype",4]],[[]],[[]],[[]],[[["map",3]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["event",4]],["bool",15]],[[["alertlocation",4]],["bool",15]],[[["tripphasetype",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["event",4]],["bool",15]],[[["alertlocation",4]],["bool",15]],[[["tripphasetype",4]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["xorshiftrng",3]],["xorshiftrng",3]],null,null,null,[[["tripendpoint",4],["tripendpoint",4],["map",3],["xorshiftrng",3]],["result",6,[["personspec",3]]]],[[["xorshiftrng",3],["time",3],["time",3]],["time",3]],[[["distance",3],["xorshiftrng",3]],["tripmode",4]],null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["scenariogenerator",3]],[[],["spawnovertime",3]],[[],["borderspawnovertime",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["scenariogenerator",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["map",3],["xorshiftrng",3],["timer",3]],["scenario",3]],null,null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,null,null,null,null,null,null,null,[[["map",3],["xorshiftrng",3],["timer",3]],["scenario",3]],[[["xorshiftrng",3],["time",3],["time",3]],["time",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["map",3]],["scenariogenerator",3]],[[["xorshiftrng",3],["scenario",3],["tripmode",4],["map",3]]],[[["xorshiftrng",3],["scenario",3],["map",3]]],null,null,null,null,null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["app",3]],[[],["simflags",3]],[[]],[[["str",15]],["simflags",3]],[[]],[[["argmatches",3]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[["timer",3]]],[[],["xorshiftrng",3]],null,[[["str",15]],["result",6,[["vec",3,[["scenariomodifier",4]]]]]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["starttripargs",3]],[[],["tripspec",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["tripendpoint",4],["pathconstraints",4],["map",3]],["result",6,[["drivinggoal",4]]]],[[["tripendpoint",4],["map",3]],["result",6,[["sidewalkspot",3]]]],[[["starttripargs",3]],["bool",15]],[[["tripspec",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["map",3]]],[[["tripendpoint",4],["tripendpoint",4],["tripmode",4],["option",4,[["carid",3]]],["bool",15],["map",3]],["result",6,[["tripspec",4]]]],[[["starttripargs",3]],["bool",15]],[[["tripspec",4]],["bool",15]],null,[[],["result",4]],[[],["result",4]],[[["tripendpoint",4],["map",3]],["result",6,[["sidewalkspot",3]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["car",3]],[[],["carstate",4]],[[]],[[]],[[["distance",3],["time",3],["map",3]],["carstate",4]],[[["distanceinterval",3],["time",3],["map",3]],["carstate",4]],[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["distance",3],["time",3],["map",3],["transitsimstate",3]],["drawcarinput",3]],[[],["time",3]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["bool",15]],null,null,[[],["result",4]],[[],["result",4]],null,null,[[["time",3]],["duration",3]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["carid",3],["time",3]],["agentproperties",3]],[[["time",3],["btreemap",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],null,[[],["drivingsimstate",3]],[[]],[[],["vec",3,[["event",4]]]],[[["carid",3]],["string",3]],[[["carid",3]],["string",3]],[[["laneid",3]]],[[["laneid",3]],["option",4]],[[["carid",3],["time",3],["ctx",3]],["vehicle",3]],[[["car",3],["vec",3,[["queueentry",3]]],["usize",15],["time",3],["ctx",3]]],[[],["result",4]],[[["carid",3]],["bool",15]],null,[[["btreeset",3,[["parkingspot",4]]]],["vec",3]],[[["hashset",3],["btreeset",3]],["vec",3]],[[]],[[["time",3],["map",3],["transitsimstate",3]],["vec",3,[["drawcarinput",3]]]],[[],["vec",3,[["path",3]]]],[[["time",3],["map",3],["intersectionsimstate",3]],["btreemap",3,[["agentid",4]]]],[[["time",3],["car",3]],["distance",3]],[[["time",3],["traversable",4],["map",3],["transitsimstate",3]],["vec",3,[["drawcarinput",3]]]],[[["carid",3]],["option",4,[["personid",3]]]],[[["carid",3]],["option",4,[["path",3]]]],[[["carid",3],["time",3],["map",3],["transitsimstate",3]],["option",4,[["drawcarinput",3]]]],[[["time",3],["map",3]],["vec",3,[["unzoomedagent",3]]]],[[["map",3]]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["map",3],["simoptions",3]],["drivingsimstate",3]],[[["carid",3]],["f64",15]],[[["car",3],["map",3]],["option",4,[["laneid",3]]]],null,null,[[],["result",4]],[[["time",3],["createcar",3],["ctx",3]],["option",4,[["createcar",3]]]],[[["laneid",3]]],null,null,null,null,[[]],[[["time",3],["carid",3],["map",3]],["option",4,[["polyline",3]]]],[[["car",3],["time",3],["usize",15],["ctx",3]]],[[],["result",4]],[[],["result",4]],[[["car",3],["distance",3],["usize",15],["laneid",3],["time",3],["ctx",3]]],[[],["typeid",3]],[[["carid",3],["time",3],["ctx",3],["tripmanager",3],["transitsimstate",3],["walkingsimstate",3]]],[[["car",3],["usize",15],["time",3],["ctx",3],["tripmanager",3],["transitsimstate",3],["walkingsimstate",3]],["bool",15]],[[["car",3],["time",3],["ctx",3],["transitsimstate",3]],["bool",15]],[[["usize",15],["time",3],["ctx",3]]],[[["carid",3],["time",3],["ctx",3]]],[[["carid",3],["position",3],["option",4,[["personid",3]]]]],[[]],null,[[["car",3]],["option",4,[["carid",3]]]],null,null,null,null,null,null,null,null,[[["agentid",4],["turnid",3]]],[[["intersection",3]],["bool",15]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["agentid",4],["turnid",3]]],[[["uberturn",3],["map",3]],["option",4,[["agentid",4]]]],[[],["intersectionsimstate",3]],[[],["state",3]],[[],["signalstate",3]],[[],["request",3]],[[]],[[]],[[]],[[]],[[["request",3]],["ordering",4]],[[],["vec",3,[["event",4]]]],null,[[["time",3],["intersectionid",3]]],[[["intersectionid",3],["map",3]]],[[["time",3],["duration",3]],["vec",3]],[[],["vec",3,[["string",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["carid",3]],["option",4,[["hashset",3,[["carid",3]]]]]],null,null,[[["request",3]],["bool",15]],[[],["bool",15]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["intersectionid",3]],["vec",3]],[[["intersectionid",3]],["vec",3]],[[["request",3],["map",3],["option",4],["option",4]],["bool",15]],[[["time",3],["map",3],["scheduler",3]]],[[["map",3]]],null,null,[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["agentid",4],["turnid",3],["speed",3],["time",3],["map",3],["scheduler",3],["option",4]],["bool",15]],[[["request",3]],["bool",15]],[[["map",3],["scheduler",3],["simoptions",3]],["intersectionsimstate",3]],[[["intersectionid",3],["time",3],["map",3],["scheduler",3]],["signalstate",3]],[[["laneid",3],["intersectionid",3]],["bool",15]],null,[[["request",3]],["option",4,[["ordering",4]]]],[[["time",3],["btreemap",3],["map",3],["fixedmap",3],["hashmap",3]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["time",3],["intersectionid",3],["scheduler",3],["map",3]]],null,null,[[["request",3],["map",3],["controlstopsign",3],["time",3],["scheduler",3]],["bool",15]],[[]],[[]],[[]],[[]],null,[[["request",3],["map",3],["controltrafficsignal",3],["speed",3],["time",3],["option",4,[["scheduler",3]]]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["time",3],["agentid",4],["turnid",3],["scheduler",3],["map",3],["bool",15]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["time",3],["intersectionid",3],["map",3],["scheduler",3]]],null,[[["carid",3]]],[[]],[[]],[[]],[[]],null,[[["time",3],["intersectionid",3],["scheduler",3],["map",3]]],null,null,null,null,null,null,null,[[["parkedcar",3]]],[[["parkedcar",3]]],[[["parkedcar",3]]],[[["parkedcar",3]]],[[["map",3]],["vec",3]],[[["map",3]],["vec",3]],[[["map",3]],["vec",3]],[[["map",3]],["vec",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[["buildingid",3]],["vec",3,[["carid",3]]]],[[["buildingid",3]],["vec",3,[["carid",3]]]],[[["buildingid",3]],["vec",3,[["carid",3]]]],[[["buildingid",3]],["vec",3,[["carid",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["carid",3],["map",3]],["option",4,[["pt2d",3]]]],[[["carid",3],["map",3]],["option",4,[["pt2d",3]]]],[[["carid",3],["map",3]],["option",4,[["pt2d",3]]]],[[["carid",3],["map",3]],["option",4,[["pt2d",3]]]],[[],["parkingsimstate",4]],[[],["normalparkingsimstate",3]],[[],["parkinglane",3]],[[],["infiniteparkingsimstate",3]],[[]],[[]],[[]],[[]],[[],["vec",3,[["event",4]]]],[[],["vec",3,[["event",4]]]],[[],["vec",3,[["event",4]]]],[[],["vec",3,[["event",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15],["vehicle",3],["map",3]],["distance",3]],null,null,null,null,null,null,null,[[]],[[["infiniteparkingsimstate",3]],["parkingsimstate",4]],[[["normalparkingsimstate",3]],["parkingsimstate",4]],[[]],[[]],[[]],[[["map",3]],["vec",3,[["drawcarinput",3]]]],[[["map",3]],["vec",3,[["drawcarinput",3]]]],[[["map",3]],["vec",3,[["drawcarinput",3]]]],[[["map",3]],["vec",3,[["drawcarinput",3]]]],[[["position",3],["vehicle",3],["buildingid",3],["map",3]],["vec",3]],[[["position",3],["vehicle",3],["buildingid",3],["map",3]],["vec",3]],[[["position",3],["vehicle",3],["buildingid",3],["map",3]],["vec",3]],[[["position",3],["vehicle",3],["buildingid",3],["map",3]],["vec",3]],[[]],[[]],[[]],[[]],[[["parkingspot",4]],["option",4,[["parkedcar",3]]]],[[["parkingspot",4]],["option",4,[["parkedcar",3]]]],[[["parkingspot",4]],["option",4,[["parkedcar",3]]]],[[["parkingspot",4]],["option",4,[["parkedcar",3]]]],[[["carid",3],["map",3]],["option",4,[["drawcarinput",3]]]],[[["carid",3],["map",3]],["option",4,[["drawcarinput",3]]]],[[["carid",3],["map",3]],["option",4,[["drawcarinput",3]]]],[[["carid",3],["map",3]],["option",4,[["drawcarinput",3]]]],[[["laneid",3],["map",3]],["vec",3,[["drawcarinput",3]]]],[[["laneid",3],["map",3]],["vec",3,[["drawcarinput",3]]]],[[["laneid",3],["map",3]],["vec",3,[["drawcarinput",3]]]],[[["laneid",3],["map",3]],["vec",3,[["drawcarinput",3]]]],[[["laneid",3],["map",3]],["vec",3,[["drawcarinput",3]]]],[[["laneid",3],["map",3]],["vec",3,[["drawcarinput",3]]]],[[["laneid",3],["map",3]],["vec",3,[["drawcarinput",3]]]],[[["laneid",3],["map",3]],["vec",3,[["drawcarinput",3]]]],[[["buildingid",3]],["parkingspot",4]],[[["parkinglotid",3]],["vec",3,[["parkingspot",4]]]],[[["parkinglotid",3]],["vec",3,[["parkingspot",4]]]],[[["parkinglotid",3]],["vec",3,[["parkingspot",4]]]],[[["parkinglotid",3]],["vec",3,[["parkingspot",4]]]],[[["buildingid",3]],["vec",3,[["parkingspot",4]]]],[[["buildingid",3]],["vec",3,[["parkingspot",4]]]],[[["buildingid",3]],["vec",3,[["parkingspot",4]]]],[[["buildingid",3]],["vec",3,[["parkingspot",4]]]],[[["laneid",3]],["vec",3,[["parkingspot",4]]]],[[["laneid",3]],["vec",3,[["parkingspot",4]]]],[[["laneid",3]],["vec",3,[["parkingspot",4]]]],[[["laneid",3]],["vec",3,[["parkingspot",4]]]],[[["carid",3]],["option",4,[["personid",3]]]],[[["carid",3]],["option",4,[["personid",3]]]],[[["carid",3]],["option",4,[["personid",3]]]],[[["carid",3]],["option",4,[["personid",3]]]],[[["map",3],["timer",3]]],[[["map",3],["timer",3]]],[[["map",3],["timer",3]]],[[["map",3],["timer",3]]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["parkingspot",4]],["bool",15]],[[["parkingspot",4]],["bool",15]],[[["parkingspot",4]],["bool",15]],[[["parkingspot",4]],["bool",15]],[[],["bool",15]],[[["carid",3]],["option",4,[["parkedcar",3]]]],[[["carid",3]],["option",4,[["parkedcar",3]]]],[[["carid",3]],["option",4,[["parkedcar",3]]]],[[["carid",3]],["option",4,[["parkedcar",3]]]],[[["map",3],["bool",15],["timer",3]],["parkingsimstate",4]],[[["map",3],["timer",3]],["normalparkingsimstate",3]],[[["lane",3],["map",3]],["option",4,[["parkinglane",3]]]],[[["map",3]],["infiniteparkingsimstate",3]],null,null,null,null,null,null,null,null,null,[[["laneid",3],["vehicle",3],["buildingid",3],["map",3]],["option",4]],[[["laneid",3],["vehicle",3],["buildingid",3],["map",3]],["option",4]],[[["laneid",3],["vehicle",3],["buildingid",3],["map",3]],["option",4]],[[["laneid",3],["vehicle",3],["buildingid",3],["map",3]],["option",4]],[[["parkedcar",3]]],[[["parkedcar",3]]],[[["parkedcar",3]]],[[["parkedcar",3]]],[[["parkingspot",4],["carid",3]]],[[["parkingspot",4],["carid",3]]],[[["parkingspot",4],["carid",3]]],[[["parkingspot",4],["carid",3]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[["parkingspot",4],["vehicle",3],["map",3]],["position",3]],[[["parkingspot",4],["vehicle",3],["map",3]],["position",3]],[[["parkingspot",4],["vehicle",3],["map",3]],["position",3]],[[["parkingspot",4],["vehicle",3],["map",3]],["position",3]],[[["parkingspot",4],["map",3]],["position",3]],[[["parkingspot",4],["map",3]],["position",3]],[[["parkingspot",4],["map",3]],["position",3]],[[["parkingspot",4],["map",3]],["position",3]],[[],["vec",3,[["parkingspot",4]]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["infiniteparkingsimstate",3]]]],[[],["result",4]],[[],["result",4,[["normalparkingsimstate",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["carid",3]]],[[["carid",3]]],[[["carid",3]]],[[["carid",3]]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[["carid",3],["distance",3],["distance",3],["usize",15]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["position",3],["distance",3],["time",3],["fixedmap",3],["hashmap",3]],["option",4,[["usize",15]]]],[[["carid",3],["usize",15]]],[[["carid",3],["usize",15]]],[[],["queue",3]],[[],["queued",4]],[[],["queueentry",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["fixedmap",3],["traversable",4],["time",3]]],[[["queued",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["car",3]]],[[]],[[]],[[]],null,null,[[],["vec",3,[["carid",3]]]],[[["time",3],["fixedmap",3],["hashmap",3]],["vec",3,[["queueentry",3]]]],[[["distance",3],["distance",3],["time",3],["fixedmap",3],["hashmap",3]],["option",4,[["usize",15]]]],[[["time",3],["fixedmap",3],["hashmap",3]],["option",4]],[[["carid",3]],["option",4,[["carid",3]]]],null,[[["time",3],["fixedmap",3],["hashmap",3],["btreeset",3],["option",4,[["vec",3]]]],["option",4]],[[["usize",15],["car",3]]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["carid",3]],["bool",15]],[[],["bool",15]],null,null,null,[[],["carid",3]],[[["queued",4]],["bool",15]],[[["traversable",4],["map",3]],["queue",3]],[[["carid",3]]],[[["carid",3],["usize",15]]],[[["car",3],["usize",15]]],null,[[["car",3]],["bool",15]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["car",3],["bool",15]],["bool",15]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["fixedmap",3],["time",3],["traversable",4]]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["map",3],["pedestrianid",3],["time",3]],["agentproperties",3]],[[["time",3],["btreemap",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["walkingsimstate",3]],[[],["pedestrian",3]],[[],["pedstate",4]],[[]],[[]],[[]],[[],["vec",3,[["event",4]]]],[[["distance",3],["time",3],["map",3]],["pedstate",4]],[[["pedestrianid",3]],["string",3]],[[["pedestrianid",3],["ctx",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["vec",3],["pedcrowdlocation",4]]],[[["vec",3,[["parkedcar",3]]]],["vec",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["time",3],["map",3]],["vec",3,[["drawpedestrianinput",3]]]],[[["time",3],["map",3]],["distance",3]],[[["pedestrianid",3],["time",3],["map",3]],["option",4,[["drawpedestrianinput",3]]]],[[["time",3],["map",3]],["drawpedestrianinput",3]],[[["time",3],["traversable",4],["map",3]]],[[],["time",3]],[[["pedestrianid",3]],["option",4,[["path",3]]]],[[["time",3],["map",3]],["vec",3,[["unzoomedagent",3]]]],null,null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["time",3],["map",3],["intersectionsimstate",3],["multimap",3],["vec",3],["scheduler",3]],["bool",15]],[[],["walkingsimstate",3]],null,[[["time",3],["pedestrianid",3]]],null,null,null,[[["commutersvehiclescounts",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["time",3],["createpedestrian",3],["map",3],["scheduler",3]]],null,null,null,null,[[["time",3]],["duration",3]],[[]],[[]],[[]],null,[[["time",3],["pedestrianid",3],["map",3]],["option",4,[["polyline",3]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["pedestrianid",3],["time",3],["ctx",3],["tripmanager",3],["transitsimstate",3]]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["duration",3]],["anytime",3]],[[["duration",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["anytime",3]],[[],["stateevent",4]],[[],["event",3]],[[],["state",4]],[[]],[[]],[[]],[[]],[[["anytime",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["f64",15]],["anytime",3]],[[["time",3]],["anytime",3]],[[]],[[]],[[]],[[]],[[],["option",4,[["anytime",3]]]],[[],["option",4,[["time",3]]]],[[["f64",15],["xorshiftrng",3]],["duration",3]],[[["f64",15],["f64",15],["xorshiftrng",3]],["duration",3]],[[],["f64",15]],[[],["f64",15]],[[],["f64",15]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["anytime",3]],["bool",15]],[[["f64",15],["f64",15]]],[[["anytime",3],["xorshiftrng",3]],["state",4]],[[["anytime",3],["xorshiftrng",3]],["option",4]],[[["anytime",3],["xorshiftrng",3]],["option",4]],null,null,[[["anytime",3]],["option",4,[["ordering",4]]]],null,[[["anytime",3],["duration",3],["xorshiftrng",3]],["result",6]],[[["anytime",3]],["duration",3]],[[["duration",3]],["anytime",3]],null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["time",3],["duration",3],["personid",3],["scheduler",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["pandemicmodel",3]],[[],["cmd",4]],[[],["sharedspace",3]],[[]],[[]],[[]],[[["cmd",4]],["ordering",4]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["result",4]],[[["cmd",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["u64",15]],[[["personid",3]],["option",4,[["time",3]]]],[[["time",3],["cmd",4],["scheduler",3]]],[[["time",3],["event",4],["scheduler",3]]],[[]],[[["personid",3],["personid",3]],["option",4,[["personid",3]]]],[[["scheduler",3]]],null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["personid",3]],["bool",15]],[[["personid",3]],["bool",15]],[[["personid",3]],["bool",15]],[[["personid",3]],["bool",15]],[[["personid",3]],["bool",15]],[[["cmd",4]],["bool",15]],[[["xorshiftrng",3]],["pandemicmodel",3]],[[],["sharedspace",3]],null,[[["cmd",4]],["option",4,[["ordering",4]]]],[[["time",3],["personid",3]]],[[["time",3],["personid",3]],["option",4,[["vec",3]]]],null,null,null,[[],["result",4]],[[]],[[]],[[]],[[["time",3],["personid",3],["scheduler",3]]],[[["time",3],["personid",3],["vec",3],["scheduler",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,[[],["trafficrecorder",3]],[[]],[[]],[[["time",3],["event",4],["map",3],["drivingsimstate",3]]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["btreeset",3,[["intersectionid",3]]]],["trafficrecorder",3]],[[],["usize",15]],[[["map",3]]],null,[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["drawpedestrianinput",3]],[[],["pedcrowdlocation",4]],[[],["drawcarinput",3]],[[],["carstatus",4]],[[],["intent",4]],[[]],[[]],[[]],[[]],[[]],[[["carstatus",4]],["bool",15]],[[["intent",4]],["bool",15]],[[],["bool",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vehicle",3],["parkingsimstate",4],["map",3],["option",4],["vec",3]],["traversable",4]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["carid",3],["path",3],["sidewalkspot",3]],["router",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["laneid",3],["laneid",3],["map",3]],["bool",15]],[[],["router",3]],[[],["goal",4]],[[]],[[]],[[["laneid",3],["map",3]]],[[],["result",4]],[[],["result",4]],[[["carid",3],["path",3],["distance",3],["intersectionid",3]],["router",3]],[[["router",3]],["bool",15]],[[["goal",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["carid",3],["path",3]],["router",3]],[[]],[[]],[[]],[[],["distance",3]],[[],["option",4,[["parkingspot",4]]]],[[],["path",3]],null,[[],["traversable",4]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["bool",15]],[[],["bool",15]],[[["distance",3],["vehicle",3],["parkingsimstate",4],["map",3],["option",4],["vec",3]],["option",4,[["actionatend",4]]]],[[],["option",4,[["traversable",4]]]],[[["router",3]],["bool",15]],[[["goal",4]],["bool",15]],[[],["traversable",4]],[[["hashmap",3],["map",3],["bool",15]]],null,[[["carid",3],["path",3],["buildingid",3]],["router",3]],null,[[],["result",4]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["carid",3],["position",3],["map",3]],["router",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["command",4]]],[[],["command",4]],[[],["commandtype",4]],[[],["simplecommandtype",4]],[[],["item",3]],[[],["scheduler",3]],[[]],[[]],[[]],[[]],[[]],null,null,[[["commandtype",4]],["ordering",4]],[[["simplecommandtype",4]],["ordering",4]],[[["item",3]],["ordering",4]],null,[[],["vec",3,[["string",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["command",4]],["bool",15]],[[["commandtype",4]],["bool",15]],[[["simplecommandtype",4]],["bool",15]],[[["item",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["time",3]],[[],["option",4,[["command",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,null,[[["command",4]],["bool",15]],[[["commandtype",4]],["bool",15]],[[["item",3]],["bool",15]],[[],["scheduler",3]],[[["commandtype",4]],["option",4,[["ordering",4]]]],[[["simplecommandtype",4]],["option",4,[["ordering",4]]]],[[["item",3]],["option",4,[["ordering",4]]]],[[],["option",4,[["time",3]]]],[[["time",3],["command",4]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[]],[[]],[[]],[[]],[[]],[[],["simplecommandtype",4]],[[],["commandtype",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["time",3],["command",4]]],[[["agentid",4]],["command",4]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["vec",3,[["agentid",4]]]],[[["map",3],["agentid",4]],["agentproperties",3]],[[["agentid",4]],["option",4,[["personid",3]]]],[[["agentid",4]],["option",4,[["tripid",3]]]],null,null,[[["intersectionid",3]],["vec",3]],[[["map",3]],["vec",3]],[[],["vec",3]],[[],["btreemap",3,[["personid",3],["duration",3]]]],null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["buildingid",3]],["vec",3,[["carid",3]]]],[[["buildingid",3]],["vec",3,[["personid",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["carid",3]],["option",4,[["transitrouteid",3]]]],[[["agentid",4],["map",3]],["option",4,[["pt2d",3]]]],[[],["app",3]],[[],["vec",3]],[[],["sim",3]],[[],["simoptions",3]],[[],["alerthandler",4]],[[]],[[]],[[]],[[["intersectionid",3]]],[[["agentid",4]],["string",3]],[[["carid",3]]],[[["carid",3]],["string",3]],[[["intersectionid",3],["map",3]]],[[["laneid",3]]],[[["pedestrianid",3]]],[[["laneid",3]],["option",4]],[[],["simoptions",3]],[[],["alerthandler",4]],[[["duration",3]],["vec",3]],[[["carid",3],["map",3]]],[[],["vec",3,[["string",3]]]],[[],["result",4]],null,[[["vec",3,[["event",4]]],["map",3]]],[[["map",3],["time",3],["command",4],["option",4]],["bool",15]],null,null,null,[[["box",3]],["result",4,[["box",3,[["simcallback",8]]],["box",3]]]],[[],["option",4]],[[["rc",3]],["result",4,[["rc",3,[["simcallback",8]]],["rc",3]]]],[[],["option",4]],null,[[]],null,null,[[["time",3]],["option",4,[["string",3]]]],[[["origpersonid",3]],["option",4,[["personid",3]]]],[[["time",3]],["option",4,[["string",3]]]],[[["map",3],["timer",3]]],[[["tripid",3]],["option",4]],[[]],[[]],[[]],[[]],[[["argmatches",3]]],[[["map",3],["string",3]],["scenario",3]],[[["intersectionid",3]],["vec",3]],[[["map",3]],["vec",3,[["drawcarinput",3]]]],[[["map",3]],["vec",3,[["drawpedestrianinput",3]]]],[[],["vec",3,[["path",3]]]],[[]],[[],["vec",3]],[[],["analytics",3]],[[["map",3]],["btreemap",3,[["agentid",4]]]],[[["personid",3],["map",3]],["option",4,[["pt2d",3]]]],[[["tripid",3],["map",3]],["tripresult",4,[["pt2d",3]]]],[[["carid",3],["map",3]],["option",4,[["drawcarinput",3]]]],[[["traversable",4],["map",3]],["vec",3,[["drawcarinput",3]]]],[[["pedestrianid",3],["map",3]],["option",4,[["drawpedestrianinput",3]]]],[[["traversable",4],["map",3]]],[[],["time",3]],[[["parkinglotid",3]],["vec",3,[["parkingspot",4]]]],[[["buildingid",3]],["vec",3,[["parkingspot",4]]]],[[["laneid",3]],["vec",3,[["parkingspot",4]]]],[[],["option",4]],[[["carid",3]],["option",4,[["personid",3]]]],[[],["option",4,[["pandemicmodel",3]]]],[[["agentid",4]],["option",4,[["path",3]]]],[[["transitstopid",3]],["vec",3]],[[["personid",3]],["person",3]],[[],["string",3]],[[["map",3],["tripid",3]],["result",6,[["duration",3]]]],[[["map",3]],["vec",3,[["unzoomedagent",3]]]],[[["map",3]],["vec",3,[["unzoomedagent",3]]]],[[["intersectionid",3]],["vec",3]],[[["map",3]]],[[["map",3],["timer",3]]],null,null,[[],["bool",15]],null,[[["scenario",3],["map",3],["xorshiftrng",3],["timer",3]]],[[["scenario",3],["map",3],["xorshiftrng",3],["bool",15],["timer",3]]],null,null,[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["string",3],["timer",3]],["result",6,[["sim",3]]]],[[["usize",15]],["option",4,[["carid",3]]]],[[["carid",3]],["option",4,[["parkedcar",3]]]],[[["personid",3]],["option",4,[["person",3]]]],null,null,[[["map",3],["duration",3],["option",4]],["bool",15]],[[["map",3],["simoptions",3]],["sim",3]],[[["str",15]],["simoptions",3]],[[["option",4,[["origpersonid",3]]],["speed",3],["vec",3,[["vehiclespec",3]]]],["person",3]],[[],["usize",15]],[[],["counter",3,[["agenttype",4]]]],[[],["commutersvehiclescounts",3]],[[]],[[],["option",4,[["usize",15]]]],[[["carid",3]],["usize",15]],[[]],null,null,null,[[["str",15]],["result",6,[["alerthandler",4]]]],[[["str",15]],["result",6,[["xorshiftrng",3]]]],[[["personid",3]],["option",4,[["agentid",4]]]],null,[[["btreeset",3,[["intersectionid",3]]]]],null,[[["sim",3],["map",3]],["bool",15]],null,null,[[],["string",3]],[[],["string",3]],[[["time",3]],["string",3]],[[["map",3]]],null,null,null,[[["transitroute",3]]],[[["vehicle",3],["parkingspot",4]]],[[],["result",4]],[[["btreeset",3,[["personid",3]]]]],[[["duration",3]]],[[["string",3]]],null,[[["vec",3],["map",3],["timer",3]]],[[["transitroute",3],["map",3]]],[[["transitrouteid",3],["map",3]],["vec",3]],[[],["usize",15]],null,[[["lane",3]]],[[],["time",3]],null,[[["map",3],["duration",3],["duration",3],["option",4]]],[[["map",3],["duration",3],["option",4],["timer",3]]],[[["map",3],["option",4]]],[[]],[[]],[[]],[[["agentid",4],["map",3]],["option",4,[["polyline",3]]]],null,[[["tripid",3]],["duration",3]],[[["tripid",3]],["tripinfo",3]],[[["tripid",3]],["tripresult",4,[["agentid",4]]]],[[["tripid",3]],["option",4,[["personid",3]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],[[]],null,[[["map",3],["buildingid",3]],["option",4,[["path",3]]]],null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["delaycause",4]],[[]],[[["delaycause",4]],["ordering",4]],null,[[["delaycause",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["delaycause",4]],["bool",15]],[[["delaycause",4]],["option",4,[["ordering",4]]]],[[],["result",4]],[[]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[["scenario",3]],["counter",3,[["buildingid",3]]]],[[["buildingid",3],["btreemap",3],["map",3]],["option",4,[["parkingspot",4]]]],[[["personspec",3],["xorshiftrng",3]]],[[["xorshiftrng",3]],["vehiclespec",3]],[[["xorshiftrng",3]],["vehiclespec",3]],[[["xorshiftrng",3],["distance",3],["distance",3]],["distance",3]],[[["xorshiftrng",3]],["speed",3]],[[["xorshiftrng",3],["speed",3],["speed",3]],["speed",3]],[[["vec",3],["sim",3],["map",3],["xorshiftrng",3],["timer",3]]],null,null,null,null,null,null,null,null,null,null,[[]],null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["time",3],["carid",3],["tripmanager",3],["walkingsimstate",3],["ctx",3]],["bool",15]],[[["carid",3],["transitrouteid",3]]],[[["carid",3],["map",3]],["router",3]],[[["carid",3]],["transitrouteid",3]],null,[[["transitrouteid",3]],["vec",3]],null,[[],["stop",3]],[[],["route",3]],[[],["bus",3]],[[],["busstate",4]],[[],["transitsimstate",3]],[[]],[[]],[[]],[[]],[[]],[[],["vec",3,[["event",4]]]],[[["transitroute",3],["map",3]],["path",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[["carid",3]],["vec",3]],[[["transitstopid",3]],["vec",3]],[[["time",3],["drivingsimstate",3],["map",3]],["vec",3,[["unzoomedagent",3]]]],null,[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["map",3]],["transitsimstate",3]],null,null,[[["time",3],["pedestrianid",3],["tripid",3],["personid",3],["transitstopid",3],["transitrouteid",3],["option",4,[["transitstopid",3]]],["map",3]],["option",4,[["carid",3]]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["vec",3,[["agentid",4]]]],[[],["btreemap",3]],null,[[["agentid",4],["tripid",3]]],[[["agentid",4]],["option",4,[["tripid",3]]]],[[["intersectionid",3]],["vec",3]],[[],["vec",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["sidewalkspot",3]]],[[["time",3],["carid",3],["sidewalkspot",3],["duration",3],["distance",3],["ctx",3]]],[[["buildingid",3]],["vec",3,[["personid",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["time",3],["tripid",3],["string",3],["option",4,[["vehicle",3]]],["ctx",3]]],[[["tripid",3],["string",3]]],null,null,[[["time",3],["carid",3],["intersectionid",3],["duration",3],["distance",3],["ctx",3]]],[[["time",3],["carid",3],["parkingspot",4],["duration",3],["distance",3],["ctx",3]]],[[],["tripmanager",3]],[[],["trip",3]],[[],["tripinfo",3]],[[],["tripleg",4]],[[],["person",3]],[[],["personstate",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["vec",3,[["event",4]]]],null,[[["agentid",4]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["tripleg",4]],["bool",15]],[[["personstate",4]],["bool",15]],null,null,[[["tripid",3]],["option",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["map",3],["string",3]],["scenario",3]],[[],["vec",3]],[[["personid",3]],["option",4,[["person",3]]]],[[["carid",3]],["vehicle",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["bool",15]],null,null,null,[[["tripleg",4]],["bool",15]],[[["personstate",4]],["bool",15]],[[],["tripmanager",3]],[[],["usize",15]],[[["option",4,[["origpersonid",3]]],["speed",3],["vec",3,[["vehiclespec",3]]]],["person",3]],[[["personid",3],["tripinfo",3]],["tripid",3]],[[],["usize",15]],[[["transitsimstate",3]],["counter",3,[["agenttype",4]]]],[[["transitsimstate",3],["walkingsimstate",3]],["commutersvehiclescounts",3]],[[]],[[]],[[],["option",4]],null,null,null,[[["time",3],["pedestrianid",3],["carid",3],["duration",3],["walkingsimstate",3]]],[[["time",3],["pedestrianid",3],["intersectionid",3],["duration",3],["distance",3],["ctx",3]]],[[["time",3],["pedestrianid",3],["buildingid",3],["duration",3],["distance",3],["ctx",3]]],[[["time",3],["pedestrianid",3],["transitstopid",3],["duration",3],["distance",3],["ctx",3],["transitsimstate",3]],["option",4,[["transitrouteid",3]]]],[[["time",3],["pedestrianid",3],["parkingspot",4],["duration",3],["distance",3],["ctx",3]]],[[["time",3],["pedestrianid",3],["sidewalkspot",3],["duration",3],["distance",3],["ctx",3]]],null,null,null,[[["time",3],["personid",3],["carid",3],["ctx",3]]],[[],["tripresult",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["time",3],["tripid",3],["sidewalkspot",3],["ctx",3]]],null,[[["time",3],["personid",3],["ctx",3]]],[[["time",3],["tripid",3],["starttripargs",3],["ctx",3]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["time",3],["personid",3],["carid",3],["ctx",3]]],[[["tripid",3],["agentid",4]]],[[["tripid",3]],["duration",3]],[[["time",3],["tripid",3],["ctx",3]]],[[["tripid",3]],["tripinfo",3]],[[["tripid",3]],["tripresult",4,[["agentid",4]]]],[[["tripid",3]],["option",4,[["personid",3]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"PedestrianID"],[3,"TripID"],[3,"PersonID"],[4,"DelayCause"],[4,"Problem"],[4,"AgentType"],[4,"VehicleType"],[4,"SidewalkPOI"],[4,"TripPhaseType"],[4,"PedCrowdLocation"],[4,"AlertHandler"],[4,"DrivingGoal"],[4,"AlertLocation"],[4,"AgentID"],[4,"PersonState"],[4,"ParkingSpot"],[4,"TripResult"],[4,"CarStatus"],[4,"Intent"],[3,"Analytics"],[3,"Sim"],[3,"SimOptions"],[3,"CarID"],[3,"Vehicle"],[3,"VehicleSpec"],[3,"ParkedCar"],[3,"SidewalkSpot"],[3,"TimeInterval"],[3,"DistanceInterval"],[3,"CreatePedestrian"],[3,"CreateCar"],[3,"DrawCarInput"],[3,"ScenarioGenerator"],[3,"CommutersVehiclesCounts"],[3,"TripInfo"],[3,"Person"],[3,"AgentProperties"],[3,"TripPhase"],[3,"DrawPedestrianInput"],[3,"SpawnOverTime"],[3,"BorderSpawnOverTime"],[3,"DrawPedCrowdInput"],[3,"UnzoomedAgent"],[3,"SimFlags"],[8,"SimCallback"],[3,"SlidingWindow"],[13,"Car"],[13,"Pedestrian"],[13,"BusPassenger"],[13,"Intersection"],[13,"Person"],[13,"Building"],[13,"Agent"],[13,"Intersection"],[13,"ParkNear"],[13,"Border"],[13,"Onstreet"],[13,"Offstreet"],[13,"Lot"],[13,"Sidewalk"],[13,"BldgDriveway"],[13,"LotDriveway"],[13,"Trip"],[13,"Inside"],[13,"IntersectionDelay"],[13,"ComplexIntersectionCrossing"],[13,"ArterialIntersectionCrossing"],[13,"OvertakeDesired"],[13,"ParkingSpot"],[13,"Building"],[13,"TransitStop"],[13,"Border"],[13,"BikeRack"],[13,"WaitingForBus"],[13,"RidingBus"],[13,"Ok"],[3,"TimeSeriesCount"],[4,"Event"],[13,"CarReachedParkingSpot"],[13,"CarLeftParkingSpot"],[13,"BusArrivedAtStop"],[13,"BusDepartedFromStop"],[13,"PassengerBoardsTransit"],[13,"PassengerAlightsTransit"],[13,"PersonEntersBuilding"],[13,"PersonLeavesBuilding"],[13,"PersonLeavesMap"],[13,"PersonEntersMap"],[13,"PedReachedParkingSpot"],[13,"BikeStoppedAtSidewalk"],[13,"ProblemEncountered"],[13,"AgentEntersTraversable"],[13,"IntersectionDelayMeasured"],[13,"TripCancelled"],[13,"TripPhaseStarting"],[13,"PathAmended"],[13,"Alert"],[13,"TripFinished"],[4,"TripSpec"],[3,"StartTripArgs"],[13,"UsingBike"],[13,"UsingParkedCar"],[13,"SpawningFailure"],[13,"VehicleAppearing"],[13,"JustWalking"],[13,"UsingTransit"],[4,"CarState"],[3,"Car"],[13,"Parking"],[13,"IdlingAtStop"],[13,"Queued"],[13,"WaitingToAdvance"],[13,"Unparking"],[13,"Crossing"],[13,"ChangingLanes"],[3,"DrivingSimState"],[3,"State"],[3,"Request"],[3,"IntersectionSimState"],[3,"SignalState"],[4,"ParkingSimState"],[8,"ParkingSim"],[3,"NormalParkingSimState"],[3,"InfiniteParkingSimState"],[3,"ParkingLane"],[13,"Normal"],[13,"Infinite"],[4,"Queued"],[3,"Queue"],[3,"QueueEntry"],[13,"Vehicle"],[13,"StaticBlockage"],[13,"DynamicBlockage"],[4,"PedState"],[3,"WalkingSimState"],[3,"Pedestrian"],[13,"WaitingToTurn"],[13,"LeavingBuilding"],[13,"EnteringBuilding"],[13,"LeavingParkingLot"],[13,"EnteringParkingLot"],[13,"StartingToBike"],[13,"FinishingBiking"],[13,"WaitingForBus"],[13,"Crossing"],[3,"AnyTime"],[4,"State"],[4,"StateEvent"],[3,"Event"],[13,"Sane"],[13,"Exposed"],[13,"Infectious"],[13,"Hospitalized"],[13,"Recovered"],[13,"Dead"],[4,"Cmd"],[3,"PandemicModel"],[3,"SharedSpace"],[13,"BecomeHospitalized"],[13,"BecomeQuarantined"],[3,"TrafficRecorder"],[4,"Goal"],[4,"ActionAtEnd"],[3,"Router"],[13,"VanishAtBorder"],[13,"StartParking"],[13,"StopBiking"],[13,"EndAtBorder"],[13,"FollowTransitRoute"],[13,"BikeThenStop"],[13,"ParkNearBuilding"],[4,"Command"],[4,"CommandType"],[4,"SimpleCommandType"],[3,"Item"],[3,"Scheduler"],[13,"SpawnCar"],[13,"SpawnPed"],[13,"StartTrip"],[13,"UpdateCar"],[13,"UpdateLaggyHead"],[13,"UpdatePed"],[13,"UpdateIntersection"],[13,"Callback"],[13,"Pandemic"],[13,"StartBus"],[13,"StartTrip"],[13,"Car"],[13,"CarLaggyHead"],[13,"Ped"],[13,"Intersection"],[13,"Pandemic"],[13,"StartBus"],[3,"Ctx"],[4,"BusState"],[3,"TransitSimState"],[3,"Route"],[3,"Stop"],[3,"Bus"],[13,"DrivingToStop"],[13,"AtStop"],[4,"TripLeg"],[3,"TripManager"],[3,"Trip"],[13,"Walk"],[13,"Drive"],[13,"RideBus"]]},\
"synthpop":{"doc":"This crate describes a synthetic population that exist in …","t":[12,12,13,13,13,13,13,13,13,3,3,4,13,3,3,3,13,13,3,13,3,13,13,13,13,3,4,13,13,13,13,3,13,4,13,4,4,13,13,11,0,11,11,11,11,12,11,11,11,11,11,11,0,12,12,12,11,11,12,12,0,11,11,11,11,0,11,11,11,11,11,11,12,11,12,12,12,12,11,11,12,12,12,12,12,0,11,11,11,12,12,12,12,12,12,12,11,11,12,12,12,12,12,12,0,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,12,11,11,11,11,12,12,12,11,11,11,11,11,11,11,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,4,13,13,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12,12,12,12,12,12,13,13,3,13,13,13,3,13,13,3,13,13,13,4,13,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","1","AddExtraTrips","Bike","Border","Building","ChangeMode","Drive","Escort","ExternalPerson","ExternalTrip","ExternalTripEndpoint","Home","IndividTrip","MapBorder","MapBorders","Meal","Medical","OrigPersonID","ParkAndRideTransfer","PersonSpec","PersonalBusiness","Position","Recreation","RepeatDays","Scenario","ScenarioModifier","School","Shopping","Social","SuddenlyAppear","TrafficCounts","Transit","TripEndpoint","TripEndpoint","TripMode","TripPurpose","Walk","Work","all","borders","borrow","borrow","borrow_mut","borrow_mut","cancelled","clone","clone","clone_into","clone_into","cmp","cmp","counts","depart","departure","description","deserialize","deserialize","destination","destination","endpoint","eq","eq","equivalent","equivalent","external","fmt","fmt","from","from","from_constraints","get_hash","gps_pos","hash","i","incoming_biking","incoming_driving","incoming_walking","into","into","map","map_name","mode","mode","modified","modifier","ne","noun","ongoing_verb","only_seed_buses","orig_id","origin","origin","outgoing_biking","outgoing_driving","outgoing_walking","partial_cmp","partial_cmp","people","per_intersection","per_road","pos","purpose","purpose","scenario","scenario_name","serialize","serialize","to_constraints","to_owned","to_owned","trips","trips","try_from","try_from","try_into","try_into","type_id","type_id","verb","vzip","vzip","weight","0","0","0","0","departure_filter","from_modes","pct_ppl","to_mode","0","0","0","MapBorder","MapBorders","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","for_mode","from","from","gps_pos","i","incoming_biking","incoming_driving","incoming_walking","into","into","new","new","outgoing_biking","outgoing_driving","outgoing_walking","pos","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","weight","TrafficCounts","borrow","borrow_mut","clone","clone_into","default","description","deserialize","from","from_path_requests","into","map","per_intersection","per_road","quickly_compare","serialize","to_owned","try_from","try_into","type_id","vzip","Border","Building","SuddenlyAppear","TripEndpoint","borrow","borrow_mut","clone","clone_into","cmp","deserialize","end_walking_at_border","eq","equivalent","fmt","from","into","ne","partial_cmp","path_req","pos","pt","serialize","sidewalk_pos","start_walking_at_border","to_owned","try_from","try_into","type_id","vzip","0","0","0","ExternalPerson","ExternalTrip","ExternalTripEndpoint","Position","TripEndpoint","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","departure","deserialize","deserialize","deserialize","destination","from","from","from","import","into","into","into","mode","origin","purpose","trips","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","AddExtraTrips","ChangeMode","RepeatDays","ScenarioModifier","apply","borrow","borrow_mut","clone","clone_into","cmp","describe","deserialize","eq","equivalent","from","into","ne","partial_cmp","repeat_days","serialize","to_owned","try_from","try_into","type_id","vzip","0","0","departure_filter","from_modes","pct_ppl","to_mode","Escort","Home","IndividTrip","Meal","Medical","ParkAndRideTransfer","PersonSpec","PersonalBusiness","Recreation","Scenario","School","Shopping","Social","TripPurpose","Work","all_trips","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancelled","check_schedule","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default_scenario_for_map","depart","deserialize","deserialize","deserialize","deserialize","destination","empty","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","map_name","mode","modified","new","only_seed_buses","orig_id","origin","people","purpose","remove_weird_schedules","save","scenario_name","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_string","trips","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":["synthpop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","synthpop::ExternalTripEndpoint","","synthpop::ScenarioModifier","","","","","","synthpop::TripEndpoint","","","synthpop::borders","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","synthpop::counts","","","","","","","","","","","","","","","","","","","","","synthpop::endpoint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","synthpop::endpoint::TripEndpoint","","","synthpop::external","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","synthpop::external::ExternalTripEndpoint","","synthpop::modifier","","","","","","","","","","","","","","","","","","","","","","","","","synthpop::modifier::ScenarioModifier","","","","","","synthpop::scenario","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Scenario name","","","","","","","","","","","","","Lists all border intersections of the map, broken down by …","","","This is an ID used by Seattle soundcast. Originally it was …","","","","","","","A Scenario describes all the input to a simulation. …","Transforms an existing Scenario before instantiating it.","","","","Used for interactive spawning, tests, etc. For now, only …","This represents the number of vehicles (or trips, or …","","Specifies where a trip begins or ends.","","How does a trip primarily happen?","Lifted from Seattle’s Soundcast model, but seems general …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Some users of the API …","","","","","","","","","","","","","","","","","","","Did a ScenarioModifier affect this?","","","","","None means seed all buses. Otherwise the route name must …","Just used for debugging","","","","","","","","","","","","","","","","","","","","","","There must be continuity between trips: each trip starts …","","","","","","","","","","Based on the classification of the connecting road, a …","","","","","","","","If <code>None</code>, then just cancel the trip.","","","","","Lists all border intersections of the map, broken down by …","","","","","","","","","Returns the (incoming, outgoing) borders for the …","","","","","","","","","","","","","","","","","","","","","","","","","","Based on the classification of the connecting road, a …","This represents the number of vehicles (or trips, or …","","","","","","","","","Run pathfinding on all of the requests, then count the …","","","","","Print a comparison of counts. Only look at …","","","","","","","","","Used for interactive spawning, tests, etc. For now, only …","Specifies where a trip begins or ends.","","","","","","","","","","","","","","","Figure out a single PathRequest that goes between two …","","Returns a point representing where this endpoint is.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Import external scenario data. The main difference between …","","","","","","","","","","","","","","","","","","","","","","Scenario name","","","Transforms an existing Scenario before instantiating it.","If this modifies scenario_name, then that means prebaked …","","","","","","","","","","","","","","","","","","","","","","","","","","If <code>None</code>, then just cancel the trip.","","","","","","","","","","A Scenario describes all the input to a simulation. …","","","","Lifted from Seattle’s Soundcast model, but seems general …","","","","","","","","","","","","Verify that a person’s trips make sense","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Did a ScenarioModifier affect this?","","None means seed all buses. Otherwise the route name must …","Just used for debugging","","","","","","","","","","","","","","","","There must be continuity between trips: each trip starts …","","","","","","","","","","","","","","","",""],"i":[1,1,2,3,4,4,2,3,5,0,0,0,5,0,0,0,5,5,0,5,0,5,6,5,2,0,0,5,5,5,4,0,3,0,6,0,0,3,5,3,0,3,1,3,1,7,3,1,3,1,3,1,0,7,8,9,3,1,8,7,0,3,1,3,1,0,3,1,3,1,3,1,10,1,10,11,11,11,3,1,9,12,8,7,7,0,1,3,3,12,13,8,7,11,11,11,3,1,12,9,9,10,8,7,0,12,3,1,3,3,1,14,13,3,1,3,1,3,1,3,3,1,10,15,16,17,18,19,19,19,19,20,21,22,0,0,11,10,11,10,11,10,11,10,11,11,10,10,10,11,11,11,11,10,11,10,11,11,11,10,11,10,11,10,11,10,11,10,11,10,10,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,20,21,22,0,0,0,6,6,14,8,6,14,8,6,8,14,8,6,8,14,8,6,14,14,8,6,8,8,8,14,14,8,6,14,8,6,14,8,6,14,8,6,15,16,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,17,18,19,19,19,19,5,5,0,5,5,5,0,5,5,0,5,5,5,0,5,12,12,13,7,5,12,13,7,5,7,13,12,13,7,5,12,13,7,5,12,7,12,13,7,5,7,12,12,13,7,5,5,12,13,7,5,12,13,7,5,12,7,7,7,12,13,7,12,7,12,12,12,12,13,7,5,12,13,7,5,5,13,12,13,7,5,12,13,7,5,12,13,7,5,12,13,7,5],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["vec",3,[["tripmode",4]]]],null,[[]],[[]],[[]],[[]],null,[[],["tripmode",4]],[[],["origpersonid",3]],[[]],[[]],[[["tripmode",4]],["ordering",4]],[[["origpersonid",3]],["ordering",4]],null,null,null,null,[[],["result",4]],[[],["result",4]],null,null,null,[[["tripmode",4]],["bool",15]],[[["origpersonid",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["pathconstraints",4]],["tripmode",4]],[[],["u64",15]],null,[[]],null,null,null,null,[[]],[[]],null,null,null,null,null,null,[[["origpersonid",3]],["bool",15]],[[],["str",15]],[[],["str",15]],null,null,null,null,null,null,null,[[["tripmode",4]],["option",4,[["ordering",4]]]],[[["origpersonid",3]],["option",4,[["ordering",4]]]],null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["pathconstraints",4]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["str",15]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["mapborders",3]],[[],["mapborder",3]],[[]],[[]],[[["tripmode",4]]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[["map",3]],["mapborders",3]],[[["map",3],["intersection",3]]],null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[]],[[]],[[],["trafficcounts",3]],[[]],[[]],null,[[],["result",4]],[[]],[[["map",3],["string",3],["routingparams",3],["pathfindercaching",4],["timer",3]]],[[]],null,null,null,[[["trafficcounts",3]]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,[[]],[[]],[[],["tripendpoint",4]],[[]],[[["tripendpoint",4]],["ordering",4]],[[],["result",4]],[[["intersectionid",3],["map",3]],["option",4,[["position",3]]]],[[["tripendpoint",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["tripendpoint",4]],["bool",15]],[[["tripendpoint",4]],["option",4,[["ordering",4]]]],[[["tripendpoint",4],["tripendpoint",4],["tripmode",4],["map",3]],["option",4,[["pathrequest",3]]]],[[["tripmode",4],["bool",15],["map",3]],["option",4,[["position",3]]]],[[["map",3]],["pt2d",3]],[[],["result",4]],[[["map",3],["bool",15]],["option",4,[["position",3]]]],[[["intersectionid",3],["map",3]],["option",4,[["position",3]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[]],[[]],[[]],[[["map",3],["vec",3,[["externalperson",3]]],["bool",15]],["result",6,[["vec",3,[["personspec",3]]]]]],[[]],[[]],[[]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,[[["map",3],["scenario",3]],["scenario",3]],[[]],[[]],[[],["scenariomodifier",4]],[[]],[[["scenariomodifier",4]],["ordering",4]],[[],["string",3]],[[],["result",4]],[[["scenariomodifier",4]],["bool",15]],[[],["bool",15]],[[]],[[]],[[["scenariomodifier",4]],["bool",15]],[[["scenariomodifier",4]],["option",4,[["ordering",4]]]],[[["scenario",3],["usize",15]],["scenario",3]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",6]],[[],["scenario",3]],[[],["personspec",3]],[[],["individtrip",3]],[[],["trippurpose",4]],[[]],[[]],[[]],[[]],[[["mapname",3]],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["map",3],["str",15]],["scenario",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["time",3],["trippurpose",4],["tripendpoint",4],["tripendpoint",4],["tripmode",4]],["individtrip",3]],null,null,null,null,null,[[["bool",15]],["scenario",3]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]]],"p":[[3,"OrigPersonID"],[4,"ScenarioModifier"],[4,"TripMode"],[4,"TripEndpoint"],[4,"TripPurpose"],[4,"ExternalTripEndpoint"],[3,"IndividTrip"],[3,"ExternalTrip"],[3,"TrafficCounts"],[3,"MapBorder"],[3,"MapBorders"],[3,"Scenario"],[3,"PersonSpec"],[3,"ExternalPerson"],[13,"TripEndpoint"],[13,"Position"],[13,"RepeatDays"],[13,"AddExtraTrips"],[13,"ChangeMode"],[13,"Building"],[13,"Border"],[13,"SuddenlyAppear"]]},\
"tests":{"doc":"Integration tests","t":[5,5,5,5,5,5,5,5,5],"n":["check_proposals","dump_route_goldenfile","dump_turn_goldenfile","import_map","main","smoke_test","test_blockfinding","test_lane_changing","test_map_importer"],"q":["tests","","","","","","","",""],"d":["Verify all edits under version control can be correctly …","Describe all public transit routes and keep under version …","Verify what turns are generated by writing (from lane, to …","Run the contents of a .osm through the full map importer …","","Simulate an hour on every map.","Generate single blocks and merged LTN-style blocks for …","Verify lane-chaging behavior is overall reasonable, by …","Test the map pipeline by importing simple, handcrafted …"],"i":[0,0,0,0,0,0,0,0,0],"f":[[[],["result",6]],[[["map",3]],["result",6]],[[["map",3]],["result",6]],[[["string",3]],["map",3]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["map",3]],["result",6]],[[],["result",6]]],"p":[]},\
"traffic_seitan":{"doc":"This is a tool that runs a simulation, constantly …","t":[3,5,11,11,11,11,11,12,11,11,11,11,11,11,5,5,5,11,11,11,11],"n":["Args","alter_turn_destinations","as_any","as_any_mut","borrow","borrow_mut","clap","flags","from","from_clap","into","into_any","into_any_arc","into_any_rc","main","nuke_random_parking","run","try_from","try_into","type_id","vzip"],"q":["traffic_seitan","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1],"f":[null,[[["sim",3],["map",3],["xorshiftrng",3],["mapedits",3]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["app",3]],null,[[]],[[["argmatches",3]]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[]],[[["map",3],["xorshiftrng",3],["mapedits",3]]],[[["map",3],["sim",3],["xorshiftrng",3],["timer",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"Args"]]},\
"traffic_signal_data":{"doc":"A representation of traffic signal configuration that …","t":[7,3,13,3,3,4,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,12,5,11,11,11,11,11,11,12,12,12,12,11,11,12,12,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["DATA","DirectedRoad","Fixed","Plan","Stage","StageType","TrafficSignal","Turn","Variable","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","intersection_osm_node_id","intersection_osm_node_id","into","into","into","into","into","into","is_crosswalk","is_forwards","load_all_data","ne","ne","ne","ne","ne","ne","offset_seconds","osm_node1","osm_node2","osm_way_id","partial_cmp","partial_cmp","permitted_turns","plans","protected_turns","serialize","serialize","serialize","serialize","serialize","serialize","stage_type","stages","start_time_seconds","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","0","0","1","2"],"q":["traffic_signal_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","traffic_signal_data::StageType","","",""],"d":["","A road segment connecting two intersections, and a …","A fixed number of seconds.","A plan describes how a traffic signal is configured during …","A traffic signal is in one stage at any time. The stage …","How long a stage lasts before moving to the next one.","","A movement through an intersection.","Minimum, Delay, Additional Minimum is the minimum cycle …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The movement begins at the end of this road segment.","The ID of the OSM node representing the intersection with …","The ID of the OSM node representing the intersection. This …","","","","","","","True iff the movement is along a crosswalk. Note that …","The direction along the road segment. See …","Returns all traffic signal data compiled into this build, …","","","","","","","Relative to a central clock, delay the first stage by this …","The ID of the OSM node at the start of this road segment.","The ID of the OSM node at the end of this road segment.","The ID of the OSM way representing the road.","","","During this stage, these turns can be performed after …","The traffic signal uses configuration from one plan at a …","During this stage, these turns can be performed with the …","","","","","","","The stage lasts this long before moving to the next one.","The traffic signal repeatedly cycles through these stages. …","This plan takes effect at this local time, measured in …","The movement ends at the beginning of this road segment.","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,0,0,0,0,0,1,2,3,4,1,5,6,2,3,4,1,5,6,2,3,4,1,5,6,2,3,4,1,5,6,5,6,2,3,4,1,5,6,2,3,4,1,5,6,2,3,4,1,5,6,2,3,4,1,5,6,5,2,5,2,3,4,1,5,6,5,6,0,2,3,4,1,5,6,3,6,6,6,5,6,4,2,4,2,3,4,1,5,6,4,3,3,5,2,3,4,1,5,6,2,3,4,1,5,6,2,3,4,1,5,6,2,3,4,1,5,6,7,8,8,8],"f":[null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["trafficsignal",3]],[[],["plan",3]],[[],["stage",3]],[[],["stagetype",4]],[[],["turn",3]],[[],["directedroad",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["turn",3]],["ordering",4]],[[["directedroad",3]],["ordering",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["trafficsignal",3]],["bool",15]],[[["plan",3]],["bool",15]],[[["stage",3]],["bool",15]],[[["stagetype",4]],["bool",15]],[[["turn",3]],["bool",15]],[[["directedroad",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["result",4,[["btreemap",3,[["i64",15],["trafficsignal",3]]],["error",3]]]],[[["trafficsignal",3]],["bool",15]],[[["plan",3]],["bool",15]],[[["stage",3]],["bool",15]],[[["stagetype",4]],["bool",15]],[[["turn",3]],["bool",15]],[[["directedroad",3]],["bool",15]],null,null,null,null,[[["turn",3]],["option",4,[["ordering",4]]]],[[["directedroad",3]],["option",4,[["ordering",4]]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null],"p":[[4,"StageType"],[3,"TrafficSignal"],[3,"Plan"],[3,"Stage"],[3,"Turn"],[3,"DirectedRoad"],[13,"Fixed"],[13,"Variable"]]},\
"updater":{"doc":"","t":[13,13,13,17,13,4,13,11,11,11,5,5,5,11,11,5,5,11,5,5,5,5,5,11,11,11,5,12,12,12,12,12,12],"n":["Download","DryRun","IncrementalUpload","MD5_BUF_READ_SIZE","OptIntoAll","Task","Upload","borrow","borrow_mut","clap","compress","download_file","download_updates","from","from_clap","generate_manifest","incremental_upload","into","just_compare","main","md5sum","remove_empty_directories","rm","try_from","try_into","type_id","upload","dl_from_local","dont_delete","minimal","single_file","version","version"],"q":["updater","","","","","","","","","","","","","","","","","","","","","","","","","","","updater::Task","","","","",""],"d":["Synchronize the local <code>data</code> directory with the …","Just compare data in the current directory with the …","This uploads to S3 from cloud VMs that import maps. This …","","Print the JSON list of all possible city data packs to …","","Synchronize the source-of-truth in S3 with data in the …","","","","","","","","","","","","","","","","","","","","","Only useful for Dustin. “Download” from my local S3 …","Only update files from the manifest. Leave extra files …","The Github Actions build uses this to include only a few …","Just check if one file has changed.","Upload data to a temporary version managed by the cloud …","Download data tied to a named release. See …"],"i":[1,1,1,0,1,0,1,1,1,1,0,0,0,1,1,0,0,1,0,0,0,0,0,1,1,1,0,2,2,2,3,4,2],"f":[null,null,null,null,null,null,null,[[]],[[]],[[],["app",3]],[[["str",15],["str",15]]],[[["str",15],["str",15],["bool",15]]],[[["string",3],["bool",15],["bool",15],["bool",15]]],[[]],[[["argmatches",3]]],[[["manifest",3]],["manifest",3]],[[["string",3]]],[[]],[[]],[[]],[[["str",15]],["string",3]],[[["str",15]]],[[["str",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["str",15]]],null,null,null,null,null,null],"p":[[4,"Task"],[13,"Download"],[13,"DryRun"],[13,"IncrementalUpload"]]},\
"widgetry":{"doc":"Widgets","t":[12,12,13,13,13,3,13,13,13,13,13,13,13,13,3,3,13,13,3,3,3,13,13,13,13,13,13,13,13,3,13,13,4,13,13,3,13,13,13,3,13,4,4,13,4,13,13,13,17,13,13,13,13,13,3,13,4,3,3,13,3,13,13,13,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,3,4,3,13,4,13,13,13,3,13,3,3,13,13,4,13,13,3,4,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,5,3,3,13,13,13,3,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,6,13,13,13,13,13,13,3,3,13,13,13,3,3,13,3,13,13,13,13,13,4,13,13,13,13,13,13,13,3,13,13,13,13,3,13,3,3,3,13,3,3,8,8,13,13,3,13,3,4,4,3,8,3,13,13,3,3,3,8,3,3,13,3,13,13,13,4,13,13,13,4,3,13,13,4,13,3,3,8,3,13,13,13,13,13,13,12,11,12,12,12,0,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,0,0,0,10,12,12,12,12,12,12,12,12,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,12,12,12,12,11,11,11,11,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,10,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,0,10,10,12,12,0,12,11,12,12,12,12,12,12,11,11,12,12,11,11,11,11,12,0,10,12,12,12,12,12,12,12,12,12,5,12,12,12,12,12,12,12,12,12,14,12,12,0,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,5,12,12,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,12,12,11,12,11,12,12,12,12,12,12,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,0,12,12,0,12,12,12,12,12,10,12,12,12,12,12,12,12,12,12,12,12,11,11,0,12,12,12,0,0,12,12,0,12,12,12,12,12,12,10,11,11,0,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,13,13,13,13,4,13,13,13,13,13,13,13,13,8,8,3,8,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,11,12,11,11,11,11,12,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,12,11,11,11,3,3,3,3,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,11,11,12,3,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,13,13,13,13,13,3,3,13,13,13,17,4,17,13,13,17,17,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,12,12,12,12,18,18,18,18,18,18,18,3,13,13,18,4,18,18,3,13,18,18,18,18,18,18,18,18,18,18,18,18,18,3,13,18,18,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,17,17,3,17,17,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,11,11,11,12,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,17,13,13,4,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,3,13,13,3,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,12,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,13,13,13,3,13,13,4,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,4,4,13,3,13,13,13,13,12,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,3,3,13,13,8,3,3,3,4,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,12,12,11,12,11,11,11,11,11,11,11,0,12,12,0,12,12,12,12,12,12,12,12,12,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,13,3,13,13,3,3,8,3,4,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,11,11,11,12,12,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,12,12,12,17,3,3,17,12,11,11,11,11,11,12,11,12,11,11,11,11,12,11,12,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,12,5,11,12,12,11,11,11,11,11,11,11,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,17,7,6,3,11,11,11,11,11,11,11,12,11,12,12,12,12,11,11,12,12,12,12,0,11,11,11,12,12,11,5,12,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,3,11,11,11,12,12,12,11,11,11,11,11,11,12,12,11,11,5,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,3,5,11,11,11,11,5,5,5,12,12,11,11,11,11,11,11,12,5,5,5,12,11,5,12,11,11,11,4,3,13,13,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,12,13,13,17,17,4,5,13,13,13,13,17,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,5,11,11,12,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,3,11,11,11,11,11,12,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,0,5,3,11,11,11,11,12,11,11,11,11,11,11,12,11,12,11,11,11,13,13,4,13,13,4,13,17,13,3,13,13,13,3,13,4,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,0,11,11,0,11,12,11,11,11,11,11,11,11,11,11,0,10,11,0,11,11,11,11,11,10,0,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,0,11,11,11,11,11,11,11,0,11,11,11,11,11,12,11,12,11,11,11,11,11,0,0,0,12,12,11,11,11,12,11,0,11,10,0,0,0,12,11,0,0,11,11,0,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,11,12,11,11,11,12,11,11,11,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,11,11,12,12,12,11,11,12,12,11,12,12,12,11,11,11,11,11,12,11,12,11,11,11,11,11,12,11,11,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,12,11,12,11,11,12,12,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,11,11,12,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,3,3,13,13,13,17,4,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,12,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,12,12,5,12,11,11,11,11,11,11,11,3,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,5,12,11,11,11,3,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,13,13,3,4,13,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,12,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,12,3,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,4,13,13,13,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,3,11,11,11,11,12,5,11,12,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,8,3,3,11,11,11,11,11,11,11,11,12,11,12,12,11,12,11,11,11,10,10,11,11,11,11,11,11,11,11,12,5,12,12,10,12,5,10,10,11,11,11,11,11,11,10,3,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,17,13,13,17,3,4,13,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,12,12,12,3,3,8,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,11,12,11,12,11,11,12,11,11,11,11,12,11,11,11,11,11,11,12,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,4,3,3,17,13,13,3,12,11,11,11,11,12,12,12,12,12,11,12,12,11,11,11,12,5,5,12,12,12,12,12,12,11,11,11,12,3,3,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,3,11,11,12,11,11,11,12,11,12,11,11,11,11,11,12,12,11,11,11,11,12,12,11,12,11,12,11,11,11,11,3,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11],"n":["0","0","A","Above","Any","Autocomplete","B","Backspace","Below","Bottom","BottomAboveOSD","BottomInset","BungeeInlineRegular","BungeeRegular","ButtonBuilder","ButtonStyle","Bytes","C","Cached","Canvas","CanvasSettings","Center","Center","Center","Centered","Change","ChangeAll","ChangeAlpha","Changed","Choice","Clear","ClickCustom","ClickOutcome","Clicked","Colon","Color","Color","ColoredTexture","Comma","CompareTimes","ConsumeState","ContentMode","ControlState","CornerRadii","CornerRounding","Custom","Custom","D","DEFAULT_CORNER_RADIUS","Default","DefaultDraw","Disabled","Dot","DownArrow","DragDrop","DragDropReleased","DrawBaselayer","DrawWithTooltips","Drawable","E","EdgeInsets","Enter","Equals","Escape","Event","EventCtx","F","F1","F10","F11","F12","F2","F3","F4","F5","F6","F7","F8","F9","FanChart","Fill","Filler","Focused","Font","FullyRounded","G","Game","GeomBatch","GeomBatch","GeomBatchStack","GfxCtx","H","Horizontal","HorizontalAlignment","Hovered","I","Image","ImageSource","InputOnly","J","K","Keep","KeepWithMouseover","Key","KeyPress","KeyRelease","L","LCtrl","Label","Left","Left","LeftAlt","LeftArrow","LeftBracket","LeftControl","LeftInset","LeftMouseButtonDown","LeftMouseButtonUp","LeftShift","Line","LinePlot","LinearGradient","LinearGradient","M","MakeGrayscale","Menu","ModifyState","MouseMovedTo","MouseWheelScroll","Multi","MultiKey","N","NoOp","NoOp","Normal","Nothing","Num0","Num1","Num2","Num3","Num4","Num5","Num6","Num7","Num8","Num9","O","Outcome","OutlineStyle","OverpassBold","OverpassMonoBold","OverpassRegular","OverpassSemiBold","P","Pan","Panel","PanelBuilder","Path","Percent","Percent","PersistentSplit","PlotOptions","Pop","Prerender","PreviousState","Push","Q","R","Replace","RewriteColor","Right","RightAlt","RightArrow","RightBracket","RightInset","RightMouseButtonDown","RightMouseButtonUp","RoundedF64","S","ScaleAspectFill","ScaleAspectFit","ScaleToFill","ScatterPlot","ScreenCaptureEverything","ScreenDims","ScreenPt","ScreenRectangle","Semicolon","Series","Settings","SharedAppState","SimpleState","SingleQuote","Slash","Slider","Space","Spinner","StackAlignment","StackAxis","Stash","State","Style","T","Tab","TabController","Text","TextBox","TextExt","TextSpan","Texture","Texture","Toggle","Top","Top","TopInset","Transition","U","UpArrow","Update","UpdateType","UserInput","V","Vertical","VerticalAlignment","W","Warper","Widget","WidgetImpl","WidgetOutput","WindowGainedCursor","WindowLostCursor","WindowResized","X","Y","Z","a","active","active","active_tab_idx","alignment","app_state","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","assets","assets","assets_are_gzipped","assets_base_url","autocrop_dims","autofocus","axis","axis","b","backend","backend_glow","backend_glow_native","batch_text","batches","bg","bg","bg_batch","bg_color","bg_color","bg_disabled","bg_hover","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bottom","btn","btn","btn_floating","btn_outline","btn_plain","btn_plain_destructive","btn_plain_primary","btn_solid","btn_solid_destructive","btn_solid_primary","btn_tab","cached_flexbox","cam_x","cam_y","cam_zoom","cam_zoom","canvas","canvas","canvas","canvas_movement_called","canvas_scroll_speed","canvas_settings","cards","choices","choices","chosen_values","clip_rect","clone","clone","clone_into","clone_into","closest","color","color","color","container_dims","content_mode","contents","contents_dims","corner_rounding","corner_rounding","covered_areas","current","current_idx","current_line","current_percent","current_value","cursor","cursor_x","data","default","default_style","dims","dims","dims","dims","dims","dims","dims","dims","dims","dims","dims","dims","dims","dims","disable_style","disabled","disabled_tooltip","down","drag_canvas_from","drag_just_ended","dragging","draw","draw","draw","draw","draw","draw","draw","draw","draw","drawable","drawing","dropdown","dropdown_border","dump_raw_events","edge_auto_panning","elem_buffer","enabled","event","event","event","event","event_consumed","event_ctx","fake_mouseover","fg","fg","fg","fg_color","fg_disabled","field_bg","filterable","fmt","fmt","focus_owned_by","font","from","from","from","from","g","geom","get_dims","gl","gui_scroll_speed","has_focus","height","high","horiz","horiz","hotkey","hotkey","hotkeys","hover","hover_style","hovering","hovering","hovering_on_idx","icon_fg","id","id","ignore_initial_events","include_labeled_bytes","inner","inner","input","input","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","invert_scroll","is_disabled","is_label_before_image","key","keys_held","keys_to_pan","label","label","label","label","label","label","layout","lctrl","lctrl_held","left","line","line","line","lines","list","loading_tips","loading_tips","low","map_dims","mapspace","max","max_x","max_x","max_y","max_y","menu","min_zoom_for_detail","mouse_on_slider","multikey","naming_hint","new","next_focus_owned_by","num_draw_calls","num_forks","num_indices","num_search_results","num_uploads","on_click","other_btn","outcome","outline","outline","outline_color","padding","padding","padding","panel_bg","prerender","prerender","primary_fg","pts","r","read_svg","rect","redo_layout","render_value","require_minimum_width","resize","right","run","runner","scale_factor","scale_factor","screen_geom","screencap_mode","scrollable_x","scrollable_y","section_bg","section_outline","set_pos","settings","size","source","spacer","spacing","stack_axis","stack_spacing","started","state","step_size","stops","string","strings","style","style","style","style","svg","table","tabs","tb","text","text","text_destructive_color","text_hotkey_color","text_primary_color","text_secondary_color","text_tooltip_color","text_widget","to_owned","to_owned","tools","tooltip","tooltip","tooltip","tooltip","tooltips","top","top_left","top_left","top_left","top_left","top_left","top_left","top_left","top_left","top_left","top_left","top_level","top_level","touchpad_to_move","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","underlined","uniforms","unit_fmt","up","updates_requested","value","vert","vert","vert_array","vert_buffer","widget","widgets","width","window_has_cursor","window_height","window_icon","window_title","window_width","with_value","x","x1","x2","y","y1","y2","0","0","0","0","0","0","0","0","0","1","is_double_click","0","0","0","0","1","0","0","0","0","1","bytes","cache_key","0","0","0","0","0","0","0","0","1","2","0","0","0","1","0","0","0","0","0","0","dims","dir","zoom","0","0","0","App","Clear","ConsumeState","Custom","DefaultDraw","DrawBaselayer","Keep","KeepWithMouseover","ModifyState","Multi","Pop","PreviousState","Push","Replace","SharedAppState","SimpleState","SimpleStateWrapper","State","Transition","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","before_event","before_event","before_quit","before_quit","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","downcast","downcast_mut","downcast_rc","downcast_ref","draw","draw","draw","draw","draw","draw_baselayer","draw_baselayer","draw_baselayer","draw_baselayer","draw_baselayer","draw_default","draw_default","dump_before_abort","dump_before_abort","event","event","event","execute_transition","free_memory","free_memory","from","from","from","from","inner","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","new_state","on_click","on_click_custom","on_click_custom","on_destroy","on_destroy","on_mouseover","on_mouseover","other_event","other_event","panel","panel_changed","panel_changed","shared_app_state","states","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","0","0","0","0","0","Assets","are_gzipped","are_gzipped","as_any","as_any_mut","as_ref","base_url","base_url","borrow","borrow_mut","cache_svg","cache_text","clear_text_cache","default_line_height","extra_fonts","font_to_id","from","get_cached_svg","get_cached_text","into","into_any","into_any_rc","is_font_loaded","line_height","line_height_cache","load_font","new","read_svg","style","svg_cache","text_cache","text_opts","try_from","try_into","type_id","Buffer","Drawable","GfxCtxInnards","PrerenderInnards","SpriteTexture","VertexArray","WindowAdapter","actually_upload","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_program","clear","compile_shader","current_clip","destroy","destroy","disable_clipping","draw_finished","draw_new_frame","drop","drop","drop","elem_buffer","empty","enable_clipping","from","from","from","from","from","from","gl","gl","gl","id","id","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","monitor_scale_factor","new","new","new","new","new","num_indices","program","redraw","request_redraw","restore_clip","screencap","set_cursor_icon","set_cursor_visible","set_window_icon","sprite_count","sprite_height","sprite_width","take_clip","texture_bytes","total_bytes_uploaded","transform_location","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upload_gl2","upload_webgl1","use_program_for_renderonly","vert_array","vert_buffer","was_destroyed","was_destroyed","window","window_adapter","window_location","window_resized","window_size","0","WindowAdapter","as_any","as_any_mut","borrow","borrow_mut","draw_finished","from","into","into_any","into_any_rc","setup","try_from","try_into","type_id","window","window_resized","Above","Below","Bottom","BottomAboveOSD","BottomInset","Canvas","CanvasSettings","Center","Center","Centered","DRAG_THRESHOLD","HorizontalAlignment","INSET","Left","LeftInset","PANNING_THRESHOLD","PAN_SPEED","Percent","Percent","Right","RightInset","Top","TopInset","VerticalAlignment","align_window","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cam_x","cam_y","cam_zoom","canvas_scroll_speed","center_on_map_pt","center_to_map_pt","center_to_screen_pt","center_zoom","clone","clone","clone","clone_into","clone_into","clone_into","covered_areas","cursor","deserialize","drag_canvas_from","drag_just_ended","edge_auto_panning","eq","eq","fmt","fmt","from","from","from","from","get_cursor","get_cursor_in_map_space","get_cursor_in_screen_space","get_inner_bounds","get_map_bounds","get_screen_bounds","get_window_dims","gui_scroll_speed","handle_event","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","invert_scroll","is_dragging","is_max_zoom","is_min_zoom","is_unzoomed","is_zoomed","keys_held","keys_to_pan","map_dims","map_to_screen","mark_covered_area","max_zoom","min_zoom","min_zoom_for_detail","ne","ne","new","new","screen_to_map","serialize","settings","start_drawing","to_owned","to_owned","to_owned","touchpad_to_move","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","window_has_cursor","window_height","window_width","zoom","0","0","0","0","0","0","BLACK","BLUE","CACTUS","CLEAR","CONCRETE","CROSS_HATCH","CYAN","Color","Color","ColoredTexture","DIRT","Fill","GRASS","GREEN","LinearGradient","LinearGradient","NOOP","ORANGE","PINE_TREE","PINK","PURPLE","RED","RUNNING_WATER","SAND","SHRUB","SNOW","SNOW_PERSON","STILL_WATER","TREE","Texture","Texture","WHITE","YELLOW","a","alpha","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_hex","b","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deserialize","dull","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","g","grey","hex","interp","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","lerp","lerp","line","multiply_alpha","ne","ne","ne","ne","new_fill","r","rgb","rgb_f","rgba","rgba_f","serialize","shade","shader_style","stops","tint","to_owned","to_owned","to_owned","to_owned","to_pct","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","0","0","0","1","GfxCtx","MAPSPACE_Z","MENU_Z","Prerender","SCREENSPACE_Z","TOOLTIP_Z","Uniforms","actually_upload","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_ref","as_ref","as_ref","as_ref","assets","assets_are_gzipped","assets_base_url","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","canvas","clear","default_line_height","disable_clipping","draw_mouse_tooltip","draw_polygon","enable_clipping","fmt","fork","fork_screenspace","from","from","from","get_cursor_in_map_space","get_num_uploads","get_scale_factor","get_screen_bounds","get_total_bytes_uploaded","inner","inner","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_key_down","is_screencap","naming_hint","new","new","num_draw_calls","num_forks","num_uploads","prerender","redraw","redraw_at","request_redraw","scale_factor","screen_to_map","screencap_mode","set_screencap_naming_hint","style","style","transform","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unfork","uniforms","upload","upload","upload_temporary","window","window_resized","window_size","A","Any","B","Backspace","C","Colon","Comma","D","Dot","DownArrow","E","Enter","Equals","Escape","Event","F","F1","F10","F11","F12","F2","F3","F4","F5","F6","F7","F8","F9","G","H","I","J","K","Key","KeyPress","KeyRelease","L","LCtrl","LeftAlt","LeftArrow","LeftBracket","LeftControl","LeftMouseButtonDown","LeftMouseButtonUp","LeftShift","M","MAX_DOUBLE_CLICK_DURATION","MouseMovedTo","MouseWheelScroll","MultiKey","N","NUM_KEYS","NoOp","Normal","Num0","Num1","Num2","Num3","Num4","Num5","Num6","Num7","Num8","Num9","O","P","Q","R","RightAlt","RightArrow","RightBracket","RightMouseButtonDown","RightMouseButtonUp","S","Semicolon","SingleQuote","Slash","Space","T","Tab","U","UpArrow","Update","V","W","WindowGainedCursor","WindowLostCursor","WindowResized","X","Y","Z","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","describe","describe","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from_winit_event","from_winit_key","get_hash","get_hash","hash","hash","hotkeys","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","lctrl","ne","ne","partial_cmp","partial_cmp","to_char","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","txt","type_id","type_id","type_id","0","0","0","0","0","0","1","is_double_click","0","0","0","EventCtx","Game","InputOnly","LoadingScreen","Pan","ScreenCaptureEverything","UpdateType","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_ref","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","canvas","canvas","canvas_movement","canvas_movement_called","clone","clone_into","cursor_clickable","cursor_grabbable","cursor_grabbing","default_line_height","eq","fake_mouseover","fmt","focus_owned_by","from","from","from","hide_cursor","input","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_font_loaded","is_key_down","last_drawn","lines","load_font","loading_screen","make_loading_screen","max_capacity","ne","new","next_focus_owned_by","no_op_event","normal_left_click","prerender","prerender","println","redo_mouseover","redraw","reprintln","request_update","set_style","show_cursor","style","style","style","title","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","updates_requested","upload","dims","dir","zoom","Change","ChangeAll","ChangeAlpha","GeomBatch","MakeGrayscale","NoOp","RewriteColor","append","apply","as_any","as_any","as_any_mut","as_any_mut","autocrop","autocrop_dims","batch","borrow","borrow","borrow_mut","borrow_mut","centered_on","clone","clone","clone_into","clone_into","color","consume","default","deserialize","draw","eq","extend","fmt","fmt","from","from","from","from","geom_batch_stack","get_bounds","get_dims","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_geojson","into_widget","is_empty","list","load_svg","load_svg_bytes","load_svg_bytes_uncached","ne","new","push","push_with_z","rotate","rotate_around_batch_center","scale","scale_xy","serialize","set_z_offset","shift","to_owned","to_owned","translate","try_from","try_from","try_into","try_into","type_id","type_id","unioned_polygon","unshift","upload","0","0","0","1","Alignment","Axis","Center","GeomBatchStack","Horizontal","Left","Top","Vertical","alignment","append","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","axis","batch","batches","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","eq","eq","fmt","fmt","fmt","from","from","from","from_axis","get","get_mut","horizontal","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","push","set_alignment","set_axis","set_spacing","spacing","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vertical","UserInput","any_pressed","as_any","as_any_mut","borrow","borrow_mut","consume_event","event","event_consumed","from","get_mouse_scroll","get_moved_mouse","has_been_consumed","into","into_any","into_any_arc","into_any_rc","is_window_resized","key_released","lctrl_held","left_mouse_button_pressed","left_mouse_button_released","left_mouse_double_clicked","new","nonblocking_is_update_event","pressed","try_from","try_into","type_id","unconsume_event","use_update_event","window_lost_cursor","0","ClickedFreeSpace","ClickedObject","Dragging","DrawUnzoomedShapes","DummyID","Keypress","Nothing","ObjectID","ToggleZoomed","ToggleZoomedBuilder","World","WorldOutcome","always_draw_unzoomed","always_draw_unzoomed","append","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","build","builder","circles","clone","clone_into","color","dragging_from","draw","draw_differently_zoomed","draw_master_batches","empty","from","from","from","hovering","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","lines","new","objects","per_zoom","push","quadtree","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unzoomed","unzoomed","unzoomed","world","zoomed","zoomed","0","0","0","1","cursor","dx","dy","obj","DrawUnzoomedShapes","DrawUnzoomedShapesBuilder","UnzoomedCircle","UnzoomedLine","add_circle","add_line","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","center","circles","circles","color","color","discretize_zoom","draw","empty","from","from","from","from","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","lines","lines","per_zoom","polyline","radius","render_circles","render_lines","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","width","0","ClickedFreeSpace","ClickedObject","Dragging","DummyID","Keypress","Nothing","Object","ObjectBuilder","ObjectID","World","WorldOutcome","_id","add","add_unnamed","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded","build","calculate_hover","clickable","clickable","clickable","clone","clone","clone_into","clone_into","delete","delete_before_replacement","draggable","draggable","draggable","dragging_from","draw","draw","draw_color","draw_hover","draw_hover","draw_hover_rewrite","draw_hovered","draw_master_batch","draw_master_batches","draw_normal","draw_normal","drawn_in_master_batch","eq","event","fmt","from","from","from","from","from","get_hash","get_hovering","hash","hitbox","hitbox","hitbox","hotkey","hover_alpha","hover_outline","hovering","id","initialize_hover","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","invisibly_hoverable","keybindings","keybindings","map_id","maybe_map_id","ne","objects","override_tooltip","quadtree","quadtree_id","rebuilt_during_drag","to_owned","to_owned","tooltip","tooltip","tooltip","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unbounded","world","zorder","zorder","zorder","0","0","0","1","cursor","dx","dy","obj","DEBUG_PERFORMANCE","Settings","State","UPDATE_FREQUENCY","app","as_any","as_any","as_any_mut","as_any_mut","assets_are_gzipped","assets_are_gzipped","assets_base_url","assets_base_url","borrow","borrow","borrow_mut","borrow_mut","canvas","canvas_settings","canvas_settings","draw","dump_raw_events","dump_raw_events","event","focus_owned_by","free_memory","from","from","into","into","into_any","into_any","into_any_rc","into_any_rc","loading_tips","loading_tips","new","read_svg","read_svg","require_minimum_width","require_minimum_width","run","scale_factor","scale_factor","style","try_from","try_from","try_into","try_into","type_id","type_id","window_icon","window_icon","window_title","ScreenDims","ScreenPt","ScreenRectangle","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","center","clone","clone","clone","clone_into","clone_into","clone_into","contains","deserialize","dims","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","height","height","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","ne","ne","new","new","pad","percent_to_pt","placeholder","pt_to_percent","serialize","square","to_owned","to_owned","to_owned","to_polygon","to_pt","top_left","top_left_for_corner","translated","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","width","width","x","x1","x2","y","y1","y2","zero","zero","AB_ORANGE_1","DEFAULT_OUTLINE_THICKNESS","OutlineStyle","Style","as_any","as_any_mut","borrow","borrow_mut","btn_back","btn_close","btn_close_widget","btn_floating","btn_next","btn_outline","btn_plain","btn_plain_destructive","btn_plain_primary","btn_popup_icon_text","btn_prev","btn_solid","btn_solid_destructive","btn_solid_primary","btn_tab","button_style","clone","clone_into","dark_bg","dropdown_border","field_bg","from","hex","icon_fg","into","into_any","into_any_arc","into_any_rc","light_bg","loading_tips","panel_bg","primary_fg","section_bg","section_outline","text_destructive_color","text_hotkey_color","text_primary_color","text_secondary_color","text_tooltip_color","to_owned","try_from","try_into","type_id","ButtonStyle","apply","as_any","as_any_mut","bg","bg_disabled","bg_hover","borrow","borrow_mut","btn","clone","clone_into","dropdown","fg","fg_disabled","from","icon","icon_button","icon_bytes","icon_text","into","into_any","into_any_arc","into_any_rc","outline","outline_dark_fg","outline_light_fg","plain_dark_fg","plain_destructive","plain_light_fg","plain_primary","popup","solid_dark_fg","solid_destructive","solid_light_fg","solid_primary","text","to_owned","try_from","try_into","type_id","HIGH_QUALITY","LOW_QUALITY","PathConvIter","add_svg_inner","as_any","as_any_mut","borrow","borrow_mut","convert_color","convert_path","convert_stroke","deferred","first","from","into","into_any","into_any_arc","into_any_rc","into_iter","iter","load_svg","load_svg_bytes","load_svg_from_bytes_uncached","needs_end","next","point","prev","try_from","try_into","type_id","Col","Filter","Sortable","Static","Table","apply","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clicked","column","columns","data","descending","empty","filter","from","from","from","from_controls","get_filtered_data","id","into","into","into","into_any","into_any","into_any","into_any_rc","into_any_rc","into_any_rc","label_per_row","new","panel_changed","render","replace_render","skip","sort_by","state","static_col","to_controls","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","BungeeInlineRegular","BungeeRegular","DEFAULT_FONT","DEFAULT_FONT_SIZE","Font","Line","OverpassBold","OverpassMonoBold","OverpassRegular","OverpassSemiBold","SCALE_LINE_HEIGHT","Text","TextExt","TextSpan","add_appended","add_line","append","append_all","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","batch","batch","batch_text","bg","bg_color","big_heading_plain","big_heading_styled","big_monospaced","body","bold_body","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","change_fg","clone","clone","clone","clone_into","clone_into","clone_into","default_fg","dims","display_title","eq","extend","family","fg","fg_color","fg_color_for_style","fmt","fmt","fmt","font","font","from","from","from","from","from","from","from_all","from_multiline","get_hash","hash","hash_key","highlight_last_line","inner_render","inner_wrap_to_pct","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_widget","into_widget","is_empty","lines","maybe_fg","new","outline_color","outlined","remove_colors_from_last_line","render","render_autocropped","render_curvey","render_line","secondary","size","size","small","small_heading","small_monospaced","text","text_widget","to_owned","to_owned","to_owned","tooltip","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","underlined","underlined","wrap_to_pct","Cached","as_any","as_any_mut","borrow","borrow_mut","clear","contents","default","from","into","into_any","into_any_arc","into_any_rc","key","new","screenshot","set","take","try_from","try_into","type_id","update","value","value_mut","warper","screenshot_everything","Warper","as_any","as_any_mut","borrow","borrow_mut","cam_zoom","event","from","into","into_any","into_any_arc","into_any_rc","line","new","started","try_from","try_into","type_id","Changed","ClickCustom","ClickOutcome","Clicked","CornerRadii","CornerRounding","Custom","DEFAULT_CORNER_RADIUS","DragDropReleased","EdgeInsets","Focused","FullyRounded","Label","LayoutStyle","Nothing","Outcome","Widget","WidgetImpl","WidgetOutput","abs","align_bottom","align_left","align_right","align_vert_center","apply_flexbox","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","autocomplete","bg","bg","bg_batch","bg_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","button","can_restore","can_restore","centered","centered_cross","centered_horiz","centered_vert","clone","clone","clone_into","clone_into","col","compare_times","consume_geometry","container","containers","corner_rounding","corner_rounding","currently_hovering","custom_col","custom_row","default","default","downcast","downcast_mut","downcast_rc","downcast_ref","drag_drop","draw","draw","dropdown","dropdown","eq","evenly_spaced","evenly_spaced_col","evenly_spaced_row","event","fan_chart","fill_height","fill_width","filler","find","find_mut","flex_wrap","flex_wrap_no_inner_spacing","fmt","fmt","force_width","force_width_parent_pct","force_width_window_pct","from","from","from","from","from","from","from","from","from","from","from","get_all_click_actions","get_dims","get_flexbox","get_width_for_forcing","horiz_separator","id","image","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_geom","is","is_btn","is_default","just_draw","layout","left","line_plot","margin","margin_above","margin_below","margin_horiz","margin_left","margin_right","margin_vert","menu","named","ne","new","new","nothing","outcome","outline","outline","padding","padding_bottom","padding_left","padding_right","padding_top","panel","persistent_split","plots","rect","redo_layout","restore","restore","restore","right","row","scatter_plot","section","set_pos","slider","spinner","stash","style","tab_body","table","tabs","take","take_just_draw","text_box","to_owned","to_owned","toggle","top","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniform","vert_separator","widget","zero","0","0","0","0","0","0","0","0","1","2","Autocomplete","as_any","as_any_mut","borrow","borrow_mut","choices","chosen_values","current_line","draw","event","from","get_dims","into","into_any","into_any_arc","into_any_rc","menu","new_widget","num_search_results","recalc_menu","set_pos","take_final_value","tb","try_from","try_into","type_id","Button","ButtonBuilder","ButtonStateStyle","Label","action","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","batch","bg_color","bg_color","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_def","build_widget","clone","clone","clone","clone_into","clone_into","clone_into","color","corner_rounding","corner_rounding","custom_batch","custom_batch","default","default","default","default_style","dims","disable_style","disabled","disabled_tooltip","disabled_tooltip","disabled_tooltip","draw","draw_disabled","draw_hovered","draw_normal","event","fmt","fmt","fmt","font","font","font_size","font_size","from","from","from","from","get_dims","hitbox","horizontal","hotkey","hotkey","hotkey","hover_style","hovering","image","image","image_batch","image_bg_color","image_bytes","image_color","image_content_mode","image_corner_rounding","image_dims","image_first","image_padding","image_path","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_disabled","is_disabled","is_enabled","is_label_before_image","label","label_color","label_first","label_styled_text","label_text","label_underlined_text","new","new","no_tooltip","outline","outline","outline_color","override_style","padding","padding","padding_bottom","padding_left","padding_right","padding_top","set_pos","stack_axis","stack_spacing","stack_spacing","style","style_mut","styled_text","text","to_owned","to_owned","to_owned","tooltip","tooltip","tooltip","top_left","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vertical","CompareTimes","as_any","as_any_mut","borrow","borrow_mut","dims","draw","draw","event","from","get_dims","into","into_any","into_any_arc","into_any_rc","max","new_widget","set_pos","top_left","try_from","try_into","type_id","Container","Nothing","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","draw","draw","event","event","from","from","get_dims","get_dims","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","is_row","members","new","set_pos","set_pos","try_from","try_from","try_into","try_into","type_id","type_id","Card","DragDrop","Dragging","Idle","Initial","SPACE_BETWEEN_CARDS","State","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","axis","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cards","default_batch","dims","dims","draw","draw","eq","event","from","from","from","get_dims","get_dragging_state","hovering_batch","hovering_value","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_widget","label","mouseover_card","ne","new","push_card","recalc_draw","selected_batch","selected_value","set_initial_state","set_pos","state","top_left","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value","cursor_at","drag_from","hovering","hovering","new_idx","orig_idx","selected","selected","Dropdown","as_any","as_any_mut","borrow","borrow_mut","btn","can_restore","choices","current_idx","current_value","current_value_label","draw","event","from","get_dims","into","into_any","into_any_rc","is_persisten_split","label","make_btn","menu","new","open_menu","restore","set_pos","try_from","try_into","type_id","FanChart","as_any","as_any_mut","borrow","borrow_mut","dims","draw","draw","event","from","get_dims","into","into_any","into_any_arc","into_any_rc","new_widget","set_pos","slidey_window","top_left","try_from","try_into","type_id","Filler","FixedSize","RatioWidthSquare","ResizeRule","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","dims","draw","event","fixed_dims","from","from","get_dims","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","resize","set_pos","square_width","try_from","try_from","try_into","try_into","type_id","type_id","0","0","1","Bytes","GeomBatch","Image","ImageSource","Path","as_any","as_any","as_any_mut","as_any_mut","bg_color","bg_color","borrow","borrow","borrow_mut","borrow_mut","build_batch","clone","clone","clone_into","clone_into","color","color","content_mode","content_mode","corner_rounding","corner_rounding","default","dims","dims","empty","fmt","fmt","from","from","from_batch","from_bytes","from_path","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_widget","load","merged_image_style","padding","padding","padding_bottom","padding_left","padding_right","padding_top","source","source","source_batch","source_bytes","source_path","to_owned","to_owned","tooltip","tooltip","try_from","try_from","try_into","try_into","type_id","type_id","untinted","0","0","1","bytes","cache_key","DeferDraw","DrawWithTooltips","JustDraw","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","batch","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","dims","dims","dims","draw","draw","draw","draw","draw","event","event","event","from","from","from","get_dims","get_dims","get_dims","hover","hovering_on_idx","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new_widget","new_widget","set_pos","set_pos","set_pos","tooltips","top_left","top_left","top_left","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wrap","Hovering","LinePlot","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","closest","dims","draw","draw","draw_cursor","event","from","from","get_dims","get_hovering","hits","hovering","into","into","into_any","into_any","into_any_rc","into_any_rc","max_x","max_y","new_widget","set_hovering","set_pos","tooltip","top_left","try_from","try_from","try_into","try_into","type_id","type_id","unit_fmt","Menu","as_any","as_any_mut","borrow","borrow_mut","calculate_txt","choices","current_idx","dims","draw","event","from","get_dims","into","into_any","into_any_arc","into_any_rc","new","set_current","set_pos","take_current_choice","top_left","try_from","try_into","type_id","widget","Dims","ExactHeight","ExactPercent","ExactSize","MaxPercent","Panel","PanelBuilder","align","aligned","aligned_pair","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","autocomplete_done","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build_custom","cached_flexbox","center_of","center_of_panel","clicked_outside","clip_rect","clone_stashed","compute_flexbox","container_dims","contents_dims","currently_hovering","dims","dims","draw","dropdown_value","empty","event","exact_height","exact_size","exact_size_percent","find","find_mut","from","from","from","get_all_click_actions","has_widget","horiz","horiz","ignore_initial_events","ignore_initial_events","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_any_rc","invalidate_flexbox","is_button_enabled","is_checked","max_size","maybe_dropdown_value","maybe_find","maybe_find_widget","maybe_is_checked","modify_spinner","new_builder","panel_dims","persistent_split_value","recompute_layout","recompute_layout_if_needed","recompute_scrollbar_layout","rect_of","replace","restore","restore_scroll","scroll_offset","scroll_to_member","scrollable_x","scrollable_y","set_checked","set_scroll_offset","slider","slider_mut","spinner","stash","swap_inner_content","take","take_menu_choice","text_box","top_level","top_level","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_container_dims_for_canvas_dims","update_scroll_sliders","vert","vert","0","0","0","0","1","1","PersistentSplit","as_any","as_any_mut","borrow","borrow_mut","btn","button_builder","current_value","current_value","draw","dropdown","event","from","get_dims","into","into_any","into_any_rc","new","set_pos","spacer","try_from","try_into","type_id","widget","Axis","PlotOptions","Series","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","color","default","dims","disabled","filterable","filterable","fixed","from","from","from_f64","from_percent","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","label","make_legend","max_x","max_y","prettyprint","pts","thick_lineseries","to_f64","to_percent","try_from","try_from","try_into","try_into","type_id","type_id","zero","ScatterPlot","as_any","as_any_mut","borrow","borrow_mut","dims","draw","draw","event","from","get_dims","into","into_any","into_any_arc","into_any_rc","new_widget","set_pos","top_left","try_from","try_into","type_id","AREA_SLIDER_BG_WIDTH","Area","Horizontal","SCROLLBAR_BG_WIDTH","Slider","Style","Vertical","area","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","button_geom","current_percent","dims","dragging","draw","draw","event","from","from","get_dims","get_percent","get_value","horizontal_scrollbar","inner_dims","inner_event","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","label","mouse_on_slider","new_widget","padding","pt_to_percent","recalc","set_percent","set_pos","style","top_left","try_from","try_from","try_into","try_into","type_id","type_id","vertical_scrollbar","dragger_len","dragger_len","main_bg_len","main_bg_len","width","0","RoundedF64","Spinner","SpinnerValue","TEXT_WIDTH","add","add_assign","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","can_restore","clamp","clone","clone_into","current","dims","down","draw","drawable","drawable","eq","event","f64_widget","fmt","from","from","get_dims","high","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","label","low","modify","ne","new","outline","partial_cmp","render_value","restore","set_pos","step_size","sub","sub_assign","to_owned","to_string","top_left","try_from","try_from","try_into","try_into","type_id","type_id","up","widget","widget_with_custom_rendering","Stash","as_any","as_any_mut","borrow","borrow_mut","draw","event","from","get_dims","get_value","into","into_any","into_any_rc","new_widget","set_pos","try_from","try_into","type_id","value","Col","Column","Filter","ROWS","Sortable","Static","Table","apply","as_any","as_any_mut","borrow","borrow_mut","col","columns","data","descending","filter","from","from_controls","id","into","into_any","into_any_rc","label_per_row","make_pagination","make_table","name","render","skip","sort_by","state","to_controls","try_from","try_into","type_id","0","Tab","TabController","activate_tab","active_content_id","active_tab_idx","active_tab_idx","as_any","as_any","as_any_mut","as_any_mut","bar_item","bar_items_id","borrow","borrow","borrow_mut","borrow_mut","build_bar_item_widget","build_bar_items","build_widget","content","from","from","handle_action","id","into","into","into_any","into_any","into_any_rc","into_any_rc","new","new","pop_active_content","push_tab","tab_id","tab_id","tabs","try_from","try_from","try_into","try_into","type_id","type_id","TextBox","as_any","as_any_mut","autofocus","borrow","borrow_mut","calculate_text","cursor_x","default_widget","dims","draw","event","from","get_dims","get_line","has_focus","hovering","into","into_any","into_any_arc","into_any_rc","label","line","new","padding","set_pos","top_left","try_from","try_into","type_id","widget","Toggle","as_any","as_any_mut","borrow","borrow_mut","btn","checkbox","choice","colored_checkbox","custom_checkbox","draw","enabled","event","from","get_dims","into","into_any","into_any_arc","into_any_rc","new_widget","other_btn","set_pos","switch","try_from","try_into","type_id"],"q":["widgetrywidgetry::ClickOutcome","","widgetry::CornerRounding","widgetry::Event","","","","","","","","widgetry::Fill","","","","","widgetry::HorizontalAlignment","","widgetry::ImageSource","","","","","widgetry::MultiKey","","","widgetry::Outcome","","","","","","","widgetry::RewriteColor","","","","widgetry::Transition","","","","","","widgetry::UpdateType","","","widgetry::VerticalAlignment","","","widgetry::app_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::app_state::Transition","","","","","","widgetry::assets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::backend_glow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::backend_glow_native","","","","","","","","","","","","","","","","","widgetry::canvas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::canvas::HorizontalAlignment","","widgetry::canvas::VerticalAlignment","","","widgetry::color","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::color::Fill","","","","","widgetry::drawing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::event::Event","","","","","","","","widgetry::event::MultiKey","","","widgetry::event_ctx","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::event_ctx::UpdateType","","","widgetry::geom","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::geom::RewriteColor","","","","widgetry::geom::geom_batch_stack","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::input","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::mapspace","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::mapspace::WorldOutcome","","","","","","","","widgetry::mapspace::unzoomed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::mapspace::world","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::mapspace::world::WorldOutcome","","","","","","","","widgetry::runner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::screen_geom","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::style","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::style::button_style","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::svg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::table::Col","widgetry::text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::tools","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::tools::screenshot","widgetry::tools::warper","","","","","","","","","","","","","","","","","","widgetry::widgetswidgetry::widgets::ClickOutcome","","widgetry::widgets::CornerRounding","widgetry::widgets::Outcome","","","","","","","widgetry::widgets::autocomplete","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::button","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::compare_times","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::containers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::drag_drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::drag_drop::State","","","","","","","","widgetry::widgets::dropdown","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::fan_chart","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::filler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::filler::ResizeRule","","","widgetry::widgets::image","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::image::ImageSource","","","","","widgetry::widgets::just_draw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::line_plot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::menu","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::panel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::panel::Dims","","","","","","widgetry::widgets::persistent_split","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::plots","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::scatter_plot","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::slider","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::slider::Style","","","","","widgetry::widgets::spinner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::stash","","","","","","","","","","","","","","","","","","","widgetry::widgets::table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::table::Col","widgetry::widgets::tabs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::text_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","widgetry::widgets::toggle","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","UTF-8 encoded bytes of an SVG","","Store a cached key/value pair, only recalculating when the …","","","","","","","Change every instance of the first color to the second","Change all colors to the specified value. For this to be …","Change the alpha value of all colors to this value.","A dropdown, checkbox, spinner, etc changed values. The …","","Replace the entire stack of states with this stack.","An action was done, with custom data. The caller must cast …","When an action happens through a button-like widget, what …","An action was done","","","","The <code>color</code> parameter is multiplied by any color baked into …","","","This destroys the current state, running the callback on …","Rules for how content should stretch to fill its bounds","","","","Don’t draw anything.","","","","","Call <code>SharedAppState::draw_default</code>.","","","","","On a DragDrop widget, a member was clicked on and …","Before <code>State::draw</code> is called, draw something else.","","Geometry that’s been uploaded to the GPU once and can be …","","","","","","","","","","","","","","","","","","","","","","","Doesn’t do anything by itself, just used for widgetsing. …","Some named widget currently holds focus","","","","","A mutable builder for a group of colored polygons.","Previously rendered graphics, in the form of a <code>GeomBatch</code>, …","Similar to [<code>Widget::row</code>]/[<code>Widget::column</code>], but for …","","","","","","","A stylable UI component builder which presents vector …","The visual","","","","Don’t do anything, keep the current state as the active …","Keep the current state as the active one, but immediately …","","","","","","","","","","","","","","","Note: When double clicking, there will be two …","","","","","","","Convert all colors to greyscale.","","If a state needs to pass data back to its parent, use …","","","Execute a sequence of transitions in order.","","","","Don’t do anything","","Nothing happened","","","","","","","","","","","","The result of a Panel handling an event","","","","","","","","","","Path to an SVG file","","","","","Destroy the current state, and resume from the previous one","","Call the previous state’s <code>draw</code>. This won’t recurse, …","Push a new active state on the top of the stack.","","","Replace the current state with a new one. Equivalent to …","A way to transform all colors in a GeomBatch.","","","","","","","","An f64 rounded to 4 decimal places. Useful with Spinners, …","","Maintaining aspect ratio, content grows until both bounds …","Maintaining aspect ratio, content grows until it touches …","Stretches content to fit its bounds exactly, breaking …","","","ScreenDims is in units of logical pixels, as opposed to …","ScreenPt is in units of logical pixels, as opposed to …","ScreenRectangle is in units of logical pixels, as opposed …","","","Customize how widgetry works. Most of these settings can’…","Any data that should last the entire lifetime of the …","Many states fit a pattern of managing a single panel, …","","","","","","","","An invisible widget that stores some arbitrary data on the …","A temporary state of an application. There’s a stack of …","","","","","","","","","","Once uploaded, textures are addressed by their id, …","","","","","When a state responds to an event, it can specify some way …","","","","","","","","","","","","Create a new widget by implementing this trait. You can …","","","","","","","","","","","","","A widgetry application splits its state into two pieces: …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draw","Draw the widget. Be sure to draw relative to the top-left …","","","","","","","","","","","","","","","","","Respond to a UI event, such as input or time passing.","Your chance to react to an event. Any side effects outside …","","","","","","","","","","","","","","This widget (in some panel) exclusively owns focus. Don’…","","","","","","","","What width and height does the widget occupy? If this …","","","","","","","","","","","","","","","","","","","","Like <code>std::include_bytes!</code>, but also returns its argument, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Some map-space elements are drawn differently when …","","","","","While handling an event, this widget (in some panel) this …","","","","","","Called when something on the panel has been clicked. Since …","","This widget produced an Outcome, and event handling should …","","","","","","","","","","","","","","","This widget changed dimensions, so recalculate layout.","","","","","","","","","","","","","","","Your widget’s top left corner should be here. Handle …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Replace the entire stack of states with this stack.","This destroys the current state, running the callback on …","Don’t draw anything.","Call <code>SharedAppState::draw_default</code>.","Before <code>State::draw</code> is called, draw something else.","Don’t do anything, keep the current state as the active …","Keep the current state as the active one, but immediately …","If a state needs to pass data back to its parent, use …","Execute a sequence of transitions in order.","Destroy the current state, and resume from the previous one","Call the previous state’s <code>draw</code>. This won’t recurse, …","Push a new active state on the top of the stack.","Replace the current state with a new one. Equivalent to …","Any data that should last the entire lifetime of the …","Many states fit a pattern of managing a single panel, …","","A temporary state of an application. There’s a stack of …","When a state responds to an event, it can specify some way …","","","","","","","","","Before <code>State::event</code> is called, call this.","Before <code>State::event</code> is called, call this.","Called before a normal exit, like window close","Called before a normal exit, like window close","","","","","","","","","Returns a boxed object from a boxed trait object if the …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Draw","","","","","Specifies what to draw before draw()","Specifies what to draw before draw()","","","","When DrawBaselayer::DefaultDraw is called, run this.","When DrawBaselayer::DefaultDraw is called, run this.","Will be called if <code>State::event</code> or <code>State::draw</code> panics.","Will be called if <code>State::event</code> or <code>State::draw</code> panics.","Respond to a UI event, such as input or time passing.","","","If true, then the top-most state on the stack needs to be …","If widgetry determines the video card is low on memory, …","If widgetry determines the video card is low on memory, …","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","","Called when something on the panel has been clicked. Since …","Called when something on the panel has been clicked.","Called when something on the panel has been clicked.","Before this state is popped or replaced, call this.","Before this state is popped or replaced, call this.","Called when the mouse has moved.","Called when the mouse has moved.","If a panel <code>on_click</code> event didn’t occur and <code>panel_changed</code> …","If a panel <code>on_click</code> event didn’t occur and <code>panel_changed</code> …","","Called when something on the panel has changed. If a …","Called when something on the panel has changed. If a …","","A stack of states","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Geometry that’s been uploaded to the GPU once and can be …","","","Uploads a sprite sheet of textures to the GPU so they can …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This has no effect when drawnome map-space elements are drawn differently when …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>color</code> parameter is multiplied by any color baked into …","","","","","","","","","","","","","","","","","","","","","Once uploaded, textures are addressed by their id, …","","","","Note this is incorrect for <code>Color::CLEAR</code>. Can’t fix in a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiply the color’s current alpha by the <code>factor</code>, …ote: When double clicking, there will be two …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allow panning and zooming on the canvas. Exactly which …","","","","","","","","","","","This widget (in some panel) exclusively owns focus. Don’…","","","","","","","","","","","","","","","","Checks if an extra font has previously been loaded with …","","","","Loads an extra font, used only for automatic fallback of …","","","","","","While handling an event, this widget (in some panel) this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Change every instance of the first color to the second","Change all colors to the specified value. For this to be …","Change the alpha value of all colors to this value.","A mutable builder for a group of colored polygons.","Convert all colors to greyscale.","Don’t do anything","A way to transform all colors in a GeomBatch.","Appends all colored polygons from another batch to the …","","","","","","Sets the top-left to 0, 0. Not sure exactly when this …","","Wrap in a Widget for layouting, so this batch can become …","","","","","Translates the batch to be centered on some point.","","","","","Transforms all colors in a batch.","Returns the colored polygons in this batch, destroying the …","","","Draws the batch, consuming it. Only use this for drawing …","","Applies one Fill to many polygons.","","","Creates a batch of filled polygons.","","","","","Compute the bounds of all polygons in this batch.","Returns the width and height of all geometry contained in …","","","","","","","","","Exports the batch to a list of GeoJSON features, labeling …","Wrap in a Widget, so the batch can be drawn as part of a …","True when the batch is empty.","","Returns a batch containing an SVG from a file.","Returns a GeomBatch from the bytes of a utf8 encoded SVG …","Returns a GeomBatch from the bytes of a utf8 encoded SVG …","","Creates an empty batch.","Adds a single polygon, painted according to <code>Fill</code>","Offset z value to render above/below other polygons. z …","Rotates each polygon in the batch relative to the center …","Rotates each polygon in the batch relative to the center …","Scales the batch by some factor.","","","Overrides the Z-ordering offset for the batch. Must be in …","Removes the first polygon in the batch.","","","Translates the batch by some offset.","","","","","","","Builds a single polygon covering everything in this batch. …","Adds a single polygon to the front of the batch, painted …","Upload the batch of polygons to the GPU, returning …","","","","","","","","Similar to [<code>Widget::row</code>]/[<code>Widget::column</code>], but for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A left click occurred while not hovering on any object","A hoverable object was clicked","An object is being dragged. The given offsets are relative …","Draw <code>Circles</code> and <code>PolyLines</code> in map-space that scale their …","If you don’t ever need to refer to objects in a <code>World</code>, …","While hovering on an object with a defined hotkey, that …","Nothing interesting happened","Objects in a <code>World</code> are uniquely identified by this …","Draws one of two versions of something, based on whether …","","A <code>World</code> manages objects that exist in “map-space”, the …","The result of a <code>World</code> handling an event","","","","","","","","","","","","","","","","","Transforms all colors in both batches.","","","Mark that this object will be drawn differently when …","","","","","","","","","","","","","","","","","","","Adds a single polygon to both batches, painted according …","","","","","","","","","","","","","","","","","","","","","","","Draw <code>Circles</code> and <code>PolyLines</code> in map-space that scale their …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A left click occurred while not hovering on any object","A hoverable object was clicked","An object is being dragged. The given offsets are relative …","If you don’t ever need to refer to objects in a <code>World</code>, …","While hovering on an object with a defined hotkey, that …","Nothing interesting happened","","This provides a builder API for adding objects to a <code>World</code>.","Objects in a <code>World</code> are uniquely identified by this …","A <code>World</code> manages objects that exist in “map-space”, the …","The result of a <code>World</code> handling an event","","Start adding an object to the <code>World</code>. The caller should …","Begin adding an unnamed object to the <code>World</code>.","","","","","","","","","","","","","","","","","","","","","Creates an empty <code>World</code>, whose objects can exist in the …","Finalize the object, adding it to the <code>World</code>.","","Mark the object as clickable. <code>WorldOutcome::ClickedObject</code> …","","","","","","","Delete an object. Not idempotent – this will panic if …","Delete an object, with the promise to recreate it with the …","Mark the object as draggable. The user can hover on this …","","","","Draw objects in the world that’re currently visible.","Specifies how to draw this object normally (while not …","Draw the object by coloring its hitbox","","","Draw the object in a hovered state by transforming the …","Specifies how to draw the object while the cursor is …","Draw something underneath all objects. This is useful for …","","","","Indicate that an object doesn’t need to be drawn …","","Let objects in the world respond to something happening.","","","","","","","","Returns the object currently hovered on.","","Specifies the geometry of the object. Required.","","","While the user hovers over this object, they can press a …","Draw the object in a hovered state by changing the alpha …","Draw the object in a hovered state by adding an outline to …","","","After adding all objects to a <code>World</code>, call this to …","","","","","","","","","","","","","","","","","","Mark that an object is hoverable, but don’t actually …","","","If the outcome references some ID, transform it to another …","Like <code>map_id</code>, but the transformation may fail.","","","Change an object’s tooltip. Returns true for success, …","","","If a drag event causes the world to be totally rebuilt, …","","","Draw a tooltip while hovering over this object.","","","","","","","","","","","","","","","","","","Creates an empty <code>World</code>, whose objects can exist anywhere …","","Provides ordering for overlapping objects. Higher values …","","","","","","","","","","","","Customize how widgetry works. Most of these settings can’…","","","","","","","","","","","","","","","","","","","Returns naming hint. Logically consumes the number of …","Log every raw winit event to the DEBUG level.","","","","","","","","","","","","","Sets the text that’ll appear during long …","","Specify the title of the window to open.","When calling <code>Widget::draw_svg</code>, <code>ButtonBuilder::image_path</code>, …","","If the screen width using the monitor’s detected scale …","","","Override the initial HiDPI scale factor from whatever …","","","","","","","","","Sets the window icon. This should be a 32x32 image.","","","ScreenDims is in units of logical pixels, as opposed to …","ScreenPt is in units of logical pixels, as opposed to …","ScreenRectangle is in units of logical pixels, as opposed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","title: name of previous screen, which you’ll return to","An “X” button","An “X” button to close the current state. Bound to the …","","A right facing caret, like “&gt;”, suitable for paging to …","","","","","","A left facing caret, like “&lt;”, suitable for paging to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get all entries, filtered and sorted according to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Render the text, without any autocropping. You can pass in …","Render the text, autocropping blank space out of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Store a cached key/value pair, only recalculating when the …","","","","","","","","","","","","","Get the current key.","","","<code>update</code> is preferred, but sometimes <code>produce_value</code> needs to …","Clears the current pair and returns it.","","","","Update the value if the key has changed.","Get the current value.","Get the current value, mutably.","","Take a screenshot of the entire canvas, tiling it based on …","","","","","","","","","","","","","","","","","","","A dropdown, checkbox, spinner, etc changed values. The …","An action was done, with custom data. The caller must cast …","When an action happens through a button-like widget, what …","An action was done","","","","","On a DragDrop widget, a member was clicked on and …","","Some named widget currently holds focus","","","","Nothing happened","The result of a Panel handling an event","","Create a new widget by implementing this trait. You can …","","","","","","This doesn’t count against the entire container","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If a new Panel is being created to replace an older one, …","If a new Panel is being created to replace an older one, …","","","","","","","","","Creates a column with the specified widgets. Every member …","","","Things like padding don’t work on many widgets, so just …","","","","","Creates a column with the specified widgets. No margins or …","Creates a row with the specified widgets. No margins or …","","","Returns a boxed object from a boxed trait object if the …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","","Draw the widget. Be sure to draw relative to the top-left …","","","","","","Creates a column with the specified widgets, with a <code>spacing</code>…","Creates a row with the specified widgets, with a <code>spacing</code> …","Your chance to react to an event. Any side effects outside …","","","","","","","This one is really weird. percent_width should be LESS …","Like flex_wrap, but doesn’t horizontally space out …","","","Only for rows/columns. Used to force table columns to line …","","","","","","","","","","","","","","","What width and height does the widget occupy? If this …","","Needed for force_width.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","","","","","","","","","","","","","","","","","","","","This widget produced an Outcome, and event handling should …","Callers have to adjust padding too, probably","","","","","","","","","","","This widget changed dimensions, so recalculate layout.","Restore state from the previous version of this widget, …","Restore state from the previous version of this widget, …","","","Creates a row with the specified widgets. Every member …","","","Your widget’s top left corner should be here. Handle …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","When a button is clicked, <code>Outcome::Clicked</code> with this …","","","","","","","","","","Set a background color for the button based on the button…","","","","","","","","","","Build a button.","Shorthand method to build a default widget whose <code>action</code> is …","Shorthand method to build a Button wrapped in a Widget","","","","","","","","Set independent rounding for each of the button’s corners","","Set a pre-rendered GeomBatch to use for the button instead …","","","","","","","","The button cannot be clicked and will be styled as …","Set a tooltip <code>Text</code> to appear when hovering over the …","","","","","","","","","","","Set the font used by the button’s label.","","Set the size of the font of the button’s label.","","","","","","","","The button’s items will be rendered in a horizontal row","Set a hotkey for the button","","","","","","","Set the image for the button. If not set, the button will …","Set a background color for the image, other than the …","Set the image for the button. If not set, the button will …","Rewrite the color of the button’s image.","If a custom <code>image_dims</code> was set, control how the image …","Set independent rounding for each of the button’s image…","Scale the bounds containing the image. If <code>image_dims</code> are …","Display the button’s image before the button’s label.","Set padding for the image","Set the image for the button. If not set, the button will …","","","","","","","","","","","","","","","","","","","","","","Set the color of the button’s label.","Display the button’s label before the button’s image.","Assign a pre-styled <code>Text</code> instance if your button need …","Set the text of the button’s label.","Set the text of the button’s label. The text will be …","","","If a <code>tooltip</code> is not specified, a default tooltip will be …","Set an outline for the button based on the button’s …","","","","Extra spacing around a button’s items (label and/or …","","Extra spacing around a button’s items (label and/or …","Extra spacing around a button’s items (label and/or …","Extra spacing around a button’s items (label and/or …","Extra spacing around a button’s items (label and/or …","","","Spacing between the image and text of a button. Has no …","","","","","","","","","Set a non-default tooltip <code>Text</code> to appear when hovering …","","","","","","","","","","","","","","","","The button’s items will be rendered in a vertical column","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If a card is currently being dragged, return its original …","","","","","","","","","","","","","","","","","","This widget emits several events.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Doesn’t do anything by itself, just used for widgetsing. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a square filler, always some percentage of the …","","","","","","","","","","UTF-8 encoded bytes of an SVG","Previously rendered graphics, in the form of a <code>GeomBatch</code>, …","A stylable UI component builder which presents vector …","The visual","Path to an SVG file","","","","","Set a background color for the image. Has no effect unless …","","","","","","Render the <code>Image</code> and any styling (padding, background, …","","","","","Rewrite the color of the image.","","If a custom <code>dims</code> was set, control how the image should be …","","Set independent rounding for each of the image’s …","","","Scale the bounds containing the image. If <code>dims</code> are not …","","An <code>Image</code> with no renderable content. Useful for starting a …","","","","","Create a new <code>Image</code> from a <code>GeomBatch</code>.","Create a new SVG <code>Image</code> from bytes.","Create an SVG <code>Image</code>, read from <code>filename</code>, which is colored …","","","","","","","","","","Process <code>self</code> into a <code>GeomBatch</code>.","Create a new <code>Image</code> based on <code>self</code>, but overriding with any …","Set padding for the image. Has no effect unless custom <code>dims</code>…","","Padding below the image. Has no effect unless custom <code>dims</code> …","Padding to the left of the image. Has no effect unless …","Padding to the right of the image. Has no effect unless …","Padding above the image. Has no effect unless custom <code>dims</code> …","Set a new source for the <code>Image</code>’s data.","","Set the GeomBatch for the button.","Set the bytes for the image.","Set the path to an SVG file for the image.","","","Add a tooltip to appear when hovering over the image.","","","","","","","","The image’s intrinsic colors will be used, it will not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>batch</code>: the <code>GeomBatch</code> to draw <code>tooltips</code>: (hitbox, text, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>label</code> is used to name the actual LinePlot widget. The …","Programmatically show a tooltip at the given x/y.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes the autocomplete widget. It’s fine if the panel …","","","","","","","","","","","","","","Grab a stashed value and clone it.","","","","","","","","","Returns an empty panel. <code>event</code> and <code>draw</code> will have no effect.","","","","","","","","","","","","","","When a panel is built, a fake, “no-op” mouseover event …","","","","","","","","","","","","","","","","","","","","","","","","","","","","All margins/padding/etc from the previous widget are …","","","","","","","","","","","","Grab a stashed value, with the ability to pass it around …","Swap the inner content of a <code>container</code> widget with …","Removes a widget from the panel. Does not recalculate …n f64 rounded to 4 decimal places. Useful with Spinners, …","","","","","","","","","","","","","","","","","","","","","","","","","","A spinner for f64s should prefer using this, which will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a spinner using the <code>SpinnerValue</code>’s default …","Creates a spinner using a custom method for rendering the …","An invisible widget that stores some arbitrary data on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A widget containing the tab bar and a content pane with …","","","","","","","","","","","","","","","Add a new tab.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,3,4,5,0,3,3,4,4,4,4,6,6,0,0,7,3,0,0,0,8,4,9,8,10,10,10,11,0,12,11,0,11,3,0,13,13,3,0,12,0,0,14,0,15,16,3,0,17,15,17,3,3,0,11,0,0,0,3,0,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,11,0,14,3,18,0,7,0,0,3,19,0,17,3,0,0,18,3,3,12,12,0,20,20,3,5,16,8,9,3,3,3,3,8,20,20,3,0,0,0,13,3,10,0,12,20,20,12,0,3,20,10,5,11,3,3,3,3,3,3,3,3,3,3,3,0,0,6,6,6,6,3,18,0,0,7,8,4,0,0,12,0,15,12,3,3,12,0,8,3,3,3,8,20,20,0,3,21,21,21,0,18,0,0,0,3,0,0,0,0,3,3,0,3,0,0,0,0,0,0,3,3,0,0,0,0,0,0,13,0,4,9,4,0,3,3,20,0,0,3,19,0,3,0,0,0,0,20,20,20,3,3,3,22,23,23,24,25,0,23,17,21,23,17,21,0,26,27,27,28,29,30,25,22,0,0,0,31,25,32,33,32,34,35,33,33,23,17,21,23,17,21,36,37,38,39,39,39,39,39,39,39,39,39,40,41,41,41,42,0,43,44,44,45,27,30,46,47,46,40,17,21,17,21,48,0,49,35,40,35,50,40,51,35,41,52,47,46,53,37,41,29,23,21,51,54,30,55,56,48,47,40,57,58,53,52,29,35,59,51,59,51,52,41,41,53,60,61,54,30,55,56,48,58,53,52,0,37,39,27,45,62,38,0,60,61,63,63,0,44,23,23,33,64,33,39,59,17,21,44,64,23,23,17,21,22,0,61,62,45,29,65,52,40,57,23,51,0,56,51,48,29,56,39,24,32,57,0,43,26,0,44,23,17,21,23,17,21,23,17,21,23,17,21,45,51,51,23,41,45,30,49,53,52,29,23,32,0,63,36,42,29,66,34,28,27,39,52,41,0,54,48,59,48,59,46,45,53,23,43,23,44,43,43,62,46,26,67,38,68,52,33,64,29,51,35,39,43,44,39,49,22,27,32,68,52,27,69,36,0,0,26,27,0,43,40,40,39,39,61,41,64,35,37,25,51,51,42,30,52,66,23,23,0,43,44,53,0,0,24,46,0,64,39,39,39,39,39,31,17,21,0,23,23,51,35,56,36,54,30,55,56,48,47,58,53,52,29,40,57,45,23,17,21,23,17,21,23,17,21,64,43,48,52,44,70,40,57,62,62,32,0,65,41,41,27,27,41,23,71,72,72,71,72,72,73,74,75,76,77,78,79,80,81,80,82,83,84,85,86,86,87,88,89,90,90,91,91,92,93,94,95,96,97,98,99,98,98,100,101,102,100,103,104,105,106,107,108,109,109,109,110,111,112,0,12,12,15,15,0,12,12,12,12,12,15,12,12,0,0,0,0,0,113,15,12,114,113,15,12,114,115,115,115,115,113,15,12,114,113,15,12,114,60,60,60,60,60,113,67,67,114,60,60,67,67,114,115,115,115,115,60,113,114,113,115,115,113,15,12,114,114,113,15,12,114,113,15,12,114,15,113,15,12,114,60,67,67,67,67,60,60,67,67,67,67,114,67,67,113,113,113,15,12,114,113,15,12,114,113,15,12,114,103,104,105,106,107,108,0,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,0,0,0,0,0,0,0,117,118,62,119,120,117,121,118,62,119,120,117,121,118,62,119,120,117,121,118,62,119,120,117,121,0,118,0,118,119,120,118,117,117,62,119,120,62,62,118,118,62,119,120,117,121,118,62,117,119,120,118,62,119,120,117,121,118,62,119,120,117,121,118,62,119,120,121,118,62,119,120,117,121,117,118,119,120,117,121,62,117,118,117,118,117,117,117,117,121,121,121,118,121,117,118,118,62,119,120,117,121,118,62,119,120,117,121,118,62,119,120,117,121,121,121,117,62,62,119,120,117,117,118,117,117,122,0,122,122,122,122,122,122,122,122,122,0,122,122,122,122,122,4,4,4,4,4,0,0,8,4,8,0,0,0,8,8,0,0,8,4,8,8,4,4,0,41,41,45,8,4,41,45,8,4,41,45,8,4,41,45,8,4,41,41,41,45,41,41,41,41,45,8,4,45,8,4,41,41,45,41,41,45,8,4,8,4,41,45,8,4,41,41,41,41,41,41,41,45,41,41,45,8,4,41,45,8,4,41,45,8,4,41,45,8,4,45,41,41,41,41,41,41,45,41,41,41,41,41,45,8,4,41,45,41,45,41,41,45,8,4,45,41,45,8,4,41,45,8,4,41,45,8,4,41,41,41,41,87,88,110,111,112,1,22,22,1,22,1,1,22,0,13,13,1,0,1,22,0,13,1,22,1,22,22,22,1,1,1,1,1,1,1,0,13,22,22,22,22,22,13,1,66,22,13,1,66,22,22,22,13,1,66,22,13,1,66,22,13,1,66,22,13,1,66,22,22,22,13,1,66,22,22,13,1,66,22,13,13,13,1,66,22,22,22,66,22,13,1,66,22,13,1,66,22,13,1,66,22,13,1,66,0,22,66,22,22,13,1,66,66,22,22,22,22,22,22,22,13,66,22,22,13,1,66,0,22,22,13,1,66,22,13,1,66,22,13,1,66,83,84,85,86,86,0,0,0,0,0,0,0,26,43,26,123,43,26,123,43,43,26,26,26,26,26,43,26,123,43,26,123,43,43,43,43,43,43,43,123,43,43,43,26,123,43,43,26,43,26,43,26,43,26,123,43,26,123,123,43,26,123,43,43,43,43,123,43,43,26,43,43,43,26,26,43,43,43,43,43,123,43,26,123,43,26,123,43,26,123,43,43,43,26,26,123,26,26,3,5,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,20,20,3,5,3,3,3,3,20,20,3,3,0,20,20,0,3,3,20,5,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,20,20,3,3,3,3,3,3,3,3,3,20,3,3,20,20,20,3,3,3,20,3,5,20,3,5,20,3,5,20,3,5,20,3,5,20,3,5,3,5,3,5,20,3,5,20,3,5,20,3,5,5,20,3,3,5,3,5,0,20,3,5,20,3,5,20,3,5,20,3,5,0,20,5,3,5,3,20,3,5,20,3,5,20,3,5,3,20,3,5,76,77,78,79,80,81,80,82,92,93,94,0,18,18,0,18,18,0,44,124,18,44,124,18,44,44,44,124,18,44,124,18,44,124,44,44,18,18,44,44,44,44,18,44,18,44,44,124,18,44,44,44,124,18,44,124,18,18,44,124,18,44,44,124,124,44,44,44,124,18,124,44,44,44,44,124,124,44,124,124,44,44,44,44,44,124,124,18,44,124,18,44,124,18,44,124,18,44,44,109,109,109,10,10,10,0,10,10,0,28,10,28,10,28,10,28,28,28,28,10,28,10,28,28,10,28,10,28,28,28,10,28,10,28,28,10,28,28,10,10,0,28,28,28,10,28,10,28,10,28,10,28,28,28,28,28,28,28,10,28,28,28,28,28,28,28,10,28,28,28,10,28,28,10,28,10,28,10,28,28,28,100,101,102,100,0,0,9,0,19,9,9,19,25,25,19,9,25,19,9,25,25,25,25,19,9,25,19,9,25,19,9,25,19,9,25,25,19,9,19,9,25,19,9,25,25,25,25,25,19,9,25,19,9,25,19,9,25,19,9,25,25,25,25,25,25,19,9,25,19,9,25,19,9,25,19,9,25,25,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,125,126,126,126,0,0,126,126,0,0,0,0,0,127,128,128,127,128,127,128,127,128,127,128,128,127,129,128,128,128,130,127,128,130,127,127,128,128,130,127,128,127,128,127,128,127,128,129,127,130,129,128,130,128,127,128,127,128,127,128,0,127,128,0,127,128,131,132,133,132,134,134,134,134,0,0,0,0,135,135,129,136,137,135,129,136,137,135,129,136,137,135,129,136,137,135,135,129,137,129,135,136,137,0,129,129,129,136,137,135,129,136,137,135,129,136,137,135,129,136,137,135,129,136,137,135,129,135,129,136,137,0,0,129,136,137,135,129,136,137,135,129,136,137,135,136,125,126,126,126,0,126,126,0,0,0,0,0,138,130,130,130,139,138,126,125,130,139,138,126,125,130,139,138,126,125,130,139,138,126,125,130,139,130,139,139,138,126,125,126,125,130,130,139,139,138,130,130,139,139,139,138,139,139,130,130,139,138,139,125,130,125,130,139,138,126,125,125,130,125,139,139,138,139,139,139,130,139,130,130,139,138,126,125,130,139,138,126,125,126,125,130,139,138,126,125,139,139,138,126,126,125,130,130,130,138,130,126,125,139,139,138,130,139,138,126,125,130,139,138,126,125,130,139,138,126,125,130,139,139,139,138,131,132,133,132,134,134,134,134,0,0,0,0,140,140,27,140,27,27,27,27,27,140,27,140,27,140,27,27,140,27,27,140,140,140,140,27,140,27,140,27,140,27,27,27,27,27,27,27,27,0,27,27,140,140,27,140,27,140,27,27,27,27,0,0,0,71,72,65,71,72,65,71,72,65,71,72,65,72,71,72,65,71,72,65,72,65,72,71,65,71,72,65,71,71,72,65,65,65,65,65,65,72,65,71,72,65,71,72,65,71,72,65,71,72,65,71,65,71,65,65,72,72,72,65,65,71,72,65,72,71,72,65,71,71,72,65,71,72,65,71,72,65,72,65,71,72,72,71,72,72,71,65,0,0,0,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,39,39,39,39,39,39,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,0,0,0,141,141,141,141,0,0,0,141,141,141,141,141,141,141,141,141,0,0,0,141,141,0,141,141,141,141,0,0,142,142,0,143,144,142,143,144,142,143,144,142,143,144,142,143,144,144,144,144,144,143,144,144,142,143,143,144,144,144,142,143,144,142,143,144,142,143,144,144,144,144,144,144,144,143,144,143,144,142,143,144,142,143,144,142,143,145,6,6,0,0,0,0,6,6,6,6,0,0,0,0,34,34,34,34,6,64,34,6,64,34,64,34,31,34,34,64,64,64,64,64,6,64,34,6,64,34,34,6,64,34,6,64,34,34,34,64,6,34,6,64,64,64,6,64,34,64,64,6,64,64,34,34,34,34,34,6,6,34,34,34,34,6,64,34,6,64,34,6,64,34,6,64,34,64,34,34,34,64,34,64,64,34,34,34,64,0,64,64,64,64,64,64,64,31,6,64,34,34,6,64,34,6,64,34,6,64,34,64,64,34,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,50,50,50,50,50,50,50,50,0,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,11,11,0,11,14,0,16,0,11,0,11,14,16,0,11,0,0,0,0,32,32,32,32,32,32,11,16,68,32,146,14,36,11,16,68,32,146,14,36,0,32,32,32,146,11,16,68,32,146,14,36,11,16,68,32,146,14,36,36,0,61,61,32,32,32,32,14,36,14,36,32,0,32,32,0,32,146,32,32,32,14,36,61,61,61,61,0,61,32,0,32,36,32,32,32,61,0,32,32,0,32,32,32,32,14,36,32,32,32,11,16,68,32,146,14,14,14,36,36,36,32,61,32,32,32,32,0,11,16,68,32,146,14,36,11,16,68,32,146,14,36,146,14,36,11,16,68,32,146,14,36,32,61,32,36,0,32,36,0,32,32,32,32,32,32,32,0,32,36,68,32,32,68,32,146,32,32,32,32,32,0,0,0,32,68,61,61,32,36,32,0,32,61,0,0,0,146,32,0,0,32,32,0,14,36,0,36,11,16,68,32,146,14,36,11,16,68,32,146,14,36,11,16,68,32,146,14,36,36,32,32,36,73,74,75,95,96,97,98,99,98,98,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,0,0,0,147,147,51,148,149,147,51,148,149,51,51,148,147,51,148,149,147,51,148,149,51,51,51,51,148,149,51,148,149,149,51,51,51,148,51,148,149,51,147,51,51,51,147,51,147,147,147,147,147,51,148,149,51,149,51,149,147,51,148,149,147,147,51,51,147,51,51,147,51,148,51,51,51,51,51,51,51,51,51,51,147,51,148,149,147,51,148,149,147,51,148,149,147,51,148,149,147,51,147,51,148,51,51,51,51,51,147,51,51,51,148,51,51,51,51,51,51,51,51,147,51,51,51,51,51,149,149,51,148,149,51,147,51,147,147,51,148,149,147,51,148,149,147,51,148,149,51,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,0,150,151,150,151,150,151,150,151,150,151,150,151,150,151,150,151,150,151,150,151,150,150,151,151,151,151,150,151,150,151,150,151,150,151,0,0,152,152,152,0,0,30,153,152,30,153,152,30,30,153,152,30,153,152,30,153,30,153,30,30,152,30,30,153,152,30,30,153,30,30,153,152,30,153,152,153,152,30,153,152,30,30,30,152,30,30,30,153,30,30,30,30,30,30,153,152,30,153,152,30,153,152,153,154,154,155,156,154,154,155,156,0,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,0,157,157,157,157,157,157,157,157,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,55,55,55,55,0,158,158,0,69,158,69,158,69,158,69,158,158,69,69,69,69,158,69,69,158,69,158,69,158,69,158,69,69,69,69,158,69,158,69,158,159,160,160,7,7,0,0,7,35,7,35,7,35,35,35,7,35,7,35,35,7,35,7,35,35,35,35,35,35,35,35,35,35,35,7,35,7,35,35,35,35,7,35,7,35,7,35,7,35,7,35,35,35,35,35,35,35,35,35,35,35,35,35,7,35,35,35,7,35,7,35,7,35,89,90,90,91,91,0,0,0,161,56,162,161,56,162,162,161,56,162,161,56,162,161,56,162,161,56,162,161,56,161,56,162,161,56,162,161,56,162,56,56,161,56,162,161,56,162,161,162,161,56,162,56,162,161,56,162,56,161,56,162,161,56,162,161,56,162,161,56,162,161,0,0,48,163,48,163,48,163,48,163,48,48,48,48,163,48,48,163,48,48,163,48,48,163,48,163,48,163,48,48,48,48,48,163,48,48,163,48,163,48,163,48,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,164,164,164,164,0,0,40,57,57,40,57,164,40,57,164,40,40,57,164,40,57,164,57,57,40,40,40,40,40,40,40,40,40,40,40,57,40,40,40,40,57,57,57,40,40,40,57,164,40,40,40,57,57,57,40,57,164,40,57,164,164,40,57,164,40,40,40,57,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,57,40,57,164,40,57,164,40,57,164,40,40,40,57,165,166,167,168,165,166,0,37,37,37,37,37,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,0,0,49,59,49,59,49,59,49,59,49,59,59,59,59,59,59,49,59,169,169,49,59,49,59,49,59,49,59,49,0,59,59,169,49,0,169,169,49,59,49,59,49,59,169,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,170,170,0,0,0,170,53,53,170,53,170,53,170,53,170,53,53,53,53,53,53,53,53,170,53,53,53,53,170,53,53,170,53,170,53,170,53,170,53,53,53,170,53,53,53,53,53,53,53,170,53,170,53,170,53,171,172,171,172,173,2,0,0,0,0,2,2,52,2,52,2,52,2,52,2,52,52,2,2,52,52,52,52,52,52,2,52,52,2,52,2,52,52,52,2,52,2,2,52,2,52,52,52,2,52,52,2,52,52,52,52,2,2,2,2,52,52,2,52,2,52,2,52,52,52,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,0,0,0,142,142,0,143,174,174,174,174,174,144,144,144,144,174,143,144,174,174,174,144,0,0,174,174,144,144,143,143,174,174,174,145,0,0,24,24,24,24,175,24,175,24,175,24,175,24,175,24,175,24,24,175,175,24,24,24,175,24,175,24,175,24,175,24,24,24,24,175,24,175,24,175,24,175,24,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["into",8,[["string",3]]]],["textspan",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["bool",15]],["choice",3]],null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3]],["widget",3]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["controlstate",4]],[[],["contentmode",4]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["gfxctx",3]]],[[["gfxctx",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3]],["transition",4]],[[["eventctx",3],["widgetoutput",3]]],null,null,null,null,[[["color",3]],["choice",3]],null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,null,[[["vec",3]],["vec",3,[["choice",3]]]],[[]],[[]],[[]],null,null,[[],["screendims",3]],null,null,null,null,null,null,null,null,null,[[["vec",3,[["key",4]]]],["multikey",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,null,[[["key",4]],["choice",3]],null,null,null,null,null,null,null,null,null,[[["key",4]],["multikey",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["multikey",4]],["choice",3]],null,[[["into",8,[["string",3]]]],["choice",3]],null,null,null,null,null,null,[[["eventctx",3],["str",15],["panel",3]],["transition",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["settings",3],["fnonce",8]],["never",15]],null,null,null,null,null,null,null,null,null,[[["screenpt",3]]],null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],["choice",3,[["string",3]]]],[[["vec",3,[["into",8,[["string",3]]]]]],["vec",3,[["choice",3,[["string",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["eventctx",3]],["widget",3]],[[]],[[]],null,[[["into",8,[["string",3]]]],["choice",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["choice",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[["canvas",3]]],[[["canvas",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3]],["result",4,[["box",3,[["state",8]]],["box",3]]]],[[],["option",4]],[[["rc",3]],["result",4,[["rc",3,[["state",8]]],["rc",3]]]],[[],["option",4]],[[["gfxctx",3]]],[[["gfxctx",3]]],[[["gfxctx",3]]],[[["gfxctx",3]]],[[["gfxctx",3]]],[[],["drawbaselayer",4]],[[],["drawbaselayer",4]],[[],["drawbaselayer",4]],[[],["drawbaselayer",4]],[[],["drawbaselayer",4]],[[["gfxctx",3]]],[[["gfxctx",3]]],[[["canvas",3]]],[[["canvas",3]]],[[["eventctx",3]],["transition",4]],[[["eventctx",3]]],[[["eventctx",3]],["transition",4]],[[["eventctx",3],["transition",4]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["bool",15]],[[["panel",3],["box",3,[["simplestate",8]]]],["box",3,[["state",8]]]],[[["eventctx",3],["str",15],["panel",3]],["transition",4]],[[["eventctx",3],["box",3,[["cloneableany",8]]],["panel",3]],["transition",4]],[[["eventctx",3],["box",3,[["cloneableany",8]]],["panel",3]],["transition",4]],[[["eventctx",3]]],[[["eventctx",3]]],[[["eventctx",3]]],[[["eventctx",3]]],[[["eventctx",3]],["transition",4]],[[["eventctx",3]],["transition",4]],null,[[["eventctx",3],["panel",3]],["option",4,[["transition",4]]]],[[["eventctx",3],["panel",3]],["option",4,[["transition",4]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[],["bool",15]],null,[[],["any",8]],[[],["any",8]],[[],["assets",3]],[[],["option",4,[["str",15]]]],null,[[]],[[]],[[["string",3],["geombatch",3],["bounds",3]]],[[["string",3],["geombatch",3]]],[[]],null,null,null,[[]],[[["str",15]],["option",4]],[[["string",3]],["option",4,[["geombatch",3]]]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["str",15]],["bool",15]],[[["font",4],["usize",15]],["f64",15]],null,[[["str",15],["vec",3,[["u8",15]]]]],[[["style",3],["option",4,[["string",3]]],["bool",15],["box",3,[["fn",8]]]],["assets",3]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,[[["bool",15],["geombatch",3]],["drawable",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["context",3],["str",15],["str",15]],["result",6,[["program",6]]]],[[["color",3]]],[[["context",3],["u32",15],["str",15]],["result",6,[["shader",6]]]],null,[[["context",3]]],[[["context",3]]],[[["f64",15],["canvas",3]]],[[["gfxctxinnards",3]]],[[],["gfxctxinnards",3]],[[]],[[]],[[]],null,[[["eventctx",3]],["drawable",3]],[[["screenrectangle",3],["f64",15],["canvas",3]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["f64",15]],[[["context",3]]],[[["context",3]],["vertexarray",3]],[[["context",3]],["buffer",3]],[[["context",3],["option",4,[["windowadapter",3]]]],["prerenderinnards",3]],[[["vec",3,[["u8",15]]],["u32",15],["u32",15]],["result",6]],null,null,[[["drawable",3],["uniforms",3],["prerenderinnards",3]]],[[]],[[["option",4]]],[[["screendims",3],["string",3]],["result",6]],[[["cursoricon",4]]],[[["bool",15]]],[[["icon",3]]],null,null,null,[[["f64",15],["canvas",3]],["option",4]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["context",3]],["result",6]],[[["context",3]],["result",6]],[[]],null,null,null,null,[[],["window",3]],null,null,[[["screendims",3],["f64",15]]],[[["f64",15]],["screendims",3]],null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["gfxctxinnards",3]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["settings",3],["timer",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["window",3]],[[["screendims",3],["f64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["screendims",3],["horizontalalignment",4],["verticalalignment",4]],["screenpt",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["pt2d",3]]],[[],["pt2d",3]],[[],["screenpt",3]],[[["f64",15]]],[[],["canvassettings",3]],[[],["horizontalalignment",4]],[[],["verticalalignment",4]],[[]],[[]],[[]],null,null,[[],["result",4]],null,null,null,[[["horizontalalignment",4]],["bool",15]],[[["verticalalignment",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["screenpt",3]],[[],["option",4,[["pt2d",3]]]],[[],["option",4,[["screenpt",3]]]],[[],["bounds",3]],[[],["bounds",3]],[[],["bounds",3]],[[],["screendims",3]],null,[[["userinput",3]],["option",4,[["updatetype",4]]]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,[[["pt2d",3]],["screenpt",3]],[[["screenrectangle",3]]],[[],["f64",15]],[[],["f64",15]],null,[[["horizontalalignment",4]],["bool",15]],[[["verticalalignment",4]],["bool",15]],[[["screendims",3],["canvassettings",3]],["canvas",3]],[[],["canvassettings",3]],[[["screenpt",3]],["pt2d",3]],[[],["result",4]],null,[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[["f64",15],["screenpt",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["f32",15]],["color",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["string",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["color",3]],[[],["fill",4]],[[],["texture",3]],[[],["lineargradient",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[["f64",15]],["color",3]],[[["color",3]],["bool",15]],[[["fill",4]],["bool",15]],[[["texture",3]],["bool",15]],[[["lineargradient",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["texture",3]],["fill",4]],[[["color",3]],["fill",4]],[[]],[[]],null,[[["f32",15]],["color",3]],[[["str",15]],["color",3]],[[["pt2d",3]],["color",3]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["f64",15]],["f32",15]],[[["color",3],["f64",15]],["color",3]],null,[[["f32",15]],["color",3]],[[["color",3]],["bool",15]],[[["fill",4]],["bool",15]],[[["texture",3]],["bool",15]],[[["lineargradient",3]],["bool",15]],[[["lineargradient",3]],["fill",4]],null,[[["usize",15],["usize",15],["usize",15]],["color",3]],[[["f32",15],["f32",15],["f32",15]],["color",3]],[[["usize",15],["usize",15],["usize",15],["f32",15]],["color",3]],[[["f32",15],["f32",15],["f32",15],["f32",15]],["color",3]],[[],["result",4]],[[["f64",15]],["color",3]],[[["pt2d",3]]],null,[[["f64",15]],["color",3]],[[]],[[]],[[]],[[]],[[["f64",15]],["f64",15]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["bool",15],["geombatch",3]],["drawable",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["assets",3]],[[],["prerender",3]],[[],["assets",3]],[[],["prerender",3]],null,[[],["bool",15]],[[],["option",4,[["str",15]]]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["color",3]]],[[],["f64",15]],[[]],[[["text",3]]],[[["color",3],["polygon",3]]],[[["screenrectangle",3]]],[[["formatter",3]],["result",6]],[[["pt2d",3],["screenpt",3],["f64",15],["option",4,[["f32",15]]]]],[[]],[[]],[[]],[[]],[[],["option",4,[["pt2d",3]]]],[[],["usize",15]],[[],["f64",15]],[[],["bounds",3]],[[],["usize",15]],null,null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["key",4]],["bool",15]],[[],["bool",15]],null,[[["prerender",3],["canvas",3],["style",3],["bool",15]],["gfxctx",3]],[[["canvas",3]],["uniforms",3]],null,null,null,null,[[["drawable",3]]],[[["screenpt",3],["drawable",3]]],[[]],null,[[["screenpt",3]],["pt2d",3]],null,[[["string",3]]],[[],["style",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,[[["geombatch",3]],["drawable",3]],[[["geombatch",3]],["drawable",3]],[[["geombatch",3]],["drawable",3]],null,[[["screendims",3]]],[[],["screendims",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["event",4]],[[],["key",4]],[[],["multikey",4]],[[]],[[]],[[]],[[["key",4]],["ordering",4]],[[["multikey",4]],["ordering",4]],[[],["string",3]],[[],["string",3]],[[["event",4]],["bool",15]],[[["key",4]],["bool",15]],[[["multikey",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["key",4]],["multikey",4]],[[]],[[["windowevent",4],["f64",15],["instant",6]],["option",4,[["event",4]]]],[[["keyboardinput",3]],["option",4,[["key",4]]]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[["vec",3,[["key",4]]]],["multikey",4]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["key",4]],["multikey",4]],[[["event",4]],["bool",15]],[[["multikey",4]],["bool",15]],[[["key",4]],["option",4,[["ordering",4]]]],[[["multikey",4]],["option",4,[["ordering",4]]]],[[["bool",15]],["option",4,[["char",15]]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["eventctx",3]],["textspan",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["assets",3]],[[],["prerender",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["bool",15]],null,[[],["updatetype",4]],[[]],[[]],[[]],[[]],[[],["f64",15]],[[["updatetype",4]],["bool",15]],null,[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["str",15]],["bool",15]],[[["key",4]],["bool",15]],null,null,[[["str",15],["vec",3,[["u8",15]]]]],[[["into",8,[["string",3]]],["fnonce",8]]],[[["text",3]],["panel",3]],null,[[["updatetype",4]],["bool",15]],[[["prerender",3],["style",3],["screendims",3],["string",3]],["loadingscreen",3]],null,[[["bool",15],["fnmut",8]]],[[],["bool",15]],null,null,[[["string",3]]],[[],["bool",15]],[[]],[[["string",3]]],[[["updatetype",4]]],[[["style",3]]],[[]],[[],["style",3]],null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["geombatch",3]],["drawable",3]],null,null,null,null,null,null,null,null,null,null,[[["geombatch",3]]],[[["color",3]],["color",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["geombatch",3]],null,[[],["widget",3]],[[]],[[]],[[]],[[]],[[["pt2d",3]],["geombatch",3]],[[],["geombatch",3]],[[],["rewritecolor",4]],[[]],[[]],[[["rewritecolor",4]],["geombatch",3]],[[],["vec",3]],[[]],[[],["result",4]],[[["gfxctx",3]]],[[["rewritecolor",4]],["bool",15]],[[["into",8,[["fill",4]]],["vec",3,[["polygon",3]]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["vec",3]],["geombatch",3]],[[]],[[]],[[["color",3]],["rewritecolor",4]],null,[[],["bounds",3]],[[],["screendims",3]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["option",4,[["gpsbounds",3]]]],["vec",3,[["feature",3]]]],[[["eventctx",3]],["widget",3]],[[],["bool",15]],null,[[["asref",8,[["str",15]]]],["geombatch",3]],[[],["geombatch",3]],[[],["geombatch",3]],[[["rewritecolor",4]],["bool",15]],[[],["geombatch",3]],[[["into",8,[["fill",4]]],["polygon",3]]],[[["into",8,[["fill",4]]],["polygon",3],["f64",15]]],[[["angle",3]],["geombatch",3]],[[["angle",3]],["geombatch",3]],[[["f64",15]],["geombatch",3]],[[["f64",15],["f64",15]],["geombatch",3]],[[],["result",4]],[[["f64",15]],["geombatch",3]],[[]],[[]],[[]],[[["f64",15],["f64",15]],["geombatch",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["polygon",3]],[[["into",8,[["fill",4]]],["polygon",3]]],[[["eventctx",3]],["drawable",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[],["geombatch",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["axis",4]],[[],["alignment",4]],[[],["geombatchstack",3]],[[]],[[]],[[]],[[]],[[["axis",4]],["bool",15]],[[["alignment",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["vec",3,[["geombatch",3]]],["axis",4]]],[[["usize",15]],["option",4,[["geombatch",3]]]],[[["usize",15]],["option",4,[["geombatch",3]]]],[[["vec",3,[["geombatch",3]]]]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["geombatch",3]]],[[["alignment",4]]],[[["axis",4]]],[[]],null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["vec",3,[["geombatch",3]]]]],null,[[],["option",4,[["key",4]]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],null,null,[[]],[[],["option",4]],[[],["option",4,[["screenpt",3]]]],[[],["bool",15]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["bool",15]],[[["key",4]],["bool",15]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["event",4],["canvas",3]],["userinput",3]],[[],["option",4,[["duration",3]]]],[[["into",8,[["option",4,[["multikey",4]]]]]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["togglezoomedbuilder",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["eventctx",3]],["togglezoomed",3]],[[],["togglezoomedbuilder",3]],null,[[],["togglezoomedbuilder",3]],[[]],[[["rewritecolor",4]]],null,[[["gfxctx",3]]],[[]],null,[[["eventctx",3]],["togglezoomed",3]],[[]],[[["geombatch",3]]],[[]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["geombatch",3],["geombatch",3]],["togglezoomed",3]],null,null,[[["into",8,[["fill",4]]],["polygon",3]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["pt2d",3],["distance",3],["color",3]]],[[["polyline",3],["distance",3],["color",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["drawunzoomedshapes",3]],[[],["drawunzoomedshapesbuilder",3]],null,null,null,null,null,[[["f64",15]]],[[["gfxctx",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,null,null,null,[[["geombatch",3],["f64",15]]],[[["geombatch",3],["f64",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["objectbuilder",3]],[[],["objectbuilder",3,[["dummyid",3]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bounds",3]],["world",3]],[[["eventctx",3]]],[[["pt2d",3]],["option",4]],[[]],null,null,[[],["worldoutcome",4]],[[],["dummyid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["gfxctx",3]]],[[["into",8,[["togglezoomedbuilder",3]]]]],[[["color",3]]],null,null,[[["rewritecolor",4]]],[[["into",8,[["togglezoomedbuilder",3]]]]],[[["eventctx",3],["into",8,[["togglezoomedbuilder",3]]]]],null,null,null,[[]],[[["dummyid",3]],["bool",15]],[[["eventctx",3]],["worldoutcome",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["option",4]],[[]],[[["polygon",3]]],null,null,[[["into",8,[["multikey",4]]],["str",15]]],[[["f32",15]]],[[["color",3],["distance",3]]],null,null,[[["eventctx",3]]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[]],null,null,[[["fn",8]],["worldoutcome",4,[["objectid",8]]]],[[["fn",8]],["option",4,[["worldoutcome",4,[["objectid",8]]]]]],[[["dummyid",3]],["bool",15]],null,[[["option",4,[["text",3]]]],["bool",15]],null,null,[[["world",3]]],[[]],[[]],[[["text",3]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["world",3]],null,[[["usize",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["bool",15]]],null,[[["string",3]]],null,[[]],[[]],[[]],[[]],null,[[["canvassettings",3]]],null,[[["prerender",3],["bool",15]],["option",4,[["string",3]]]],[[]],null,[[["event",4],["prerender",3]]],null,[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["text",3]]],null,[[["str",15]],["settings",3]],[[["box",3,[["fn",8]]]]],null,[[["f64",15]]],null,[[["settings",3],["fnonce",8]],["never",15]],[[["f64",15]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["string",3]]],null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["screenpt",3]],[[],["screenpt",3]],[[],["screenrectangle",3]],[[],["screendims",3]],[[]],[[]],[[]],[[["screenpt",3]],["bool",15]],[[],["result",4]],[[],["screendims",3]],[[["screenpt",3]],["bool",15]],[[["screendims",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["logicalposition",3,[["f64",15]]]],["screenpt",3]],[[]],[[]],[[["bounds",3]]],[[["logicalsize",3,[["f64",15]]]],["screendims",3]],[[["i64",15]],["screendims",3]],[[["f64",15]],["screendims",3]],[[],["screendims",3]],[[]],[[],["f64",15]],null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["screenpt",3]],["bool",15]],[[["screendims",3]],["bool",15]],[[["f64",15],["f64",15]],["screenpt",3]],[[["f64",15],["f64",15]],["screendims",3]],[[["edgeinsets",3]]],[[["f64",15],["f64",15]],["screenpt",3]],[[],["screenrectangle",3]],[[["screenpt",3]],["option",4]],[[],["result",4]],[[["f64",15]]],[[]],[[]],[[]],[[],["polygon",3]],[[],["pt2d",3]],[[["screenpt",3],["screendims",3]],["screenrectangle",3]],[[["screenpt",3],["canvas",3]],["screenpt",3]],[[["f64",15],["f64",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["f64",15]],null,null,null,null,null,null,null,[[]],[[]],null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["str",15]],["buttonbuilder",3]],[[],["buttonbuilder",3]],[[["eventctx",3]],["widget",3]],null,[[],["buttonbuilder",3]],null,null,null,null,[[["str",15],["str",15]],["buttonbuilder",3]],[[],["buttonbuilder",3]],null,null,null,null,null,[[],["style",3]],[[]],[[],["style",3]],null,null,[[]],[[["str",15]],["color",3]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["style",3]],null,null,null,null,null,null,null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[["buttonbuilder",3]],["buttonbuilder",3]],[[],["any",8]],[[],["any",8]],null,null,null,[[]],[[]],[[],["buttonbuilder",3]],[[],["buttonstyle",3]],[[]],[[],["buttonbuilder",3]],null,null,[[]],[[["str",15]],["buttonbuilder",3]],[[["buttonbuilder",3]],["buttonbuilder",3]],[[],["buttonbuilder",3]],[[["str",15],["into",8,[["string",3]]]],["buttonbuilder",3]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[]],[[]],[[]],[[],["buttonstyle",3]],[[]],[[]],[[["str",15]],["buttonbuilder",3]],[[]],[[]],[[]],[[]],[[["into",8,[["string",3]]]],["buttonbuilder",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[["geombatch",3],["tree",3],["f32",15]],["result",4,[["bounds",3],["string",3]]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[["paint",4],["f64",15],["tree",3]],["fill",4]],[[["path",3]],["pathconviter",3]],[[["stroke",3],["f32",15],["tree",3]]],null,null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[]],null,[[["prerender",3],["str",15]]],[[["prerender",3],["str",15]],["result",6]],[[],["result",6]],null,[[],["option",4,[["pathevent",6]]]],[[["f64",15],["f64",15]],["point",6]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["bool",15]],[[["str",15],["box",3,[["fn",8]]],["col",4]]],null,null,null,[[],["filter",3]],null,[[]],[[]],[[]],null,[[],["vec",3]],null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["vec",3],["box",3,[["fn",8]]],["str",15],["filter",3]],["table",3]],[[["panel",3]]],[[["eventctx",3]],["widget",3]],[[["eventctx",3],["panel",3]]],null,null,null,[[["str",15],["box",3,[["fn",8]]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[["into",8,[["string",3]]]],["textspan",3]],null,null,null,null,null,null,null,null,[[["vec",3,[["textspan",3]]]]],[[]],[[["textspan",3]]],[[["vec",3,[["textspan",3]]]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["eventctx",3]],["widget",3]],[[["eventctx",3]],["widget",3]],[[["eventctx",3]],["widget",3]],[[["color",3]],["text",3]],null,[[],["textspan",3]],[[],["textspan",3]],[[],["textspan",3]],[[],["textspan",3]],[[],["textspan",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["color",3]],["text",3]],[[],["font",4]],[[],["textspan",3]],[[],["text",3]],[[]],[[]],[[]],[[["color",3]],["text",3]],[[["assets",3]],["screendims",3]],[[],["textspan",3]],[[["font",4]],["bool",15]],[[["text",3]]],[[],["str",15]],[[["color",3]],["textspan",3]],null,[[["style",3]],["color",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["font",4]],["textspan",3]],null,[[]],[[]],[[]],[[["textspan",3]],["text",3]],[[],["text",3]],[[]],[[["vec",3,[["textspan",3]]]],["text",3]],[[["vec",3]],["text",3]],[[],["u64",15]],[[]],[[],["string",3]],[[["color",3]]],[[["assets",3],["f32",15]],["geombatch",3]],[[["f64",15],["assets",3]],["text",3]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3]],["widget",3]],[[["eventctx",3]],["widget",3]],[[],["bool",15]],null,[[["option",4,[["color",3]]]],["textspan",3]],[[],["text",3]],null,[[["color",3]],["textspan",3]],[[]],[[],["geombatch",3]],[[],["geombatch",3]],[[["polyline",3],["f64",15]],["geombatch",3]],[[["vec",3,[["textspan",3]]],["f32",15],["assets",3]],["geombatch",3]],[[],["textspan",3]],[[["usize",15]],["textspan",3]],null,[[],["textspan",3]],[[],["textspan",3]],[[],["textspan",3]],null,[[["eventctx",3]],["widget",3]],[[]],[[]],[[]],[[["eventctx",3],["into",8,[["option",4,[["multikey",4]]]]],["str",15]],["text",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["textspan",3]],null,[[["eventctx",3],["usize",15]],["text",3]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["option",4]],[[],["cached",3]],null,[[]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["option",4],["fnmut",8]]],[[],["option",4]],[[],["option",4]],null,[[["state",3],["str",15],["prerender",3],["f64",15],["screendims",3]],["result",6]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,[[["eventctx",3]],["bool",15]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["pt2d",3],["option",4,[["f64",15]]]],["warper",3]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["f64",15],["f64",15]],["widget",3]],[[],["widget",3]],[[],["widget",3]],[[],["widget",3]],[[],["widget",3]],[[["stretch",3],["vec",3],["f64",15],["f64",15],["eventctx",3],["bool",15],["bool",15]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[["color",3]],["widget",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["bool",15]],[[],["bool",15]],[[],["widget",3]],[[],["widget",3]],[[],["widget",3]],[[],["widget",3]],[[],["cornerrounding",4]],[[],["edgeinsets",3]],[[]],[[]],[[["vec",3,[["widget",3]]]],["widget",3]],null,[[["geombatch",3]]],[[],["widget",3]],null,[[["into",8,[["cornerrounding",4]]]],["widget",3]],null,[[],["option",4,[["string",3]]]],[[["vec",3,[["widget",3]]]],["widget",3]],[[["vec",3,[["widget",3]]]],["widget",3]],[[]],[[],["edgeinsets",3]],[[["box",3]],["result",4,[["box",3,[["widgetimpl",8]]],["box",3]]]],[[],["option",4]],[[["rc",3]],["result",4,[["rc",3,[["widgetimpl",8]]],["rc",3]]]],[[],["option",4]],null,[[["gfxctx",3]]],[[["gfxctx",3]]],null,[[["eventctx",3],["asref",8,[["str",15]]],["",26,[["partialeq",8],["clone",8],["debug",8]]],["vec",3,[["choice",3,[["",26,[["partialeq",8],["clone",8],["debug",8]]]]]]]],["widget",3]],[[["edgeinsets",3]],["bool",15]],[[],["widget",3]],[[["usize",15],["vec",3,[["widget",3]]]],["widget",3]],[[["usize",15],["vec",3,[["widget",3]]]],["widget",3]],[[["eventctx",3],["widgetoutput",3]]],null,[[],["widget",3]],[[],["widget",3]],null,[[["str",15]],["option",4,[["widget",3]]]],[[["str",15]],["option",4,[["widget",3]]]],[[["eventctx",3],["percent",3]],["widget",3]],[[["eventctx",3],["percent",3]],["widget",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["f64",15]],["widget",3]],[[["f64",15]],["widget",3]],[[["eventctx",3],["percent",3]],["widget",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["cornerradii",3]]],[[["f64",15]]],[[["f64",15]],["edgeinsets",3]],[[["usize",15]],["edgeinsets",3]],[[]],[[["hashset",3]]],[[],["screendims",3]],[[["node",3],["stretch",3],["vec",3]]],[[],["f64",15]],[[["eventctx",3],["f64",15]],["widget",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["option",4,[["f64",15]]]]],[[],["bool",15]],[[["str",15]],["bool",15]],[[],["bool",15]],null,null,null,null,[[["into",8,[["edgeinsets",3]]]],["widget",3]],[[["usize",15]],["widget",3]],[[["usize",15]],["widget",3]],[[["usize",15]],["widget",3]],[[["usize",15]],["widget",3]],[[["usize",15]],["widget",3]],[[["usize",15]],["widget",3]],null,[[["into",8,[["string",3]]]],["widget",3]],[[["edgeinsets",3]],["bool",15]],[[],["widgetoutput",3]],[[["box",3,[["widgetimpl",8]]]],["widget",3]],[[],["widget",3]],null,[[["outlinestyle",6]],["widget",3]],null,[[["into",8,[["edgeinsets",3]]]],["widget",3]],[[["usize",15]],["widget",3]],[[["usize",15]],["widget",3]],[[["usize",15]],["widget",3]],[[["usize",15]],["widget",3]],null,null,null,null,null,[[["eventctx",3],["widgetimpl",8]]],[[["eventctx",3],["widgetimpl",8]]],[[["eventctx",3],["panel",3]]],null,[[["vec",3,[["widget",3]]]],["widget",3]],null,[[["eventctx",3]],["widget",3]],[[["screenpt",3]]],null,null,null,null,[[["eventctx",3]],["widget",3]],null,null,[[["str",15]],["option",4,[["widget",3]]]],[[],["justdraw",3]],null,[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["f64",15]]],[[["eventctx",3],["f64",15]],["widget",3]],null,[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,null,null,[[["gfxctx",3]]],[[["eventctx",3],["widgetoutput",3]]],[[]],[[],["screendims",3]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["vec",3],["usize",15]],["widget",3]],null,[[["eventctx",3]]],[[["screenpt",3]]],[[],["option",4,[["vec",3]]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["eventctx",3],["controlstate",4]],["geombatch",3]],[[["color",3],["controlstate",4]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["eventctx",3],["str",15]],["button",3]],[[["eventctx",3]],["widget",3]],[[["eventctx",3],["asref",8,[["str",15]]]],["widget",3]],[[],["buttonbuilder",3]],[[],["buttonstatestyle",3]],[[],["label",3]],[[]],[[]],[[]],null,[[["into",8,[["cornerrounding",4]]]]],null,[[["geombatch",3],["controlstate",4]]],null,[[],["buttonbuilder",3]],[[],["buttonstatestyle",3]],[[],["label",3]],null,null,null,[[["bool",15]]],[[]],null,null,[[["gfxctx",3]]],null,null,null,[[["eventctx",3],["widgetoutput",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["font",4]]],null,[[["usize",15]]],null,[[]],[[]],[[]],[[]],[[],["screendims",3]],null,[[]],[[["into",8,[["option",4,[["multikey",4]]]]]]],null,null,null,null,[[["image",3]]],null,[[["geombatch",3],["bounds",3]]],[[["color",3],["controlstate",4]]],[[]],[[["into",8,[["rewritecolor",4]]],["controlstate",4]]],[[["contentmode",4]]],[[["into",8,[["cornerrounding",4]]]]],[[["into",8,[["screendims",3]]]]],[[]],[[["into",8,[["edgeinsets",3]]]]],[[["str",15]]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[],["bool",15]],null,null,[[["color",3],["controlstate",4]]],[[]],[[["text",3],["controlstate",4]]],[[["into",8,[["string",3]]]]],[[["into",8,[["string",3]]]]],[[["eventctx",3],["geombatch",3],["geombatch",3],["geombatch",3],["option",4,[["multikey",4]]],["str",15],["option",4,[["text",3]]],["polygon",3],["bool",15],["option",4,[["text",3]]]],["button",3]],[[]],[[]],[[["outlinestyle",6],["controlstate",4]]],null,[[["color",3],["controlstate",4]]],[[["buttonstyle",3]]],[[["into",8,[["edgeinsets",3]]]]],null,[[["f64",15]]],[[["f64",15]]],[[["f64",15]]],[[["f64",15]]],[[["screenpt",3]]],null,[[["f64",15]]],null,[[["controlstate",4]],["buttonstatestyle",3]],[[["controlstate",4]],["buttonstatestyle",3]],null,null,[[]],[[]],[[]],[[]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,[[["gfxctx",3]]],null,[[["eventctx",3],["widgetoutput",3]]],[[]],[[],["screendims",3]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["asref",8,[["str",15]]],["asref",8,[["str",15]]],["vec",3]],["widget",3]],[[["screenpt",3]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["gfxctx",3]]],[[["gfxctx",3]]],[[["eventctx",3],["widgetoutput",3]]],[[["eventctx",3],["widgetoutput",3]]],[[]],[[]],[[],["screendims",3]],[[],["screendims",3]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[["bool",15],["vec",3,[["widget",3]]]],["container",3]],[[["screenpt",3]]],[[["screenpt",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["gfxctx",3]]],null,[[["state",4]],["bool",15]],[[["eventctx",3],["widgetoutput",3]]],[[]],[[]],[[]],[[],["screendims",3]],[[],["option",4]],null,[[],["option",4]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3]],["widget",3]],null,[[["eventctx",3]],["option",4,[["usize",15]]]],[[["state",4]],["bool",15]],[[["eventctx",3],["str",15],["stackaxis",4]]],[[["screendims",3],["geombatch",3],["geombatch",3],["geombatch",3]]],[[["eventctx",3]]],null,[[],["option",4]],[[["option",4],["option",4]]],[[["screenpt",3]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,[[],["bool",15]],null,null,[[]],[[],["str",15]],[[["gfxctx",3]]],[[["eventctx",3],["widgetoutput",3]]],[[]],[[],["screendims",3]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[["eventctx",3],["str",15],["str",15],["bool",15]],["button",3]],null,[[["eventctx",3],["str",15],["vec",3,[["choice",3]]],["bool",15]],["dropdown",3]],[[["eventctx",3]]],[[["eventctx",3],["widgetimpl",8]]],[[["screenpt",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,[[["gfxctx",3]]],null,[[["eventctx",3],["widgetoutput",3]]],[[]],[[],["screendims",3]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["vec",3,[["series",3,[["time",3],["",26,[["axis",8,[["",26,[["axis",8,[["",26,[["axis",8,[["",26,[["axis",8],["hgramvalue",8]]]]],["hgramvalue",8,[["",26,[["axis",8],["hgramvalue",8]]]]]]]]],["hgramvalue",8,[["",26,[["axis",8,[["",26,[["axis",8],["hgramvalue",8]]]]],["hgramvalue",8,[["",26,[["axis",8],["hgramvalue",8]]]]]]]]]]]]],["hgramvalue",8,[["",26,[["axis",8,[["",26,[["axis",8,[["",26,[["axis",8],["hgramvalue",8]]]]],["hgramvalue",8,[["",26,[["axis",8],["hgramvalue",8]]]]]]]]],["hgramvalue",8,[["",26,[["axis",8,[["",26,[["axis",8],["hgramvalue",8]]]]],["hgramvalue",8,[["",26,[["axis",8],["hgramvalue",8]]]]]]]]]]]]]]]]]]],["plotoptions",3,[["time",3],["",26,[["axis",8,[["",26,[["axis",8,[["",26,[["axis",8,[["",26,[["axis",8],["hgramvalue",8]]]]],["hgramvalue",8,[["",26,[["axis",8],["hgramvalue",8]]]]]]]]],["hgramvalue",8,[["",26,[["axis",8,[["",26,[["axis",8],["hgramvalue",8]]]]],["hgramvalue",8,[["",26,[["axis",8],["hgramvalue",8]]]]]]]]]]]]],["hgramvalue",8,[["",26,[["axis",8,[["",26,[["axis",8,[["",26,[["axis",8],["hgramvalue",8]]]]],["hgramvalue",8,[["",26,[["axis",8],["hgramvalue",8]]]]]]]]],["hgramvalue",8,[["",26,[["axis",8,[["",26,[["axis",8],["hgramvalue",8]]]]],["hgramvalue",8,[["",26,[["axis",8],["hgramvalue",8]]]]]]]]]]]]]]]]],["unitfmt",3]],["widget",3]],[[["screenpt",3]]],[[["vec",3],["duration",3]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["screendims",3]],[[["gfxctx",3]]],[[["eventctx",3],["widgetoutput",3]]],[[["screendims",3]],["widget",3]],[[]],[[]],[[],["screendims",3]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["screenpt",3]]],[[["eventctx",3],["f64",15]],["widget",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["color",3]]],null,[[]],[[]],[[]],[[]],[[["eventctx",3]],["option",4]],[[],["image",3]],[[],["imagesource",4]],[[]],[[]],[[["into",8,[["rewritecolor",4]]]]],null,[[["contentmode",4]]],null,[[["into",8,[["cornerrounding",4]]]]],null,[[],["image",3]],[[["into",8,[["screendims",3]]]]],null,[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["geombatch",3],["bounds",3]]],[[]],[[["str",15]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3]],["widget",3]],[[["prerender",3]]],[[]],[[["into",8,[["edgeinsets",3]]]]],null,[[["f64",15]]],[[["f64",15]]],[[["f64",15]]],[[["f64",15]]],[[["imagesource",4]]],null,[[["geombatch",3],["bounds",3]]],[[]],[[["str",15]]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["gfxctx",3]]],[[["gfxctx",3]]],[[["gfxctx",3]]],null,null,[[["eventctx",3],["widgetoutput",3]]],[[["eventctx",3],["widgetoutput",3]]],[[["eventctx",3],["widgetoutput",3]]],[[]],[[]],[[]],[[],["screendims",3]],[[],["screendims",3]],[[],["screendims",3]],null,null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["geombatch",3],["vec",3],["box",3,[["fn",8]]]],["widget",3]],[[["geombatch",3]],["widget",3]],[[["screenpt",3]]],[[["screenpt",3]]],[[["screenpt",3]]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["eventctx",3],["geombatch",3]],["widget",3]],null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],null,null,[[["gfxctx",3]]],null,null,[[["eventctx",3],["widgetoutput",3]]],[[]],[[]],[[],["screendims",3]],[[],["vec",3]],null,null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[["eventctx",3],["str",15],["vec",3,[["series",3]]],["plotoptions",3],["unitfmt",3]],["widget",3]],[[["eventctx",3],["str",15]]],[[["screenpt",3]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["style",3]],["text",3]],null,null,null,[[["gfxctx",3]]],[[["eventctx",3],["widgetoutput",3]]],[[]],[[],["screendims",3]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["vec",3,[["choice",3]]]]],[[["usize",15]]],[[["screenpt",3]]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["eventctx",3],["vec",3,[["choice",3]]]],["widget",3]],null,null,null,null,null,null,null,[[["horizontalalignment",4],["verticalalignment",4]]],[[["horizontalalignment",4],["verticalalignment",4]],["panelbuilder",3]],[[],["panelbuilder",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[["str",15]],["option",4,[["vec",3,[["clone",8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["eventctx",3]],["panel",3]],[[["eventctx",3]],["panel",3]],null,[[["str",15]],["screenpt",3]],[[],["screenpt",3]],[[["eventctx",3]],["bool",15]],null,[[["str",15]],["clone",8]],[[]],null,null,[[],["option",4,[["string",3]]]],null,null,[[["gfxctx",3]]],[[["asref",8,[["str",15]]]],["",26,[["partialeq",8],["clone",8]]]],[[["eventctx",3]],["panel",3]],[[["eventctx",3]],["outcome",4]],[[["f64",15]],["panelbuilder",3]],[[["screendims",3]],["panelbuilder",3]],[[["usize",15],["usize",15]],["panelbuilder",3]],[[["str",15]]],[[["str",15]]],[[]],[[]],[[]],[[],["hashset",3,[["string",3]]]],[[["str",15]],["bool",15]],null,null,[[],["panelbuilder",3]],null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["percent",3],["percent",3]],["panelbuilder",3]],[[["asref",8,[["str",15]]]],["option",4,[["",26,[["partialeq",8],["clone",8]]]]]],[[["str",15]],["option",4]],[[["str",15]],["option",4,[["widget",3]]]],[[["str",15]],["option",4,[["bool",15]]]],[[["eventctx",3],["str",15],["spinnervalue",8]]],[[["widget",3]],["panelbuilder",3]],[[],["screendims",3]],[[["str",15]],["",26,[["partialeq",8],["clone",8]]]],[[["eventctx",3],["bool",15]]],[[["eventctx",3],["bool",15]]],[[["eventctx",3]]],[[["str",15]],["screenrectangle",3]],[[["eventctx",3],["str",15],["widget",3]]],[[["eventctx",3],["panel",3]]],[[["eventctx",3],["panel",3]]],[[]],[[["eventctx",3],["string",3]]],null,null,[[["str",15],["bool",15]]],[[["eventctx",3]]],[[["str",15]],["slider",3]],[[["str",15]],["slider",3]],[[["str",15]],["spinnervalue",8]],[[["str",15]],["rc",3,[["refcell",3]]]],[[["eventctx",3],["str",15],["widget",3]]],[[["str",15]],["widget",3]],[[["str",15]]],[[["str",15]],["string",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["screendims",3]]],[[["eventctx",3]],["bool",15]],null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,[[["eventctx",3]],["buttonbuilder",3]],[[]],null,[[["gfxctx",3]]],null,[[["eventctx",3],["widgetoutput",3]]],[[]],[[],["screendims",3]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["str",15],["into",8,[["option",4,[["multikey",4]]]]],["vec",3,[["choice",3]]]],["persistentsplit",3]],[[["screenpt",3]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["eventctx",3],["str",15],["into",8,[["option",4,[["multikey",4]]]]],["vec",3,[["choice",3]]]],["widget",3]],null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],null,[[],["plotoptions",3]],null,null,[[],["plotoptions",3]],null,[[],["plotoptions",3]],[[]],[[]],[[["f64",15]]],[[["f64",15]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["plotoptions",3]],["widget",3]],null,null,[[["unitfmt",3]],["string",3]],null,[[["vec",3,[["pt2d",3]]],["distance",3]],["polygon",3]],[[],["f64",15]],[[],["f64",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,[[["gfxctx",3]]],null,[[["eventctx",3],["widgetoutput",3]]],[[]],[[],["screendims",3]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["eventctx",3],["vec",3,[["series",3,[["time",3],["",26,[["axis",8,[["",26,[["axis",8,[["",26,[["axis",8,[["",26,[["axis",8],["addassign",8],["div",8]]]]],["addassign",8],["div",8,[["f64",15]]]]]]],["addassign",8],["div",8,[["f64",15]]]]]]],["addassign",8],["div",8,[["f64",15]]]]]]]]],["plotoptions",3,[["time",3],["",26,[["axis",8,[["",26,[["axis",8,[["",26,[["axis",8,[["",26,[["axis",8],["addassign",8],["div",8,[["f64",15]]]]]]],["addassign",8],["div",8,[["f64",15]]]]]]],["addassign",8],["div",8,[["f64",15]]]]]]],["addassign",8],["div",8,[["f64",15]]]]]]],["unitfmt",3]],["widget",3]],[[["screenpt",3]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,[[["eventctx",3],["f64",15],["f64",15],["str",15]],["widget",3]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["polygon",3]],null,null,null,[[["gfxctx",3]]],null,[[["eventctx",3],["widgetoutput",3]]],[[]],[[]],[[],["screendims",3]],[[],["f64",15]],[[["usize",15]],["usize",15]],[[["eventctx",3],["f64",15],["f64",15],["f64",15]],["widget",3]],[[],["screendims",3]],[[["eventctx",3]],["bool",15]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[["eventctx",3],["style",4],["f64",15],["option",4,[["string",3]]]],["widget",3]],[[],["edgeinsets",3]],[[["screenpt",3]],["f64",15]],[[["eventctx",3]]],[[["eventctx",3],["f64",15]]],[[["screenpt",3]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["eventctx",3],["f64",15],["f64",15],["f64",15]],["widget",3]],null,null,null,null,null,null,null,null,null,null,[[["roundedf64",3]],["roundedf64",3]],[[["roundedf64",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[],["roundedf64",3]],[[]],null,null,null,[[["gfxctx",3]]],[[["prerender",3],["style",3]],["drawable",3]],null,[[["roundedf64",3]],["bool",15]],[[["eventctx",3],["widgetoutput",3]]],[[["eventctx",3],["f64",15],["f64",15]],["widget",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["screendims",3]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[["eventctx",3]]],[[["roundedf64",3]],["bool",15]],[[["eventctx",3],["string",3],["box",3,[["fn",8]]]]],null,[[["roundedf64",3]],["option",4,[["ordering",4]]]],null,[[["eventctx",3],["widgetimpl",8]]],[[["screenpt",3]]],null,[[["roundedf64",3]],["roundedf64",3]],[[["roundedf64",3]]],[[]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[["eventctx",3]],["widget",3]],[[["eventctx",3],["box",3,[["fn",8]]]],["widget",3]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["gfxctx",3]]],[[["eventctx",3],["widgetoutput",3]]],[[]],[[],["screendims",3]],[[],["rc",3,[["refcell",3]]]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["str",15]],["widget",3]],[[["screenpt",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,null,null,null,null,[[]],null,null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,[[["eventctx",3],["usize",15],["usize",15]],["widget",3]],[[["eventctx",3],["vec",3,[["widget",3]]],["vec",3],["f64",15]],["widget",3]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[["eventctx",3],["usize",15],["panel",3]]],[[],["string",3]],[[],["usize",15]],null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[],["string",3]],[[]],[[]],[[]],[[]],[[["eventctx",3],["bool",15]],["widget",3]],[[["eventctx",3]],["widget",3]],[[["eventctx",3]],["widget",3]],null,[[]],[[]],[[["eventctx",3],["str",15],["panel",3]],["bool",15]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["string",3],["buttonbuilder",3],["widget",3]]],[[]],[[],["widget",3]],[[["buttonbuilder",3],["widget",3]]],[[["usize",15]],["string",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[["style",3]],["text",3]],null,[[["eventctx",3],["into",8,[["string",3]]],["string",3]],["widget",3]],null,[[["gfxctx",3]]],[[["eventctx",3],["widgetoutput",3]]],[[]],[[],["screendims",3]],[[],["string",3]],null,null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],null,null,[[["eventctx",3],["string",3],["usize",15],["string",3],["bool",15]],["textbox",3]],null,[[["screenpt",3]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["eventctx",3],["into",8,[["string",3]]],["string",3],["bool",15],["usize",15]],["widget",3]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],null,[[["eventctx",3],["str",15],["into",8,[["option",4,[["multikey",4]]]]],["bool",15]],["widget",3]],[[["eventctx",3],["str",15],["str",15],["str",15],["into",8,[["option",4,[["multikey",4]]]]],["bool",15]],["widget",3]],[[["eventctx",3],["str",15],["color",3],["bool",15]],["widget",3]],[[["eventctx",3],["str",15],["vec",3,[["textspan",3]]],["into",8,[["option",4,[["multikey",4]]]]],["bool",15]],["widget",3]],[[["gfxctx",3]]],null,[[["eventctx",3],["widgetoutput",3]]],[[]],[[],["screendims",3]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["bool",15],["button",3],["button",3]],["widget",3]],null,[[["screenpt",3]]],[[["eventctx",3],["str",15],["into",8,[["option",4,[["multikey",4]]]]],["bool",15]],["widget",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"Texture"],[3,"RoundedF64"],[4,"Key"],[4,"VerticalAlignment"],[4,"MultiKey"],[4,"Font"],[4,"ImageSource"],[4,"HorizontalAlignment"],[4,"Alignment"],[4,"RewriteColor"],[4,"Outcome"],[4,"Transition"],[4,"Fill"],[4,"CornerRounding"],[4,"DrawBaselayer"],[4,"ClickOutcome"],[4,"ControlState"],[4,"UpdateType"],[4,"Axis"],[4,"Event"],[4,"ContentMode"],[3,"Color"],[3,"Choice"],[3,"TabController"],[3,"GeomBatchStack"],[3,"Prerender"],[3,"Settings"],[3,"GeomBatch"],[3,"TextBox"],[3,"DragDrop"],[8,"TextExt"],[3,"Widget"],[3,"ButtonStyle"],[3,"Text"],[3,"Image"],[3,"EdgeInsets"],[3,"PersistentSplit"],[3,"Toggle"],[3,"Style"],[3,"Panel"],[3,"Canvas"],[3,"Warper"],[3,"GfxCtx"],[3,"EventCtx"],[3,"CanvasSettings"],[3,"Autocomplete"],[3,"Menu"],[3,"LinePlot"],[3,"Series"],[3,"Cached"],[3,"ButtonBuilder"],[3,"Spinner"],[3,"Slider"],[3,"CompareTimes"],[3,"FanChart"],[3,"DrawWithTooltips"],[3,"PanelBuilder"],[3,"ScatterPlot"],[3,"PlotOptions"],[8,"State"],[8,"WidgetImpl"],[3,"Drawable"],[3,"UserInput"],[3,"TextSpan"],[3,"ScreenDims"],[3,"LinearGradient"],[8,"SimpleState"],[3,"WidgetOutput"],[3,"Filler"],[3,"Stash"],[3,"ScreenPt"],[3,"ScreenRectangle"],[13,"Label"],[13,"Custom"],[13,"CornerRadii"],[13,"KeyPress"],[13,"KeyRelease"],[13,"Update"],[13,"MouseMovedTo"],[13,"MouseWheelScroll"],[13,"WindowResized"],[13,"LeftMouseButtonUp"],[13,"Color"],[13,"LinearGradient"],[13,"Texture"],[13,"ColoredTexture"],[13,"Percent"],[13,"Centered"],[13,"Path"],[13,"GeomBatch"],[13,"Bytes"],[13,"Normal"],[13,"LCtrl"],[13,"Any"],[13,"Clicked"],[13,"ClickCustom"],[13,"Changed"],[13,"DragDropReleased"],[13,"Focused"],[13,"Change"],[13,"ChangeAll"],[13,"ChangeAlpha"],[13,"ModifyState"],[13,"ConsumeState"],[13,"Push"],[13,"Replace"],[13,"Clear"],[13,"Multi"],[13,"ScreenCaptureEverything"],[13,"Percent"],[13,"Above"],[13,"Below"],[3,"App"],[3,"SimpleStateWrapper"],[8,"SharedAppState"],[3,"Assets"],[3,"PrerenderInnards"],[3,"GfxCtxInnards"],[3,"VertexArray"],[3,"Buffer"],[3,"SpriteTexture"],[3,"WindowAdapter"],[3,"Uniforms"],[3,"LoadingScreen"],[3,"DummyID"],[4,"WorldOutcome"],[3,"ToggleZoomed"],[3,"ToggleZoomedBuilder"],[3,"DrawUnzoomedShapes"],[3,"World"],[13,"ClickedFreeSpace"],[13,"Keypress"],[13,"ClickedObject"],[13,"Dragging"],[3,"DrawUnzoomedShapesBuilder"],[3,"UnzoomedLine"],[3,"UnzoomedCircle"],[3,"Object"],[3,"ObjectBuilder"],[3,"State"],[3,"PathConvIter"],[4,"Col"],[3,"Filter"],[3,"Table"],[13,"Sortable"],[3,"LayoutStyle"],[3,"Button"],[3,"ButtonStateStyle"],[3,"Label"],[3,"Nothing"],[3,"Container"],[4,"State"],[3,"Card"],[13,"Dragging"],[13,"Initial"],[13,"Idle"],[3,"Dropdown"],[4,"ResizeRule"],[13,"FixedSize"],[13,"RatioWidthSquare"],[3,"JustDraw"],[3,"DeferDraw"],[3,"Hovering"],[4,"Dims"],[13,"MaxPercent"],[13,"ExactPercent"],[13,"ExactHeight"],[13,"ExactSize"],[8,"Axis"],[4,"Style"],[13,"Horizontal"],[13,"Vertical"],[13,"Area"],[3,"Column"],[3,"Tab"]]},\
"widgetry_demo":{"doc":"","t":[3,3,11,11,11,11,11,11,11,11,5,12,11,12,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,5,12,5,5,12,12,12,11,11,11,11,11,11,11,11],"n":["App","Demo","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","build_drag_drop","controls","draw","elapsed","event","from","from","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","main","make_controls","make_tabs","make_timeseries_panel","new","redraw_stopwatch","run","scrollable_canvas","setup_scrollable_canvas","setup_texture_demo","tabs","texture_demo","timeseries_panel","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["widgetry_demo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,1,2,1,2,0,2,2,2,2,1,2,1,2,1,2,1,1,2,0,0,0,2,2,2,0,2,0,0,2,2,2,1,2,1,2,1,2,1,2],"f":[null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["eventctx",3],["usize",15]],["dragdrop",3,[["usize",15]]]],null,[[["gfxctx",3],["app",3]]],null,[[["eventctx",3],["app",3]],["transition",4,[["app",3]]]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[]],[[["eventctx",3],["tabcontroller",3]],["panel",3]],[[["eventctx",3]],["tabcontroller",3]],[[["eventctx",3]],["panel",3]],[[["eventctx",3]]],[[["eventctx",3]]],[[["settings",3]]],null,[[["eventctx",3]],["drawable",3]],[[["eventctx",3],["texture",3],["texture",3]],["drawable",3]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"App"],[3,"Demo"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};